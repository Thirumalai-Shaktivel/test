; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [3 x i8] c"BC\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@6 = private unnamed_addr constant [3 x i8] c"@a\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@11 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@12 = private unnamed_addr constant [3 x i8] c"a@\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@17 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

define i32 @main() {
.entry:
  %c = alloca i8*, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i8** %c, align 8
  %is_alpha = alloca i1, align 1
  %0 = load i8*, i8** %c, align 8
  %1 = load i8, i8* %0, align 1
  %2 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), align 1
  %3 = icmp uge i8 %1, %2
  %4 = load i8*, i8** %c, align 8
  %5 = load i8, i8* %4, align 1
  %6 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), align 1
  %7 = icmp ule i8 %5, %6
  %8 = and i1 %3, %7
  %9 = load i8*, i8** %c, align 8
  %10 = load i8, i8* %9, align 1
  %11 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), align 1
  %12 = icmp uge i8 %10, %11
  %13 = load i8*, i8** %c, align 8
  %14 = load i8, i8* %13, align 1
  %15 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), align 1
  %16 = icmp ule i8 %14, %15
  %17 = and i1 %12, %16
  %18 = or i1 %8, %17
  store i1 %18, i1* %is_alpha, align 1
  %19 = load i1, i1* %is_alpha, align 1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i1 %19)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0), i8** %c, align 8
  %20 = load i8*, i8** %c, align 8
  %21 = load i8, i8* %20, align 1
  %22 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), align 1
  %23 = icmp uge i8 %21, %22
  %24 = load i8*, i8** %c, align 8
  %25 = load i8, i8* %24, align 1
  %26 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), align 1
  %27 = icmp ule i8 %25, %26
  %28 = and i1 %23, %27
  %29 = load i8*, i8** %c, align 8
  %30 = load i8, i8* %29, align 1
  %31 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0), align 1
  %32 = icmp uge i8 %30, %31
  %33 = load i8*, i8** %c, align 8
  %34 = load i8, i8* %33, align 1
  %35 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), align 1
  %36 = icmp ule i8 %34, %35
  %37 = and i1 %32, %36
  %38 = or i1 %28, %37
  store i1 %38, i1* %is_alpha, align 1
  %39 = load i1, i1* %is_alpha, align 1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @11, i32 0, i32 0), i1 %39)
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i32 0, i32 0), i8** %c, align 8
  %40 = load i8*, i8** %c, align 8
  %41 = load i8, i8* %40, align 1
  %42 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), align 1
  %43 = icmp uge i8 %41, %42
  %44 = load i8*, i8** %c, align 8
  %45 = load i8, i8* %44, align 1
  %46 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), align 1
  %47 = icmp ule i8 %45, %46
  %48 = and i1 %43, %47
  %49 = load i8*, i8** %c, align 8
  %50 = load i8, i8* %49, align 1
  %51 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0), align 1
  %52 = icmp uge i8 %50, %51
  %53 = load i8*, i8** %c, align 8
  %54 = load i8, i8* %53, align 1
  %55 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0), align 1
  %56 = icmp ule i8 %54, %55
  %57 = and i1 %52, %56
  %58 = or i1 %48, %57
  store i1 %58, i1* %is_alpha, align 1
  %59 = load i1, i1* %is_alpha, align 1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @17, i32 0, i32 0), i1 %59)
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
