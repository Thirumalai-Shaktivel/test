; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%complex_4 = type { float, float }
%array.0 = type { %complex_4*, i32, [3 x %dimension_descriptor], i1 }
%array = type { i32*, i32, [1 x %dimension_descriptor], i1 }
%array.1 = type { float*, i32, [2 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define %complex_4 @reduce_sum(%array.0* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = alloca %dimension_descriptor*, align 8
  %5 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %6 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 0
  store %dimension_descriptor* %6, %dimension_descriptor** %4, align 8
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %4, i32* %7)
  %9 = sub i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, 1
  %12 = alloca %dimension_descriptor*, align 8
  %13 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %14 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %13, i32 0, i32 0
  store %dimension_descriptor* %14, %dimension_descriptor** %12, align 8
  %15 = alloca i32, align 4
  store i32 1, i32* %15, align 4
  %16 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %12, i32* %15)
  %17 = icmp sle i32 %11, %16
  br i1 %17, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %22 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %21, i32 0, i32 0
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 2, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = sub i32 %24, 1
  store i32 %25, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %26 = load i32, i32* %j, align 4
  %27 = add i32 %26, 1
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %30 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %29, i32 0, i32 0
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 2, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %28, i32* %31)
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %j, align 4
  %36 = alloca %dimension_descriptor*, align 8
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %37, i32 0, i32 0
  store %dimension_descriptor* %38, %dimension_descriptor** %36, align 8
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %36, i32* %39)
  %41 = sub i32 %40, 1
  store i32 %41, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %42 = load i32, i32* %k, align 4
  %43 = add i32 %42, 1
  %44 = alloca %dimension_descriptor*, align 8
  %45 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %46 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %45, i32 0, i32 0
  store %dimension_descriptor* %46, %dimension_descriptor** %44, align 8
  %47 = alloca i32, align 4
  store i32 3, i32* %47, align 4
  %48 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %44, i32* %47)
  %49 = icmp sle i32 %43, %48
  br i1 %49, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %50 = load i32, i32* %k, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %k, align 4
  %52 = load %complex_4, %complex_4* %r, align 4
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* %k, align 4
  %56 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %57 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 %53, %59
  %61 = mul i32 1, %60
  %62 = add i32 0, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 1, %64
  %66 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %56, i32 0, i32 1
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 %54, %68
  %70 = mul i32 %65, %69
  %71 = add i32 %62, %70
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 %65, %73
  %75 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %56, i32 0, i32 2
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %55, %77
  %79 = mul i32 %74, %78
  %80 = add i32 %71, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %74, %82
  %84 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %85 = load %complex_4*, %complex_4** %84, align 8
  %86 = getelementptr inbounds %complex_4, %complex_4* %85, i32 %80
  %87 = load %complex_4, %complex_4* %86, align 4
  %88 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %88, align 4
  %89 = alloca %complex_4, align 8
  store %complex_4 %87, %complex_4* %89, align 4
  %90 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %88, %complex_4* %89, %complex_4* %90)
  %91 = load %complex_4, %complex_4* %90, align 4
  store %complex_4 %91, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %92 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %92
}

define void @sum(%array* %a, %array.1* %b, %array.0* %c) {
.entry:
  %c_copy = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %1 = alloca %dimension_descriptor*, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 2
  %3 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %2, i32 0, i32 0
  store %dimension_descriptor* %3, %dimension_descriptor** %1, align 8
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1, i32* %4)
  %6 = alloca %dimension_descriptor*, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %7, i32 0, i32 0
  store %dimension_descriptor* %8, %dimension_descriptor** %6, align 8
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %6, i32* %9)
  %11 = alloca %dimension_descriptor*, align 8
  %12 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %13 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %12, i32 0, i32 0
  store %dimension_descriptor* %13, %dimension_descriptor** %11, align 8
  %14 = alloca i32, align 4
  store i32 1, i32* %14, align 4
  %15 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %11, i32* %14)
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %18 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %16, i32* %19)
  %21 = alloca %dimension_descriptor*, align 8
  %22 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %23 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %22, i32 0, i32 0
  store %dimension_descriptor* %23, %dimension_descriptor** %21, align 8
  %24 = alloca i32, align 4
  store i32 2, i32* %24, align 4
  %25 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %21, i32* %24)
  %26 = alloca %dimension_descriptor*, align 8
  %27 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %28 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %27, i32 0, i32 0
  store %dimension_descriptor* %28, %dimension_descriptor** %26, align 8
  %29 = alloca i32, align 4
  store i32 2, i32* %29, align 4
  %30 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %26, i32* %29)
  %31 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 true, i1* %32, align 1
  %33 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 0
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 3
  store i32 1, i32* %35, align 4
  store i32 %5, i32* %36, align 4
  store i32 %10, i32* %37, align 4
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %36, align 4
  %41 = sub i32 %39, %40
  %42 = add i32 %41, 1
  %43 = mul i32 1, %42
  store i32 %42, i32* %38, align 4
  %44 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 1
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 %15, i32* %46, align 4
  store i32 %20, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  %53 = mul i32 %43, %52
  store i32 %52, i32* %48, align 4
  %54 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 3
  store i32 1, i32* %55, align 4
  store i32 %25, i32* %56, align 4
  store i32 %30, i32* %57, align 4
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %56, align 4
  %61 = sub i32 %59, %60
  %62 = add i32 %61, 1
  %63 = mul i32 %53, %62
  store i32 %62, i32* %58, align 4
  %64 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %65 = alloca i32, align 4
  %66 = mul i32 %63, 8
  store i32 %66, i32* %65, align 4
  %67 = load i32, i32* %65, align 4
  %68 = call i8* (i32, ...) @_lfortran_malloc(i32 %67)
  %69 = bitcast i8* %68 to %complex_4*
  store %complex_4* %69, %complex_4** %64, align 8
  %70 = alloca %dimension_descriptor*, align 8
  %71 = getelementptr %array, %array* %a, i32 0, i32 2
  %72 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %71, i32 0, i32 0
  store %dimension_descriptor* %72, %dimension_descriptor** %70, align 8
  %73 = alloca i32, align 4
  store i32 1, i32* %73, align 4
  %74 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %70, i32* %73)
  %75 = alloca %dimension_descriptor*, align 8
  %76 = getelementptr %array, %array* %a, i32 0, i32 2
  %77 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %76, i32 0, i32 0
  store %dimension_descriptor* %77, %dimension_descriptor** %75, align 8
  %78 = alloca i32, align 4
  store i32 1, i32* %78, align 4
  %79 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %75, i32* %78)
  %80 = alloca %dimension_descriptor*, align 8
  %81 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %82 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %81, i32 0, i32 0
  store %dimension_descriptor* %82, %dimension_descriptor** %80, align 8
  %83 = alloca i32, align 4
  store i32 1, i32* %83, align 4
  %84 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %80, i32* %83)
  %85 = alloca %dimension_descriptor*, align 8
  %86 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %87 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %86, i32 0, i32 0
  store %dimension_descriptor* %87, %dimension_descriptor** %85, align 8
  %88 = alloca i32, align 4
  store i32 1, i32* %88, align 4
  %89 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %85, i32* %88)
  %90 = alloca %dimension_descriptor*, align 8
  %91 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %92 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %91, i32 0, i32 0
  store %dimension_descriptor* %92, %dimension_descriptor** %90, align 8
  %93 = alloca i32, align 4
  store i32 2, i32* %93, align 4
  %94 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %90, i32* %93)
  %95 = alloca %dimension_descriptor*, align 8
  %96 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %97 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %96, i32 0, i32 0
  store %dimension_descriptor* %97, %dimension_descriptor** %95, align 8
  %98 = alloca i32, align 4
  store i32 2, i32* %98, align 4
  %99 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %95, i32* %98)
  %100 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %100, align 4
  %101 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %101, align 1
  %102 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %103 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %102, i32 0, i32 0
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 1
  %106 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 2
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 3
  store i32 1, i32* %104, align 4
  store i32 %74, i32* %105, align 4
  store i32 %79, i32* %106, align 4
  %108 = load i32, i32* %106, align 4
  %109 = load i32, i32* %105, align 4
  %110 = sub i32 %108, %109
  %111 = add i32 %110, 1
  %112 = mul i32 1, %111
  store i32 %111, i32* %107, align 4
  %113 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %102, i32 0, i32 1
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 2
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 3
  store i32 1, i32* %114, align 4
  store i32 %84, i32* %115, align 4
  store i32 %89, i32* %116, align 4
  %118 = load i32, i32* %116, align 4
  %119 = load i32, i32* %115, align 4
  %120 = sub i32 %118, %119
  %121 = add i32 %120, 1
  %122 = mul i32 %112, %121
  store i32 %121, i32* %117, align 4
  %123 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %102, i32 0, i32 2
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 2
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 3
  store i32 1, i32* %124, align 4
  store i32 %94, i32* %125, align 4
  store i32 %99, i32* %126, align 4
  %128 = load i32, i32* %126, align 4
  %129 = load i32, i32* %125, align 4
  %130 = sub i32 %128, %129
  %131 = add i32 %130, 1
  %132 = mul i32 %122, %131
  store i32 %131, i32* %127, align 4
  %133 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %134 = alloca i32, align 4
  %135 = mul i32 %132, 8
  store i32 %135, i32* %134, align 4
  %136 = load i32, i32* %134, align 4
  %137 = call i8* (i32, ...) @_lfortran_malloc(i32 %136)
  %138 = bitcast i8* %137 to %complex_4*
  store %complex_4* %138, %complex_4** %133, align 8
  %139 = alloca %dimension_descriptor*, align 8
  %140 = getelementptr %array, %array* %a, i32 0, i32 2
  %141 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %140, i32 0, i32 0
  store %dimension_descriptor* %141, %dimension_descriptor** %139, align 8
  %142 = alloca i32, align 4
  store i32 1, i32* %142, align 4
  %143 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %139, i32* %142)
  %144 = sub i32 %143, 1
  store i32 %144, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %145 = load i32, i32* %i, align 4
  %146 = add i32 %145, 1
  %147 = alloca %dimension_descriptor*, align 8
  %148 = getelementptr %array, %array* %a, i32 0, i32 2
  %149 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %148, i32 0, i32 0
  store %dimension_descriptor* %149, %dimension_descriptor** %147, align 8
  %150 = alloca i32, align 4
  store i32 1, i32* %150, align 4
  %151 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %147, i32* %150)
  %152 = icmp sle i32 %146, %151
  br i1 %152, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %153 = load i32, i32* %i, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %i, align 4
  %155 = alloca %dimension_descriptor*, align 8
  %156 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %157 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %156, i32 0, i32 0
  store %dimension_descriptor* %157, %dimension_descriptor** %155, align 8
  %158 = alloca i32, align 4
  store i32 1, i32* %158, align 4
  %159 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %155, i32* %158)
  %160 = sub i32 %159, 1
  store i32 %160, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %161 = load i32, i32* %j, align 4
  %162 = add i32 %161, 1
  %163 = alloca %dimension_descriptor*, align 8
  %164 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %165 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %164, i32 0, i32 0
  store %dimension_descriptor* %165, %dimension_descriptor** %163, align 8
  %166 = alloca i32, align 4
  store i32 1, i32* %166, align 4
  %167 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %163, i32* %166)
  %168 = icmp sle i32 %162, %167
  br i1 %168, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %169 = load i32, i32* %j, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %j, align 4
  %171 = alloca %dimension_descriptor*, align 8
  %172 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %173 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %172, i32 0, i32 0
  store %dimension_descriptor* %173, %dimension_descriptor** %171, align 8
  %174 = alloca i32, align 4
  store i32 2, i32* %174, align 4
  %175 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %171, i32* %174)
  %176 = sub i32 %175, 1
  store i32 %176, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %177 = load i32, i32* %k, align 4
  %178 = add i32 %177, 1
  %179 = alloca %dimension_descriptor*, align 8
  %180 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %181 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %180, i32 0, i32 0
  store %dimension_descriptor* %181, %dimension_descriptor** %179, align 8
  %182 = alloca i32, align 4
  store i32 2, i32* %182, align 4
  %183 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %179, i32* %182)
  %184 = icmp sle i32 %178, %183
  br i1 %184, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %185 = load i32, i32* %k, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %k, align 4
  %187 = load i32, i32* %i, align 4
  %188 = load i32, i32* %j, align 4
  %189 = load i32, i32* %k, align 4
  %190 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %191 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %190, i32 0, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 %187, %193
  %195 = mul i32 1, %194
  %196 = add i32 0, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 1, %198
  %200 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %190, i32 0, i32 1
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %188, %202
  %204 = mul i32 %199, %203
  %205 = add i32 %196, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 %199, %207
  %209 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %190, i32 0, i32 2
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %189, %211
  %213 = mul i32 %208, %212
  %214 = add i32 %205, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %208, %216
  %218 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %219 = load %complex_4*, %complex_4** %218, align 8
  %220 = getelementptr inbounds %complex_4, %complex_4* %219, i32 %214
  %221 = load i32, i32* %i, align 4
  %222 = getelementptr %array, %array* %a, i32 0, i32 2
  %223 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %222, i32 0, i32 0
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 %221, %225
  %227 = mul i32 1, %226
  %228 = add i32 0, %227
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = mul i32 1, %230
  %232 = getelementptr %array, %array* %a, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = getelementptr inbounds i32, i32* %233, i32 %228
  %235 = load i32, i32* %234, align 4
  %236 = sitofp i32 %235 to float
  %237 = load i32, i32* %j, align 4
  %238 = load i32, i32* %k, align 4
  %239 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %240 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %239, i32 0, i32 0
  %241 = getelementptr %dimension_descriptor, %dimension_descriptor* %240, i32 0, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = sub i32 %237, %242
  %244 = mul i32 1, %243
  %245 = add i32 0, %244
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %240, i32 0, i32 3
  %247 = load i32, i32* %246, align 4
  %248 = mul i32 1, %247
  %249 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %239, i32 0, i32 1
  %250 = getelementptr %dimension_descriptor, %dimension_descriptor* %249, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = sub i32 %238, %251
  %253 = mul i32 %248, %252
  %254 = add i32 %245, %253
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %249, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = mul i32 %248, %256
  %258 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %259 = load float*, float** %258, align 8
  %260 = getelementptr inbounds float, float* %259, i32 %254
  %261 = load float, float* %260, align 4
  %262 = fadd float %236, %261
  %263 = alloca %complex_4, align 8
  %264 = getelementptr %complex_4, %complex_4* %263, i32 0, i32 0
  %265 = getelementptr %complex_4, %complex_4* %263, i32 0, i32 1
  store float %262, float* %264, align 4
  store float 0.000000e+00, float* %265, align 4
  %266 = load %complex_4, %complex_4* %263, align 4
  store %complex_4 %266, %complex_4* %220, align 4
  %267 = load i32, i32* %i, align 4
  %268 = load i32, i32* %j, align 4
  %269 = load i32, i32* %k, align 4
  %270 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %271 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %270, i32 0, i32 0
  %272 = getelementptr %dimension_descriptor, %dimension_descriptor* %271, i32 0, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = sub i32 %267, %273
  %275 = mul i32 1, %274
  %276 = add i32 0, %275
  %277 = getelementptr %dimension_descriptor, %dimension_descriptor* %271, i32 0, i32 3
  %278 = load i32, i32* %277, align 4
  %279 = mul i32 1, %278
  %280 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %270, i32 0, i32 1
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %268, %282
  %284 = mul i32 %279, %283
  %285 = add i32 %276, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 3
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 %279, %287
  %289 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %270, i32 0, i32 2
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = sub i32 %269, %291
  %293 = mul i32 %288, %292
  %294 = add i32 %285, %293
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 3
  %296 = load i32, i32* %295, align 4
  %297 = mul i32 %288, %296
  %298 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %299 = load %complex_4*, %complex_4** %298, align 8
  %300 = getelementptr inbounds %complex_4, %complex_4* %299, i32 %294
  %301 = load i32, i32* %i, align 4
  %302 = getelementptr %array, %array* %a, i32 0, i32 2
  %303 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %302, i32 0, i32 0
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 %301, %305
  %307 = mul i32 1, %306
  %308 = add i32 0, %307
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = mul i32 1, %310
  %312 = getelementptr %array, %array* %a, i32 0, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = getelementptr inbounds i32, i32* %313, i32 %308
  %315 = load i32, i32* %314, align 4
  %316 = sitofp i32 %315 to float
  %317 = load i32, i32* %j, align 4
  %318 = load i32, i32* %k, align 4
  %319 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %320 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %319, i32 0, i32 0
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = sub i32 %317, %322
  %324 = mul i32 1, %323
  %325 = add i32 0, %324
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = mul i32 1, %327
  %329 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %319, i32 0, i32 1
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = sub i32 %318, %331
  %333 = mul i32 %328, %332
  %334 = add i32 %325, %333
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = mul i32 %328, %336
  %338 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %339 = load float*, float** %338, align 8
  %340 = getelementptr inbounds float, float* %339, i32 %334
  %341 = load float, float* %340, align 4
  %342 = fadd float %316, %341
  %343 = alloca %complex_4, align 8
  %344 = getelementptr %complex_4, %complex_4* %343, i32 0, i32 0
  %345 = getelementptr %complex_4, %complex_4* %343, i32 0, i32 1
  store float %342, float* %344, align 4
  store float 0.000000e+00, float* %345, align 4
  %346 = load %complex_4, %complex_4* %343, align 4
  store %complex_4 %346, %complex_4* %300, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %347 = load %array.0, %array.0* %c_copy, align 8
  %348 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %349 = load %complex_4*, %complex_4** %348, align 8
  %350 = alloca i8*, align 8
  %351 = bitcast %complex_4* %349 to i8*
  store i8* %351, i8** %350, align 8
  %352 = load i8*, i8** %350, align 8
  call void (i8*, ...) @_lfortran_free(i8* %352)
  %353 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %353, align 1
  %354 = load %array.0, %array.0* %c_copy, align 8
  %355 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  %356 = load i1, i1* %355, align 1
  br i1 %356, label %then, label %else

then:                                             ; preds = %loop.end6
  %357 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %358 = load %complex_4*, %complex_4** %357, align 8
  %359 = alloca i8*, align 8
  %360 = bitcast %complex_4* %358 to i8*
  store i8* %360, i8** %359, align 8
  %361 = load i8*, i8** %359, align 8
  call void (i8*, ...) @_lfortran_free(i8* %361)
  %362 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %362, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %b = alloca %array.1, align 8
  %1 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %1, align 1
  %c = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %2, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %3 = load i32, i32* %n, align 4
  %4 = add i32 %3, 5
  %5 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %6, align 1
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 2
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 3
  store i32 1, i32* %9, align 4
  store i32 5, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %10, align 4
  %15 = sub i32 %13, %14
  %16 = add i32 %15, 1
  %17 = mul i32 1, %16
  store i32 %16, i32* %12, align 4
  %18 = getelementptr %array, %array* %a, i32 0, i32 0
  %19 = alloca i32, align 4
  %20 = mul i32 %17, 4
  store i32 %20, i32* %19, align 4
  %21 = load i32, i32* %19, align 4
  %22 = call i8* (i32, ...) @_lfortran_malloc(i32 %21)
  %23 = bitcast i8* %22 to i32*
  store i32* %23, i32** %18, align 8
  %24 = load i32, i32* %n, align 4
  %25 = load i32, i32* %n, align 4
  %26 = mul i32 2, %25
  %27 = load i32, i32* %n, align 4
  %28 = load i32, i32* %n, align 4
  %29 = mul i32 3, %28
  %30 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %31, align 1
  %32 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %33 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 %24, i32* %35, align 4
  store i32 %26, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  %42 = mul i32 1, %41
  store i32 %41, i32* %37, align 4
  %43 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %32, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  store i32 1, i32* %44, align 4
  store i32 %27, i32* %45, align 4
  store i32 %29, i32* %46, align 4
  %48 = load i32, i32* %46, align 4
  %49 = load i32, i32* %45, align 4
  %50 = sub i32 %48, %49
  %51 = add i32 %50, 1
  %52 = mul i32 %42, %51
  store i32 %51, i32* %47, align 4
  %53 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %54 = alloca i32, align 4
  %55 = mul i32 %52, 4
  store i32 %55, i32* %54, align 4
  %56 = load i32, i32* %54, align 4
  %57 = call i8* (i32, ...) @_lfortran_malloc(i32 %56)
  %58 = bitcast i8* %57 to float*
  store float* %58, float** %53, align 8
  store i32 0, i32* %ierr, align 4
  %59 = alloca %size_arg, align 8
  %60 = getelementptr %array, %array* %a, i32 0, i32 2
  %61 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %60, i32 0, i32 0
  %62 = getelementptr %size_arg, %size_arg* %59, i32 0, i32 0
  store %dimension_descriptor* %61, %dimension_descriptor** %62, align 8
  %63 = getelementptr %size_arg, %size_arg* %59, i32 0, i32 1
  store i32 1, i32* %63, align 4
  %64 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %59)
  %65 = load i32, i32* %n, align 4
  %66 = add i32 %65, 1
  %67 = icmp ne i32 %64, %66
  br i1 %67, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %68 = alloca %size_arg, align 8
  %69 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %70 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %69, i32 0, i32 0
  %71 = getelementptr %size_arg, %size_arg* %68, i32 0, i32 0
  store %dimension_descriptor* %70, %dimension_descriptor** %71, align 8
  %72 = getelementptr %size_arg, %size_arg* %68, i32 0, i32 1
  store i32 2, i32* %72, align 4
  %73 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %68)
  %74 = load i32, i32* %n, align 4
  %75 = add i32 %74, 1
  %76 = load i32, i32* %n, align 4
  %77 = mul i32 2, %76
  %78 = add i32 %77, 1
  %79 = mul i32 %75, %78
  %80 = icmp ne i32 %73, %79
  br i1 %80, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %81 = alloca %dimension_descriptor*, align 8
  %82 = getelementptr %array, %array* %a, i32 0, i32 2
  %83 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %82, i32 0, i32 0
  store %dimension_descriptor* %83, %dimension_descriptor** %81, align 8
  %84 = alloca i32, align 4
  store i32 1, i32* %84, align 4
  %85 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %81, i32* %84)
  %86 = sub i32 %85, 1
  store i32 %86, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %ifcont3
  %87 = load i32, i32* %i, align 4
  %88 = add i32 %87, 1
  %89 = alloca %dimension_descriptor*, align 8
  %90 = getelementptr %array, %array* %a, i32 0, i32 2
  %91 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %90, i32 0, i32 0
  store %dimension_descriptor* %91, %dimension_descriptor** %89, align 8
  %92 = alloca i32, align 4
  store i32 1, i32* %92, align 4
  %93 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %89, i32* %92)
  %94 = icmp sle i32 %88, %93
  br i1 %94, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %95 = load i32, i32* %i, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %i, align 4
  %97 = load i32, i32* %i, align 4
  %98 = getelementptr %array, %array* %a, i32 0, i32 2
  %99 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 %97, %101
  %103 = mul i32 1, %102
  %104 = add i32 0, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 1, %106
  %108 = getelementptr %array, %array* %a, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds i32, i32* %109, i32 %104
  %111 = load i32, i32* %i, align 4
  store i32 %111, i32* %110, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %112 = alloca %dimension_descriptor*, align 8
  %113 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %114 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %113, i32 0, i32 0
  store %dimension_descriptor* %114, %dimension_descriptor** %112, align 8
  %115 = alloca i32, align 4
  store i32 1, i32* %115, align 4
  %116 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %112, i32* %115)
  %117 = sub i32 %116, 1
  store i32 %117, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.end8, %loop.end
  %118 = load i32, i32* %i, align 4
  %119 = add i32 %118, 1
  %120 = alloca %dimension_descriptor*, align 8
  %121 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %122 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %121, i32 0, i32 0
  store %dimension_descriptor* %122, %dimension_descriptor** %120, align 8
  %123 = alloca i32, align 4
  store i32 1, i32* %123, align 4
  %124 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %120, i32* %123)
  %125 = icmp sle i32 %119, %124
  br i1 %125, label %loop.body5, label %loop.end9

loop.body5:                                       ; preds = %loop.head4
  %126 = load i32, i32* %i, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %i, align 4
  %128 = alloca %dimension_descriptor*, align 8
  %129 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %130 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %129, i32 0, i32 0
  store %dimension_descriptor* %130, %dimension_descriptor** %128, align 8
  %131 = alloca i32, align 4
  store i32 2, i32* %131, align 4
  %132 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %128, i32* %131)
  %133 = sub i32 %132, 1
  store i32 %133, i32* %j, align 4
  br label %loop.head6

loop.head6:                                       ; preds = %loop.body7, %loop.body5
  %134 = load i32, i32* %j, align 4
  %135 = add i32 %134, 1
  %136 = alloca %dimension_descriptor*, align 8
  %137 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %138 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %137, i32 0, i32 0
  store %dimension_descriptor* %138, %dimension_descriptor** %136, align 8
  %139 = alloca i32, align 4
  store i32 2, i32* %139, align 4
  %140 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %136, i32* %139)
  %141 = icmp sle i32 %135, %140
  br i1 %141, label %loop.body7, label %loop.end8

loop.body7:                                       ; preds = %loop.head6
  %142 = load i32, i32* %j, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %j, align 4
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %j, align 4
  %146 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %147 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %146, i32 0, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 %144, %149
  %151 = mul i32 1, %150
  %152 = add i32 0, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 1, %154
  %156 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %146, i32 0, i32 1
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 %145, %158
  %160 = mul i32 %155, %159
  %161 = add i32 %152, %160
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = mul i32 %155, %163
  %165 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %166 = load float*, float** %165, align 8
  %167 = getelementptr inbounds float, float* %166, i32 %161
  %168 = load i32, i32* %i, align 4
  %169 = load i32, i32* %j, align 4
  %170 = add i32 %168, %169
  %171 = sitofp i32 %170 to float
  store float %171, float* %167, align 4
  br label %loop.head6

loop.end8:                                        ; preds = %loop.head6
  br label %loop.head4

loop.end9:                                        ; preds = %loop.head4
  %172 = load %array.0, %array.0* %c, align 8
  %173 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %174 = load i1, i1* %173, align 1
  br i1 %174, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  %175 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %176 = load %complex_4*, %complex_4** %175, align 8
  %177 = alloca i8*, align 8
  %178 = bitcast %complex_4* %176 to i8*
  store i8* %178, i8** %177, align 8
  %179 = load i8*, i8** %177, align 8
  call void (i8*, ...) @_lfortran_free(i8* %179)
  %180 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %180, align 1
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %181 = alloca %array, align 8
  %182 = alloca %array.1, align 8
  %183 = alloca %array.0, align 8
  call void @sum(%array* %a, %array.1* %b, %array.0* %c)
  %184 = alloca %dimension_descriptor*, align 8
  %185 = getelementptr %array, %array* %a, i32 0, i32 2
  %186 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %185, i32 0, i32 0
  store %dimension_descriptor* %186, %dimension_descriptor** %184, align 8
  %187 = alloca i32, align 4
  store i32 1, i32* %187, align 4
  %188 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %184, i32* %187)
  %189 = sub i32 %188, 1
  store i32 %189, i32* %i, align 4
  br label %loop.head13

loop.head13:                                      ; preds = %ifcont17, %ifcont12
  %190 = load i32, i32* %i, align 4
  %191 = add i32 %190, 1
  %192 = alloca %dimension_descriptor*, align 8
  %193 = getelementptr %array, %array* %a, i32 0, i32 2
  %194 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %193, i32 0, i32 0
  store %dimension_descriptor* %194, %dimension_descriptor** %192, align 8
  %195 = alloca i32, align 4
  store i32 1, i32* %195, align 4
  %196 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %192, i32* %195)
  %197 = icmp sle i32 %191, %196
  br i1 %197, label %loop.body14, label %loop.end18

loop.body14:                                      ; preds = %loop.head13
  %198 = load i32, i32* %i, align 4
  %199 = add i32 %198, 1
  store i32 %199, i32* %i, align 4
  %200 = load i32, i32* %i, align 4
  %201 = getelementptr %array, %array* %a, i32 0, i32 2
  %202 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %201, i32 0, i32 0
  %203 = getelementptr %dimension_descriptor, %dimension_descriptor* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = sub i32 %200, %204
  %206 = mul i32 1, %205
  %207 = add i32 0, %206
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %202, i32 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = mul i32 1, %209
  %211 = getelementptr %array, %array* %a, i32 0, i32 0
  %212 = load i32*, i32** %211, align 8
  %213 = getelementptr inbounds i32, i32* %212, i32 %207
  %214 = load i32, i32* %213, align 4
  %215 = load i32, i32* %i, align 4
  %216 = icmp ne i32 %214, %215
  br i1 %216, label %then15, label %else16

then15:                                           ; preds = %loop.body14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %loop.body14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  br label %loop.head13

loop.end18:                                       ; preds = %loop.head13
  %217 = alloca %dimension_descriptor*, align 8
  %218 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %219 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %218, i32 0, i32 0
  store %dimension_descriptor* %219, %dimension_descriptor** %217, align 8
  %220 = alloca i32, align 4
  store i32 1, i32* %220, align 4
  %221 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %217, i32* %220)
  %222 = sub i32 %221, 1
  store i32 %222, i32* %i, align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.end26, %loop.end18
  %223 = load i32, i32* %i, align 4
  %224 = add i32 %223, 1
  %225 = alloca %dimension_descriptor*, align 8
  %226 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %227 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %226, i32 0, i32 0
  store %dimension_descriptor* %227, %dimension_descriptor** %225, align 8
  %228 = alloca i32, align 4
  store i32 1, i32* %228, align 4
  %229 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %225, i32* %228)
  %230 = icmp sle i32 %224, %229
  br i1 %230, label %loop.body20, label %loop.end27

loop.body20:                                      ; preds = %loop.head19
  %231 = load i32, i32* %i, align 4
  %232 = add i32 %231, 1
  store i32 %232, i32* %i, align 4
  %233 = alloca %dimension_descriptor*, align 8
  %234 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %235 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %234, i32 0, i32 0
  store %dimension_descriptor* %235, %dimension_descriptor** %233, align 8
  %236 = alloca i32, align 4
  store i32 2, i32* %236, align 4
  %237 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %233, i32* %236)
  %238 = sub i32 %237, 1
  store i32 %238, i32* %j, align 4
  br label %loop.head21

loop.head21:                                      ; preds = %ifcont25, %loop.body20
  %239 = load i32, i32* %j, align 4
  %240 = add i32 %239, 1
  %241 = alloca %dimension_descriptor*, align 8
  %242 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %243 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %242, i32 0, i32 0
  store %dimension_descriptor* %243, %dimension_descriptor** %241, align 8
  %244 = alloca i32, align 4
  store i32 2, i32* %244, align 4
  %245 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %241, i32* %244)
  %246 = icmp sle i32 %240, %245
  br i1 %246, label %loop.body22, label %loop.end26

loop.body22:                                      ; preds = %loop.head21
  %247 = load i32, i32* %j, align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %j, align 4
  %249 = load i32, i32* %i, align 4
  %250 = load i32, i32* %j, align 4
  %251 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %252 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %251, i32 0, i32 0
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = sub i32 %249, %254
  %256 = mul i32 1, %255
  %257 = add i32 0, %256
  %258 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 3
  %259 = load i32, i32* %258, align 4
  %260 = mul i32 1, %259
  %261 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %251, i32 0, i32 1
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %261, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = sub i32 %250, %263
  %265 = mul i32 %260, %264
  %266 = add i32 %257, %265
  %267 = getelementptr %dimension_descriptor, %dimension_descriptor* %261, i32 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = mul i32 %260, %268
  %270 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %271 = load float*, float** %270, align 8
  %272 = getelementptr inbounds float, float* %271, i32 %266
  %273 = load float, float* %272, align 4
  %274 = load i32, i32* %i, align 4
  %275 = load i32, i32* %j, align 4
  %276 = add i32 %274, %275
  %277 = sitofp i32 %276 to float
  %278 = fcmp une float %273, %277
  br i1 %278, label %then23, label %else24

then23:                                           ; preds = %loop.body22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont25

else24:                                           ; preds = %loop.body22
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  br label %loop.head21

loop.end26:                                       ; preds = %loop.head21
  br label %loop.head19

loop.end27:                                       ; preds = %loop.head19
  %279 = alloca %dimension_descriptor*, align 8
  %280 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %281 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %280, i32 0, i32 0
  store %dimension_descriptor* %281, %dimension_descriptor** %279, align 8
  %282 = alloca i32, align 4
  store i32 1, i32* %282, align 4
  %283 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %279, i32* %282)
  %284 = sub i32 %283, 1
  store i32 %284, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end38, %loop.end27
  %285 = load i32, i32* %i, align 4
  %286 = add i32 %285, 1
  %287 = alloca %dimension_descriptor*, align 8
  %288 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %289 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %288, i32 0, i32 0
  store %dimension_descriptor* %289, %dimension_descriptor** %287, align 8
  %290 = alloca i32, align 4
  store i32 1, i32* %290, align 4
  %291 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %287, i32* %290)
  %292 = icmp sle i32 %286, %291
  br i1 %292, label %loop.body29, label %loop.end39

loop.body29:                                      ; preds = %loop.head28
  %293 = load i32, i32* %i, align 4
  %294 = add i32 %293, 1
  store i32 %294, i32* %i, align 4
  %295 = alloca %dimension_descriptor*, align 8
  %296 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %297 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %296, i32 0, i32 0
  store %dimension_descriptor* %297, %dimension_descriptor** %295, align 8
  %298 = alloca i32, align 4
  store i32 2, i32* %298, align 4
  %299 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %295, i32* %298)
  %300 = sub i32 %299, 1
  store i32 %300, i32* %j, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end37, %loop.body29
  %301 = load i32, i32* %j, align 4
  %302 = add i32 %301, 1
  %303 = alloca %dimension_descriptor*, align 8
  %304 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %305 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %304, i32 0, i32 0
  store %dimension_descriptor* %305, %dimension_descriptor** %303, align 8
  %306 = alloca i32, align 4
  store i32 2, i32* %306, align 4
  %307 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %303, i32* %306)
  %308 = icmp sle i32 %302, %307
  br i1 %308, label %loop.body31, label %loop.end38

loop.body31:                                      ; preds = %loop.head30
  %309 = load i32, i32* %j, align 4
  %310 = add i32 %309, 1
  store i32 %310, i32* %j, align 4
  %311 = alloca %dimension_descriptor*, align 8
  %312 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %313 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %312, i32 0, i32 0
  store %dimension_descriptor* %313, %dimension_descriptor** %311, align 8
  %314 = alloca i32, align 4
  store i32 3, i32* %314, align 4
  %315 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %311, i32* %314)
  %316 = sub i32 %315, 1
  store i32 %316, i32* %k, align 4
  br label %loop.head32

loop.head32:                                      ; preds = %ifcont36, %loop.body31
  %317 = load i32, i32* %k, align 4
  %318 = add i32 %317, 1
  %319 = alloca %dimension_descriptor*, align 8
  %320 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %321 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %320, i32 0, i32 0
  store %dimension_descriptor* %321, %dimension_descriptor** %319, align 8
  %322 = alloca i32, align 4
  store i32 3, i32* %322, align 4
  %323 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %319, i32* %322)
  %324 = icmp sle i32 %318, %323
  br i1 %324, label %loop.body33, label %loop.end37

loop.body33:                                      ; preds = %loop.head32
  %325 = load i32, i32* %k, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %k, align 4
  %327 = load i32, i32* %i, align 4
  %328 = load i32, i32* %j, align 4
  %329 = load i32, i32* %k, align 4
  %330 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %331 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %330, i32 0, i32 0
  %332 = getelementptr %dimension_descriptor, %dimension_descriptor* %331, i32 0, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = sub i32 %327, %333
  %335 = mul i32 1, %334
  %336 = add i32 0, %335
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %331, i32 0, i32 3
  %338 = load i32, i32* %337, align 4
  %339 = mul i32 1, %338
  %340 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %330, i32 0, i32 1
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = sub i32 %328, %342
  %344 = mul i32 %339, %343
  %345 = add i32 %336, %344
  %346 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 3
  %347 = load i32, i32* %346, align 4
  %348 = mul i32 %339, %347
  %349 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %330, i32 0, i32 2
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 %329, %351
  %353 = mul i32 %348, %352
  %354 = add i32 %345, %353
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 3
  %356 = load i32, i32* %355, align 4
  %357 = mul i32 %348, %356
  %358 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %359 = load %complex_4*, %complex_4** %358, align 8
  %360 = getelementptr inbounds %complex_4, %complex_4* %359, i32 %354
  %361 = load %complex_4, %complex_4* %360, align 4
  %362 = load i32, i32* %i, align 4
  %363 = load i32, i32* %j, align 4
  %364 = add i32 %362, %363
  %365 = load i32, i32* %k, align 4
  %366 = add i32 %364, %365
  %367 = sitofp i32 %366 to float
  %368 = alloca %complex_4, align 8
  %369 = getelementptr %complex_4, %complex_4* %368, i32 0, i32 0
  %370 = getelementptr %complex_4, %complex_4* %368, i32 0, i32 1
  store float %367, float* %369, align 4
  store float 0.000000e+00, float* %370, align 4
  %371 = load %complex_4, %complex_4* %368, align 4
  %372 = alloca %complex_4, align 8
  store %complex_4 %361, %complex_4* %372, align 4
  %373 = getelementptr %complex_4, %complex_4* %372, i32 0, i32 0
  %374 = load float, float* %373, align 4
  %375 = alloca %complex_4, align 8
  store %complex_4 %371, %complex_4* %375, align 4
  %376 = getelementptr %complex_4, %complex_4* %375, i32 0, i32 0
  %377 = load float, float* %376, align 4
  %378 = alloca %complex_4, align 8
  store %complex_4 %361, %complex_4* %378, align 4
  %379 = getelementptr %complex_4, %complex_4* %378, i32 0, i32 1
  %380 = load float, float* %379, align 4
  %381 = alloca %complex_4, align 8
  store %complex_4 %371, %complex_4* %381, align 4
  %382 = getelementptr %complex_4, %complex_4* %381, i32 0, i32 1
  %383 = load float, float* %382, align 4
  %384 = fcmp une float %374, %377
  %385 = fcmp une float %380, %383
  %386 = and i1 %384, %385
  br i1 %386, label %then34, label %else35

then34:                                           ; preds = %loop.body33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.body33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  br label %loop.head32

loop.end37:                                       ; preds = %loop.head32
  br label %loop.head30

loop.end38:                                       ; preds = %loop.head30
  br label %loop.head28

loop.end39:                                       ; preds = %loop.head28
  %387 = alloca %array.0, align 8
  %388 = call %complex_4 @reduce_sum(%array.0* %c)
  store %complex_4 %388, %complex_4* %r, align 4
  %389 = load %complex_4, %complex_4* %r, align 4
  %390 = alloca %complex_4, align 8
  %391 = getelementptr %complex_4, %complex_4* %390, i32 0, i32 0
  %392 = getelementptr %complex_4, %complex_4* %390, i32 0, i32 1
  store float 1.143450e+05, float* %391, align 4
  store float 0.000000e+00, float* %392, align 4
  %393 = load %complex_4, %complex_4* %390, align 4
  %394 = alloca %complex_4, align 8
  store %complex_4 %389, %complex_4* %394, align 4
  %395 = getelementptr %complex_4, %complex_4* %394, i32 0, i32 0
  %396 = load float, float* %395, align 4
  %397 = alloca %complex_4, align 8
  store %complex_4 %393, %complex_4* %397, align 4
  %398 = getelementptr %complex_4, %complex_4* %397, i32 0, i32 0
  %399 = load float, float* %398, align 4
  %400 = alloca %complex_4, align 8
  store %complex_4 %389, %complex_4* %400, align 4
  %401 = getelementptr %complex_4, %complex_4* %400, i32 0, i32 1
  %402 = load float, float* %401, align 4
  %403 = alloca %complex_4, align 8
  store %complex_4 %393, %complex_4* %403, align 4
  %404 = getelementptr %complex_4, %complex_4* %403, i32 0, i32 1
  %405 = load float, float* %404, align 4
  %406 = fcmp une float %396, %399
  %407 = fcmp une float %402, %405
  %408 = and i1 %406, %407
  br i1 %408, label %then40, label %else41

then40:                                           ; preds = %loop.end39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %loop.end39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  %409 = load %array, %array* %a, align 8
  %410 = getelementptr %array, %array* %a, i32 0, i32 3
  %411 = load i1, i1* %410, align 1
  br i1 %411, label %then43, label %else44

then43:                                           ; preds = %ifcont42
  %412 = getelementptr %array, %array* %a, i32 0, i32 0
  %413 = load i32*, i32** %412, align 8
  %414 = alloca i8*, align 8
  %415 = bitcast i32* %413 to i8*
  store i8* %415, i8** %414, align 8
  %416 = load i8*, i8** %414, align 8
  call void (i8*, ...) @_lfortran_free(i8* %416)
  %417 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %417, align 1
  br label %ifcont45

else44:                                           ; preds = %ifcont42
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %418 = load %array.1, %array.1* %b, align 8
  %419 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %420 = load i1, i1* %419, align 1
  br i1 %420, label %then46, label %else47

then46:                                           ; preds = %ifcont45
  %421 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %422 = load float*, float** %421, align 8
  %423 = alloca i8*, align 8
  %424 = bitcast float* %422 to i8*
  store i8* %424, i8** %423, align 8
  %425 = load i8*, i8** %423, align 8
  call void (i8*, ...) @_lfortran_free(i8* %425)
  %426 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %426, align 1
  br label %ifcont48

else47:                                           ; preds = %ifcont45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %427 = load %array.0, %array.0* %c, align 8
  %428 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %429 = load i1, i1* %428, align 1
  br i1 %429, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  %430 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %431 = load %complex_4*, %complex_4** %430, align 8
  %432 = alloca i8*, align 8
  %433 = bitcast %complex_4* %431 to i8*
  store i8* %433, i8** %432, align 8
  %434 = load i8*, i8** %432, align 8
  call void (i8*, ...) @_lfortran_free(i8* %434)
  %435 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %435, align 1
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
