; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%complex_4 = type { float, float }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { float*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define %complex_4 @reduce_sum(%array.0* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = alloca %dimension_descriptor*, align 8
  %5 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %6 = load %dimension_descriptor*, %dimension_descriptor** %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %4, align 8
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %4, i32* %7)
  %9 = sub i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, 1
  %12 = alloca %dimension_descriptor*, align 8
  %13 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  store %dimension_descriptor* %14, %dimension_descriptor** %12, align 8
  %15 = alloca i32, align 4
  store i32 1, i32* %15, align 4
  %16 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %12, i32* %15)
  %17 = icmp sle i32 %11, %16
  br i1 %17, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 2, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = sub i32 %24, 1
  store i32 %25, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %26 = load i32, i32* %j, align 4
  %27 = add i32 %26, 1
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %30 = load %dimension_descriptor*, %dimension_descriptor** %29, align 8
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 2, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %28, i32* %31)
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %j, align 4
  %36 = alloca %dimension_descriptor*, align 8
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  store %dimension_descriptor* %38, %dimension_descriptor** %36, align 8
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %36, i32* %39)
  %41 = sub i32 %40, 1
  store i32 %41, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %42 = load i32, i32* %k, align 4
  %43 = add i32 %42, 1
  %44 = alloca %dimension_descriptor*, align 8
  %45 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %46 = load %dimension_descriptor*, %dimension_descriptor** %45, align 8
  store %dimension_descriptor* %46, %dimension_descriptor** %44, align 8
  %47 = alloca i32, align 4
  store i32 3, i32* %47, align 4
  %48 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %44, i32* %47)
  %49 = icmp sle i32 %43, %48
  br i1 %49, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %50 = load i32, i32* %k, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %k, align 4
  %52 = load %complex_4, %complex_4* %r, align 4
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* %k, align 4
  %56 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %57 = load %dimension_descriptor*, %dimension_descriptor** %56, align 8
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 0
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 %53, %60
  %62 = mul i32 1, %61
  %63 = add i32 0, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 1, %65
  %67 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 1
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %54, %69
  %71 = mul i32 %66, %70
  %72 = add i32 %63, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %66, %74
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 2
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %55, %78
  %80 = mul i32 %75, %79
  %81 = add i32 %72, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %75, %83
  %85 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %86 = load %complex_4*, %complex_4** %85, align 8
  %87 = getelementptr inbounds %complex_4, %complex_4* %86, i32 %81
  %88 = load %complex_4, %complex_4* %87, align 4
  %89 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %89, align 4
  %90 = alloca %complex_4, align 8
  store %complex_4 %88, %complex_4* %90, align 4
  %91 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %89, %complex_4* %90, %complex_4* %91)
  %92 = load %complex_4, %complex_4* %91, align 4
  store %complex_4 %92, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %93 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %93
}

define void @sum(%array* %a, %array.1* %b, %array.0* %c) {
.entry:
  %c_copy = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = alloca %dimension_descriptor*, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  store %dimension_descriptor* %8, %dimension_descriptor** %6, align 8
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %6, i32* %9)
  %11 = alloca %dimension_descriptor*, align 8
  %12 = getelementptr %array, %array* %a, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  store %dimension_descriptor* %13, %dimension_descriptor** %11, align 8
  %14 = alloca i32, align 4
  store i32 1, i32* %14, align 4
  %15 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %11, i32* %14)
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = alloca %dimension_descriptor*, align 8
  %22 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %21, align 8
  %24 = alloca i32, align 4
  store i32 1, i32* %24, align 4
  %25 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %21, i32* %24)
  %26 = alloca %dimension_descriptor*, align 8
  %27 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  store %dimension_descriptor* %28, %dimension_descriptor** %26, align 8
  %29 = alloca i32, align 4
  store i32 2, i32* %29, align 4
  %30 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %26, i32* %29)
  %31 = alloca %dimension_descriptor*, align 8
  %32 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  store %dimension_descriptor* %33, %dimension_descriptor** %31, align 8
  %34 = alloca i32, align 4
  store i32 2, i32* %34, align 4
  %35 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %31, i32* %34)
  %36 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 true, i1* %37, align 1
  %38 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = load i32, i32* %39, align 4
  %41 = alloca %dimension_descriptor, i32 %40, align 8
  store %dimension_descriptor* %41, %dimension_descriptor** %38, align 8
  %42 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 4
  store i32 3, i32* %42, align 4
  %43 = load %dimension_descriptor*, %dimension_descriptor** %38, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 %10, i32* %46, align 4
  store i32 %15, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  %53 = mul i32 1, %52
  store i32 %52, i32* %48, align 4
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 3
  store i32 1, i32* %55, align 4
  store i32 %20, i32* %56, align 4
  store i32 %25, i32* %57, align 4
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %56, align 4
  %61 = sub i32 %59, %60
  %62 = add i32 %61, 1
  %63 = mul i32 %53, %62
  store i32 %62, i32* %58, align 4
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 2
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 0
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 2
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 3
  store i32 1, i32* %65, align 4
  store i32 %30, i32* %66, align 4
  store i32 %35, i32* %67, align 4
  %69 = load i32, i32* %67, align 4
  %70 = load i32, i32* %66, align 4
  %71 = sub i32 %69, %70
  %72 = add i32 %71, 1
  %73 = mul i32 %63, %72
  store i32 %72, i32* %68, align 4
  %74 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %75 = alloca i32, align 4
  %76 = mul i32 %73, 8
  store i32 %76, i32* %75, align 4
  %77 = load i32, i32* %75, align 4
  %78 = call i8* (i32, ...) @_lfortran_malloc(i32 %77)
  %79 = bitcast i8* %78 to %complex_4*
  store %complex_4* %79, %complex_4** %74, align 8
  %80 = alloca %dimension_descriptor*, align 8
  %81 = getelementptr %array, %array* %a, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  store %dimension_descriptor* %82, %dimension_descriptor** %80, align 8
  %83 = alloca i32, align 4
  store i32 1, i32* %83, align 4
  %84 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %80, i32* %83)
  %85 = alloca %dimension_descriptor*, align 8
  %86 = getelementptr %array, %array* %a, i32 0, i32 2
  %87 = load %dimension_descriptor*, %dimension_descriptor** %86, align 8
  store %dimension_descriptor* %87, %dimension_descriptor** %85, align 8
  %88 = alloca i32, align 4
  store i32 1, i32* %88, align 4
  %89 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %85, i32* %88)
  %90 = alloca %dimension_descriptor*, align 8
  %91 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %92 = load %dimension_descriptor*, %dimension_descriptor** %91, align 8
  store %dimension_descriptor* %92, %dimension_descriptor** %90, align 8
  %93 = alloca i32, align 4
  store i32 1, i32* %93, align 4
  %94 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %90, i32* %93)
  %95 = alloca %dimension_descriptor*, align 8
  %96 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %97 = load %dimension_descriptor*, %dimension_descriptor** %96, align 8
  store %dimension_descriptor* %97, %dimension_descriptor** %95, align 8
  %98 = alloca i32, align 4
  store i32 1, i32* %98, align 4
  %99 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %95, i32* %98)
  %100 = alloca %dimension_descriptor*, align 8
  %101 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %102 = load %dimension_descriptor*, %dimension_descriptor** %101, align 8
  store %dimension_descriptor* %102, %dimension_descriptor** %100, align 8
  %103 = alloca i32, align 4
  store i32 2, i32* %103, align 4
  %104 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %100, i32* %103)
  %105 = alloca %dimension_descriptor*, align 8
  %106 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %107 = load %dimension_descriptor*, %dimension_descriptor** %106, align 8
  store %dimension_descriptor* %107, %dimension_descriptor** %105, align 8
  %108 = alloca i32, align 4
  store i32 2, i32* %108, align 4
  %109 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %105, i32* %108)
  %110 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %110, align 4
  %111 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %111, align 1
  %112 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %113 = alloca i32, align 4
  store i32 3, i32* %113, align 4
  %114 = load i32, i32* %113, align 4
  %115 = alloca %dimension_descriptor, i32 %114, align 8
  store %dimension_descriptor* %115, %dimension_descriptor** %112, align 8
  %116 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %116, align 4
  %117 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 2
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  store i32 1, i32* %119, align 4
  store i32 %84, i32* %120, align 4
  store i32 %89, i32* %121, align 4
  %123 = load i32, i32* %121, align 4
  %124 = load i32, i32* %120, align 4
  %125 = sub i32 %123, %124
  %126 = add i32 %125, 1
  %127 = mul i32 1, %126
  store i32 %126, i32* %122, align 4
  %128 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 1
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 0
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 1
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 2
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 3
  store i32 1, i32* %129, align 4
  store i32 %94, i32* %130, align 4
  store i32 %99, i32* %131, align 4
  %133 = load i32, i32* %131, align 4
  %134 = load i32, i32* %130, align 4
  %135 = sub i32 %133, %134
  %136 = add i32 %135, 1
  %137 = mul i32 %127, %136
  store i32 %136, i32* %132, align 4
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 2
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 0
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 2
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  store i32 1, i32* %139, align 4
  store i32 %104, i32* %140, align 4
  store i32 %109, i32* %141, align 4
  %143 = load i32, i32* %141, align 4
  %144 = load i32, i32* %140, align 4
  %145 = sub i32 %143, %144
  %146 = add i32 %145, 1
  %147 = mul i32 %137, %146
  store i32 %146, i32* %142, align 4
  %148 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %149 = alloca i32, align 4
  %150 = mul i32 %147, 8
  store i32 %150, i32* %149, align 4
  %151 = load i32, i32* %149, align 4
  %152 = call i8* (i32, ...) @_lfortran_malloc(i32 %151)
  %153 = bitcast i8* %152 to %complex_4*
  store %complex_4* %153, %complex_4** %148, align 8
  %154 = alloca %dimension_descriptor*, align 8
  %155 = getelementptr %array, %array* %a, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  store %dimension_descriptor* %156, %dimension_descriptor** %154, align 8
  %157 = alloca i32, align 4
  store i32 1, i32* %157, align 4
  %158 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %154, i32* %157)
  %159 = sub i32 %158, 1
  store i32 %159, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %160 = load i32, i32* %i, align 4
  %161 = add i32 %160, 1
  %162 = alloca %dimension_descriptor*, align 8
  %163 = getelementptr %array, %array* %a, i32 0, i32 2
  %164 = load %dimension_descriptor*, %dimension_descriptor** %163, align 8
  store %dimension_descriptor* %164, %dimension_descriptor** %162, align 8
  %165 = alloca i32, align 4
  store i32 1, i32* %165, align 4
  %166 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %162, i32* %165)
  %167 = icmp sle i32 %161, %166
  br i1 %167, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %168 = load i32, i32* %i, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %i, align 4
  %170 = alloca %dimension_descriptor*, align 8
  %171 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  store %dimension_descriptor* %172, %dimension_descriptor** %170, align 8
  %173 = alloca i32, align 4
  store i32 1, i32* %173, align 4
  %174 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %170, i32* %173)
  %175 = sub i32 %174, 1
  store i32 %175, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %176 = load i32, i32* %j, align 4
  %177 = add i32 %176, 1
  %178 = alloca %dimension_descriptor*, align 8
  %179 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %180 = load %dimension_descriptor*, %dimension_descriptor** %179, align 8
  store %dimension_descriptor* %180, %dimension_descriptor** %178, align 8
  %181 = alloca i32, align 4
  store i32 1, i32* %181, align 4
  %182 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %178, i32* %181)
  %183 = icmp sle i32 %177, %182
  br i1 %183, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %184 = load i32, i32* %j, align 4
  %185 = add i32 %184, 1
  store i32 %185, i32* %j, align 4
  %186 = alloca %dimension_descriptor*, align 8
  %187 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  store %dimension_descriptor* %188, %dimension_descriptor** %186, align 8
  %189 = alloca i32, align 4
  store i32 2, i32* %189, align 4
  %190 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %186, i32* %189)
  %191 = sub i32 %190, 1
  store i32 %191, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %192 = load i32, i32* %k, align 4
  %193 = add i32 %192, 1
  %194 = alloca %dimension_descriptor*, align 8
  %195 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %196 = load %dimension_descriptor*, %dimension_descriptor** %195, align 8
  store %dimension_descriptor* %196, %dimension_descriptor** %194, align 8
  %197 = alloca i32, align 4
  store i32 2, i32* %197, align 4
  %198 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %194, i32* %197)
  %199 = icmp sle i32 %193, %198
  br i1 %199, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %200 = load i32, i32* %k, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %k, align 4
  %202 = load i32, i32* %i, align 4
  %203 = load i32, i32* %j, align 4
  %204 = load i32, i32* %k, align 4
  %205 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %206 = load %dimension_descriptor*, %dimension_descriptor** %205, align 8
  %207 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %206, i32 0
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = sub i32 %202, %209
  %211 = mul i32 1, %210
  %212 = add i32 0, %211
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 3
  %214 = load i32, i32* %213, align 4
  %215 = mul i32 1, %214
  %216 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %206, i32 1
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = sub i32 %203, %218
  %220 = mul i32 %215, %219
  %221 = add i32 %212, %220
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = mul i32 %215, %223
  %225 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %206, i32 2
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %225, i32 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = sub i32 %204, %227
  %229 = mul i32 %224, %228
  %230 = add i32 %221, %229
  %231 = getelementptr %dimension_descriptor, %dimension_descriptor* %225, i32 0, i32 3
  %232 = load i32, i32* %231, align 4
  %233 = mul i32 %224, %232
  %234 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %235 = load %complex_4*, %complex_4** %234, align 8
  %236 = getelementptr inbounds %complex_4, %complex_4* %235, i32 %230
  %237 = load i32, i32* %i, align 4
  %238 = getelementptr %array, %array* %a, i32 0, i32 2
  %239 = load %dimension_descriptor*, %dimension_descriptor** %238, align 8
  %240 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %239, i32 0
  %241 = getelementptr %dimension_descriptor, %dimension_descriptor* %240, i32 0, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = sub i32 %237, %242
  %244 = mul i32 1, %243
  %245 = add i32 0, %244
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %240, i32 0, i32 3
  %247 = load i32, i32* %246, align 4
  %248 = mul i32 1, %247
  %249 = getelementptr %array, %array* %a, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = getelementptr inbounds i32, i32* %250, i32 %245
  %252 = load i32, i32* %251, align 4
  %253 = sitofp i32 %252 to float
  %254 = load i32, i32* %j, align 4
  %255 = load i32, i32* %k, align 4
  %256 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %257 = load %dimension_descriptor*, %dimension_descriptor** %256, align 8
  %258 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %257, i32 0
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = sub i32 %254, %260
  %262 = mul i32 1, %261
  %263 = add i32 0, %262
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = mul i32 1, %265
  %267 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %257, i32 1
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %267, i32 0, i32 1
  %269 = load i32, i32* %268, align 4
  %270 = sub i32 %255, %269
  %271 = mul i32 %266, %270
  %272 = add i32 %263, %271
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %267, i32 0, i32 3
  %274 = load i32, i32* %273, align 4
  %275 = mul i32 %266, %274
  %276 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %277 = load float*, float** %276, align 8
  %278 = getelementptr inbounds float, float* %277, i32 %272
  %279 = load float, float* %278, align 4
  %280 = fadd float %253, %279
  %281 = alloca %complex_4, align 8
  %282 = getelementptr %complex_4, %complex_4* %281, i32 0, i32 0
  %283 = getelementptr %complex_4, %complex_4* %281, i32 0, i32 1
  store float %280, float* %282, align 4
  store float 0.000000e+00, float* %283, align 4
  %284 = load %complex_4, %complex_4* %281, align 4
  store %complex_4 %284, %complex_4* %236, align 4
  %285 = load i32, i32* %i, align 4
  %286 = load i32, i32* %j, align 4
  %287 = load i32, i32* %k, align 4
  %288 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %289 = load %dimension_descriptor*, %dimension_descriptor** %288, align 8
  %290 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %289, i32 0
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %290, i32 0, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = sub i32 %285, %292
  %294 = mul i32 1, %293
  %295 = add i32 0, %294
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %290, i32 0, i32 3
  %297 = load i32, i32* %296, align 4
  %298 = mul i32 1, %297
  %299 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %289, i32 1
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = sub i32 %286, %301
  %303 = mul i32 %298, %302
  %304 = add i32 %295, %303
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 3
  %306 = load i32, i32* %305, align 4
  %307 = mul i32 %298, %306
  %308 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %289, i32 2
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 1
  %310 = load i32, i32* %309, align 4
  %311 = sub i32 %287, %310
  %312 = mul i32 %307, %311
  %313 = add i32 %304, %312
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 3
  %315 = load i32, i32* %314, align 4
  %316 = mul i32 %307, %315
  %317 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %318 = load %complex_4*, %complex_4** %317, align 8
  %319 = getelementptr inbounds %complex_4, %complex_4* %318, i32 %313
  %320 = load i32, i32* %i, align 4
  %321 = getelementptr %array, %array* %a, i32 0, i32 2
  %322 = load %dimension_descriptor*, %dimension_descriptor** %321, align 8
  %323 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %322, i32 0
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = sub i32 %320, %325
  %327 = mul i32 1, %326
  %328 = add i32 0, %327
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 3
  %330 = load i32, i32* %329, align 4
  %331 = mul i32 1, %330
  %332 = getelementptr %array, %array* %a, i32 0, i32 0
  %333 = load i32*, i32** %332, align 8
  %334 = getelementptr inbounds i32, i32* %333, i32 %328
  %335 = load i32, i32* %334, align 4
  %336 = sitofp i32 %335 to float
  %337 = load i32, i32* %j, align 4
  %338 = load i32, i32* %k, align 4
  %339 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %340 = load %dimension_descriptor*, %dimension_descriptor** %339, align 8
  %341 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 0
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = sub i32 %337, %343
  %345 = mul i32 1, %344
  %346 = add i32 0, %345
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 3
  %348 = load i32, i32* %347, align 4
  %349 = mul i32 1, %348
  %350 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 1
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 %338, %352
  %354 = mul i32 %349, %353
  %355 = add i32 %346, %354
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = mul i32 %349, %357
  %359 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %360 = load float*, float** %359, align 8
  %361 = getelementptr inbounds float, float* %360, i32 %355
  %362 = load float, float* %361, align 4
  %363 = fadd float %336, %362
  %364 = alloca %complex_4, align 8
  %365 = getelementptr %complex_4, %complex_4* %364, i32 0, i32 0
  %366 = getelementptr %complex_4, %complex_4* %364, i32 0, i32 1
  store float %363, float* %365, align 4
  store float 0.000000e+00, float* %366, align 4
  %367 = load %complex_4, %complex_4* %364, align 4
  store %complex_4 %367, %complex_4* %319, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %368 = load %array.0, %array.0* %c_copy, align 8
  %369 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %370 = load %complex_4*, %complex_4** %369, align 8
  %371 = alloca i8*, align 8
  %372 = bitcast %complex_4* %370 to i8*
  store i8* %372, i8** %371, align 8
  %373 = load i8*, i8** %371, align 8
  call void (i8*, ...) @_lfortran_free(i8* %373)
  %374 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %374, align 1
  %375 = load %array.0, %array.0* %c_copy, align 8
  %376 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  %377 = load i1, i1* %376, align 1
  br i1 %377, label %then, label %else

then:                                             ; preds = %loop.end6
  %378 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %379 = load %complex_4*, %complex_4** %378, align 8
  %380 = alloca i8*, align 8
  %381 = bitcast %complex_4* %379 to i8*
  store i8* %381, i8** %380, align 8
  %382 = load i8*, i8** %380, align 8
  call void (i8*, ...) @_lfortran_free(i8* %382)
  %383 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %383, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.1, align 8
  %6 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 2, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  store i32 2, i32* %10, align 4
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array.0, align 8
  %12 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %18 = load i32, i32* %n, align 4
  %19 = add i32 %18, 5
  %20 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %21, align 1
  %22 = getelementptr %array, %array* %a, i32 0, i32 2
  %23 = alloca i32, align 4
  store i32 1, i32* %23, align 4
  %24 = load i32, i32* %23, align 4
  %25 = alloca %dimension_descriptor, i32 %24, align 8
  store %dimension_descriptor* %25, %dimension_descriptor** %22, align 8
  %26 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %26, align 4
  %27 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  %28 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %27, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 2
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 3
  store i32 1, i32* %29, align 4
  store i32 5, i32* %30, align 4
  store i32 %19, i32* %31, align 4
  %33 = load i32, i32* %31, align 4
  %34 = load i32, i32* %30, align 4
  %35 = sub i32 %33, %34
  %36 = add i32 %35, 1
  %37 = mul i32 1, %36
  store i32 %36, i32* %32, align 4
  %38 = getelementptr %array, %array* %a, i32 0, i32 0
  %39 = alloca i32, align 4
  %40 = mul i32 %37, 4
  store i32 %40, i32* %39, align 4
  %41 = load i32, i32* %39, align 4
  %42 = call i8* (i32, ...) @_lfortran_malloc(i32 %41)
  %43 = bitcast i8* %42 to i32*
  store i32* %43, i32** %38, align 8
  %44 = load i32, i32* %n, align 4
  %45 = load i32, i32* %n, align 4
  %46 = mul i32 2, %45
  %47 = load i32, i32* %n, align 4
  %48 = load i32, i32* %n, align 4
  %49 = mul i32 3, %48
  %50 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %50, align 4
  %51 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %51, align 1
  %52 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %53 = alloca i32, align 4
  store i32 2, i32* %53, align 4
  %54 = load i32, i32* %53, align 4
  %55 = alloca %dimension_descriptor, i32 %54, align 8
  store %dimension_descriptor* %55, %dimension_descriptor** %52, align 8
  %56 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  store i32 2, i32* %56, align 4
  %57 = load %dimension_descriptor*, %dimension_descriptor** %52, align 8
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 0
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  store i32 1, i32* %59, align 4
  store i32 %44, i32* %60, align 4
  store i32 %46, i32* %61, align 4
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %60, align 4
  %65 = sub i32 %63, %64
  %66 = add i32 %65, 1
  %67 = mul i32 1, %66
  store i32 %66, i32* %62, align 4
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 1
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 %47, i32* %70, align 4
  store i32 %49, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  %77 = mul i32 %67, %76
  store i32 %76, i32* %72, align 4
  %78 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %79 = alloca i32, align 4
  %80 = mul i32 %77, 4
  store i32 %80, i32* %79, align 4
  %81 = load i32, i32* %79, align 4
  %82 = call i8* (i32, ...) @_lfortran_malloc(i32 %81)
  %83 = bitcast i8* %82 to float*
  store float* %83, float** %78, align 8
  store i32 0, i32* %ierr, align 4
  %84 = alloca %size_arg, align 8
  %85 = getelementptr %array, %array* %a, i32 0, i32 2
  %86 = load %dimension_descriptor*, %dimension_descriptor** %85, align 8
  %87 = getelementptr %size_arg, %size_arg* %84, i32 0, i32 0
  store %dimension_descriptor* %86, %dimension_descriptor** %87, align 8
  %88 = getelementptr %size_arg, %size_arg* %84, i32 0, i32 1
  %89 = getelementptr %array, %array* %a, i32 0, i32 4
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = alloca i32, align 4
  %92 = alloca i32, align 4
  %93 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %84, i32* %91, i32* %92)
  %94 = load i32, i32* %n, align 4
  %95 = add i32 %94, 1
  %96 = icmp ne i32 %93, %95
  br i1 %96, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %97 = alloca %size_arg, align 8
  %98 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %99 = load %dimension_descriptor*, %dimension_descriptor** %98, align 8
  %100 = getelementptr %size_arg, %size_arg* %97, i32 0, i32 0
  store %dimension_descriptor* %99, %dimension_descriptor** %100, align 8
  %101 = getelementptr %size_arg, %size_arg* %97, i32 0, i32 1
  %102 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  %103 = load i32, i32* %102, align 4
  store i32 %103, i32* %101, align 4
  %104 = alloca i32, align 4
  %105 = alloca i32, align 4
  %106 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %97, i32* %104, i32* %105)
  %107 = load i32, i32* %n, align 4
  %108 = add i32 %107, 1
  %109 = load i32, i32* %n, align 4
  %110 = mul i32 2, %109
  %111 = add i32 %110, 1
  %112 = mul i32 %108, %111
  %113 = icmp ne i32 %106, %112
  br i1 %113, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %114 = alloca %dimension_descriptor*, align 8
  %115 = getelementptr %array, %array* %a, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  store %dimension_descriptor* %116, %dimension_descriptor** %114, align 8
  %117 = alloca i32, align 4
  store i32 1, i32* %117, align 4
  %118 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %114, i32* %117)
  %119 = sub i32 %118, 1
  store i32 %119, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %ifcont3
  %120 = load i32, i32* %i, align 4
  %121 = add i32 %120, 1
  %122 = alloca %dimension_descriptor*, align 8
  %123 = getelementptr %array, %array* %a, i32 0, i32 2
  %124 = load %dimension_descriptor*, %dimension_descriptor** %123, align 8
  store %dimension_descriptor* %124, %dimension_descriptor** %122, align 8
  %125 = alloca i32, align 4
  store i32 1, i32* %125, align 4
  %126 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %122, i32* %125)
  %127 = icmp sle i32 %121, %126
  br i1 %127, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %128 = load i32, i32* %i, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %i, align 4
  %130 = load i32, i32* %i, align 4
  %131 = getelementptr %array, %array* %a, i32 0, i32 2
  %132 = load %dimension_descriptor*, %dimension_descriptor** %131, align 8
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %132, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %130, %135
  %137 = mul i32 1, %136
  %138 = add i32 0, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 1, %140
  %142 = getelementptr %array, %array* %a, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = getelementptr inbounds i32, i32* %143, i32 %138
  %145 = load i32, i32* %i, align 4
  store i32 %145, i32* %144, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %146 = alloca %dimension_descriptor*, align 8
  %147 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  store %dimension_descriptor* %148, %dimension_descriptor** %146, align 8
  %149 = alloca i32, align 4
  store i32 1, i32* %149, align 4
  %150 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %146, i32* %149)
  %151 = sub i32 %150, 1
  store i32 %151, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.end8, %loop.end
  %152 = load i32, i32* %i, align 4
  %153 = add i32 %152, 1
  %154 = alloca %dimension_descriptor*, align 8
  %155 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  store %dimension_descriptor* %156, %dimension_descriptor** %154, align 8
  %157 = alloca i32, align 4
  store i32 1, i32* %157, align 4
  %158 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %154, i32* %157)
  %159 = icmp sle i32 %153, %158
  br i1 %159, label %loop.body5, label %loop.end9

loop.body5:                                       ; preds = %loop.head4
  %160 = load i32, i32* %i, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %i, align 4
  %162 = alloca %dimension_descriptor*, align 8
  %163 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %164 = load %dimension_descriptor*, %dimension_descriptor** %163, align 8
  store %dimension_descriptor* %164, %dimension_descriptor** %162, align 8
  %165 = alloca i32, align 4
  store i32 2, i32* %165, align 4
  %166 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %162, i32* %165)
  %167 = sub i32 %166, 1
  store i32 %167, i32* %j, align 4
  br label %loop.head6

loop.head6:                                       ; preds = %loop.body7, %loop.body5
  %168 = load i32, i32* %j, align 4
  %169 = add i32 %168, 1
  %170 = alloca %dimension_descriptor*, align 8
  %171 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  store %dimension_descriptor* %172, %dimension_descriptor** %170, align 8
  %173 = alloca i32, align 4
  store i32 2, i32* %173, align 4
  %174 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %170, i32* %173)
  %175 = icmp sle i32 %169, %174
  br i1 %175, label %loop.body7, label %loop.end8

loop.body7:                                       ; preds = %loop.head6
  %176 = load i32, i32* %j, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %j, align 4
  %178 = load i32, i32* %i, align 4
  %179 = load i32, i32* %j, align 4
  %180 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %181 = load %dimension_descriptor*, %dimension_descriptor** %180, align 8
  %182 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %181, i32 0
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = sub i32 %178, %184
  %186 = mul i32 1, %185
  %187 = add i32 0, %186
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = mul i32 1, %189
  %191 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %181, i32 1
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 %179, %193
  %195 = mul i32 %190, %194
  %196 = add i32 %187, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 %190, %198
  %200 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %201 = load float*, float** %200, align 8
  %202 = getelementptr inbounds float, float* %201, i32 %196
  %203 = load i32, i32* %i, align 4
  %204 = load i32, i32* %j, align 4
  %205 = add i32 %203, %204
  %206 = sitofp i32 %205 to float
  store float %206, float* %202, align 4
  br label %loop.head6

loop.end8:                                        ; preds = %loop.head6
  br label %loop.head4

loop.end9:                                        ; preds = %loop.head4
  %207 = load %array.0, %array.0* %c, align 8
  %208 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %209 = load i1, i1* %208, align 1
  br i1 %209, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  %210 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %211 = load %complex_4*, %complex_4** %210, align 8
  %212 = alloca i8*, align 8
  %213 = bitcast %complex_4* %211 to i8*
  store i8* %213, i8** %212, align 8
  %214 = load i8*, i8** %212, align 8
  call void (i8*, ...) @_lfortran_free(i8* %214)
  %215 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %215, align 1
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %216 = alloca %array, align 8
  %217 = alloca %array.1, align 8
  %218 = alloca %array.0, align 8
  call void @sum(%array* %a, %array.1* %b, %array.0* %c)
  %219 = alloca %dimension_descriptor*, align 8
  %220 = getelementptr %array, %array* %a, i32 0, i32 2
  %221 = load %dimension_descriptor*, %dimension_descriptor** %220, align 8
  store %dimension_descriptor* %221, %dimension_descriptor** %219, align 8
  %222 = alloca i32, align 4
  store i32 1, i32* %222, align 4
  %223 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %219, i32* %222)
  %224 = sub i32 %223, 1
  store i32 %224, i32* %i, align 4
  br label %loop.head13

loop.head13:                                      ; preds = %ifcont17, %ifcont12
  %225 = load i32, i32* %i, align 4
  %226 = add i32 %225, 1
  %227 = alloca %dimension_descriptor*, align 8
  %228 = getelementptr %array, %array* %a, i32 0, i32 2
  %229 = load %dimension_descriptor*, %dimension_descriptor** %228, align 8
  store %dimension_descriptor* %229, %dimension_descriptor** %227, align 8
  %230 = alloca i32, align 4
  store i32 1, i32* %230, align 4
  %231 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %227, i32* %230)
  %232 = icmp sle i32 %226, %231
  br i1 %232, label %loop.body14, label %loop.end18

loop.body14:                                      ; preds = %loop.head13
  %233 = load i32, i32* %i, align 4
  %234 = add i32 %233, 1
  store i32 %234, i32* %i, align 4
  %235 = load i32, i32* %i, align 4
  %236 = getelementptr %array, %array* %a, i32 0, i32 2
  %237 = load %dimension_descriptor*, %dimension_descriptor** %236, align 8
  %238 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %237, i32 0
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = sub i32 %235, %240
  %242 = mul i32 1, %241
  %243 = add i32 0, %242
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = mul i32 1, %245
  %247 = getelementptr %array, %array* %a, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds i32, i32* %248, i32 %243
  %250 = load i32, i32* %249, align 4
  %251 = load i32, i32* %i, align 4
  %252 = icmp ne i32 %250, %251
  br i1 %252, label %then15, label %else16

then15:                                           ; preds = %loop.body14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %loop.body14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  br label %loop.head13

loop.end18:                                       ; preds = %loop.head13
  %253 = alloca %dimension_descriptor*, align 8
  %254 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %255 = load %dimension_descriptor*, %dimension_descriptor** %254, align 8
  store %dimension_descriptor* %255, %dimension_descriptor** %253, align 8
  %256 = alloca i32, align 4
  store i32 1, i32* %256, align 4
  %257 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %253, i32* %256)
  %258 = sub i32 %257, 1
  store i32 %258, i32* %i, align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.end26, %loop.end18
  %259 = load i32, i32* %i, align 4
  %260 = add i32 %259, 1
  %261 = alloca %dimension_descriptor*, align 8
  %262 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %263 = load %dimension_descriptor*, %dimension_descriptor** %262, align 8
  store %dimension_descriptor* %263, %dimension_descriptor** %261, align 8
  %264 = alloca i32, align 4
  store i32 1, i32* %264, align 4
  %265 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %261, i32* %264)
  %266 = icmp sle i32 %260, %265
  br i1 %266, label %loop.body20, label %loop.end27

loop.body20:                                      ; preds = %loop.head19
  %267 = load i32, i32* %i, align 4
  %268 = add i32 %267, 1
  store i32 %268, i32* %i, align 4
  %269 = alloca %dimension_descriptor*, align 8
  %270 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %271 = load %dimension_descriptor*, %dimension_descriptor** %270, align 8
  store %dimension_descriptor* %271, %dimension_descriptor** %269, align 8
  %272 = alloca i32, align 4
  store i32 2, i32* %272, align 4
  %273 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %269, i32* %272)
  %274 = sub i32 %273, 1
  store i32 %274, i32* %j, align 4
  br label %loop.head21

loop.head21:                                      ; preds = %ifcont25, %loop.body20
  %275 = load i32, i32* %j, align 4
  %276 = add i32 %275, 1
  %277 = alloca %dimension_descriptor*, align 8
  %278 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %279 = load %dimension_descriptor*, %dimension_descriptor** %278, align 8
  store %dimension_descriptor* %279, %dimension_descriptor** %277, align 8
  %280 = alloca i32, align 4
  store i32 2, i32* %280, align 4
  %281 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %277, i32* %280)
  %282 = icmp sle i32 %276, %281
  br i1 %282, label %loop.body22, label %loop.end26

loop.body22:                                      ; preds = %loop.head21
  %283 = load i32, i32* %j, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %j, align 4
  %285 = load i32, i32* %i, align 4
  %286 = load i32, i32* %j, align 4
  %287 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %288 = load %dimension_descriptor*, %dimension_descriptor** %287, align 8
  %289 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %288, i32 0
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = sub i32 %285, %291
  %293 = mul i32 1, %292
  %294 = add i32 0, %293
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 3
  %296 = load i32, i32* %295, align 4
  %297 = mul i32 1, %296
  %298 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %288, i32 1
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 %286, %300
  %302 = mul i32 %297, %301
  %303 = add i32 %294, %302
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 3
  %305 = load i32, i32* %304, align 4
  %306 = mul i32 %297, %305
  %307 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %308 = load float*, float** %307, align 8
  %309 = getelementptr inbounds float, float* %308, i32 %303
  %310 = load float, float* %309, align 4
  %311 = load i32, i32* %i, align 4
  %312 = load i32, i32* %j, align 4
  %313 = add i32 %311, %312
  %314 = sitofp i32 %313 to float
  %315 = fcmp une float %310, %314
  br i1 %315, label %then23, label %else24

then23:                                           ; preds = %loop.body22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont25

else24:                                           ; preds = %loop.body22
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  br label %loop.head21

loop.end26:                                       ; preds = %loop.head21
  br label %loop.head19

loop.end27:                                       ; preds = %loop.head19
  %316 = alloca %dimension_descriptor*, align 8
  %317 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %318 = load %dimension_descriptor*, %dimension_descriptor** %317, align 8
  store %dimension_descriptor* %318, %dimension_descriptor** %316, align 8
  %319 = alloca i32, align 4
  store i32 1, i32* %319, align 4
  %320 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %316, i32* %319)
  %321 = sub i32 %320, 1
  store i32 %321, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end38, %loop.end27
  %322 = load i32, i32* %i, align 4
  %323 = add i32 %322, 1
  %324 = alloca %dimension_descriptor*, align 8
  %325 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %326 = load %dimension_descriptor*, %dimension_descriptor** %325, align 8
  store %dimension_descriptor* %326, %dimension_descriptor** %324, align 8
  %327 = alloca i32, align 4
  store i32 1, i32* %327, align 4
  %328 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %324, i32* %327)
  %329 = icmp sle i32 %323, %328
  br i1 %329, label %loop.body29, label %loop.end39

loop.body29:                                      ; preds = %loop.head28
  %330 = load i32, i32* %i, align 4
  %331 = add i32 %330, 1
  store i32 %331, i32* %i, align 4
  %332 = alloca %dimension_descriptor*, align 8
  %333 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %334 = load %dimension_descriptor*, %dimension_descriptor** %333, align 8
  store %dimension_descriptor* %334, %dimension_descriptor** %332, align 8
  %335 = alloca i32, align 4
  store i32 2, i32* %335, align 4
  %336 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %332, i32* %335)
  %337 = sub i32 %336, 1
  store i32 %337, i32* %j, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end37, %loop.body29
  %338 = load i32, i32* %j, align 4
  %339 = add i32 %338, 1
  %340 = alloca %dimension_descriptor*, align 8
  %341 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %342 = load %dimension_descriptor*, %dimension_descriptor** %341, align 8
  store %dimension_descriptor* %342, %dimension_descriptor** %340, align 8
  %343 = alloca i32, align 4
  store i32 2, i32* %343, align 4
  %344 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %340, i32* %343)
  %345 = icmp sle i32 %339, %344
  br i1 %345, label %loop.body31, label %loop.end38

loop.body31:                                      ; preds = %loop.head30
  %346 = load i32, i32* %j, align 4
  %347 = add i32 %346, 1
  store i32 %347, i32* %j, align 4
  %348 = alloca %dimension_descriptor*, align 8
  %349 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %350 = load %dimension_descriptor*, %dimension_descriptor** %349, align 8
  store %dimension_descriptor* %350, %dimension_descriptor** %348, align 8
  %351 = alloca i32, align 4
  store i32 3, i32* %351, align 4
  %352 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %348, i32* %351)
  %353 = sub i32 %352, 1
  store i32 %353, i32* %k, align 4
  br label %loop.head32

loop.head32:                                      ; preds = %ifcont36, %loop.body31
  %354 = load i32, i32* %k, align 4
  %355 = add i32 %354, 1
  %356 = alloca %dimension_descriptor*, align 8
  %357 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %358 = load %dimension_descriptor*, %dimension_descriptor** %357, align 8
  store %dimension_descriptor* %358, %dimension_descriptor** %356, align 8
  %359 = alloca i32, align 4
  store i32 3, i32* %359, align 4
  %360 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %356, i32* %359)
  %361 = icmp sle i32 %355, %360
  br i1 %361, label %loop.body33, label %loop.end37

loop.body33:                                      ; preds = %loop.head32
  %362 = load i32, i32* %k, align 4
  %363 = add i32 %362, 1
  store i32 %363, i32* %k, align 4
  %364 = load i32, i32* %i, align 4
  %365 = load i32, i32* %j, align 4
  %366 = load i32, i32* %k, align 4
  %367 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %368 = load %dimension_descriptor*, %dimension_descriptor** %367, align 8
  %369 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %368, i32 0
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %364, %371
  %373 = mul i32 1, %372
  %374 = add i32 0, %373
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 3
  %376 = load i32, i32* %375, align 4
  %377 = mul i32 1, %376
  %378 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %368, i32 1
  %379 = getelementptr %dimension_descriptor, %dimension_descriptor* %378, i32 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = sub i32 %365, %380
  %382 = mul i32 %377, %381
  %383 = add i32 %374, %382
  %384 = getelementptr %dimension_descriptor, %dimension_descriptor* %378, i32 0, i32 3
  %385 = load i32, i32* %384, align 4
  %386 = mul i32 %377, %385
  %387 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %368, i32 2
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = sub i32 %366, %389
  %391 = mul i32 %386, %390
  %392 = add i32 %383, %391
  %393 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 3
  %394 = load i32, i32* %393, align 4
  %395 = mul i32 %386, %394
  %396 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %397 = load %complex_4*, %complex_4** %396, align 8
  %398 = getelementptr inbounds %complex_4, %complex_4* %397, i32 %392
  %399 = load %complex_4, %complex_4* %398, align 4
  %400 = load i32, i32* %i, align 4
  %401 = load i32, i32* %j, align 4
  %402 = add i32 %400, %401
  %403 = load i32, i32* %k, align 4
  %404 = add i32 %402, %403
  %405 = sitofp i32 %404 to float
  %406 = alloca %complex_4, align 8
  %407 = getelementptr %complex_4, %complex_4* %406, i32 0, i32 0
  %408 = getelementptr %complex_4, %complex_4* %406, i32 0, i32 1
  store float %405, float* %407, align 4
  store float 0.000000e+00, float* %408, align 4
  %409 = load %complex_4, %complex_4* %406, align 4
  %410 = alloca %complex_4, align 8
  store %complex_4 %399, %complex_4* %410, align 4
  %411 = getelementptr %complex_4, %complex_4* %410, i32 0, i32 0
  %412 = load float, float* %411, align 4
  %413 = alloca %complex_4, align 8
  store %complex_4 %409, %complex_4* %413, align 4
  %414 = getelementptr %complex_4, %complex_4* %413, i32 0, i32 0
  %415 = load float, float* %414, align 4
  %416 = alloca %complex_4, align 8
  store %complex_4 %399, %complex_4* %416, align 4
  %417 = getelementptr %complex_4, %complex_4* %416, i32 0, i32 1
  %418 = load float, float* %417, align 4
  %419 = alloca %complex_4, align 8
  store %complex_4 %409, %complex_4* %419, align 4
  %420 = getelementptr %complex_4, %complex_4* %419, i32 0, i32 1
  %421 = load float, float* %420, align 4
  %422 = fcmp une float %412, %415
  %423 = fcmp une float %418, %421
  %424 = and i1 %422, %423
  br i1 %424, label %then34, label %else35

then34:                                           ; preds = %loop.body33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.body33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  br label %loop.head32

loop.end37:                                       ; preds = %loop.head32
  br label %loop.head30

loop.end38:                                       ; preds = %loop.head30
  br label %loop.head28

loop.end39:                                       ; preds = %loop.head28
  %425 = alloca %array.0, align 8
  %426 = call %complex_4 @reduce_sum(%array.0* %c)
  store %complex_4 %426, %complex_4* %r, align 4
  %427 = load %complex_4, %complex_4* %r, align 4
  %428 = alloca %complex_4, align 8
  %429 = getelementptr %complex_4, %complex_4* %428, i32 0, i32 0
  %430 = getelementptr %complex_4, %complex_4* %428, i32 0, i32 1
  store float 1.143450e+05, float* %429, align 4
  store float 0.000000e+00, float* %430, align 4
  %431 = load %complex_4, %complex_4* %428, align 4
  %432 = alloca %complex_4, align 8
  store %complex_4 %427, %complex_4* %432, align 4
  %433 = getelementptr %complex_4, %complex_4* %432, i32 0, i32 0
  %434 = load float, float* %433, align 4
  %435 = alloca %complex_4, align 8
  store %complex_4 %431, %complex_4* %435, align 4
  %436 = getelementptr %complex_4, %complex_4* %435, i32 0, i32 0
  %437 = load float, float* %436, align 4
  %438 = alloca %complex_4, align 8
  store %complex_4 %427, %complex_4* %438, align 4
  %439 = getelementptr %complex_4, %complex_4* %438, i32 0, i32 1
  %440 = load float, float* %439, align 4
  %441 = alloca %complex_4, align 8
  store %complex_4 %431, %complex_4* %441, align 4
  %442 = getelementptr %complex_4, %complex_4* %441, i32 0, i32 1
  %443 = load float, float* %442, align 4
  %444 = fcmp une float %434, %437
  %445 = fcmp une float %440, %443
  %446 = and i1 %444, %445
  br i1 %446, label %then40, label %else41

then40:                                           ; preds = %loop.end39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %loop.end39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  %447 = load %array, %array* %a, align 8
  %448 = getelementptr %array, %array* %a, i32 0, i32 3
  %449 = load i1, i1* %448, align 1
  br i1 %449, label %then43, label %else44

then43:                                           ; preds = %ifcont42
  %450 = getelementptr %array, %array* %a, i32 0, i32 0
  %451 = load i32*, i32** %450, align 8
  %452 = alloca i8*, align 8
  %453 = bitcast i32* %451 to i8*
  store i8* %453, i8** %452, align 8
  %454 = load i8*, i8** %452, align 8
  call void (i8*, ...) @_lfortran_free(i8* %454)
  %455 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %455, align 1
  br label %ifcont45

else44:                                           ; preds = %ifcont42
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %456 = load %array.1, %array.1* %b, align 8
  %457 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %458 = load i1, i1* %457, align 1
  br i1 %458, label %then46, label %else47

then46:                                           ; preds = %ifcont45
  %459 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %460 = load float*, float** %459, align 8
  %461 = alloca i8*, align 8
  %462 = bitcast float* %460 to i8*
  store i8* %462, i8** %461, align 8
  %463 = load i8*, i8** %461, align 8
  call void (i8*, ...) @_lfortran_free(i8* %463)
  %464 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %464, align 1
  br label %ifcont48

else47:                                           ; preds = %ifcont45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %465 = load %array.0, %array.0* %c, align 8
  %466 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %467 = load i1, i1* %466, align 1
  br i1 %467, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  %468 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %469 = load %complex_4*, %complex_4** %468, align 8
  %470 = alloca i8*, align 8
  %471 = bitcast %complex_4* %469 to i8*
  store i8* %471, i8** %470, align 8
  %472 = load i8*, i8** %470, align 8
  call void (i8*, ...) @_lfortran_free(i8* %472)
  %473 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %473, align 1
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
