; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%complex_4 = type { float, float }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { float*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define %complex_4 @reduce_sum(%array.0* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = alloca %dimension_descriptor*, align 8
  %5 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %6 = load %dimension_descriptor*, %dimension_descriptor** %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %4, align 8
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %4, i32* %7)
  %9 = sub i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, 1
  %12 = alloca %dimension_descriptor*, align 8
  %13 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  store %dimension_descriptor* %14, %dimension_descriptor** %12, align 8
  %15 = alloca i32, align 4
  store i32 1, i32* %15, align 4
  %16 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %12, i32* %15)
  %17 = icmp sle i32 %11, %16
  br i1 %17, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 2, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = sub i32 %24, 1
  store i32 %25, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %26 = load i32, i32* %j, align 4
  %27 = add i32 %26, 1
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %30 = load %dimension_descriptor*, %dimension_descriptor** %29, align 8
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 2, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %28, i32* %31)
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %j, align 4
  %36 = alloca %dimension_descriptor*, align 8
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  store %dimension_descriptor* %38, %dimension_descriptor** %36, align 8
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %36, i32* %39)
  %41 = sub i32 %40, 1
  store i32 %41, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %42 = load i32, i32* %k, align 4
  %43 = add i32 %42, 1
  %44 = alloca %dimension_descriptor*, align 8
  %45 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %46 = load %dimension_descriptor*, %dimension_descriptor** %45, align 8
  store %dimension_descriptor* %46, %dimension_descriptor** %44, align 8
  %47 = alloca i32, align 4
  store i32 3, i32* %47, align 4
  %48 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %44, i32* %47)
  %49 = icmp sle i32 %43, %48
  br i1 %49, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %50 = load i32, i32* %k, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %k, align 4
  %52 = load %complex_4, %complex_4* %r, align 4
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* %k, align 4
  %56 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %57 = load %dimension_descriptor*, %dimension_descriptor** %56, align 8
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 0
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 %53, %60
  %62 = mul i32 1, %61
  %63 = add i32 0, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 1, %65
  %67 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 1
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %54, %69
  %71 = mul i32 %66, %70
  %72 = add i32 %63, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %66, %74
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 2
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %55, %78
  %80 = mul i32 %75, %79
  %81 = add i32 %72, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %75, %83
  %85 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %86 = load %complex_4*, %complex_4** %85, align 8
  %87 = getelementptr inbounds %complex_4, %complex_4* %86, i32 %81
  %88 = load %complex_4, %complex_4* %87, align 4
  %89 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %89, align 4
  %90 = alloca %complex_4, align 8
  store %complex_4 %88, %complex_4* %90, align 4
  %91 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %89, %complex_4* %90, %complex_4* %91)
  %92 = load %complex_4, %complex_4* %91, align 4
  store %complex_4 %92, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %93 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %93
}

define void @sum(%array* %a, %array.1* %b, %array.0* %c) {
.entry:
  %c_copy = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = alloca %dimension_descriptor*, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  store %dimension_descriptor* %8, %dimension_descriptor** %6, align 8
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %6, i32* %9)
  %11 = alloca %dimension_descriptor*, align 8
  %12 = getelementptr %array, %array* %a, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  store %dimension_descriptor* %13, %dimension_descriptor** %11, align 8
  %14 = alloca i32, align 4
  store i32 1, i32* %14, align 4
  %15 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %11, i32* %14)
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = alloca %dimension_descriptor*, align 8
  %22 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %21, align 8
  %24 = alloca i32, align 4
  store i32 1, i32* %24, align 4
  %25 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %21, i32* %24)
  %26 = alloca %dimension_descriptor*, align 8
  %27 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  store %dimension_descriptor* %28, %dimension_descriptor** %26, align 8
  %29 = alloca i32, align 4
  store i32 2, i32* %29, align 4
  %30 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %26, i32* %29)
  %31 = alloca %dimension_descriptor*, align 8
  %32 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  store %dimension_descriptor* %33, %dimension_descriptor** %31, align 8
  %34 = alloca i32, align 4
  store i32 2, i32* %34, align 4
  %35 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %31, i32* %34)
  %36 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 true, i1* %37, align 1
  %38 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %39 = load %dimension_descriptor*, %dimension_descriptor** %38, align 8
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %39, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 %10, i32* %42, align 4
  store i32 %15, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  %49 = mul i32 1, %48
  store i32 %48, i32* %44, align 4
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %39, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  store i32 1, i32* %51, align 4
  store i32 %20, i32* %52, align 4
  store i32 %25, i32* %53, align 4
  %55 = load i32, i32* %53, align 4
  %56 = load i32, i32* %52, align 4
  %57 = sub i32 %55, %56
  %58 = add i32 %57, 1
  %59 = mul i32 %49, %58
  store i32 %58, i32* %54, align 4
  %60 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %39, i32 2
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  store i32 1, i32* %61, align 4
  store i32 %30, i32* %62, align 4
  store i32 %35, i32* %63, align 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %62, align 4
  %67 = sub i32 %65, %66
  %68 = add i32 %67, 1
  %69 = mul i32 %59, %68
  store i32 %68, i32* %64, align 4
  %70 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %71 = alloca i32, align 4
  %72 = mul i32 %69, 8
  store i32 %72, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = call i8* (i32, ...) @_lfortran_malloc(i32 %73)
  %75 = bitcast i8* %74 to %complex_4*
  store %complex_4* %75, %complex_4** %70, align 8
  %76 = alloca %dimension_descriptor*, align 8
  %77 = getelementptr %array, %array* %a, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  store %dimension_descriptor* %78, %dimension_descriptor** %76, align 8
  %79 = alloca i32, align 4
  store i32 1, i32* %79, align 4
  %80 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %76, i32* %79)
  %81 = alloca %dimension_descriptor*, align 8
  %82 = getelementptr %array, %array* %a, i32 0, i32 2
  %83 = load %dimension_descriptor*, %dimension_descriptor** %82, align 8
  store %dimension_descriptor* %83, %dimension_descriptor** %81, align 8
  %84 = alloca i32, align 4
  store i32 1, i32* %84, align 4
  %85 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %81, i32* %84)
  %86 = alloca %dimension_descriptor*, align 8
  %87 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %88 = load %dimension_descriptor*, %dimension_descriptor** %87, align 8
  store %dimension_descriptor* %88, %dimension_descriptor** %86, align 8
  %89 = alloca i32, align 4
  store i32 1, i32* %89, align 4
  %90 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %86, i32* %89)
  %91 = alloca %dimension_descriptor*, align 8
  %92 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  store %dimension_descriptor* %93, %dimension_descriptor** %91, align 8
  %94 = alloca i32, align 4
  store i32 1, i32* %94, align 4
  %95 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %91, i32* %94)
  %96 = alloca %dimension_descriptor*, align 8
  %97 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %98 = load %dimension_descriptor*, %dimension_descriptor** %97, align 8
  store %dimension_descriptor* %98, %dimension_descriptor** %96, align 8
  %99 = alloca i32, align 4
  store i32 2, i32* %99, align 4
  %100 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %96, i32* %99)
  %101 = alloca %dimension_descriptor*, align 8
  %102 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  store %dimension_descriptor* %103, %dimension_descriptor** %101, align 8
  %104 = alloca i32, align 4
  store i32 2, i32* %104, align 4
  %105 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %101, i32* %104)
  %106 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %106, align 4
  %107 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %107, align 1
  %108 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  %110 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 2
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  store i32 1, i32* %111, align 4
  store i32 %80, i32* %112, align 4
  store i32 %85, i32* %113, align 4
  %115 = load i32, i32* %113, align 4
  %116 = load i32, i32* %112, align 4
  %117 = sub i32 %115, %116
  %118 = add i32 %117, 1
  %119 = mul i32 1, %118
  store i32 %118, i32* %114, align 4
  %120 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 1
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 0
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 1
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 2
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 3
  store i32 1, i32* %121, align 4
  store i32 %90, i32* %122, align 4
  store i32 %95, i32* %123, align 4
  %125 = load i32, i32* %123, align 4
  %126 = load i32, i32* %122, align 4
  %127 = sub i32 %125, %126
  %128 = add i32 %127, 1
  %129 = mul i32 %119, %128
  store i32 %128, i32* %124, align 4
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 2
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 0
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 2
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 3
  store i32 1, i32* %131, align 4
  store i32 %100, i32* %132, align 4
  store i32 %105, i32* %133, align 4
  %135 = load i32, i32* %133, align 4
  %136 = load i32, i32* %132, align 4
  %137 = sub i32 %135, %136
  %138 = add i32 %137, 1
  %139 = mul i32 %129, %138
  store i32 %138, i32* %134, align 4
  %140 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %141 = alloca i32, align 4
  %142 = mul i32 %139, 8
  store i32 %142, i32* %141, align 4
  %143 = load i32, i32* %141, align 4
  %144 = call i8* (i32, ...) @_lfortran_malloc(i32 %143)
  %145 = bitcast i8* %144 to %complex_4*
  store %complex_4* %145, %complex_4** %140, align 8
  %146 = alloca %dimension_descriptor*, align 8
  %147 = getelementptr %array, %array* %a, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  store %dimension_descriptor* %148, %dimension_descriptor** %146, align 8
  %149 = alloca i32, align 4
  store i32 1, i32* %149, align 4
  %150 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %146, i32* %149)
  %151 = sub i32 %150, 1
  store i32 %151, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %152 = load i32, i32* %i, align 4
  %153 = add i32 %152, 1
  %154 = alloca %dimension_descriptor*, align 8
  %155 = getelementptr %array, %array* %a, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  store %dimension_descriptor* %156, %dimension_descriptor** %154, align 8
  %157 = alloca i32, align 4
  store i32 1, i32* %157, align 4
  %158 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %154, i32* %157)
  %159 = icmp sle i32 %153, %158
  br i1 %159, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %160 = load i32, i32* %i, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %i, align 4
  %162 = alloca %dimension_descriptor*, align 8
  %163 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %164 = load %dimension_descriptor*, %dimension_descriptor** %163, align 8
  store %dimension_descriptor* %164, %dimension_descriptor** %162, align 8
  %165 = alloca i32, align 4
  store i32 1, i32* %165, align 4
  %166 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %162, i32* %165)
  %167 = sub i32 %166, 1
  store i32 %167, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %168 = load i32, i32* %j, align 4
  %169 = add i32 %168, 1
  %170 = alloca %dimension_descriptor*, align 8
  %171 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  store %dimension_descriptor* %172, %dimension_descriptor** %170, align 8
  %173 = alloca i32, align 4
  store i32 1, i32* %173, align 4
  %174 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %170, i32* %173)
  %175 = icmp sle i32 %169, %174
  br i1 %175, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %176 = load i32, i32* %j, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %j, align 4
  %178 = alloca %dimension_descriptor*, align 8
  %179 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %180 = load %dimension_descriptor*, %dimension_descriptor** %179, align 8
  store %dimension_descriptor* %180, %dimension_descriptor** %178, align 8
  %181 = alloca i32, align 4
  store i32 2, i32* %181, align 4
  %182 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %178, i32* %181)
  %183 = sub i32 %182, 1
  store i32 %183, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %184 = load i32, i32* %k, align 4
  %185 = add i32 %184, 1
  %186 = alloca %dimension_descriptor*, align 8
  %187 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  store %dimension_descriptor* %188, %dimension_descriptor** %186, align 8
  %189 = alloca i32, align 4
  store i32 2, i32* %189, align 4
  %190 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %186, i32* %189)
  %191 = icmp sle i32 %185, %190
  br i1 %191, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %192 = load i32, i32* %k, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %k, align 4
  %194 = load i32, i32* %i, align 4
  %195 = load i32, i32* %j, align 4
  %196 = load i32, i32* %k, align 4
  %197 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %198 = load %dimension_descriptor*, %dimension_descriptor** %197, align 8
  %199 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %198, i32 0
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sub i32 %194, %201
  %203 = mul i32 1, %202
  %204 = add i32 0, %203
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 3
  %206 = load i32, i32* %205, align 4
  %207 = mul i32 1, %206
  %208 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %198, i32 1
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %208, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = sub i32 %195, %210
  %212 = mul i32 %207, %211
  %213 = add i32 %204, %212
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %208, i32 0, i32 3
  %215 = load i32, i32* %214, align 4
  %216 = mul i32 %207, %215
  %217 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %198, i32 2
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %196, %219
  %221 = mul i32 %216, %220
  %222 = add i32 %213, %221
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 3
  %224 = load i32, i32* %223, align 4
  %225 = mul i32 %216, %224
  %226 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %227 = load %complex_4*, %complex_4** %226, align 8
  %228 = getelementptr inbounds %complex_4, %complex_4* %227, i32 %222
  %229 = load i32, i32* %i, align 4
  %230 = getelementptr %array, %array* %a, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 0
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = sub i32 %229, %234
  %236 = mul i32 1, %235
  %237 = add i32 0, %236
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 3
  %239 = load i32, i32* %238, align 4
  %240 = mul i32 1, %239
  %241 = getelementptr %array, %array* %a, i32 0, i32 0
  %242 = load i32*, i32** %241, align 8
  %243 = getelementptr inbounds i32, i32* %242, i32 %237
  %244 = load i32, i32* %243, align 4
  %245 = sitofp i32 %244 to float
  %246 = load i32, i32* %j, align 4
  %247 = load i32, i32* %k, align 4
  %248 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %249 = load %dimension_descriptor*, %dimension_descriptor** %248, align 8
  %250 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %249, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = sub i32 %246, %252
  %254 = mul i32 1, %253
  %255 = add i32 0, %254
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = mul i32 1, %257
  %259 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %249, i32 1
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = sub i32 %247, %261
  %263 = mul i32 %258, %262
  %264 = add i32 %255, %263
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 3
  %266 = load i32, i32* %265, align 4
  %267 = mul i32 %258, %266
  %268 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %269 = load float*, float** %268, align 8
  %270 = getelementptr inbounds float, float* %269, i32 %264
  %271 = load float, float* %270, align 4
  %272 = fadd float %245, %271
  %273 = alloca %complex_4, align 8
  %274 = getelementptr %complex_4, %complex_4* %273, i32 0, i32 0
  %275 = getelementptr %complex_4, %complex_4* %273, i32 0, i32 1
  store float %272, float* %274, align 4
  store float 0.000000e+00, float* %275, align 4
  %276 = load %complex_4, %complex_4* %273, align 4
  store %complex_4 %276, %complex_4* %228, align 4
  %277 = load i32, i32* %i, align 4
  %278 = load i32, i32* %j, align 4
  %279 = load i32, i32* %k, align 4
  %280 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %281 = load %dimension_descriptor*, %dimension_descriptor** %280, align 8
  %282 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %281, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sub i32 %277, %284
  %286 = mul i32 1, %285
  %287 = add i32 0, %286
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 3
  %289 = load i32, i32* %288, align 4
  %290 = mul i32 1, %289
  %291 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %281, i32 1
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 %278, %293
  %295 = mul i32 %290, %294
  %296 = add i32 %287, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 %290, %298
  %300 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %281, i32 2
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 %279, %302
  %304 = mul i32 %299, %303
  %305 = add i32 %296, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 %299, %307
  %309 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %310 = load %complex_4*, %complex_4** %309, align 8
  %311 = getelementptr inbounds %complex_4, %complex_4* %310, i32 %305
  %312 = load i32, i32* %i, align 4
  %313 = getelementptr %array, %array* %a, i32 0, i32 2
  %314 = load %dimension_descriptor*, %dimension_descriptor** %313, align 8
  %315 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %314, i32 0
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 %312, %317
  %319 = mul i32 1, %318
  %320 = add i32 0, %319
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 1, %322
  %324 = getelementptr %array, %array* %a, i32 0, i32 0
  %325 = load i32*, i32** %324, align 8
  %326 = getelementptr inbounds i32, i32* %325, i32 %320
  %327 = load i32, i32* %326, align 4
  %328 = sitofp i32 %327 to float
  %329 = load i32, i32* %j, align 4
  %330 = load i32, i32* %k, align 4
  %331 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %332 = load %dimension_descriptor*, %dimension_descriptor** %331, align 8
  %333 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %332, i32 0
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = sub i32 %329, %335
  %337 = mul i32 1, %336
  %338 = add i32 0, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 1, %340
  %342 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %332, i32 1
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %342, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = sub i32 %330, %344
  %346 = mul i32 %341, %345
  %347 = add i32 %338, %346
  %348 = getelementptr %dimension_descriptor, %dimension_descriptor* %342, i32 0, i32 3
  %349 = load i32, i32* %348, align 4
  %350 = mul i32 %341, %349
  %351 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %352 = load float*, float** %351, align 8
  %353 = getelementptr inbounds float, float* %352, i32 %347
  %354 = load float, float* %353, align 4
  %355 = fadd float %328, %354
  %356 = alloca %complex_4, align 8
  %357 = getelementptr %complex_4, %complex_4* %356, i32 0, i32 0
  %358 = getelementptr %complex_4, %complex_4* %356, i32 0, i32 1
  store float %355, float* %357, align 4
  store float 0.000000e+00, float* %358, align 4
  %359 = load %complex_4, %complex_4* %356, align 4
  store %complex_4 %359, %complex_4* %311, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %360 = load %array.0, %array.0* %c_copy, align 8
  %361 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %362 = load %complex_4*, %complex_4** %361, align 8
  %363 = alloca i8*, align 8
  %364 = bitcast %complex_4* %362 to i8*
  store i8* %364, i8** %363, align 8
  %365 = load i8*, i8** %363, align 8
  call void (i8*, ...) @_lfortran_free(i8* %365)
  %366 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %366, align 1
  %367 = load %array.0, %array.0* %c_copy, align 8
  %368 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  %369 = load i1, i1* %368, align 1
  br i1 %369, label %then, label %else

then:                                             ; preds = %loop.end6
  %370 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %371 = load %complex_4*, %complex_4** %370, align 8
  %372 = alloca i8*, align 8
  %373 = bitcast %complex_4* %371 to i8*
  store i8* %373, i8** %372, align 8
  %374 = load i8*, i8** %372, align 8
  call void (i8*, ...) @_lfortran_free(i8* %374)
  %375 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %375, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.1, align 8
  %6 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 2, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  store i32 2, i32* %10, align 4
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array.0, align 8
  %12 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %18 = load i32, i32* %n, align 4
  %19 = add i32 %18, 5
  %20 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %21, align 1
  %22 = getelementptr %array, %array* %a, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 5, i32* %26, align 4
  store i32 %19, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  %33 = mul i32 1, %32
  store i32 %32, i32* %28, align 4
  %34 = getelementptr %array, %array* %a, i32 0, i32 0
  %35 = alloca i32, align 4
  %36 = mul i32 %33, 4
  store i32 %36, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = call i8* (i32, ...) @_lfortran_malloc(i32 %37)
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %34, align 8
  %40 = load i32, i32* %n, align 4
  %41 = load i32, i32* %n, align 4
  %42 = mul i32 2, %41
  %43 = load i32, i32* %n, align 4
  %44 = load i32, i32* %n, align 4
  %45 = mul i32 3, %44
  %46 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %46, align 4
  %47 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %47, align 1
  %48 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  store i32 1, i32* %51, align 4
  store i32 %40, i32* %52, align 4
  store i32 %42, i32* %53, align 4
  %55 = load i32, i32* %53, align 4
  %56 = load i32, i32* %52, align 4
  %57 = sub i32 %55, %56
  %58 = add i32 %57, 1
  %59 = mul i32 1, %58
  store i32 %58, i32* %54, align 4
  %60 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  store i32 1, i32* %61, align 4
  store i32 %43, i32* %62, align 4
  store i32 %45, i32* %63, align 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %62, align 4
  %67 = sub i32 %65, %66
  %68 = add i32 %67, 1
  %69 = mul i32 %59, %68
  store i32 %68, i32* %64, align 4
  %70 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %71 = alloca i32, align 4
  %72 = mul i32 %69, 4
  store i32 %72, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = call i8* (i32, ...) @_lfortran_malloc(i32 %73)
  %75 = bitcast i8* %74 to float*
  store float* %75, float** %70, align 8
  store i32 0, i32* %ierr, align 4
  %76 = alloca %size_arg, align 8
  %77 = getelementptr %array, %array* %a, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr %size_arg, %size_arg* %76, i32 0, i32 0
  store %dimension_descriptor* %78, %dimension_descriptor** %79, align 8
  %80 = getelementptr %size_arg, %size_arg* %76, i32 0, i32 1
  %81 = getelementptr %array, %array* %a, i32 0, i32 4
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = alloca i32, align 4
  %84 = alloca i32, align 4
  %85 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %76, i32* %83, i32* %84)
  %86 = load i32, i32* %n, align 4
  %87 = add i32 %86, 1
  %88 = icmp ne i32 %85, %87
  br i1 %88, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %89 = alloca %size_arg, align 8
  %90 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  %92 = getelementptr %size_arg, %size_arg* %89, i32 0, i32 0
  store %dimension_descriptor* %91, %dimension_descriptor** %92, align 8
  %93 = getelementptr %size_arg, %size_arg* %89, i32 0, i32 1
  %94 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %93, align 4
  %96 = alloca i32, align 4
  %97 = alloca i32, align 4
  %98 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %89, i32* %96, i32* %97)
  %99 = load i32, i32* %n, align 4
  %100 = add i32 %99, 1
  %101 = load i32, i32* %n, align 4
  %102 = mul i32 2, %101
  %103 = add i32 %102, 1
  %104 = mul i32 %100, %103
  %105 = icmp ne i32 %98, %104
  br i1 %105, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %106 = alloca %dimension_descriptor*, align 8
  %107 = getelementptr %array, %array* %a, i32 0, i32 2
  %108 = load %dimension_descriptor*, %dimension_descriptor** %107, align 8
  store %dimension_descriptor* %108, %dimension_descriptor** %106, align 8
  %109 = alloca i32, align 4
  store i32 1, i32* %109, align 4
  %110 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %106, i32* %109)
  %111 = sub i32 %110, 1
  store i32 %111, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %ifcont3
  %112 = load i32, i32* %i, align 4
  %113 = add i32 %112, 1
  %114 = alloca %dimension_descriptor*, align 8
  %115 = getelementptr %array, %array* %a, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  store %dimension_descriptor* %116, %dimension_descriptor** %114, align 8
  %117 = alloca i32, align 4
  store i32 1, i32* %117, align 4
  %118 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %114, i32* %117)
  %119 = icmp sle i32 %113, %118
  br i1 %119, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %120 = load i32, i32* %i, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %i, align 4
  %122 = load i32, i32* %i, align 4
  %123 = getelementptr %array, %array* %a, i32 0, i32 2
  %124 = load %dimension_descriptor*, %dimension_descriptor** %123, align 8
  %125 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %124, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sub i32 %122, %127
  %129 = mul i32 1, %128
  %130 = add i32 0, %129
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = mul i32 1, %132
  %134 = getelementptr %array, %array* %a, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = getelementptr inbounds i32, i32* %135, i32 %130
  %137 = load i32, i32* %i, align 4
  store i32 %137, i32* %136, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %138 = alloca %dimension_descriptor*, align 8
  %139 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %140 = load %dimension_descriptor*, %dimension_descriptor** %139, align 8
  store %dimension_descriptor* %140, %dimension_descriptor** %138, align 8
  %141 = alloca i32, align 4
  store i32 1, i32* %141, align 4
  %142 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %138, i32* %141)
  %143 = sub i32 %142, 1
  store i32 %143, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.end8, %loop.end
  %144 = load i32, i32* %i, align 4
  %145 = add i32 %144, 1
  %146 = alloca %dimension_descriptor*, align 8
  %147 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  store %dimension_descriptor* %148, %dimension_descriptor** %146, align 8
  %149 = alloca i32, align 4
  store i32 1, i32* %149, align 4
  %150 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %146, i32* %149)
  %151 = icmp sle i32 %145, %150
  br i1 %151, label %loop.body5, label %loop.end9

loop.body5:                                       ; preds = %loop.head4
  %152 = load i32, i32* %i, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %i, align 4
  %154 = alloca %dimension_descriptor*, align 8
  %155 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  store %dimension_descriptor* %156, %dimension_descriptor** %154, align 8
  %157 = alloca i32, align 4
  store i32 2, i32* %157, align 4
  %158 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %154, i32* %157)
  %159 = sub i32 %158, 1
  store i32 %159, i32* %j, align 4
  br label %loop.head6

loop.head6:                                       ; preds = %loop.body7, %loop.body5
  %160 = load i32, i32* %j, align 4
  %161 = add i32 %160, 1
  %162 = alloca %dimension_descriptor*, align 8
  %163 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %164 = load %dimension_descriptor*, %dimension_descriptor** %163, align 8
  store %dimension_descriptor* %164, %dimension_descriptor** %162, align 8
  %165 = alloca i32, align 4
  store i32 2, i32* %165, align 4
  %166 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %162, i32* %165)
  %167 = icmp sle i32 %161, %166
  br i1 %167, label %loop.body7, label %loop.end8

loop.body7:                                       ; preds = %loop.head6
  %168 = load i32, i32* %j, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %j, align 4
  %170 = load i32, i32* %i, align 4
  %171 = load i32, i32* %j, align 4
  %172 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %173 = load %dimension_descriptor*, %dimension_descriptor** %172, align 8
  %174 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %173, i32 0
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 %170, %176
  %178 = mul i32 1, %177
  %179 = add i32 0, %178
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = mul i32 1, %181
  %183 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %173, i32 1
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %183, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = sub i32 %171, %185
  %187 = mul i32 %182, %186
  %188 = add i32 %179, %187
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %183, i32 0, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = mul i32 %182, %190
  %192 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %193 = load float*, float** %192, align 8
  %194 = getelementptr inbounds float, float* %193, i32 %188
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %j, align 4
  %197 = add i32 %195, %196
  %198 = sitofp i32 %197 to float
  store float %198, float* %194, align 4
  br label %loop.head6

loop.end8:                                        ; preds = %loop.head6
  br label %loop.head4

loop.end9:                                        ; preds = %loop.head4
  %199 = load %array.0, %array.0* %c, align 8
  %200 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %201 = load i1, i1* %200, align 1
  br i1 %201, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  %202 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %203 = load %complex_4*, %complex_4** %202, align 8
  %204 = alloca i8*, align 8
  %205 = bitcast %complex_4* %203 to i8*
  store i8* %205, i8** %204, align 8
  %206 = load i8*, i8** %204, align 8
  call void (i8*, ...) @_lfortran_free(i8* %206)
  %207 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %207, align 1
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %208 = alloca %array, align 8
  %209 = alloca %array.1, align 8
  %210 = alloca %array.0, align 8
  call void @sum(%array* %a, %array.1* %b, %array.0* %c)
  %211 = alloca %dimension_descriptor*, align 8
  %212 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %213 = load %dimension_descriptor*, %dimension_descriptor** %212, align 8
  store %dimension_descriptor* %213, %dimension_descriptor** %211, align 8
  %214 = alloca i32, align 4
  store i32 1, i32* %214, align 4
  %215 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %211, i32* %214)
  %216 = icmp ne i32 %215, 5
  %217 = alloca %dimension_descriptor*, align 8
  %218 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %219 = load %dimension_descriptor*, %dimension_descriptor** %218, align 8
  store %dimension_descriptor* %219, %dimension_descriptor** %217, align 8
  %220 = alloca i32, align 4
  store i32 1, i32* %220, align 4
  %221 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %217, i32* %220)
  %222 = load i32, i32* %n, align 4
  %223 = add i32 %222, 5
  %224 = icmp ne i32 %221, %223
  %225 = or i1 %216, %224
  br i1 %225, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %226 = alloca %dimension_descriptor*, align 8
  %227 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %228 = load %dimension_descriptor*, %dimension_descriptor** %227, align 8
  store %dimension_descriptor* %228, %dimension_descriptor** %226, align 8
  %229 = alloca i32, align 4
  store i32 2, i32* %229, align 4
  %230 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %226, i32* %229)
  %231 = load i32, i32* %n, align 4
  %232 = icmp ne i32 %230, %231
  %233 = alloca %dimension_descriptor*, align 8
  %234 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %235 = load %dimension_descriptor*, %dimension_descriptor** %234, align 8
  store %dimension_descriptor* %235, %dimension_descriptor** %233, align 8
  %236 = alloca i32, align 4
  store i32 2, i32* %236, align 4
  %237 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %233, i32* %236)
  %238 = load i32, i32* %n, align 4
  %239 = mul i32 2, %238
  %240 = icmp ne i32 %237, %239
  %241 = or i1 %232, %240
  br i1 %241, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %242 = alloca %dimension_descriptor*, align 8
  %243 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %244 = load %dimension_descriptor*, %dimension_descriptor** %243, align 8
  store %dimension_descriptor* %244, %dimension_descriptor** %242, align 8
  %245 = alloca i32, align 4
  store i32 3, i32* %245, align 4
  %246 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %242, i32* %245)
  %247 = load i32, i32* %n, align 4
  %248 = icmp ne i32 %246, %247
  %249 = alloca %dimension_descriptor*, align 8
  %250 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %251 = load %dimension_descriptor*, %dimension_descriptor** %250, align 8
  store %dimension_descriptor* %251, %dimension_descriptor** %249, align 8
  %252 = alloca i32, align 4
  store i32 3, i32* %252, align 4
  %253 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %249, i32* %252)
  %254 = load i32, i32* %n, align 4
  %255 = mul i32 3, %254
  %256 = icmp ne i32 %253, %255
  %257 = or i1 %248, %256
  br i1 %257, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %258 = alloca %dimension_descriptor*, align 8
  %259 = getelementptr %array, %array* %a, i32 0, i32 2
  %260 = load %dimension_descriptor*, %dimension_descriptor** %259, align 8
  store %dimension_descriptor* %260, %dimension_descriptor** %258, align 8
  %261 = alloca i32, align 4
  store i32 1, i32* %261, align 4
  %262 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %258, i32* %261)
  %263 = sub i32 %262, 1
  store i32 %263, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %ifcont26, %ifcont21
  %264 = load i32, i32* %i, align 4
  %265 = add i32 %264, 1
  %266 = alloca %dimension_descriptor*, align 8
  %267 = getelementptr %array, %array* %a, i32 0, i32 2
  %268 = load %dimension_descriptor*, %dimension_descriptor** %267, align 8
  store %dimension_descriptor* %268, %dimension_descriptor** %266, align 8
  %269 = alloca i32, align 4
  store i32 1, i32* %269, align 4
  %270 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %266, i32* %269)
  %271 = icmp sle i32 %265, %270
  br i1 %271, label %loop.body23, label %loop.end27

loop.body23:                                      ; preds = %loop.head22
  %272 = load i32, i32* %i, align 4
  %273 = add i32 %272, 1
  store i32 %273, i32* %i, align 4
  %274 = load i32, i32* %i, align 4
  %275 = getelementptr %array, %array* %a, i32 0, i32 2
  %276 = load %dimension_descriptor*, %dimension_descriptor** %275, align 8
  %277 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %276, i32 0
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 %274, %279
  %281 = mul i32 1, %280
  %282 = add i32 0, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 1, %284
  %286 = getelementptr %array, %array* %a, i32 0, i32 0
  %287 = load i32*, i32** %286, align 8
  %288 = getelementptr inbounds i32, i32* %287, i32 %282
  %289 = load i32, i32* %288, align 4
  %290 = load i32, i32* %i, align 4
  %291 = icmp ne i32 %289, %290
  br i1 %291, label %then24, label %else25

then24:                                           ; preds = %loop.body23
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %loop.body23
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  br label %loop.head22

loop.end27:                                       ; preds = %loop.head22
  %292 = alloca %dimension_descriptor*, align 8
  %293 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %294 = load %dimension_descriptor*, %dimension_descriptor** %293, align 8
  store %dimension_descriptor* %294, %dimension_descriptor** %292, align 8
  %295 = alloca i32, align 4
  store i32 1, i32* %295, align 4
  %296 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %292, i32* %295)
  %297 = sub i32 %296, 1
  store i32 %297, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end35, %loop.end27
  %298 = load i32, i32* %i, align 4
  %299 = add i32 %298, 1
  %300 = alloca %dimension_descriptor*, align 8
  %301 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %302 = load %dimension_descriptor*, %dimension_descriptor** %301, align 8
  store %dimension_descriptor* %302, %dimension_descriptor** %300, align 8
  %303 = alloca i32, align 4
  store i32 1, i32* %303, align 4
  %304 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %300, i32* %303)
  %305 = icmp sle i32 %299, %304
  br i1 %305, label %loop.body29, label %loop.end36

loop.body29:                                      ; preds = %loop.head28
  %306 = load i32, i32* %i, align 4
  %307 = add i32 %306, 1
  store i32 %307, i32* %i, align 4
  %308 = alloca %dimension_descriptor*, align 8
  %309 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %310 = load %dimension_descriptor*, %dimension_descriptor** %309, align 8
  store %dimension_descriptor* %310, %dimension_descriptor** %308, align 8
  %311 = alloca i32, align 4
  store i32 2, i32* %311, align 4
  %312 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %308, i32* %311)
  %313 = sub i32 %312, 1
  store i32 %313, i32* %j, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %ifcont34, %loop.body29
  %314 = load i32, i32* %j, align 4
  %315 = add i32 %314, 1
  %316 = alloca %dimension_descriptor*, align 8
  %317 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %318 = load %dimension_descriptor*, %dimension_descriptor** %317, align 8
  store %dimension_descriptor* %318, %dimension_descriptor** %316, align 8
  %319 = alloca i32, align 4
  store i32 2, i32* %319, align 4
  %320 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %316, i32* %319)
  %321 = icmp sle i32 %315, %320
  br i1 %321, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %322 = load i32, i32* %j, align 4
  %323 = add i32 %322, 1
  store i32 %323, i32* %j, align 4
  %324 = load i32, i32* %i, align 4
  %325 = load i32, i32* %j, align 4
  %326 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %327 = load %dimension_descriptor*, %dimension_descriptor** %326, align 8
  %328 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %327, i32 0
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = sub i32 %324, %330
  %332 = mul i32 1, %331
  %333 = add i32 0, %332
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 3
  %335 = load i32, i32* %334, align 4
  %336 = mul i32 1, %335
  %337 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %327, i32 1
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sub i32 %325, %339
  %341 = mul i32 %336, %340
  %342 = add i32 %333, %341
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 3
  %344 = load i32, i32* %343, align 4
  %345 = mul i32 %336, %344
  %346 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %347 = load float*, float** %346, align 8
  %348 = getelementptr inbounds float, float* %347, i32 %342
  %349 = load float, float* %348, align 4
  %350 = load i32, i32* %i, align 4
  %351 = load i32, i32* %j, align 4
  %352 = add i32 %350, %351
  %353 = sitofp i32 %352 to float
  %354 = fcmp une float %349, %353
  br i1 %354, label %then32, label %else33

then32:                                           ; preds = %loop.body31
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont34

else33:                                           ; preds = %loop.body31
  br label %ifcont34

ifcont34:                                         ; preds = %else33, %then32
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  br label %loop.head28

loop.end36:                                       ; preds = %loop.head28
  %355 = alloca %dimension_descriptor*, align 8
  %356 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %357 = load %dimension_descriptor*, %dimension_descriptor** %356, align 8
  store %dimension_descriptor* %357, %dimension_descriptor** %355, align 8
  %358 = alloca i32, align 4
  store i32 1, i32* %358, align 4
  %359 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %355, i32* %358)
  %360 = sub i32 %359, 1
  store i32 %360, i32* %i, align 4
  br label %loop.head37

loop.head37:                                      ; preds = %loop.end47, %loop.end36
  %361 = load i32, i32* %i, align 4
  %362 = add i32 %361, 1
  %363 = alloca %dimension_descriptor*, align 8
  %364 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %365 = load %dimension_descriptor*, %dimension_descriptor** %364, align 8
  store %dimension_descriptor* %365, %dimension_descriptor** %363, align 8
  %366 = alloca i32, align 4
  store i32 1, i32* %366, align 4
  %367 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %363, i32* %366)
  %368 = icmp sle i32 %362, %367
  br i1 %368, label %loop.body38, label %loop.end48

loop.body38:                                      ; preds = %loop.head37
  %369 = load i32, i32* %i, align 4
  %370 = add i32 %369, 1
  store i32 %370, i32* %i, align 4
  %371 = alloca %dimension_descriptor*, align 8
  %372 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %373 = load %dimension_descriptor*, %dimension_descriptor** %372, align 8
  store %dimension_descriptor* %373, %dimension_descriptor** %371, align 8
  %374 = alloca i32, align 4
  store i32 2, i32* %374, align 4
  %375 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %371, i32* %374)
  %376 = sub i32 %375, 1
  store i32 %376, i32* %j, align 4
  br label %loop.head39

loop.head39:                                      ; preds = %loop.end46, %loop.body38
  %377 = load i32, i32* %j, align 4
  %378 = add i32 %377, 1
  %379 = alloca %dimension_descriptor*, align 8
  %380 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %381 = load %dimension_descriptor*, %dimension_descriptor** %380, align 8
  store %dimension_descriptor* %381, %dimension_descriptor** %379, align 8
  %382 = alloca i32, align 4
  store i32 2, i32* %382, align 4
  %383 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %379, i32* %382)
  %384 = icmp sle i32 %378, %383
  br i1 %384, label %loop.body40, label %loop.end47

loop.body40:                                      ; preds = %loop.head39
  %385 = load i32, i32* %j, align 4
  %386 = add i32 %385, 1
  store i32 %386, i32* %j, align 4
  %387 = alloca %dimension_descriptor*, align 8
  %388 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %389 = load %dimension_descriptor*, %dimension_descriptor** %388, align 8
  store %dimension_descriptor* %389, %dimension_descriptor** %387, align 8
  %390 = alloca i32, align 4
  store i32 3, i32* %390, align 4
  %391 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %387, i32* %390)
  %392 = sub i32 %391, 1
  store i32 %392, i32* %k, align 4
  br label %loop.head41

loop.head41:                                      ; preds = %ifcont45, %loop.body40
  %393 = load i32, i32* %k, align 4
  %394 = add i32 %393, 1
  %395 = alloca %dimension_descriptor*, align 8
  %396 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %397 = load %dimension_descriptor*, %dimension_descriptor** %396, align 8
  store %dimension_descriptor* %397, %dimension_descriptor** %395, align 8
  %398 = alloca i32, align 4
  store i32 3, i32* %398, align 4
  %399 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %395, i32* %398)
  %400 = icmp sle i32 %394, %399
  br i1 %400, label %loop.body42, label %loop.end46

loop.body42:                                      ; preds = %loop.head41
  %401 = load i32, i32* %k, align 4
  %402 = add i32 %401, 1
  store i32 %402, i32* %k, align 4
  %403 = load i32, i32* %i, align 4
  %404 = load i32, i32* %j, align 4
  %405 = load i32, i32* %k, align 4
  %406 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %407 = load %dimension_descriptor*, %dimension_descriptor** %406, align 8
  %408 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %407, i32 0
  %409 = getelementptr %dimension_descriptor, %dimension_descriptor* %408, i32 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = sub i32 %403, %410
  %412 = mul i32 1, %411
  %413 = add i32 0, %412
  %414 = getelementptr %dimension_descriptor, %dimension_descriptor* %408, i32 0, i32 3
  %415 = load i32, i32* %414, align 4
  %416 = mul i32 1, %415
  %417 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %407, i32 1
  %418 = getelementptr %dimension_descriptor, %dimension_descriptor* %417, i32 0, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = sub i32 %404, %419
  %421 = mul i32 %416, %420
  %422 = add i32 %413, %421
  %423 = getelementptr %dimension_descriptor, %dimension_descriptor* %417, i32 0, i32 3
  %424 = load i32, i32* %423, align 4
  %425 = mul i32 %416, %424
  %426 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %407, i32 2
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = sub i32 %405, %428
  %430 = mul i32 %425, %429
  %431 = add i32 %422, %430
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 3
  %433 = load i32, i32* %432, align 4
  %434 = mul i32 %425, %433
  %435 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %436 = load %complex_4*, %complex_4** %435, align 8
  %437 = getelementptr inbounds %complex_4, %complex_4* %436, i32 %431
  %438 = load %complex_4, %complex_4* %437, align 4
  %439 = load i32, i32* %i, align 4
  %440 = load i32, i32* %j, align 4
  %441 = add i32 %439, %440
  %442 = load i32, i32* %k, align 4
  %443 = add i32 %441, %442
  %444 = sitofp i32 %443 to float
  %445 = alloca %complex_4, align 8
  %446 = getelementptr %complex_4, %complex_4* %445, i32 0, i32 0
  %447 = getelementptr %complex_4, %complex_4* %445, i32 0, i32 1
  store float %444, float* %446, align 4
  store float 0.000000e+00, float* %447, align 4
  %448 = load %complex_4, %complex_4* %445, align 4
  %449 = alloca %complex_4, align 8
  store %complex_4 %438, %complex_4* %449, align 4
  %450 = getelementptr %complex_4, %complex_4* %449, i32 0, i32 0
  %451 = load float, float* %450, align 4
  %452 = alloca %complex_4, align 8
  store %complex_4 %448, %complex_4* %452, align 4
  %453 = getelementptr %complex_4, %complex_4* %452, i32 0, i32 0
  %454 = load float, float* %453, align 4
  %455 = alloca %complex_4, align 8
  store %complex_4 %438, %complex_4* %455, align 4
  %456 = getelementptr %complex_4, %complex_4* %455, i32 0, i32 1
  %457 = load float, float* %456, align 4
  %458 = alloca %complex_4, align 8
  store %complex_4 %448, %complex_4* %458, align 4
  %459 = getelementptr %complex_4, %complex_4* %458, i32 0, i32 1
  %460 = load float, float* %459, align 4
  %461 = fcmp une float %451, %454
  %462 = fcmp une float %457, %460
  %463 = and i1 %461, %462
  br i1 %463, label %then43, label %else44

then43:                                           ; preds = %loop.body42
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %loop.body42
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  br label %loop.head41

loop.end46:                                       ; preds = %loop.head41
  br label %loop.head39

loop.end47:                                       ; preds = %loop.head39
  br label %loop.head37

loop.end48:                                       ; preds = %loop.head37
  %464 = alloca %array.0, align 8
  %465 = call %complex_4 @reduce_sum(%array.0* %c)
  store %complex_4 %465, %complex_4* %r, align 4
  %466 = load %complex_4, %complex_4* %r, align 4
  %467 = alloca %complex_4, align 8
  %468 = getelementptr %complex_4, %complex_4* %467, i32 0, i32 0
  %469 = getelementptr %complex_4, %complex_4* %467, i32 0, i32 1
  store float 1.143450e+05, float* %468, align 4
  store float 0.000000e+00, float* %469, align 4
  %470 = load %complex_4, %complex_4* %467, align 4
  %471 = alloca %complex_4, align 8
  store %complex_4 %466, %complex_4* %471, align 4
  %472 = getelementptr %complex_4, %complex_4* %471, i32 0, i32 0
  %473 = load float, float* %472, align 4
  %474 = alloca %complex_4, align 8
  store %complex_4 %470, %complex_4* %474, align 4
  %475 = getelementptr %complex_4, %complex_4* %474, i32 0, i32 0
  %476 = load float, float* %475, align 4
  %477 = alloca %complex_4, align 8
  store %complex_4 %466, %complex_4* %477, align 4
  %478 = getelementptr %complex_4, %complex_4* %477, i32 0, i32 1
  %479 = load float, float* %478, align 4
  %480 = alloca %complex_4, align 8
  store %complex_4 %470, %complex_4* %480, align 4
  %481 = getelementptr %complex_4, %complex_4* %480, i32 0, i32 1
  %482 = load float, float* %481, align 4
  %483 = fcmp une float %473, %476
  %484 = fcmp une float %479, %482
  %485 = and i1 %483, %484
  br i1 %485, label %then49, label %else50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.end48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %486 = load %array, %array* %a, align 8
  %487 = getelementptr %array, %array* %a, i32 0, i32 3
  %488 = load i1, i1* %487, align 1
  br i1 %488, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  %489 = getelementptr %array, %array* %a, i32 0, i32 0
  %490 = load i32*, i32** %489, align 8
  %491 = alloca i8*, align 8
  %492 = bitcast i32* %490 to i8*
  store i8* %492, i8** %491, align 8
  %493 = load i8*, i8** %491, align 8
  call void (i8*, ...) @_lfortran_free(i8* %493)
  %494 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %494, align 1
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %495 = load %array.1, %array.1* %b, align 8
  %496 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %497 = load i1, i1* %496, align 1
  br i1 %497, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  %498 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %499 = load float*, float** %498, align 8
  %500 = alloca i8*, align 8
  %501 = bitcast float* %499 to i8*
  store i8* %501, i8** %500, align 8
  %502 = load i8*, i8** %500, align 8
  call void (i8*, ...) @_lfortran_free(i8* %502)
  %503 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %503, align 1
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %504 = load %array.0, %array.0* %c, align 8
  %505 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %506 = load i1, i1* %505, align 1
  br i1 %506, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  %507 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %508 = load %complex_4*, %complex_4** %507, align 8
  %509 = alloca i8*, align 8
  %510 = bitcast %complex_4* %508 to i8*
  store i8* %510, i8** %509, align 8
  %511 = load i8*, i8** %509, align 8
  call void (i8*, ...) @_lfortran_free(i8* %511)
  %512 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %512, align 1
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
