; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type { float, float }
%array = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { float*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define %complex_4 @reduce_sum(%array* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = load %array, %array* %c, align 8
  %5 = getelementptr %array, %array* %c, i32 0, i32 2
  %6 = load %dimension_descriptor*, %dimension_descriptor** %5, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %9, 1
  store i32 %10, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %11 = load i32, i32* %i, align 4
  %12 = add i32 %11, 1
  %13 = load %array, %array* %c, align 8
  %14 = getelementptr %array, %array* %c, i32 0, i32 2
  %15 = load %dimension_descriptor*, %dimension_descriptor** %14, align 8
  %16 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %15, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp sle i32 %12, %18
  br i1 %19, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %20 = load i32, i32* %i, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %i, align 4
  %22 = load %array, %array* %c, align 8
  %23 = getelementptr %array, %array* %c, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %27, 1
  store i32 %28, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %29 = load i32, i32* %j, align 4
  %30 = add i32 %29, 1
  %31 = load %array, %array* %c, align 8
  %32 = getelementptr %array, %array* %c, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp sle i32 %30, %36
  br i1 %37, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %38 = load i32, i32* %j, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %j, align 4
  %40 = load %array, %array* %c, align 8
  %41 = getelementptr %array, %array* %c, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 %45, 1
  store i32 %46, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %47 = load i32, i32* %k, align 4
  %48 = add i32 %47, 1
  %49 = load %array, %array* %c, align 8
  %50 = getelementptr %array, %array* %c, i32 0, i32 2
  %51 = load %dimension_descriptor*, %dimension_descriptor** %50, align 8
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %51, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp sle i32 %48, %54
  br i1 %55, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %56 = load i32, i32* %k, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %k, align 4
  %58 = load %complex_4, %complex_4* %r, align 4
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %j, align 4
  %61 = load i32, i32* %k, align 4
  %62 = getelementptr %array, %array* %c, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %59, %66
  %68 = mul i32 1, %67
  %69 = add i32 0, %68
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = mul i32 1, %71
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 1
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 %60, %75
  %77 = mul i32 %72, %76
  %78 = add i32 %69, %77
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = mul i32 %72, %80
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 2
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 %61, %84
  %86 = mul i32 %81, %85
  %87 = add i32 %78, %86
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = mul i32 %81, %89
  %91 = getelementptr %array, %array* %c, i32 0, i32 0
  %92 = load %complex_4*, %complex_4** %91, align 8
  %93 = getelementptr inbounds %complex_4, %complex_4* %92, i32 %87
  %94 = load %complex_4, %complex_4* %93, align 4
  %95 = alloca %complex_4, align 8
  store %complex_4 %58, %complex_4* %95, align 4
  %96 = alloca %complex_4, align 8
  store %complex_4 %94, %complex_4* %96, align 4
  %97 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lcompilers_complex_add_32(%complex_4* %95, %complex_4* %96, %complex_4* %97)
  %98 = load %complex_4, %complex_4* %97, align 4
  store %complex_4 %98, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %99 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %99
}

define void @sum(%array.0* %a, %array.1* %b, %array* %c) {
.entry:
  %c_copy = alloca %array, align 8
  %0 = getelementptr %array, %array* %c_copy, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %c_copy, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = load %array.0, %array.0* %a, align 8
  %7 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load %array.0, %array.0* %a, align 8
  %13 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = load %array.1, %array.1* %b, align 8
  %19 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %20 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %21 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load %array.1, %array.1* %b, align 8
  %25 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = load %array.1, %array.1* %b, align 8
  %31 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %32 = load %dimension_descriptor*, %dimension_descriptor** %31, align 8
  %33 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %32, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %array.1, %array.1* %b, align 8
  %37 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 1
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr %array, %array* %c_copy, i32 0, i32 1
  store i32 0, i32* %42, align 4
  %43 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 true, i1* %43, align 1
  %44 = getelementptr %array, %array* %c_copy, i32 0, i32 2
  %45 = load %dimension_descriptor*, %dimension_descriptor** %44, align 8
  %46 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 0
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 1
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 3
  store i32 1, i32* %47, align 4
  store i32 %11, i32* %48, align 4
  store i32 %17, i32* %49, align 4
  %51 = load i32, i32* %49, align 4
  %52 = load i32, i32* %48, align 4
  %53 = sub i32 %51, %52
  %54 = add i32 %53, 1
  %55 = mul i32 1, %54
  store i32 %54, i32* %50, align 4
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 3
  store i32 1, i32* %57, align 4
  store i32 %23, i32* %58, align 4
  store i32 %29, i32* %59, align 4
  %61 = load i32, i32* %59, align 4
  %62 = load i32, i32* %58, align 4
  %63 = sub i32 %61, %62
  %64 = add i32 %63, 1
  %65 = mul i32 %55, %64
  store i32 %64, i32* %60, align 4
  %66 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 2
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 0
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 1
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 2
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 3
  store i32 1, i32* %67, align 4
  store i32 %35, i32* %68, align 4
  store i32 %41, i32* %69, align 4
  %71 = load i32, i32* %69, align 4
  %72 = load i32, i32* %68, align 4
  %73 = sub i32 %71, %72
  %74 = add i32 %73, 1
  %75 = mul i32 %65, %74
  store i32 %74, i32* %70, align 4
  %76 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %77 = alloca i32, align 4
  %78 = mul i32 %75, 8
  store i32 %78, i32* %77, align 4
  %79 = load i32, i32* %77, align 4
  %80 = call i8* (i32, ...) @_lcompilers_malloc(i32 %79)
  %81 = bitcast i8* %80 to %complex_4*
  store %complex_4* %81, %complex_4** %76, align 8
  %82 = load %array.0, %array.0* %a, align 8
  %83 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %84 = load %dimension_descriptor*, %dimension_descriptor** %83, align 8
  %85 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %84, i32 0
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = load %array.0, %array.0* %a, align 8
  %89 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %90 = load %dimension_descriptor*, %dimension_descriptor** %89, align 8
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = load %array.1, %array.1* %b, align 8
  %95 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %96 = load %dimension_descriptor*, %dimension_descriptor** %95, align 8
  %97 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %96, i32 0
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = load %array.1, %array.1* %b, align 8
  %101 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %102 = load %dimension_descriptor*, %dimension_descriptor** %101, align 8
  %103 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %102, i32 0
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = load %array.1, %array.1* %b, align 8
  %107 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %108 = load %dimension_descriptor*, %dimension_descriptor** %107, align 8
  %109 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %108, i32 1
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = load %array.1, %array.1* %b, align 8
  %113 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %114 = load %dimension_descriptor*, %dimension_descriptor** %113, align 8
  %115 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 1
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %118, align 4
  %119 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %119, align 1
  %120 = getelementptr %array, %array* %c, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 2
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 3
  store i32 1, i32* %123, align 4
  store i32 %87, i32* %124, align 4
  store i32 %93, i32* %125, align 4
  %127 = load i32, i32* %125, align 4
  %128 = load i32, i32* %124, align 4
  %129 = sub i32 %127, %128
  %130 = add i32 %129, 1
  %131 = mul i32 1, %130
  store i32 %130, i32* %126, align 4
  %132 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 1
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 2
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 3
  store i32 1, i32* %133, align 4
  store i32 %99, i32* %134, align 4
  store i32 %105, i32* %135, align 4
  %137 = load i32, i32* %135, align 4
  %138 = load i32, i32* %134, align 4
  %139 = sub i32 %137, %138
  %140 = add i32 %139, 1
  %141 = mul i32 %131, %140
  store i32 %140, i32* %136, align 4
  %142 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 2
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 0
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 1
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 2
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 3
  store i32 1, i32* %143, align 4
  store i32 %111, i32* %144, align 4
  store i32 %117, i32* %145, align 4
  %147 = load i32, i32* %145, align 4
  %148 = load i32, i32* %144, align 4
  %149 = sub i32 %147, %148
  %150 = add i32 %149, 1
  %151 = mul i32 %141, %150
  store i32 %150, i32* %146, align 4
  %152 = getelementptr %array, %array* %c, i32 0, i32 0
  %153 = alloca i32, align 4
  %154 = mul i32 %151, 8
  store i32 %154, i32* %153, align 4
  %155 = load i32, i32* %153, align 4
  %156 = call i8* (i32, ...) @_lcompilers_malloc(i32 %155)
  %157 = bitcast i8* %156 to %complex_4*
  store %complex_4* %157, %complex_4** %152, align 8
  %158 = load %array.0, %array.0* %a, align 8
  %159 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = sub i32 %163, 1
  store i32 %164, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %165 = load i32, i32* %i, align 4
  %166 = add i32 %165, 1
  %167 = load %array.0, %array.0* %a, align 8
  %168 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %169 = load %dimension_descriptor*, %dimension_descriptor** %168, align 8
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 0
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 2
  %172 = load i32, i32* %171, align 4
  %173 = icmp sle i32 %166, %172
  br i1 %173, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %174 = load i32, i32* %i, align 4
  %175 = add i32 %174, 1
  store i32 %175, i32* %i, align 4
  %176 = load %array.1, %array.1* %b, align 8
  %177 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 0
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 %181, 1
  store i32 %182, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %183 = load i32, i32* %j, align 4
  %184 = add i32 %183, 1
  %185 = load %array.1, %array.1* %b, align 8
  %186 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %187 = load %dimension_descriptor*, %dimension_descriptor** %186, align 8
  %188 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %187, i32 0
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = icmp sle i32 %184, %190
  br i1 %191, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %192 = load i32, i32* %j, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %j, align 4
  %194 = load %array.1, %array.1* %b, align 8
  %195 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %196 = load %dimension_descriptor*, %dimension_descriptor** %195, align 8
  %197 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %196, i32 1
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = sub i32 %199, 1
  store i32 %200, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %201 = load i32, i32* %k, align 4
  %202 = add i32 %201, 1
  %203 = load %array.1, %array.1* %b, align 8
  %204 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %205 = load %dimension_descriptor*, %dimension_descriptor** %204, align 8
  %206 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %205, i32 1
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 2
  %208 = load i32, i32* %207, align 4
  %209 = icmp sle i32 %202, %208
  br i1 %209, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %210 = load i32, i32* %k, align 4
  %211 = add i32 %210, 1
  store i32 %211, i32* %k, align 4
  %212 = load i32, i32* %i, align 4
  %213 = load i32, i32* %j, align 4
  %214 = load i32, i32* %k, align 4
  %215 = getelementptr %array, %array* %c_copy, i32 0, i32 2
  %216 = load %dimension_descriptor*, %dimension_descriptor** %215, align 8
  %217 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %216, i32 0
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %212, %219
  %221 = mul i32 1, %220
  %222 = add i32 0, %221
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 3
  %224 = load i32, i32* %223, align 4
  %225 = mul i32 1, %224
  %226 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %216, i32 1
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = sub i32 %213, %228
  %230 = mul i32 %225, %229
  %231 = add i32 %222, %230
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 3
  %233 = load i32, i32* %232, align 4
  %234 = mul i32 %225, %233
  %235 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %216, i32 2
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = sub i32 %214, %237
  %239 = mul i32 %234, %238
  %240 = add i32 %231, %239
  %241 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = mul i32 %234, %242
  %244 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %245 = load %complex_4*, %complex_4** %244, align 8
  %246 = getelementptr inbounds %complex_4, %complex_4* %245, i32 %240
  %247 = load i32, i32* %i, align 4
  %248 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %249 = load %dimension_descriptor*, %dimension_descriptor** %248, align 8
  %250 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %249, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = sub i32 %247, %252
  %254 = mul i32 1, %253
  %255 = add i32 0, %254
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = mul i32 1, %257
  %259 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = getelementptr inbounds i32, i32* %260, i32 %255
  %262 = load i32, i32* %261, align 4
  %263 = sitofp i32 %262 to float
  %264 = load i32, i32* %j, align 4
  %265 = load i32, i32* %k, align 4
  %266 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %267 = load %dimension_descriptor*, %dimension_descriptor** %266, align 8
  %268 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %267, i32 0
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = sub i32 %264, %270
  %272 = mul i32 1, %271
  %273 = add i32 0, %272
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = mul i32 1, %275
  %277 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %267, i32 1
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 %265, %279
  %281 = mul i32 %276, %280
  %282 = add i32 %273, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 %276, %284
  %286 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %287 = load float*, float** %286, align 8
  %288 = getelementptr inbounds float, float* %287, i32 %282
  %289 = load float, float* %288, align 4
  %290 = fadd float %263, %289
  %291 = alloca %complex_4, align 8
  %292 = getelementptr %complex_4, %complex_4* %291, i32 0, i32 0
  %293 = getelementptr %complex_4, %complex_4* %291, i32 0, i32 1
  store float %290, float* %292, align 4
  store float 0.000000e+00, float* %293, align 4
  %294 = load %complex_4, %complex_4* %291, align 4
  store %complex_4 %294, %complex_4* %246, align 4
  %295 = load i32, i32* %i, align 4
  %296 = load i32, i32* %j, align 4
  %297 = load i32, i32* %k, align 4
  %298 = getelementptr %array, %array* %c, i32 0, i32 2
  %299 = load %dimension_descriptor*, %dimension_descriptor** %298, align 8
  %300 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %299, i32 0
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 %295, %302
  %304 = mul i32 1, %303
  %305 = add i32 0, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 1, %307
  %309 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %299, i32 1
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = sub i32 %296, %311
  %313 = mul i32 %308, %312
  %314 = add i32 %305, %313
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 3
  %316 = load i32, i32* %315, align 4
  %317 = mul i32 %308, %316
  %318 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %299, i32 2
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = sub i32 %297, %320
  %322 = mul i32 %317, %321
  %323 = add i32 %314, %322
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 3
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 %317, %325
  %327 = getelementptr %array, %array* %c, i32 0, i32 0
  %328 = load %complex_4*, %complex_4** %327, align 8
  %329 = getelementptr inbounds %complex_4, %complex_4* %328, i32 %323
  %330 = load i32, i32* %i, align 4
  %331 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %332 = load %dimension_descriptor*, %dimension_descriptor** %331, align 8
  %333 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %332, i32 0
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = sub i32 %330, %335
  %337 = mul i32 1, %336
  %338 = add i32 0, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 1, %340
  %342 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = getelementptr inbounds i32, i32* %343, i32 %338
  %345 = load i32, i32* %344, align 4
  %346 = sitofp i32 %345 to float
  %347 = load i32, i32* %j, align 4
  %348 = load i32, i32* %k, align 4
  %349 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %350 = load %dimension_descriptor*, %dimension_descriptor** %349, align 8
  %351 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %350, i32 0
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = sub i32 %347, %353
  %355 = mul i32 1, %354
  %356 = add i32 0, %355
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 3
  %358 = load i32, i32* %357, align 4
  %359 = mul i32 1, %358
  %360 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %350, i32 1
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = sub i32 %348, %362
  %364 = mul i32 %359, %363
  %365 = add i32 %356, %364
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = mul i32 %359, %367
  %369 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %370 = load float*, float** %369, align 8
  %371 = getelementptr inbounds float, float* %370, i32 %365
  %372 = load float, float* %371, align 4
  %373 = fadd float %346, %372
  %374 = alloca %complex_4, align 8
  %375 = getelementptr %complex_4, %complex_4* %374, i32 0, i32 0
  %376 = getelementptr %complex_4, %complex_4* %374, i32 0, i32 1
  store float %373, float* %375, align 4
  store float 0.000000e+00, float* %376, align 4
  %377 = load %complex_4, %complex_4* %374, align 4
  store %complex_4 %377, %complex_4* %329, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %378 = load %array, %array* %c_copy, align 8
  %379 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %380 = load %complex_4*, %complex_4** %379, align 8
  %381 = alloca i8*, align 8
  %382 = bitcast %complex_4* %380 to i8*
  store i8* %382, i8** %381, align 8
  %383 = load i8*, i8** %381, align 8
  call void (i8*, ...) @_lcompilers_free(i8* %383)
  %384 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 false, i1* %384, align 1
  %385 = load %array, %array* %c_copy, align 8
  %386 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  %387 = load i1, i1* %386, align 1
  br i1 %387, label %then, label %else

then:                                             ; preds = %loop.end6
  %388 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %389 = load %complex_4*, %complex_4** %388, align 8
  %390 = alloca i8*, align 8
  %391 = bitcast %complex_4* %389 to i8*
  store i8* %391, i8** %390, align 8
  %392 = load i8*, i8** %390, align 8
  call void (i8*, ...) @_lcompilers_free(i8* %392)
  %393 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 false, i1* %393, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lcompilers_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lcompilers_malloc(i32, ...)

declare void @_lcompilers_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.1, align 8
  %6 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 2, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  store i32 2, i32* %10, align 4
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array, align 8
  %12 = getelementptr %array, %array* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %18 = load i32, i32* %n, align 4
  %19 = add i32 %18, 5
  %20 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %21, align 1
  %22 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 5, i32* %26, align 4
  store i32 %19, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  %33 = mul i32 1, %32
  store i32 %32, i32* %28, align 4
  %34 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %35 = alloca i32, align 4
  %36 = mul i32 %33, 4
  store i32 %36, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = call i8* (i32, ...) @_lcompilers_malloc(i32 %37)
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %34, align 8
  %40 = load i32, i32* %n, align 4
  %41 = load i32, i32* %n, align 4
  %42 = mul i32 2, %41
  %43 = load i32, i32* %n, align 4
  %44 = load i32, i32* %n, align 4
  %45 = mul i32 3, %44
  %46 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %46, align 4
  %47 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %47, align 1
  %48 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  store i32 1, i32* %51, align 4
  store i32 %40, i32* %52, align 4
  store i32 %42, i32* %53, align 4
  %55 = load i32, i32* %53, align 4
  %56 = load i32, i32* %52, align 4
  %57 = sub i32 %55, %56
  %58 = add i32 %57, 1
  %59 = mul i32 1, %58
  store i32 %58, i32* %54, align 4
  %60 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  store i32 1, i32* %61, align 4
  store i32 %43, i32* %62, align 4
  store i32 %45, i32* %63, align 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %62, align 4
  %67 = sub i32 %65, %66
  %68 = add i32 %67, 1
  %69 = mul i32 %59, %68
  store i32 %68, i32* %64, align 4
  %70 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %71 = alloca i32, align 4
  %72 = mul i32 %69, 4
  store i32 %72, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = call i8* (i32, ...) @_lcompilers_malloc(i32 %73)
  %75 = bitcast i8* %74 to float*
  store float* %75, float** %70, align 8
  store i32 0, i32* %ierr, align 4
  %76 = load %array.0, %array.0* %a, align 8
  %77 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  %80 = load i32, i32* %79, align 4
  %81 = alloca i32, align 4
  store i32 1, i32* %81, align 4
  %82 = alloca i32, align 4
  store i32 0, i32* %82, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, %80
  br i1 %84, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %85 = load i32, i32* %82, align 4
  %86 = load i32, i32* %81, align 4
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 %85
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = mul i32 %86, %89
  store i32 %90, i32* %81, align 4
  %91 = add i32 %85, 1
  store i32 %91, i32* %82, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %92 = load i32, i32* %81, align 4
  %93 = load i32, i32* %n, align 4
  %94 = add i32 %93, 1
  %95 = icmp ne i32 %92, %94
  br i1 %95, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %96 = load %array.1, %array.1* %b, align 8
  %97 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %98 = load %dimension_descriptor*, %dimension_descriptor** %97, align 8
  %99 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  %100 = load i32, i32* %99, align 4
  %101 = alloca i32, align 4
  store i32 1, i32* %101, align 4
  %102 = alloca i32, align 4
  store i32 0, i32* %102, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %ifcont
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, %100
  br i1 %104, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %105 = load i32, i32* %102, align 4
  %106 = load i32, i32* %101, align 4
  %107 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %98, i32 %105
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %106, %109
  store i32 %110, i32* %101, align 4
  %111 = add i32 %105, 1
  store i32 %111, i32* %102, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %112 = load i32, i32* %101, align 4
  %113 = load i32, i32* %n, align 4
  %114 = add i32 %113, 1
  %115 = load i32, i32* %n, align 4
  %116 = mul i32 2, %115
  %117 = add i32 %116, 1
  %118 = mul i32 %114, %117
  %119 = icmp ne i32 %112, %118
  br i1 %119, label %then4, label %else5

then4:                                            ; preds = %loop.end3
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %loop.end3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %120 = load %array.0, %array.0* %a, align 8
  %121 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %122 = load %dimension_descriptor*, %dimension_descriptor** %121, align 8
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %125, 1
  store i32 %126, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %127 = load i32, i32* %i, align 4
  %128 = add i32 %127, 1
  %129 = load %array.0, %array.0* %a, align 8
  %130 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %131 = load %dimension_descriptor*, %dimension_descriptor** %130, align 8
  %132 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %131, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp sle i32 %128, %134
  br i1 %135, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %136 = load i32, i32* %i, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %i, align 4
  %138 = load i32, i32* %i, align 4
  %139 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %140 = load %dimension_descriptor*, %dimension_descriptor** %139, align 8
  %141 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %140, i32 0
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = sub i32 %138, %143
  %145 = mul i32 1, %144
  %146 = add i32 0, %145
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = mul i32 1, %148
  %150 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds i32, i32* %151, i32 %146
  %153 = load i32, i32* %i, align 4
  store i32 %153, i32* %152, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %154 = load %array.1, %array.1* %b, align 8
  %155 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %159, 1
  store i32 %160, i32* %i, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.end9
  %161 = load i32, i32* %i, align 4
  %162 = add i32 %161, 1
  %163 = load %array.1, %array.1* %b, align 8
  %164 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %165 = load %dimension_descriptor*, %dimension_descriptor** %164, align 8
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %165, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = icmp sle i32 %162, %168
  br i1 %169, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %170 = load i32, i32* %i, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %i, align 4
  %172 = load %array.1, %array.1* %b, align 8
  %173 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %174 = load %dimension_descriptor*, %dimension_descriptor** %173, align 8
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %174, i32 1
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub i32 %177, 1
  store i32 %178, i32* %j, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %179 = load i32, i32* %j, align 4
  %180 = add i32 %179, 1
  %181 = load %array.1, %array.1* %b, align 8
  %182 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 1
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = icmp sle i32 %180, %186
  br i1 %187, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %188 = load i32, i32* %j, align 4
  %189 = add i32 %188, 1
  store i32 %189, i32* %j, align 4
  %190 = load i32, i32* %i, align 4
  %191 = load i32, i32* %j, align 4
  %192 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %193 = load %dimension_descriptor*, %dimension_descriptor** %192, align 8
  %194 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 0
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 %190, %196
  %198 = mul i32 1, %197
  %199 = add i32 0, %198
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 1, %201
  %203 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 1
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = sub i32 %191, %205
  %207 = mul i32 %202, %206
  %208 = add i32 %199, %207
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 3
  %210 = load i32, i32* %209, align 4
  %211 = mul i32 %202, %210
  %212 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %213 = load float*, float** %212, align 8
  %214 = getelementptr inbounds float, float* %213, i32 %208
  %215 = load i32, i32* %i, align 4
  %216 = load i32, i32* %j, align 4
  %217 = add i32 %215, %216
  %218 = sitofp i32 %217 to float
  store float %218, float* %214, align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %219 = load %array, %array* %c, align 8
  %220 = getelementptr %array, %array* %c, i32 0, i32 3
  %221 = load i1, i1* %220, align 1
  br i1 %221, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  %222 = getelementptr %array, %array* %c, i32 0, i32 0
  %223 = load %complex_4*, %complex_4** %222, align 8
  %224 = alloca i8*, align 8
  %225 = bitcast %complex_4* %223 to i8*
  store i8* %225, i8** %224, align 8
  %226 = load i8*, i8** %224, align 8
  call void (i8*, ...) @_lcompilers_free(i8* %226)
  %227 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %227, align 1
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %228 = alloca %array.0, align 8
  %229 = alloca %array.1, align 8
  %230 = alloca %array, align 8
  call void @sum(%array.0* %a, %array.1* %b, %array* %c)
  %231 = load %array, %array* %c, align 8
  %232 = getelementptr %array, %array* %c, i32 0, i32 2
  %233 = load %dimension_descriptor*, %dimension_descriptor** %232, align 8
  %234 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %233, i32 0
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = icmp ne i32 %236, 5
  %238 = load %array, %array* %c, align 8
  %239 = getelementptr %array, %array* %c, i32 0, i32 2
  %240 = load %dimension_descriptor*, %dimension_descriptor** %239, align 8
  %241 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %240, i32 0
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %241, i32 0, i32 2
  %243 = load i32, i32* %242, align 4
  %244 = load i32, i32* %n, align 4
  %245 = add i32 %244, 5
  %246 = icmp ne i32 %243, %245
  %247 = or i1 %237, %246
  br i1 %247, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %248 = load %array, %array* %c, align 8
  %249 = getelementptr %array, %array* %c, i32 0, i32 2
  %250 = load %dimension_descriptor*, %dimension_descriptor** %249, align 8
  %251 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %250, i32 1
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = load i32, i32* %n, align 4
  %255 = icmp ne i32 %253, %254
  %256 = load %array, %array* %c, align 8
  %257 = getelementptr %array, %array* %c, i32 0, i32 2
  %258 = load %dimension_descriptor*, %dimension_descriptor** %257, align 8
  %259 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %258, i32 1
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = load i32, i32* %n, align 4
  %263 = mul i32 2, %262
  %264 = icmp ne i32 %261, %263
  %265 = or i1 %255, %264
  br i1 %265, label %then22, label %else23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  %266 = load %array, %array* %c, align 8
  %267 = getelementptr %array, %array* %c, i32 0, i32 2
  %268 = load %dimension_descriptor*, %dimension_descriptor** %267, align 8
  %269 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %268, i32 2
  %270 = getelementptr %dimension_descriptor, %dimension_descriptor* %269, i32 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = load i32, i32* %n, align 4
  %273 = icmp ne i32 %271, %272
  %274 = load %array, %array* %c, align 8
  %275 = getelementptr %array, %array* %c, i32 0, i32 2
  %276 = load %dimension_descriptor*, %dimension_descriptor** %275, align 8
  %277 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %276, i32 2
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 2
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %n, align 4
  %281 = mul i32 3, %280
  %282 = icmp ne i32 %279, %281
  %283 = or i1 %273, %282
  br i1 %283, label %then25, label %else26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %284 = load %array.0, %array.0* %a, align 8
  %285 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %286 = load %dimension_descriptor*, %dimension_descriptor** %285, align 8
  %287 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %286, i32 0
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %287, i32 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = sub i32 %289, 1
  store i32 %290, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %ifcont32, %ifcont27
  %291 = load i32, i32* %i, align 4
  %292 = add i32 %291, 1
  %293 = load %array.0, %array.0* %a, align 8
  %294 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %295 = load %dimension_descriptor*, %dimension_descriptor** %294, align 8
  %296 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %295, i32 0
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = icmp sle i32 %292, %298
  br i1 %299, label %loop.body29, label %loop.end33

loop.body29:                                      ; preds = %loop.head28
  %300 = load i32, i32* %i, align 4
  %301 = add i32 %300, 1
  store i32 %301, i32* %i, align 4
  %302 = load i32, i32* %i, align 4
  %303 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %304 = load %dimension_descriptor*, %dimension_descriptor** %303, align 8
  %305 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %304, i32 0
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = sub i32 %302, %307
  %309 = mul i32 1, %308
  %310 = add i32 0, %309
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 3
  %312 = load i32, i32* %311, align 4
  %313 = mul i32 1, %312
  %314 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %315 = load i32*, i32** %314, align 8
  %316 = getelementptr inbounds i32, i32* %315, i32 %310
  %317 = load i32, i32* %316, align 4
  %318 = load i32, i32* %i, align 4
  %319 = icmp ne i32 %317, %318
  br i1 %319, label %then30, label %else31

then30:                                           ; preds = %loop.body29
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %loop.body29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  br label %loop.head28

loop.end33:                                       ; preds = %loop.head28
  %320 = load %array.1, %array.1* %b, align 8
  %321 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %322 = load %dimension_descriptor*, %dimension_descriptor** %321, align 8
  %323 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %322, i32 0
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = sub i32 %325, 1
  store i32 %326, i32* %i, align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.end41, %loop.end33
  %327 = load i32, i32* %i, align 4
  %328 = add i32 %327, 1
  %329 = load %array.1, %array.1* %b, align 8
  %330 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %331 = load %dimension_descriptor*, %dimension_descriptor** %330, align 8
  %332 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %331, i32 0
  %333 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 2
  %334 = load i32, i32* %333, align 4
  %335 = icmp sle i32 %328, %334
  br i1 %335, label %loop.body35, label %loop.end42

loop.body35:                                      ; preds = %loop.head34
  %336 = load i32, i32* %i, align 4
  %337 = add i32 %336, 1
  store i32 %337, i32* %i, align 4
  %338 = load %array.1, %array.1* %b, align 8
  %339 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %340 = load %dimension_descriptor*, %dimension_descriptor** %339, align 8
  %341 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 1
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = sub i32 %343, 1
  store i32 %344, i32* %j, align 4
  br label %loop.head36

loop.head36:                                      ; preds = %ifcont40, %loop.body35
  %345 = load i32, i32* %j, align 4
  %346 = add i32 %345, 1
  %347 = load %array.1, %array.1* %b, align 8
  %348 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %349 = load %dimension_descriptor*, %dimension_descriptor** %348, align 8
  %350 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %349, i32 1
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = icmp sle i32 %346, %352
  br i1 %353, label %loop.body37, label %loop.end41

loop.body37:                                      ; preds = %loop.head36
  %354 = load i32, i32* %j, align 4
  %355 = add i32 %354, 1
  store i32 %355, i32* %j, align 4
  %356 = load i32, i32* %i, align 4
  %357 = load i32, i32* %j, align 4
  %358 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %359 = load %dimension_descriptor*, %dimension_descriptor** %358, align 8
  %360 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %359, i32 0
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = sub i32 %356, %362
  %364 = mul i32 1, %363
  %365 = add i32 0, %364
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = mul i32 1, %367
  %369 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %359, i32 1
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %357, %371
  %373 = mul i32 %368, %372
  %374 = add i32 %365, %373
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 3
  %376 = load i32, i32* %375, align 4
  %377 = mul i32 %368, %376
  %378 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %379 = load float*, float** %378, align 8
  %380 = getelementptr inbounds float, float* %379, i32 %374
  %381 = load float, float* %380, align 4
  %382 = load i32, i32* %i, align 4
  %383 = load i32, i32* %j, align 4
  %384 = add i32 %382, %383
  %385 = sitofp i32 %384 to float
  %386 = fcmp une float %381, %385
  br i1 %386, label %then38, label %else39

then38:                                           ; preds = %loop.body37
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont40

else39:                                           ; preds = %loop.body37
  br label %ifcont40

ifcont40:                                         ; preds = %else39, %then38
  br label %loop.head36

loop.end41:                                       ; preds = %loop.head36
  br label %loop.head34

loop.end42:                                       ; preds = %loop.head34
  %387 = load %array, %array* %c, align 8
  %388 = getelementptr %array, %array* %c, i32 0, i32 2
  %389 = load %dimension_descriptor*, %dimension_descriptor** %388, align 8
  %390 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %389, i32 0
  %391 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = sub i32 %392, 1
  store i32 %393, i32* %i, align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.end53, %loop.end42
  %394 = load i32, i32* %i, align 4
  %395 = add i32 %394, 1
  %396 = load %array, %array* %c, align 8
  %397 = getelementptr %array, %array* %c, i32 0, i32 2
  %398 = load %dimension_descriptor*, %dimension_descriptor** %397, align 8
  %399 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %398, i32 0
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %399, i32 0, i32 2
  %401 = load i32, i32* %400, align 4
  %402 = icmp sle i32 %395, %401
  br i1 %402, label %loop.body44, label %loop.end54

loop.body44:                                      ; preds = %loop.head43
  %403 = load i32, i32* %i, align 4
  %404 = add i32 %403, 1
  store i32 %404, i32* %i, align 4
  %405 = load %array, %array* %c, align 8
  %406 = getelementptr %array, %array* %c, i32 0, i32 2
  %407 = load %dimension_descriptor*, %dimension_descriptor** %406, align 8
  %408 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %407, i32 1
  %409 = getelementptr %dimension_descriptor, %dimension_descriptor* %408, i32 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = sub i32 %410, 1
  store i32 %411, i32* %j, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end52, %loop.body44
  %412 = load i32, i32* %j, align 4
  %413 = add i32 %412, 1
  %414 = load %array, %array* %c, align 8
  %415 = getelementptr %array, %array* %c, i32 0, i32 2
  %416 = load %dimension_descriptor*, %dimension_descriptor** %415, align 8
  %417 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %416, i32 1
  %418 = getelementptr %dimension_descriptor, %dimension_descriptor* %417, i32 0, i32 2
  %419 = load i32, i32* %418, align 4
  %420 = icmp sle i32 %413, %419
  br i1 %420, label %loop.body46, label %loop.end53

loop.body46:                                      ; preds = %loop.head45
  %421 = load i32, i32* %j, align 4
  %422 = add i32 %421, 1
  store i32 %422, i32* %j, align 4
  %423 = load %array, %array* %c, align 8
  %424 = getelementptr %array, %array* %c, i32 0, i32 2
  %425 = load %dimension_descriptor*, %dimension_descriptor** %424, align 8
  %426 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %425, i32 2
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = sub i32 %428, 1
  store i32 %429, i32* %k, align 4
  br label %loop.head47

loop.head47:                                      ; preds = %ifcont51, %loop.body46
  %430 = load i32, i32* %k, align 4
  %431 = add i32 %430, 1
  %432 = load %array, %array* %c, align 8
  %433 = getelementptr %array, %array* %c, i32 0, i32 2
  %434 = load %dimension_descriptor*, %dimension_descriptor** %433, align 8
  %435 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %434, i32 2
  %436 = getelementptr %dimension_descriptor, %dimension_descriptor* %435, i32 0, i32 2
  %437 = load i32, i32* %436, align 4
  %438 = icmp sle i32 %431, %437
  br i1 %438, label %loop.body48, label %loop.end52

loop.body48:                                      ; preds = %loop.head47
  %439 = load i32, i32* %k, align 4
  %440 = add i32 %439, 1
  store i32 %440, i32* %k, align 4
  %441 = load i32, i32* %i, align 4
  %442 = load i32, i32* %j, align 4
  %443 = load i32, i32* %k, align 4
  %444 = getelementptr %array, %array* %c, i32 0, i32 2
  %445 = load %dimension_descriptor*, %dimension_descriptor** %444, align 8
  %446 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %445, i32 0
  %447 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 1
  %448 = load i32, i32* %447, align 4
  %449 = sub i32 %441, %448
  %450 = mul i32 1, %449
  %451 = add i32 0, %450
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 3
  %453 = load i32, i32* %452, align 4
  %454 = mul i32 1, %453
  %455 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %445, i32 1
  %456 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = sub i32 %442, %457
  %459 = mul i32 %454, %458
  %460 = add i32 %451, %459
  %461 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 3
  %462 = load i32, i32* %461, align 4
  %463 = mul i32 %454, %462
  %464 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %445, i32 2
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = sub i32 %443, %466
  %468 = mul i32 %463, %467
  %469 = add i32 %460, %468
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 3
  %471 = load i32, i32* %470, align 4
  %472 = mul i32 %463, %471
  %473 = getelementptr %array, %array* %c, i32 0, i32 0
  %474 = load %complex_4*, %complex_4** %473, align 8
  %475 = getelementptr inbounds %complex_4, %complex_4* %474, i32 %469
  %476 = load %complex_4, %complex_4* %475, align 4
  %477 = load i32, i32* %i, align 4
  %478 = load i32, i32* %j, align 4
  %479 = add i32 %477, %478
  %480 = load i32, i32* %k, align 4
  %481 = add i32 %479, %480
  %482 = sitofp i32 %481 to float
  %483 = alloca %complex_4, align 8
  %484 = getelementptr %complex_4, %complex_4* %483, i32 0, i32 0
  %485 = getelementptr %complex_4, %complex_4* %483, i32 0, i32 1
  store float %482, float* %484, align 4
  store float 0.000000e+00, float* %485, align 4
  %486 = load %complex_4, %complex_4* %483, align 4
  %487 = alloca %complex_4, align 8
  store %complex_4 %476, %complex_4* %487, align 4
  %488 = getelementptr %complex_4, %complex_4* %487, i32 0, i32 0
  %489 = load float, float* %488, align 4
  %490 = alloca %complex_4, align 8
  store %complex_4 %486, %complex_4* %490, align 4
  %491 = getelementptr %complex_4, %complex_4* %490, i32 0, i32 0
  %492 = load float, float* %491, align 4
  %493 = alloca %complex_4, align 8
  store %complex_4 %476, %complex_4* %493, align 4
  %494 = getelementptr %complex_4, %complex_4* %493, i32 0, i32 1
  %495 = load float, float* %494, align 4
  %496 = alloca %complex_4, align 8
  store %complex_4 %486, %complex_4* %496, align 4
  %497 = getelementptr %complex_4, %complex_4* %496, i32 0, i32 1
  %498 = load float, float* %497, align 4
  %499 = fcmp une float %489, %492
  %500 = fcmp une float %495, %498
  %501 = and i1 %499, %500
  br i1 %501, label %then49, label %else50

then49:                                           ; preds = %loop.body48
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.body48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  br label %loop.head47

loop.end52:                                       ; preds = %loop.head47
  br label %loop.head45

loop.end53:                                       ; preds = %loop.head45
  br label %loop.head43

loop.end54:                                       ; preds = %loop.head43
  %502 = alloca %array, align 8
  %503 = call %complex_4 @reduce_sum(%array* %c)
  store %complex_4 %503, %complex_4* %r, align 4
  %504 = load %complex_4, %complex_4* %r, align 4
  %505 = alloca %complex_4, align 8
  %506 = getelementptr %complex_4, %complex_4* %505, i32 0, i32 0
  %507 = getelementptr %complex_4, %complex_4* %505, i32 0, i32 1
  store float 1.143450e+05, float* %506, align 4
  store float 0.000000e+00, float* %507, align 4
  %508 = load %complex_4, %complex_4* %505, align 4
  %509 = alloca %complex_4, align 8
  store %complex_4 %504, %complex_4* %509, align 4
  %510 = getelementptr %complex_4, %complex_4* %509, i32 0, i32 0
  %511 = load float, float* %510, align 4
  %512 = alloca %complex_4, align 8
  store %complex_4 %508, %complex_4* %512, align 4
  %513 = getelementptr %complex_4, %complex_4* %512, i32 0, i32 0
  %514 = load float, float* %513, align 4
  %515 = alloca %complex_4, align 8
  store %complex_4 %504, %complex_4* %515, align 4
  %516 = getelementptr %complex_4, %complex_4* %515, i32 0, i32 1
  %517 = load float, float* %516, align 4
  %518 = alloca %complex_4, align 8
  store %complex_4 %508, %complex_4* %518, align 4
  %519 = getelementptr %complex_4, %complex_4* %518, i32 0, i32 1
  %520 = load float, float* %519, align 4
  %521 = fcmp une float %511, %514
  %522 = fcmp une float %517, %520
  %523 = and i1 %521, %522
  br i1 %523, label %then55, label %else56

then55:                                           ; preds = %loop.end54
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %loop.end54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %524 = load %array.0, %array.0* %a, align 8
  %525 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %526 = load i1, i1* %525, align 1
  br i1 %526, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  %527 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %528 = load i32*, i32** %527, align 8
  %529 = alloca i8*, align 8
  %530 = bitcast i32* %528 to i8*
  store i8* %530, i8** %529, align 8
  %531 = load i8*, i8** %529, align 8
  call void (i8*, ...) @_lcompilers_free(i8* %531)
  %532 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %532, align 1
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  %533 = load %array.1, %array.1* %b, align 8
  %534 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %535 = load i1, i1* %534, align 1
  br i1 %535, label %then61, label %else62

then61:                                           ; preds = %ifcont60
  %536 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %537 = load float*, float** %536, align 8
  %538 = alloca i8*, align 8
  %539 = bitcast float* %537 to i8*
  store i8* %539, i8** %538, align 8
  %540 = load i8*, i8** %538, align 8
  call void (i8*, ...) @_lcompilers_free(i8* %540)
  %541 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %541, align 1
  br label %ifcont63

else62:                                           ; preds = %ifcont60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %542 = load %array, %array* %c, align 8
  %543 = getelementptr %array, %array* %c, i32 0, i32 3
  %544 = load i1, i1* %543, align 1
  br i1 %544, label %then64, label %else65

then64:                                           ; preds = %ifcont63
  %545 = getelementptr %array, %array* %c, i32 0, i32 0
  %546 = load %complex_4*, %complex_4** %545, align 8
  %547 = alloca i8*, align 8
  %548 = bitcast %complex_4* %546 to i8*
  store i8* %548, i8** %547, align 8
  %549 = load i8*, i8** %547, align 8
  call void (i8*, ...) @_lcompilers_free(i8* %549)
  %550 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %550, align 1
  br label %ifcont66

else65:                                           ; preds = %ifcont63
  br label %ifcont66

ifcont66:                                         ; preds = %else65, %then64
  ret i32 0
}

declare void @_lcompilers_printf(i8*, ...)

declare void @exit(i32)
