; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%complex_4 = type { float, float }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { float*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define %complex_4 @reduce_sum(%array.0* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = alloca %dimension_descriptor*, align 8
  %5 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %6 = load %dimension_descriptor*, %dimension_descriptor** %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %4, align 8
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %4, i32* %7)
  %9 = sub i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, 1
  %12 = alloca %dimension_descriptor*, align 8
  %13 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  store %dimension_descriptor* %14, %dimension_descriptor** %12, align 8
  %15 = alloca i32, align 4
  store i32 1, i32* %15, align 4
  %16 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %12, i32* %15)
  %17 = icmp sle i32 %11, %16
  br i1 %17, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 2, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = sub i32 %24, 1
  store i32 %25, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %26 = load i32, i32* %j, align 4
  %27 = add i32 %26, 1
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %30 = load %dimension_descriptor*, %dimension_descriptor** %29, align 8
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 2, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %28, i32* %31)
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %j, align 4
  %36 = alloca %dimension_descriptor*, align 8
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  store %dimension_descriptor* %38, %dimension_descriptor** %36, align 8
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %36, i32* %39)
  %41 = sub i32 %40, 1
  store i32 %41, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %42 = load i32, i32* %k, align 4
  %43 = add i32 %42, 1
  %44 = alloca %dimension_descriptor*, align 8
  %45 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %46 = load %dimension_descriptor*, %dimension_descriptor** %45, align 8
  store %dimension_descriptor* %46, %dimension_descriptor** %44, align 8
  %47 = alloca i32, align 4
  store i32 3, i32* %47, align 4
  %48 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %44, i32* %47)
  %49 = icmp sle i32 %43, %48
  br i1 %49, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %50 = load i32, i32* %k, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %k, align 4
  %52 = load %complex_4, %complex_4* %r, align 4
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* %k, align 4
  %56 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %57 = load %dimension_descriptor*, %dimension_descriptor** %56, align 8
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 0
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 %53, %60
  %62 = mul i32 1, %61
  %63 = add i32 0, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 1, %65
  %67 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 1
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %54, %69
  %71 = mul i32 %66, %70
  %72 = add i32 %63, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %66, %74
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 2
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %55, %78
  %80 = mul i32 %75, %79
  %81 = add i32 %72, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %75, %83
  %85 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %86 = load %complex_4*, %complex_4** %85, align 8
  %87 = getelementptr inbounds %complex_4, %complex_4* %86, i32 %81
  %88 = load %complex_4, %complex_4* %87, align 4
  %89 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %89, align 4
  %90 = alloca %complex_4, align 8
  store %complex_4 %88, %complex_4* %90, align 4
  %91 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %89, %complex_4* %90, %complex_4* %91)
  %92 = load %complex_4, %complex_4* %91, align 4
  store %complex_4 %92, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %93 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %93
}

define void @sum(%array* %a, %array.1* %b, %array.0* %c) {
.entry:
  %c_copy = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %1 = alloca %dimension_descriptor*, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 2
  %3 = load %dimension_descriptor*, %dimension_descriptor** %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %1, align 8
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1, i32* %4)
  %6 = alloca %dimension_descriptor*, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  store %dimension_descriptor* %8, %dimension_descriptor** %6, align 8
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %6, i32* %9)
  %11 = alloca %dimension_descriptor*, align 8
  %12 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  store %dimension_descriptor* %13, %dimension_descriptor** %11, align 8
  %14 = alloca i32, align 4
  store i32 1, i32* %14, align 4
  %15 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %11, i32* %14)
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %16, i32* %19)
  %21 = alloca %dimension_descriptor*, align 8
  %22 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %21, align 8
  %24 = alloca i32, align 4
  store i32 2, i32* %24, align 4
  %25 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %21, i32* %24)
  %26 = alloca %dimension_descriptor*, align 8
  %27 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  store %dimension_descriptor* %28, %dimension_descriptor** %26, align 8
  %29 = alloca i32, align 4
  store i32 2, i32* %29, align 4
  %30 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %26, i32* %29)
  %31 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 true, i1* %32, align 1
  %33 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %34 = alloca i32, align 4
  store i32 3, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = alloca %dimension_descriptor, i32 %35, align 8
  store %dimension_descriptor* %36, %dimension_descriptor** %33, align 8
  %37 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 4
  store i32 3, i32* %37, align 4
  %38 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 3
  store i32 1, i32* %40, align 4
  store i32 %5, i32* %41, align 4
  store i32 %10, i32* %42, align 4
  %44 = load i32, i32* %42, align 4
  %45 = load i32, i32* %41, align 4
  %46 = sub i32 %44, %45
  %47 = add i32 %46, 1
  %48 = mul i32 1, %47
  store i32 %47, i32* %43, align 4
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 1
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  store i32 1, i32* %50, align 4
  store i32 %15, i32* %51, align 4
  store i32 %20, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %51, align 4
  %56 = sub i32 %54, %55
  %57 = add i32 %56, 1
  %58 = mul i32 %48, %57
  store i32 %57, i32* %53, align 4
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 2
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 2
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 3
  store i32 1, i32* %60, align 4
  store i32 %25, i32* %61, align 4
  store i32 %30, i32* %62, align 4
  %64 = load i32, i32* %62, align 4
  %65 = load i32, i32* %61, align 4
  %66 = sub i32 %64, %65
  %67 = add i32 %66, 1
  %68 = mul i32 %58, %67
  store i32 %67, i32* %63, align 4
  %69 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %70 = alloca i32, align 4
  %71 = mul i32 %68, 8
  store i32 %71, i32* %70, align 4
  %72 = load i32, i32* %70, align 4
  %73 = call i8* (i32, ...) @_lfortran_malloc(i32 %72)
  %74 = bitcast i8* %73 to %complex_4*
  store %complex_4* %74, %complex_4** %69, align 8
  %75 = alloca %dimension_descriptor*, align 8
  %76 = getelementptr %array, %array* %a, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  store %dimension_descriptor* %77, %dimension_descriptor** %75, align 8
  %78 = alloca i32, align 4
  store i32 1, i32* %78, align 4
  %79 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %75, i32* %78)
  %80 = alloca %dimension_descriptor*, align 8
  %81 = getelementptr %array, %array* %a, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  store %dimension_descriptor* %82, %dimension_descriptor** %80, align 8
  %83 = alloca i32, align 4
  store i32 1, i32* %83, align 4
  %84 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %80, i32* %83)
  %85 = alloca %dimension_descriptor*, align 8
  %86 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %87 = load %dimension_descriptor*, %dimension_descriptor** %86, align 8
  store %dimension_descriptor* %87, %dimension_descriptor** %85, align 8
  %88 = alloca i32, align 4
  store i32 1, i32* %88, align 4
  %89 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %85, i32* %88)
  %90 = alloca %dimension_descriptor*, align 8
  %91 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %92 = load %dimension_descriptor*, %dimension_descriptor** %91, align 8
  store %dimension_descriptor* %92, %dimension_descriptor** %90, align 8
  %93 = alloca i32, align 4
  store i32 1, i32* %93, align 4
  %94 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %90, i32* %93)
  %95 = alloca %dimension_descriptor*, align 8
  %96 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %97 = load %dimension_descriptor*, %dimension_descriptor** %96, align 8
  store %dimension_descriptor* %97, %dimension_descriptor** %95, align 8
  %98 = alloca i32, align 4
  store i32 2, i32* %98, align 4
  %99 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %95, i32* %98)
  %100 = alloca %dimension_descriptor*, align 8
  %101 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %102 = load %dimension_descriptor*, %dimension_descriptor** %101, align 8
  store %dimension_descriptor* %102, %dimension_descriptor** %100, align 8
  %103 = alloca i32, align 4
  store i32 2, i32* %103, align 4
  %104 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %100, i32* %103)
  %105 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %105, align 4
  %106 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %106, align 1
  %107 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %108 = alloca i32, align 4
  store i32 3, i32* %108, align 4
  %109 = load i32, i32* %108, align 4
  %110 = alloca %dimension_descriptor, i32 %109, align 8
  store %dimension_descriptor* %110, %dimension_descriptor** %107, align 8
  %111 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %111, align 4
  %112 = load %dimension_descriptor*, %dimension_descriptor** %107, align 8
  %113 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %112, i32 0
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 2
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 3
  store i32 1, i32* %114, align 4
  store i32 %79, i32* %115, align 4
  store i32 %84, i32* %116, align 4
  %118 = load i32, i32* %116, align 4
  %119 = load i32, i32* %115, align 4
  %120 = sub i32 %118, %119
  %121 = add i32 %120, 1
  %122 = mul i32 1, %121
  store i32 %121, i32* %117, align 4
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %112, i32 1
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 2
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 3
  store i32 1, i32* %124, align 4
  store i32 %89, i32* %125, align 4
  store i32 %94, i32* %126, align 4
  %128 = load i32, i32* %126, align 4
  %129 = load i32, i32* %125, align 4
  %130 = sub i32 %128, %129
  %131 = add i32 %130, 1
  %132 = mul i32 %122, %131
  store i32 %131, i32* %127, align 4
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %112, i32 2
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 0
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 2
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  store i32 1, i32* %134, align 4
  store i32 %99, i32* %135, align 4
  store i32 %104, i32* %136, align 4
  %138 = load i32, i32* %136, align 4
  %139 = load i32, i32* %135, align 4
  %140 = sub i32 %138, %139
  %141 = add i32 %140, 1
  %142 = mul i32 %132, %141
  store i32 %141, i32* %137, align 4
  %143 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %144 = alloca i32, align 4
  %145 = mul i32 %142, 8
  store i32 %145, i32* %144, align 4
  %146 = load i32, i32* %144, align 4
  %147 = call i8* (i32, ...) @_lfortran_malloc(i32 %146)
  %148 = bitcast i8* %147 to %complex_4*
  store %complex_4* %148, %complex_4** %143, align 8
  %149 = alloca %dimension_descriptor*, align 8
  %150 = getelementptr %array, %array* %a, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  store %dimension_descriptor* %151, %dimension_descriptor** %149, align 8
  %152 = alloca i32, align 4
  store i32 1, i32* %152, align 4
  %153 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %149, i32* %152)
  %154 = sub i32 %153, 1
  store i32 %154, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %155 = load i32, i32* %i, align 4
  %156 = add i32 %155, 1
  %157 = alloca %dimension_descriptor*, align 8
  %158 = getelementptr %array, %array* %a, i32 0, i32 2
  %159 = load %dimension_descriptor*, %dimension_descriptor** %158, align 8
  store %dimension_descriptor* %159, %dimension_descriptor** %157, align 8
  %160 = alloca i32, align 4
  store i32 1, i32* %160, align 4
  %161 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %157, i32* %160)
  %162 = icmp sle i32 %156, %161
  br i1 %162, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %163 = load i32, i32* %i, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %i, align 4
  %165 = alloca %dimension_descriptor*, align 8
  %166 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %167 = load %dimension_descriptor*, %dimension_descriptor** %166, align 8
  store %dimension_descriptor* %167, %dimension_descriptor** %165, align 8
  %168 = alloca i32, align 4
  store i32 1, i32* %168, align 4
  %169 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %165, i32* %168)
  %170 = sub i32 %169, 1
  store i32 %170, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %171 = load i32, i32* %j, align 4
  %172 = add i32 %171, 1
  %173 = alloca %dimension_descriptor*, align 8
  %174 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %175 = load %dimension_descriptor*, %dimension_descriptor** %174, align 8
  store %dimension_descriptor* %175, %dimension_descriptor** %173, align 8
  %176 = alloca i32, align 4
  store i32 1, i32* %176, align 4
  %177 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %173, i32* %176)
  %178 = icmp sle i32 %172, %177
  br i1 %178, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %179 = load i32, i32* %j, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %j, align 4
  %181 = alloca %dimension_descriptor*, align 8
  %182 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  store %dimension_descriptor* %183, %dimension_descriptor** %181, align 8
  %184 = alloca i32, align 4
  store i32 2, i32* %184, align 4
  %185 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %181, i32* %184)
  %186 = sub i32 %185, 1
  store i32 %186, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %187 = load i32, i32* %k, align 4
  %188 = add i32 %187, 1
  %189 = alloca %dimension_descriptor*, align 8
  %190 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %191 = load %dimension_descriptor*, %dimension_descriptor** %190, align 8
  store %dimension_descriptor* %191, %dimension_descriptor** %189, align 8
  %192 = alloca i32, align 4
  store i32 2, i32* %192, align 4
  %193 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %189, i32* %192)
  %194 = icmp sle i32 %188, %193
  br i1 %194, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %195 = load i32, i32* %k, align 4
  %196 = add i32 %195, 1
  store i32 %196, i32* %k, align 4
  %197 = load i32, i32* %i, align 4
  %198 = load i32, i32* %j, align 4
  %199 = load i32, i32* %k, align 4
  %200 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %201 = load %dimension_descriptor*, %dimension_descriptor** %200, align 8
  %202 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %201, i32 0
  %203 = getelementptr %dimension_descriptor, %dimension_descriptor* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = sub i32 %197, %204
  %206 = mul i32 1, %205
  %207 = add i32 0, %206
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %202, i32 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = mul i32 1, %209
  %211 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %201, i32 1
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 %198, %213
  %215 = mul i32 %210, %214
  %216 = add i32 %207, %215
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 3
  %218 = load i32, i32* %217, align 4
  %219 = mul i32 %210, %218
  %220 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %201, i32 2
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = sub i32 %199, %222
  %224 = mul i32 %219, %223
  %225 = add i32 %216, %224
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = mul i32 %219, %227
  %229 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %230 = load %complex_4*, %complex_4** %229, align 8
  %231 = getelementptr inbounds %complex_4, %complex_4* %230, i32 %225
  %232 = load i32, i32* %i, align 4
  %233 = getelementptr %array, %array* %a, i32 0, i32 2
  %234 = load %dimension_descriptor*, %dimension_descriptor** %233, align 8
  %235 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %234, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = sub i32 %232, %237
  %239 = mul i32 1, %238
  %240 = add i32 0, %239
  %241 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = mul i32 1, %242
  %244 = getelementptr %array, %array* %a, i32 0, i32 0
  %245 = load i32*, i32** %244, align 8
  %246 = getelementptr inbounds i32, i32* %245, i32 %240
  %247 = load i32, i32* %246, align 4
  %248 = sitofp i32 %247 to float
  %249 = load i32, i32* %j, align 4
  %250 = load i32, i32* %k, align 4
  %251 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %252 = load %dimension_descriptor*, %dimension_descriptor** %251, align 8
  %253 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %252, i32 0
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %253, i32 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = sub i32 %249, %255
  %257 = mul i32 1, %256
  %258 = add i32 0, %257
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %253, i32 0, i32 3
  %260 = load i32, i32* %259, align 4
  %261 = mul i32 1, %260
  %262 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %252, i32 1
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = sub i32 %250, %264
  %266 = mul i32 %261, %265
  %267 = add i32 %258, %266
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 3
  %269 = load i32, i32* %268, align 4
  %270 = mul i32 %261, %269
  %271 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %272 = load float*, float** %271, align 8
  %273 = getelementptr inbounds float, float* %272, i32 %267
  %274 = load float, float* %273, align 4
  %275 = fadd float %248, %274
  %276 = alloca %complex_4, align 8
  %277 = getelementptr %complex_4, %complex_4* %276, i32 0, i32 0
  %278 = getelementptr %complex_4, %complex_4* %276, i32 0, i32 1
  store float %275, float* %277, align 4
  store float 0.000000e+00, float* %278, align 4
  %279 = load %complex_4, %complex_4* %276, align 4
  store %complex_4 %279, %complex_4* %231, align 4
  %280 = load i32, i32* %i, align 4
  %281 = load i32, i32* %j, align 4
  %282 = load i32, i32* %k, align 4
  %283 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %284 = load %dimension_descriptor*, %dimension_descriptor** %283, align 8
  %285 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %284, i32 0
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 %280, %287
  %289 = mul i32 1, %288
  %290 = add i32 0, %289
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 3
  %292 = load i32, i32* %291, align 4
  %293 = mul i32 1, %292
  %294 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %284, i32 1
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 %281, %296
  %298 = mul i32 %293, %297
  %299 = add i32 %290, %298
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 3
  %301 = load i32, i32* %300, align 4
  %302 = mul i32 %293, %301
  %303 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %284, i32 2
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 %282, %305
  %307 = mul i32 %302, %306
  %308 = add i32 %299, %307
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = mul i32 %302, %310
  %312 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %313 = load %complex_4*, %complex_4** %312, align 8
  %314 = getelementptr inbounds %complex_4, %complex_4* %313, i32 %308
  %315 = load i32, i32* %i, align 4
  %316 = getelementptr %array, %array* %a, i32 0, i32 2
  %317 = load %dimension_descriptor*, %dimension_descriptor** %316, align 8
  %318 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %317, i32 0
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = sub i32 %315, %320
  %322 = mul i32 1, %321
  %323 = add i32 0, %322
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 3
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 1, %325
  %327 = getelementptr %array, %array* %a, i32 0, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds i32, i32* %328, i32 %323
  %330 = load i32, i32* %329, align 4
  %331 = sitofp i32 %330 to float
  %332 = load i32, i32* %j, align 4
  %333 = load i32, i32* %k, align 4
  %334 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %335 = load %dimension_descriptor*, %dimension_descriptor** %334, align 8
  %336 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %335, i32 0
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 %332, %338
  %340 = mul i32 1, %339
  %341 = add i32 0, %340
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = mul i32 1, %343
  %345 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %335, i32 1
  %346 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = sub i32 %333, %347
  %349 = mul i32 %344, %348
  %350 = add i32 %341, %349
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = mul i32 %344, %352
  %354 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %355 = load float*, float** %354, align 8
  %356 = getelementptr inbounds float, float* %355, i32 %350
  %357 = load float, float* %356, align 4
  %358 = fadd float %331, %357
  %359 = alloca %complex_4, align 8
  %360 = getelementptr %complex_4, %complex_4* %359, i32 0, i32 0
  %361 = getelementptr %complex_4, %complex_4* %359, i32 0, i32 1
  store float %358, float* %360, align 4
  store float 0.000000e+00, float* %361, align 4
  %362 = load %complex_4, %complex_4* %359, align 4
  store %complex_4 %362, %complex_4* %314, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %363 = load %array.0, %array.0* %c_copy, align 8
  %364 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %365 = load %complex_4*, %complex_4** %364, align 8
  %366 = alloca i8*, align 8
  %367 = bitcast %complex_4* %365 to i8*
  store i8* %367, i8** %366, align 8
  %368 = load i8*, i8** %366, align 8
  call void (i8*, ...) @_lfortran_free(i8* %368)
  %369 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %369, align 1
  %370 = load %array.0, %array.0* %c_copy, align 8
  %371 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  %372 = load i1, i1* %371, align 1
  br i1 %372, label %then, label %else

then:                                             ; preds = %loop.end6
  %373 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %374 = load %complex_4*, %complex_4** %373, align 8
  %375 = alloca i8*, align 8
  %376 = bitcast %complex_4* %374 to i8*
  store i8* %376, i8** %375, align 8
  %377 = load i8*, i8** %375, align 8
  call void (i8*, ...) @_lfortran_free(i8* %377)
  %378 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %378, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %b = alloca %array.1, align 8
  %1 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %1, align 1
  %c = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %2, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %3 = load i32, i32* %n, align 4
  %4 = add i32 %3, 5
  %5 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %6, align 1
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = alloca i32, align 4
  store i32 1, i32* %8, align 4
  %9 = load i32, i32* %8, align 4
  %10 = alloca %dimension_descriptor, i32 %9, align 8
  store %dimension_descriptor* %10, %dimension_descriptor** %7, align 8
  %11 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %11, align 4
  %12 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 5, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  %22 = mul i32 1, %21
  store i32 %21, i32* %17, align 4
  %23 = getelementptr %array, %array* %a, i32 0, i32 0
  %24 = alloca i32, align 4
  %25 = mul i32 %22, 4
  store i32 %25, i32* %24, align 4
  %26 = load i32, i32* %24, align 4
  %27 = call i8* (i32, ...) @_lfortran_malloc(i32 %26)
  %28 = bitcast i8* %27 to i32*
  store i32* %28, i32** %23, align 8
  %29 = load i32, i32* %n, align 4
  %30 = load i32, i32* %n, align 4
  %31 = mul i32 2, %30
  %32 = load i32, i32* %n, align 4
  %33 = load i32, i32* %n, align 4
  %34 = mul i32 3, %33
  %35 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %35, align 4
  %36 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %36, align 1
  %37 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %38 = alloca i32, align 4
  store i32 2, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = alloca %dimension_descriptor, i32 %39, align 8
  store %dimension_descriptor* %40, %dimension_descriptor** %37, align 8
  %41 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  store i32 2, i32* %41, align 4
  %42 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  store i32 1, i32* %44, align 4
  store i32 %29, i32* %45, align 4
  store i32 %31, i32* %46, align 4
  %48 = load i32, i32* %46, align 4
  %49 = load i32, i32* %45, align 4
  %50 = sub i32 %48, %49
  %51 = add i32 %50, 1
  %52 = mul i32 1, %51
  store i32 %51, i32* %47, align 4
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  store i32 1, i32* %54, align 4
  store i32 %32, i32* %55, align 4
  store i32 %34, i32* %56, align 4
  %58 = load i32, i32* %56, align 4
  %59 = load i32, i32* %55, align 4
  %60 = sub i32 %58, %59
  %61 = add i32 %60, 1
  %62 = mul i32 %52, %61
  store i32 %61, i32* %57, align 4
  %63 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %64 = alloca i32, align 4
  %65 = mul i32 %62, 4
  store i32 %65, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = call i8* (i32, ...) @_lfortran_malloc(i32 %66)
  %68 = bitcast i8* %67 to float*
  store float* %68, float** %63, align 8
  store i32 0, i32* %ierr, align 4
  %69 = alloca %size_arg, align 8
  %70 = getelementptr %array, %array* %a, i32 0, i32 2
  %71 = load %dimension_descriptor*, %dimension_descriptor** %70, align 8
  %72 = getelementptr %size_arg, %size_arg* %69, i32 0, i32 0
  store %dimension_descriptor* %71, %dimension_descriptor** %72, align 8
  %73 = getelementptr %size_arg, %size_arg* %69, i32 0, i32 1
  %74 = getelementptr %array, %array* %a, i32 0, i32 4
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %69, i32* %76, i32* %77)
  %79 = load i32, i32* %n, align 4
  %80 = add i32 %79, 1
  %81 = icmp ne i32 %78, %80
  br i1 %81, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %82 = alloca %size_arg, align 8
  %83 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %84 = load %dimension_descriptor*, %dimension_descriptor** %83, align 8
  %85 = getelementptr %size_arg, %size_arg* %82, i32 0, i32 0
  store %dimension_descriptor* %84, %dimension_descriptor** %85, align 8
  %86 = getelementptr %size_arg, %size_arg* %82, i32 0, i32 1
  %87 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 4
  %89 = alloca i32, align 4
  %90 = alloca i32, align 4
  %91 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %82, i32* %89, i32* %90)
  %92 = load i32, i32* %n, align 4
  %93 = add i32 %92, 1
  %94 = load i32, i32* %n, align 4
  %95 = mul i32 2, %94
  %96 = add i32 %95, 1
  %97 = mul i32 %93, %96
  %98 = icmp ne i32 %91, %97
  br i1 %98, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %99 = alloca %dimension_descriptor*, align 8
  %100 = getelementptr %array, %array* %a, i32 0, i32 2
  %101 = load %dimension_descriptor*, %dimension_descriptor** %100, align 8
  store %dimension_descriptor* %101, %dimension_descriptor** %99, align 8
  %102 = alloca i32, align 4
  store i32 1, i32* %102, align 4
  %103 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %99, i32* %102)
  %104 = sub i32 %103, 1
  store i32 %104, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %ifcont3
  %105 = load i32, i32* %i, align 4
  %106 = add i32 %105, 1
  %107 = alloca %dimension_descriptor*, align 8
  %108 = getelementptr %array, %array* %a, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  store %dimension_descriptor* %109, %dimension_descriptor** %107, align 8
  %110 = alloca i32, align 4
  store i32 1, i32* %110, align 4
  %111 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %107, i32* %110)
  %112 = icmp sle i32 %106, %111
  br i1 %112, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %113 = load i32, i32* %i, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %i, align 4
  %115 = load i32, i32* %i, align 4
  %116 = getelementptr %array, %array* %a, i32 0, i32 2
  %117 = load %dimension_descriptor*, %dimension_descriptor** %116, align 8
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sub i32 %115, %120
  %122 = mul i32 1, %121
  %123 = add i32 0, %122
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 1, %125
  %127 = getelementptr %array, %array* %a, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = getelementptr inbounds i32, i32* %128, i32 %123
  %130 = load i32, i32* %i, align 4
  store i32 %130, i32* %129, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %131 = alloca %dimension_descriptor*, align 8
  %132 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %133 = load %dimension_descriptor*, %dimension_descriptor** %132, align 8
  store %dimension_descriptor* %133, %dimension_descriptor** %131, align 8
  %134 = alloca i32, align 4
  store i32 1, i32* %134, align 4
  %135 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %131, i32* %134)
  %136 = sub i32 %135, 1
  store i32 %136, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.end8, %loop.end
  %137 = load i32, i32* %i, align 4
  %138 = add i32 %137, 1
  %139 = alloca %dimension_descriptor*, align 8
  %140 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %141 = load %dimension_descriptor*, %dimension_descriptor** %140, align 8
  store %dimension_descriptor* %141, %dimension_descriptor** %139, align 8
  %142 = alloca i32, align 4
  store i32 1, i32* %142, align 4
  %143 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %139, i32* %142)
  %144 = icmp sle i32 %138, %143
  br i1 %144, label %loop.body5, label %loop.end9

loop.body5:                                       ; preds = %loop.head4
  %145 = load i32, i32* %i, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %i, align 4
  %147 = alloca %dimension_descriptor*, align 8
  %148 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %149 = load %dimension_descriptor*, %dimension_descriptor** %148, align 8
  store %dimension_descriptor* %149, %dimension_descriptor** %147, align 8
  %150 = alloca i32, align 4
  store i32 2, i32* %150, align 4
  %151 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %147, i32* %150)
  %152 = sub i32 %151, 1
  store i32 %152, i32* %j, align 4
  br label %loop.head6

loop.head6:                                       ; preds = %loop.body7, %loop.body5
  %153 = load i32, i32* %j, align 4
  %154 = add i32 %153, 1
  %155 = alloca %dimension_descriptor*, align 8
  %156 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %157 = load %dimension_descriptor*, %dimension_descriptor** %156, align 8
  store %dimension_descriptor* %157, %dimension_descriptor** %155, align 8
  %158 = alloca i32, align 4
  store i32 2, i32* %158, align 4
  %159 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %155, i32* %158)
  %160 = icmp sle i32 %154, %159
  br i1 %160, label %loop.body7, label %loop.end8

loop.body7:                                       ; preds = %loop.head6
  %161 = load i32, i32* %j, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %j, align 4
  %163 = load i32, i32* %i, align 4
  %164 = load i32, i32* %j, align 4
  %165 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %166 = load %dimension_descriptor*, %dimension_descriptor** %165, align 8
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 %163, %169
  %171 = mul i32 1, %170
  %172 = add i32 0, %171
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = mul i32 1, %174
  %176 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 1
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = sub i32 %164, %178
  %180 = mul i32 %175, %179
  %181 = add i32 %172, %180
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 %175, %183
  %185 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %186 = load float*, float** %185, align 8
  %187 = getelementptr inbounds float, float* %186, i32 %181
  %188 = load i32, i32* %i, align 4
  %189 = load i32, i32* %j, align 4
  %190 = add i32 %188, %189
  %191 = sitofp i32 %190 to float
  store float %191, float* %187, align 4
  br label %loop.head6

loop.end8:                                        ; preds = %loop.head6
  br label %loop.head4

loop.end9:                                        ; preds = %loop.head4
  %192 = load %array.0, %array.0* %c, align 8
  %193 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %194 = load i1, i1* %193, align 1
  br i1 %194, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  %195 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %196 = load %complex_4*, %complex_4** %195, align 8
  %197 = alloca i8*, align 8
  %198 = bitcast %complex_4* %196 to i8*
  store i8* %198, i8** %197, align 8
  %199 = load i8*, i8** %197, align 8
  call void (i8*, ...) @_lfortran_free(i8* %199)
  %200 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %200, align 1
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %201 = alloca %array, align 8
  %202 = alloca %array.1, align 8
  %203 = alloca %array.0, align 8
  call void @sum(%array* %a, %array.1* %b, %array.0* %c)
  %204 = alloca %dimension_descriptor*, align 8
  %205 = getelementptr %array, %array* %a, i32 0, i32 2
  %206 = load %dimension_descriptor*, %dimension_descriptor** %205, align 8
  store %dimension_descriptor* %206, %dimension_descriptor** %204, align 8
  %207 = alloca i32, align 4
  store i32 1, i32* %207, align 4
  %208 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %204, i32* %207)
  %209 = sub i32 %208, 1
  store i32 %209, i32* %i, align 4
  br label %loop.head13

loop.head13:                                      ; preds = %ifcont17, %ifcont12
  %210 = load i32, i32* %i, align 4
  %211 = add i32 %210, 1
  %212 = alloca %dimension_descriptor*, align 8
  %213 = getelementptr %array, %array* %a, i32 0, i32 2
  %214 = load %dimension_descriptor*, %dimension_descriptor** %213, align 8
  store %dimension_descriptor* %214, %dimension_descriptor** %212, align 8
  %215 = alloca i32, align 4
  store i32 1, i32* %215, align 4
  %216 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %212, i32* %215)
  %217 = icmp sle i32 %211, %216
  br i1 %217, label %loop.body14, label %loop.end18

loop.body14:                                      ; preds = %loop.head13
  %218 = load i32, i32* %i, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %i, align 4
  %220 = load i32, i32* %i, align 4
  %221 = getelementptr %array, %array* %a, i32 0, i32 2
  %222 = load %dimension_descriptor*, %dimension_descriptor** %221, align 8
  %223 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %222, i32 0
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 %220, %225
  %227 = mul i32 1, %226
  %228 = add i32 0, %227
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = mul i32 1, %230
  %232 = getelementptr %array, %array* %a, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = getelementptr inbounds i32, i32* %233, i32 %228
  %235 = load i32, i32* %234, align 4
  %236 = load i32, i32* %i, align 4
  %237 = icmp ne i32 %235, %236
  br i1 %237, label %then15, label %else16

then15:                                           ; preds = %loop.body14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %loop.body14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  br label %loop.head13

loop.end18:                                       ; preds = %loop.head13
  %238 = alloca %dimension_descriptor*, align 8
  %239 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %240 = load %dimension_descriptor*, %dimension_descriptor** %239, align 8
  store %dimension_descriptor* %240, %dimension_descriptor** %238, align 8
  %241 = alloca i32, align 4
  store i32 1, i32* %241, align 4
  %242 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %238, i32* %241)
  %243 = sub i32 %242, 1
  store i32 %243, i32* %i, align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.end26, %loop.end18
  %244 = load i32, i32* %i, align 4
  %245 = add i32 %244, 1
  %246 = alloca %dimension_descriptor*, align 8
  %247 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %248 = load %dimension_descriptor*, %dimension_descriptor** %247, align 8
  store %dimension_descriptor* %248, %dimension_descriptor** %246, align 8
  %249 = alloca i32, align 4
  store i32 1, i32* %249, align 4
  %250 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %246, i32* %249)
  %251 = icmp sle i32 %245, %250
  br i1 %251, label %loop.body20, label %loop.end27

loop.body20:                                      ; preds = %loop.head19
  %252 = load i32, i32* %i, align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %i, align 4
  %254 = alloca %dimension_descriptor*, align 8
  %255 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %256 = load %dimension_descriptor*, %dimension_descriptor** %255, align 8
  store %dimension_descriptor* %256, %dimension_descriptor** %254, align 8
  %257 = alloca i32, align 4
  store i32 2, i32* %257, align 4
  %258 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %254, i32* %257)
  %259 = sub i32 %258, 1
  store i32 %259, i32* %j, align 4
  br label %loop.head21

loop.head21:                                      ; preds = %ifcont25, %loop.body20
  %260 = load i32, i32* %j, align 4
  %261 = add i32 %260, 1
  %262 = alloca %dimension_descriptor*, align 8
  %263 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %264 = load %dimension_descriptor*, %dimension_descriptor** %263, align 8
  store %dimension_descriptor* %264, %dimension_descriptor** %262, align 8
  %265 = alloca i32, align 4
  store i32 2, i32* %265, align 4
  %266 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %262, i32* %265)
  %267 = icmp sle i32 %261, %266
  br i1 %267, label %loop.body22, label %loop.end26

loop.body22:                                      ; preds = %loop.head21
  %268 = load i32, i32* %j, align 4
  %269 = add i32 %268, 1
  store i32 %269, i32* %j, align 4
  %270 = load i32, i32* %i, align 4
  %271 = load i32, i32* %j, align 4
  %272 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %273 = load %dimension_descriptor*, %dimension_descriptor** %272, align 8
  %274 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %273, i32 0
  %275 = getelementptr %dimension_descriptor, %dimension_descriptor* %274, i32 0, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = sub i32 %270, %276
  %278 = mul i32 1, %277
  %279 = add i32 0, %278
  %280 = getelementptr %dimension_descriptor, %dimension_descriptor* %274, i32 0, i32 3
  %281 = load i32, i32* %280, align 4
  %282 = mul i32 1, %281
  %283 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %273, i32 1
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = sub i32 %271, %285
  %287 = mul i32 %282, %286
  %288 = add i32 %279, %287
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 3
  %290 = load i32, i32* %289, align 4
  %291 = mul i32 %282, %290
  %292 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %293 = load float*, float** %292, align 8
  %294 = getelementptr inbounds float, float* %293, i32 %288
  %295 = load float, float* %294, align 4
  %296 = load i32, i32* %i, align 4
  %297 = load i32, i32* %j, align 4
  %298 = add i32 %296, %297
  %299 = sitofp i32 %298 to float
  %300 = fcmp une float %295, %299
  br i1 %300, label %then23, label %else24

then23:                                           ; preds = %loop.body22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont25

else24:                                           ; preds = %loop.body22
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  br label %loop.head21

loop.end26:                                       ; preds = %loop.head21
  br label %loop.head19

loop.end27:                                       ; preds = %loop.head19
  %301 = alloca %dimension_descriptor*, align 8
  %302 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %303 = load %dimension_descriptor*, %dimension_descriptor** %302, align 8
  store %dimension_descriptor* %303, %dimension_descriptor** %301, align 8
  %304 = alloca i32, align 4
  store i32 1, i32* %304, align 4
  %305 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %301, i32* %304)
  %306 = sub i32 %305, 1
  store i32 %306, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end38, %loop.end27
  %307 = load i32, i32* %i, align 4
  %308 = add i32 %307, 1
  %309 = alloca %dimension_descriptor*, align 8
  %310 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %311 = load %dimension_descriptor*, %dimension_descriptor** %310, align 8
  store %dimension_descriptor* %311, %dimension_descriptor** %309, align 8
  %312 = alloca i32, align 4
  store i32 1, i32* %312, align 4
  %313 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %309, i32* %312)
  %314 = icmp sle i32 %308, %313
  br i1 %314, label %loop.body29, label %loop.end39

loop.body29:                                      ; preds = %loop.head28
  %315 = load i32, i32* %i, align 4
  %316 = add i32 %315, 1
  store i32 %316, i32* %i, align 4
  %317 = alloca %dimension_descriptor*, align 8
  %318 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %319 = load %dimension_descriptor*, %dimension_descriptor** %318, align 8
  store %dimension_descriptor* %319, %dimension_descriptor** %317, align 8
  %320 = alloca i32, align 4
  store i32 2, i32* %320, align 4
  %321 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %317, i32* %320)
  %322 = sub i32 %321, 1
  store i32 %322, i32* %j, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end37, %loop.body29
  %323 = load i32, i32* %j, align 4
  %324 = add i32 %323, 1
  %325 = alloca %dimension_descriptor*, align 8
  %326 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %327 = load %dimension_descriptor*, %dimension_descriptor** %326, align 8
  store %dimension_descriptor* %327, %dimension_descriptor** %325, align 8
  %328 = alloca i32, align 4
  store i32 2, i32* %328, align 4
  %329 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %325, i32* %328)
  %330 = icmp sle i32 %324, %329
  br i1 %330, label %loop.body31, label %loop.end38

loop.body31:                                      ; preds = %loop.head30
  %331 = load i32, i32* %j, align 4
  %332 = add i32 %331, 1
  store i32 %332, i32* %j, align 4
  %333 = alloca %dimension_descriptor*, align 8
  %334 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %335 = load %dimension_descriptor*, %dimension_descriptor** %334, align 8
  store %dimension_descriptor* %335, %dimension_descriptor** %333, align 8
  %336 = alloca i32, align 4
  store i32 3, i32* %336, align 4
  %337 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %333, i32* %336)
  %338 = sub i32 %337, 1
  store i32 %338, i32* %k, align 4
  br label %loop.head32

loop.head32:                                      ; preds = %ifcont36, %loop.body31
  %339 = load i32, i32* %k, align 4
  %340 = add i32 %339, 1
  %341 = alloca %dimension_descriptor*, align 8
  %342 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %343 = load %dimension_descriptor*, %dimension_descriptor** %342, align 8
  store %dimension_descriptor* %343, %dimension_descriptor** %341, align 8
  %344 = alloca i32, align 4
  store i32 3, i32* %344, align 4
  %345 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %341, i32* %344)
  %346 = icmp sle i32 %340, %345
  br i1 %346, label %loop.body33, label %loop.end37

loop.body33:                                      ; preds = %loop.head32
  %347 = load i32, i32* %k, align 4
  %348 = add i32 %347, 1
  store i32 %348, i32* %k, align 4
  %349 = load i32, i32* %i, align 4
  %350 = load i32, i32* %j, align 4
  %351 = load i32, i32* %k, align 4
  %352 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %353 = load %dimension_descriptor*, %dimension_descriptor** %352, align 8
  %354 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %353, i32 0
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = sub i32 %349, %356
  %358 = mul i32 1, %357
  %359 = add i32 0, %358
  %360 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 3
  %361 = load i32, i32* %360, align 4
  %362 = mul i32 1, %361
  %363 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %353, i32 1
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = sub i32 %350, %365
  %367 = mul i32 %362, %366
  %368 = add i32 %359, %367
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 3
  %370 = load i32, i32* %369, align 4
  %371 = mul i32 %362, %370
  %372 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %353, i32 2
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sub i32 %351, %374
  %376 = mul i32 %371, %375
  %377 = add i32 %368, %376
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = mul i32 %371, %379
  %381 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %382 = load %complex_4*, %complex_4** %381, align 8
  %383 = getelementptr inbounds %complex_4, %complex_4* %382, i32 %377
  %384 = load %complex_4, %complex_4* %383, align 4
  %385 = load i32, i32* %i, align 4
  %386 = load i32, i32* %j, align 4
  %387 = add i32 %385, %386
  %388 = load i32, i32* %k, align 4
  %389 = add i32 %387, %388
  %390 = sitofp i32 %389 to float
  %391 = alloca %complex_4, align 8
  %392 = getelementptr %complex_4, %complex_4* %391, i32 0, i32 0
  %393 = getelementptr %complex_4, %complex_4* %391, i32 0, i32 1
  store float %390, float* %392, align 4
  store float 0.000000e+00, float* %393, align 4
  %394 = load %complex_4, %complex_4* %391, align 4
  %395 = alloca %complex_4, align 8
  store %complex_4 %384, %complex_4* %395, align 4
  %396 = getelementptr %complex_4, %complex_4* %395, i32 0, i32 0
  %397 = load float, float* %396, align 4
  %398 = alloca %complex_4, align 8
  store %complex_4 %394, %complex_4* %398, align 4
  %399 = getelementptr %complex_4, %complex_4* %398, i32 0, i32 0
  %400 = load float, float* %399, align 4
  %401 = alloca %complex_4, align 8
  store %complex_4 %384, %complex_4* %401, align 4
  %402 = getelementptr %complex_4, %complex_4* %401, i32 0, i32 1
  %403 = load float, float* %402, align 4
  %404 = alloca %complex_4, align 8
  store %complex_4 %394, %complex_4* %404, align 4
  %405 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 1
  %406 = load float, float* %405, align 4
  %407 = fcmp une float %397, %400
  %408 = fcmp une float %403, %406
  %409 = and i1 %407, %408
  br i1 %409, label %then34, label %else35

then34:                                           ; preds = %loop.body33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.body33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  br label %loop.head32

loop.end37:                                       ; preds = %loop.head32
  br label %loop.head30

loop.end38:                                       ; preds = %loop.head30
  br label %loop.head28

loop.end39:                                       ; preds = %loop.head28
  %410 = alloca %array.0, align 8
  %411 = call %complex_4 @reduce_sum(%array.0* %c)
  store %complex_4 %411, %complex_4* %r, align 4
  %412 = load %complex_4, %complex_4* %r, align 4
  %413 = alloca %complex_4, align 8
  %414 = getelementptr %complex_4, %complex_4* %413, i32 0, i32 0
  %415 = getelementptr %complex_4, %complex_4* %413, i32 0, i32 1
  store float 1.143450e+05, float* %414, align 4
  store float 0.000000e+00, float* %415, align 4
  %416 = load %complex_4, %complex_4* %413, align 4
  %417 = alloca %complex_4, align 8
  store %complex_4 %412, %complex_4* %417, align 4
  %418 = getelementptr %complex_4, %complex_4* %417, i32 0, i32 0
  %419 = load float, float* %418, align 4
  %420 = alloca %complex_4, align 8
  store %complex_4 %416, %complex_4* %420, align 4
  %421 = getelementptr %complex_4, %complex_4* %420, i32 0, i32 0
  %422 = load float, float* %421, align 4
  %423 = alloca %complex_4, align 8
  store %complex_4 %412, %complex_4* %423, align 4
  %424 = getelementptr %complex_4, %complex_4* %423, i32 0, i32 1
  %425 = load float, float* %424, align 4
  %426 = alloca %complex_4, align 8
  store %complex_4 %416, %complex_4* %426, align 4
  %427 = getelementptr %complex_4, %complex_4* %426, i32 0, i32 1
  %428 = load float, float* %427, align 4
  %429 = fcmp une float %419, %422
  %430 = fcmp une float %425, %428
  %431 = and i1 %429, %430
  br i1 %431, label %then40, label %else41

then40:                                           ; preds = %loop.end39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %loop.end39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  %432 = load %array, %array* %a, align 8
  %433 = getelementptr %array, %array* %a, i32 0, i32 3
  %434 = load i1, i1* %433, align 1
  br i1 %434, label %then43, label %else44

then43:                                           ; preds = %ifcont42
  %435 = getelementptr %array, %array* %a, i32 0, i32 0
  %436 = load i32*, i32** %435, align 8
  %437 = alloca i8*, align 8
  %438 = bitcast i32* %436 to i8*
  store i8* %438, i8** %437, align 8
  %439 = load i8*, i8** %437, align 8
  call void (i8*, ...) @_lfortran_free(i8* %439)
  %440 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %440, align 1
  br label %ifcont45

else44:                                           ; preds = %ifcont42
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %441 = load %array.1, %array.1* %b, align 8
  %442 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %443 = load i1, i1* %442, align 1
  br i1 %443, label %then46, label %else47

then46:                                           ; preds = %ifcont45
  %444 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %445 = load float*, float** %444, align 8
  %446 = alloca i8*, align 8
  %447 = bitcast float* %445 to i8*
  store i8* %447, i8** %446, align 8
  %448 = load i8*, i8** %446, align 8
  call void (i8*, ...) @_lfortran_free(i8* %448)
  %449 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %449, align 1
  br label %ifcont48

else47:                                           ; preds = %ifcont45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %450 = load %array.0, %array.0* %c, align 8
  %451 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %452 = load i1, i1* %451, align 1
  br i1 %452, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  %453 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %454 = load %complex_4*, %complex_4** %453, align 8
  %455 = alloca i8*, align 8
  %456 = bitcast %complex_4* %454 to i8*
  store i8* %456, i8** %455, align 8
  %457 = load i8*, i8** %455, align 8
  call void (i8*, ...) @_lfortran_free(i8* %457)
  %458 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %458, align 1
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
