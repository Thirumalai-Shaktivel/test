; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

define void @f(%array* %c) {
.entry:
  %0 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %1, align 1
  %2 = getelementptr %array, %array* %c, i32 0, i32 2
  %3 = load %dimension_descriptor*, %dimension_descriptor** %2, align 8
  %4 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 0
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 1
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 2
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 3
  store i32 1, i32* %5, align 4
  store i32 1, i32* %6, align 4
  store i32 3, i32* %7, align 4
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %6, align 4
  %11 = sub i32 %9, %10
  %12 = add i32 %11, 1
  %13 = mul i32 1, %12
  store i32 %12, i32* %8, align 4
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 3
  store i32 1, i32* %15, align 4
  store i32 1, i32* %16, align 4
  store i32 3, i32* %17, align 4
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %16, align 4
  %21 = sub i32 %19, %20
  %22 = add i32 %21, 1
  %23 = mul i32 %13, %22
  store i32 %22, i32* %18, align 4
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 2
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 3, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  %33 = mul i32 %23, %32
  store i32 %32, i32* %28, align 4
  %34 = getelementptr %array, %array* %c, i32 0, i32 0
  %35 = alloca i32, align 4
  %36 = mul i32 %33, 4
  store i32 %36, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = call i8* (i32, ...) @_lfortran_malloc(i32 %37)
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %34, align 8
  %40 = getelementptr %array, %array* %c, i32 0, i32 2
  %41 = load %dimension_descriptor*, %dimension_descriptor** %40, align 8
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 1, %44
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 1, %49
  %51 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sub i32 1, %53
  %55 = mul i32 %50, %54
  %56 = add i32 %47, %55
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = mul i32 %50, %58
  %60 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 2
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 1, %62
  %64 = mul i32 %59, %63
  %65 = add i32 %56, %64
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %59, %67
  %69 = getelementptr %array, %array* %c, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds i32, i32* %70, i32 %65
  store i32 99, i32* %71, align 4
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define i32 @g(%array* %x) {
.entry:
  %r = alloca i32, align 4
  %0 = getelementptr %array, %array* %x, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 1, %4
  %6 = mul i32 1, %5
  %7 = add i32 0, %6
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 1, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = mul i32 %10, %14
  %16 = add i32 %7, %15
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = mul i32 %10, %18
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 1, %22
  %24 = mul i32 %19, %23
  %25 = add i32 %16, %24
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = mul i32 %19, %27
  %29 = getelementptr %array, %array* %x, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 %25
  %32 = load i32, i32* %31, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %32)
  %33 = getelementptr %array, %array* %x, i32 0, i32 3
  %34 = load i1, i1* %33, align 1
  br i1 %34, label %then, label %else

then:                                             ; preds = %.entry
  %35 = getelementptr %array, %array* %x, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = alloca i8*, align 8
  %38 = bitcast i32* %36 to i8*
  store i8* %38, i8** %37, align 8
  %39 = load i8*, i8** %37, align 8
  call void (i8*, ...) @_lfortran_free(i8* %39)
  %40 = getelementptr %array, %array* %x, i32 0, i32 3
  store i1 false, i1* %40, align 1
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %41 = alloca %array, align 8
  call void @f(%array* %x)
  %42 = getelementptr %array, %array* %x, i32 0, i32 2
  %43 = load %dimension_descriptor*, %dimension_descriptor** %42, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 1, %46
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = mul i32 1, %51
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 1, %55
  %57 = mul i32 %52, %56
  %58 = add i32 %49, %57
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = mul i32 %52, %60
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 2
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 1, %64
  %66 = mul i32 %61, %65
  %67 = add i32 %58, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %61, %69
  %71 = getelementptr %array, %array* %x, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = getelementptr inbounds i32, i32* %72, i32 %67
  %74 = load i32, i32* %73, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), i32 %74)
  %75 = getelementptr %array, %array* %x, i32 0, i32 2
  %76 = load %dimension_descriptor*, %dimension_descriptor** %75, align 8
  %77 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 1, %79
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 1, %84
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 1
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sub i32 1, %88
  %90 = mul i32 %85, %89
  %91 = add i32 %82, %90
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = mul i32 %85, %93
  %95 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 2
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 1, %97
  %99 = mul i32 %94, %98
  %100 = add i32 %91, %99
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = mul i32 %94, %102
  %104 = getelementptr %array, %array* %x, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i32 %100
  store i32 8, i32* %106, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont
  %107 = load i32, i32* %r, align 4
  ret i32 %107
}

define void @h(%array* %c) {
.entry:
  %0 = getelementptr %array, %array* %c, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 1, %4
  %6 = mul i32 1, %5
  %7 = add i32 0, %6
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = mul i32 1, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = mul i32 %10, %14
  %16 = add i32 %7, %15
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = mul i32 %10, %18
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 1, %22
  %24 = mul i32 %19, %23
  %25 = add i32 %16, %24
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = mul i32 %19, %27
  %29 = getelementptr %array, %array* %c, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 %25
  %32 = load i32, i32* %31, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i32 %32)
  %33 = getelementptr %array, %array* %c, i32 0, i32 3
  %34 = load i1, i1* %33, align 1
  br i1 %34, label %then, label %else

then:                                             ; preds = %.entry
  %35 = getelementptr %array, %array* %c, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = alloca i8*, align 8
  %38 = bitcast i32* %36 to i8*
  store i8* %38, i8** %37, align 8
  %39 = load i8*, i8** %37, align 8
  call void (i8*, ...) @_lfortran_free(i8* %39)
  %40 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %40, align 1
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %41 = alloca %array, align 8
  call void @f(%array* %c)
  %42 = getelementptr %array, %array* %c, i32 0, i32 2
  %43 = load %dimension_descriptor*, %dimension_descriptor** %42, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 1, %46
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = mul i32 1, %51
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 1, %55
  %57 = mul i32 %52, %56
  %58 = add i32 %49, %57
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = mul i32 %52, %60
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 2
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 1, %64
  %66 = mul i32 %61, %65
  %67 = add i32 %58, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %61, %69
  %71 = getelementptr %array, %array* %c, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = getelementptr inbounds i32, i32* %72, i32 %67
  %74 = load i32, i32* %73, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @3, i32 0, i32 0), i32 %74)
  %75 = getelementptr %array, %array* %c, i32 0, i32 2
  %76 = load %dimension_descriptor*, %dimension_descriptor** %75, align 8
  %77 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 1, %79
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 1, %84
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 1
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sub i32 1, %88
  %90 = mul i32 %85, %89
  %91 = add i32 %82, %90
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = mul i32 %85, %93
  %95 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 2
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 1, %97
  %99 = mul i32 %94, %98
  %100 = add i32 %91, %99
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = mul i32 %94, %102
  %104 = getelementptr %array, %array* %c, i32 0, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i32 %100
  store i32 8, i32* %106, align 4
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %c = alloca %array, align 8
  %0 = getelementptr %array, %array* %c, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  store i32 1, i32* %stat, align 4
  %6 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %7, align 1
  %8 = getelementptr %array, %array* %c, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 0
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 3
  store i32 1, i32* %11, align 4
  store i32 1, i32* %12, align 4
  store i32 3, i32* %13, align 4
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %12, align 4
  %17 = sub i32 %15, %16
  %18 = add i32 %17, 1
  %19 = mul i32 1, %18
  store i32 %18, i32* %14, align 4
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 1
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 3, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  %29 = mul i32 %19, %28
  store i32 %28, i32* %24, align 4
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 1
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 2
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 3
  store i32 1, i32* %31, align 4
  store i32 1, i32* %32, align 4
  store i32 3, i32* %33, align 4
  %35 = load i32, i32* %33, align 4
  %36 = load i32, i32* %32, align 4
  %37 = sub i32 %35, %36
  %38 = add i32 %37, 1
  %39 = mul i32 %29, %38
  store i32 %38, i32* %34, align 4
  %40 = getelementptr %array, %array* %c, i32 0, i32 0
  %41 = alloca i32, align 4
  %42 = mul i32 %39, 4
  store i32 %42, i32* %41, align 4
  %43 = load i32, i32* %41, align 4
  %44 = call i8* (i32, ...) @_lfortran_malloc(i32 %43)
  %45 = bitcast i8* %44 to i32*
  store i32* %45, i32** %40, align 8
  store i32 0, i32* %stat, align 4
  %46 = load i32, i32* %stat, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %48 = getelementptr %array, %array* %c, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 1, %52
  %54 = mul i32 1, %53
  %55 = add i32 0, %54
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 1, %57
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 1
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 1, %61
  %63 = mul i32 %58, %62
  %64 = add i32 %55, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 %58, %66
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 2
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 1, %70
  %72 = mul i32 %67, %71
  %73 = add i32 %64, %72
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = mul i32 %67, %75
  %77 = getelementptr %array, %array* %c, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = getelementptr inbounds i32, i32* %78, i32 %73
  store i32 3, i32* %79, align 4
  %80 = getelementptr %array, %array* %c, i32 0, i32 3
  %81 = load i1, i1* %80, align 1
  br i1 %81, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %82 = getelementptr %array, %array* %c, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = alloca i8*, align 8
  %85 = bitcast i32* %83 to i8*
  store i8* %85, i8** %84, align 8
  %86 = load i8*, i8** %84, align 8
  call void (i8*, ...) @_lfortran_free(i8* %86)
  %87 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %87, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %88 = alloca %array, align 8
  call void @h(%array* %c)
  %89 = alloca %array, align 8
  %90 = call i32 @g(%array* %c)
  store i32 %90, i32* %r, align 4
  %91 = getelementptr %array, %array* %c, i32 0, i32 2
  %92 = load %dimension_descriptor*, %dimension_descriptor** %91, align 8
  %93 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sub i32 1, %95
  %97 = mul i32 1, %96
  %98 = add i32 0, %97
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 1, %100
  %102 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 1
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = sub i32 1, %104
  %106 = mul i32 %101, %105
  %107 = add i32 %98, %106
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %101, %109
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 2
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 1, %113
  %115 = mul i32 %110, %114
  %116 = add i32 %107, %115
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = mul i32 %110, %118
  %120 = getelementptr %array, %array* %c, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i32, i32* %121, i32 %116
  %123 = load i32, i32* %122, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i32 %123)
  %124 = getelementptr %array, %array* %c, i32 0, i32 3
  %125 = load i1, i1* %124, align 1
  br i1 %125, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  %126 = getelementptr %array, %array* %c, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = alloca i8*, align 8
  %129 = bitcast i32* %127 to i8*
  store i8* %129, i8** %128, align 8
  %130 = load i8*, i8** %128, align 8
  call void (i8*, ...) @_lfortran_free(i8* %130)
  %131 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %131, align 1
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  ret i32 0
}

declare void @exit(i32)
