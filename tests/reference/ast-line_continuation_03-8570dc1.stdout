(TranslationUnit [(Program line_continuation_03 [] [(ImplicitNone [])] [(Declaration (AttrType TypeInteger [] ()) [] [(i [] [] () None ())]) (Declaration (AttrType TypeInteger [] ()) [] [(k [] [] () None ())])] [(= 0 i 5) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! One can continue strings also by treating them as tokens:") (EmptyLines) (EmptyLines)])) (Print 0 () [(Str "some string &
    &is continued")] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! Unless the & is at the end of the line, it can be used as a regular") (EmptyLines) (Comment "! character in a string:") (EmptyLines) (EmptyLines)])) (Print 0 () [(Str "some string can contain & as a regular character &
    &is continued")] (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [(Str "Even here: &&
    && <- there will be two &")] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! One can put arbitrary comments and empty lines after & that will be skipped:") (EmptyLines) (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! In strings the comment cannot be after the first &, but it can be on") (EmptyLines) (Comment "! subsequent lines:") (EmptyLines) (EmptyLines)])) (Print 0 () [(Str "some string &
! comment 2

! comment 3

    &is continued")] (TriviaNode [] [(EmptyLines) (EmptyLines)]))] [])])
