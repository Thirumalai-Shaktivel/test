(TranslationUnit [(Program line_continuation_03 (TriviaNode [(EmptyLines) (Comment "! The same as line_continuation_02, but we do use & to split a token")] []) [] [(ImplicitNone [] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! Here are the rules for & based on the ยง 6.3.2.4 ("Free form statement") (Comment "! continuation") in Fortran 2018 standard.") (EmptyLines) (Comment "! The & character in a comment has no effect") (EmptyLines) (Comment "! The & character can be used to continue a line like this:") (EmptyLines)]))] [(Declaration (AttrType TypeInteger [] () None) [] [(i [] [] () None ())] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! If it is used between tokens, then one can, but does not have to put another &") (Comment "! on the next line:") (EmptyLines)])) (Declaration (AttrType TypeInteger [] () None) [] [(k [] [] () None ())] (TriviaNode [] [(EmptyLines) (EmptyLines) (EmptyLines)]))] [(= 0 i 5 (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! One can continue strings also by treating them as tokens:") (EmptyLines)])) (Print 0 () [(String "some string is continued")] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! Unless the & is at the end of the line, it can be used as a regular") (Comment "! character in a string:") (EmptyLines)])) (Print 0 () [(String "some string can contain & as a regular character is continued")] (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [(String "Even here: && <- there will be two &")] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! One can put arbitrary comments and empty lines after & that will be skipped:") (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines)])) (Print 0 () [i] (TriviaNode [] [(EmptyLines) (EmptyLines) (Comment "! In strings the comment cannot be after the first &, but it can be on") (Comment "! subsequent lines:") (EmptyLines)])) (Print 0 () [(String "some string is continued")] (TriviaNode [] [(EmptyLines) (EmptyLines)]))] [])])
