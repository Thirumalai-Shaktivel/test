(TranslationUnit (SymbolTable 1 {f: (Function (SymbolTable 2 {f1: (Variable 2 f1 Local () () Default (Integer 4 []) BindC Public Required .false.), f2: (Variable 2 f2 Local () () Default (Integer 4 []) BindC Public Required .false.), f3: (Variable 2 f3 Local () () Default (Integer 4 []) BindC Public Required .false.), f4: (Variable 2 f4 Local () () Default (Integer 4 []) BindC Public Required .false.), f5: (Variable 2 f5 Local () () Default (Integer 4 []) BindC Public Required .false.), f6: (Variable 2 f6 Local () () Default (Integer 4 []) BindC Public Required .false.), f7: (Variable 2 f7 Local () () Default (Integer 4 []) BindC Public Required .false.), f8: (Variable 2 f8 ReturnVar () () Default (Integer 4 []) BindC Public Required .false.)}) f [] [(= (Var 2 f1) (ConstantInteger 5 (Integer 4 []))) (= (Var 2 f2) (BinOp (ConstantInteger 5 (Integer 4 [])) Add (ConstantInteger 3 (Integer 4 [])) (Integer 4 []) (ConstantInteger 8 (Integer 4 [])))) (= (Var 2 f3) (BinOp (BinOp (ConstantInteger 5 (Integer 4 [])) Add (ConstantInteger 3 (Integer 4 [])) (Integer 4 []) (ConstantInteger 8 (Integer 4 []))) Mul (ConstantInteger 2 (Integer 4 [])) (Integer 4 []) (ConstantInteger 16 (Integer 4 [])))) (= (Var 2 f4) (BinOp (ConstantInteger 5 (Integer 4 [])) Add (BinOp (ConstantInteger 3 (Integer 4 [])) Mul (ConstantInteger 2 (Integer 4 [])) (Integer 4 []) (ConstantInteger 6 (Integer 4 []))) (Integer 4 []) (ConstantInteger 11 (Integer 4 [])))) (= (Var 2 f5) (BinOp (ConstantInteger 5 (Integer 4 [])) Sub (ConstantInteger 3 (Integer 4 [])) (Integer 4 []) (ConstantInteger 2 (Integer 4 [])))) (= (Var 2 f6) (BinOp (ConstantInteger 4 (Integer 4 [])) Pow (ConstantInteger 3 (Integer 4 [])) (Integer 4 []) (ConstantInteger 64 (Integer 4 [])))) (= (Var 2 f7) (BinOp (ConstantInteger 5 (Integer 4 [])) Add (ConstantInteger 3 (Integer 4 [])) (Integer 4 []) (ConstantInteger 8 (Integer 4 [])))) (= (Var 2 f8) (BinOp (ConstantInteger 5 (Integer 4 [])) Add (ConstantInteger 3 (Integer 4 [])) (Integer 4 []) (ConstantInteger 8 (Integer 4 []))))] (Var 2 f8) BindC Public Implementation ())}) [])
