; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i64 @main() {
.entry:
  %b = alloca i1, align 1
  %x = alloca i64, align 8
  store i64 2, i64* %x, align 4
  %0 = load i64, i64* %x, align 4
  %1 = icmp ne i64 %0, 2
  store i1 %1, i1* %b, align 1
  %2 = load i1, i1* %b, align 1
  br i1 %2, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i64 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i64 [ 1, %then ], [ 2, %else ]
  %3 = load i64, i64* %x, align 4
  %4 = icmp eq i64 %3, 2
  store i1 %4, i1* %b, align 1
  %5 = load i1, i1* %b, align 1
  %6 = xor i1 %5, true
  br i1 %6, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i64 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i64 [ 1, %then1 ], [ 2, %else2 ]
  %7 = load i64, i64* %x, align 4
  %8 = icmp eq i64 %7, 2
  %9 = xor i1 %8, true
  store i1 %9, i1* %b, align 1
  %10 = load i1, i1* %b, align 1
  br i1 %10, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i64 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i64 [ 1, %then5 ], [ 2, %else6 ]
  %11 = load i64, i64* %x, align 4
  %12 = icmp eq i64 %11, 2
  store i1 %12, i1* %b, align 1
  %13 = load i1, i1* %b, align 1
  %14 = xor i1 %13, true
  store i1 %14, i1* %b, align 1
  %15 = load i1, i1* %b, align 1
  br i1 %15, label %then9, label %else10

then9:                                            ; preds = %ifcont7
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i64 1)
  br label %ifcont11

else10:                                           ; preds = %ifcont7
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  %iftmp12 = phi i64 [ 1, %then9 ], [ 2, %else10 ]
  ret i64 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i64)

