; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%array_call = type { %complex_4*, i32, [3 x %dimension_descriptor] }
%complex_4 = type { float, float }
%array.1 = type { [4 x i32], i32, [3 x %dimension_descriptor] }
%array.2 = type { [4 x %complex_4], i32, [3 x %dimension_descriptor] }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

declare i32 @__module_lfortran_intrinsic_array_abs(%array*)

declare i1 @__module_lfortran_intrinsic_array_allocated(%array*)

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare i32 @__module_lfortran_intrinsic_array_max(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_maxval(%array*)

declare i32 @__module_lfortran_intrinsic_array_min(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_minval(%array*)

declare i32 @__module_lfortran_intrinsic_array_real(%array*, i32*)

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

declare i32 @__module_lfortran_intrinsic_array_sum(%array*)

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define void @check(%array_call* %c, i32* %op_code) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %left = alloca float, align 4
  %right = alloca float, align 4
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end17, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end18

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end17

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont15, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %op_code, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %then, label %else6

then:                                             ; preds = %loop.body4
  %50 = load i32, i32* %i, align 4
  %51 = load i32, i32* %j, align 4
  %52 = add i32 %50, %51
  %53 = load i32, i32* %k, align 4
  %54 = add i32 %52, %53
  %55 = sitofp i32 %54 to float
  store float %55, float* %left, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32, i32* %j, align 4
  %58 = mul i32 %56, %57
  %59 = load i32, i32* %k, align 4
  %60 = mul i32 %58, %59
  %61 = sitofp i32 %60 to float
  store float %61, float* %right, align 4
  %62 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %63 = load i32, i32* %i, align 4
  %64 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %62, i32 0, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %63, %66
  %68 = mul i32 1, %67
  %69 = add i32 0, %68
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = mul i32 1, %71
  %73 = load i32, i32* %j, align 4
  %74 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %62, i32 0, i32 1
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %73, %76
  %78 = mul i32 %72, %77
  %79 = add i32 %69, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 %72, %81
  %83 = load i32, i32* %k, align 4
  %84 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %62, i32 0, i32 2
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 %83, %86
  %88 = mul i32 %82, %87
  %89 = add i32 %79, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %82, %91
  %93 = getelementptr %array_call, %array_call* %c, i32 0, i32 0
  %94 = load %complex_4*, %complex_4** %93, align 8
  %95 = getelementptr inbounds %complex_4, %complex_4* %94, i32 %89
  %96 = load %complex_4, %complex_4* %95, align 4
  %97 = load float, float* %left, align 4
  %98 = alloca %complex_4, align 8
  %99 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 0
  %100 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 1
  store float %97, float* %99, align 4
  store float 0.000000e+00, float* %100, align 4
  %101 = load %complex_4, %complex_4* %98, align 4
  %102 = load float, float* %right, align 4
  %103 = alloca %complex_4, align 8
  %104 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 0
  %105 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 1
  store float %102, float* %104, align 4
  store float 0.000000e+00, float* %105, align 4
  %106 = load %complex_4, %complex_4* %103, align 4
  %107 = alloca %complex_4, align 8
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 0
  %109 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  store float 0.000000e+00, float* %108, align 4
  store float 1.000000e+00, float* %109, align 4
  %110 = load %complex_4, %complex_4* %107, align 4
  %111 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %111, align 4
  %112 = alloca %complex_4, align 8
  store %complex_4 %110, %complex_4* %112, align 4
  %113 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %111, %complex_4* %112, %complex_4* %113)
  %114 = load %complex_4, %complex_4* %113, align 4
  %115 = alloca %complex_4, align 8
  store %complex_4 %101, %complex_4* %115, align 4
  %116 = alloca %complex_4, align 8
  store %complex_4 %114, %complex_4* %116, align 4
  %117 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %115, %complex_4* %116, %complex_4* %117)
  %118 = load %complex_4, %complex_4* %117, align 4
  %119 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %119, align 4
  %120 = getelementptr %complex_4, %complex_4* %119, i32 0, i32 0
  %121 = load float, float* %120, align 4
  %122 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %122, align 4
  %123 = getelementptr %complex_4, %complex_4* %122, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %125, align 4
  %126 = getelementptr %complex_4, %complex_4* %125, i32 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %128, align 4
  %129 = getelementptr %complex_4, %complex_4* %128, i32 0, i32 1
  %130 = load float, float* %129, align 4
  %131 = fcmp une float %121, %124
  %132 = fcmp une float %127, %130
  %133 = and i1 %131, %132
  br i1 %133, label %then5, label %else

then5:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then5
  %iftmp = phi i32 [ 1, %then5 ], [ 2, %else ]
  br label %ifcont15

else6:                                            ; preds = %loop.body4
  %134 = load i32, i32* %op_code, align 4
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %then7, label %else12

then7:                                            ; preds = %else6
  %136 = load i32, i32* %i, align 4
  %137 = load i32, i32* %j, align 4
  %138 = add i32 %136, %137
  %139 = load i32, i32* %k, align 4
  %140 = add i32 %138, %139
  %141 = sitofp i32 %140 to float
  store float %141, float* %left, align 4
  %142 = load i32, i32* %i, align 4
  %143 = load i32, i32* %j, align 4
  %144 = mul i32 %142, %143
  %145 = load i32, i32* %k, align 4
  %146 = mul i32 %144, %145
  %147 = sitofp i32 %146 to float
  store float %147, float* %right, align 4
  %148 = getelementptr %array_call, %array_call* %c, i32 0, i32 2
  %149 = load i32, i32* %i, align 4
  %150 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %148, i32 0, i32 0
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = sub i32 %149, %152
  %154 = mul i32 1, %153
  %155 = add i32 0, %154
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = mul i32 1, %157
  %159 = load i32, i32* %j, align 4
  %160 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %148, i32 0, i32 1
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = sub i32 %159, %162
  %164 = mul i32 %158, %163
  %165 = add i32 %155, %164
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = mul i32 %158, %167
  %169 = load i32, i32* %k, align 4
  %170 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %148, i32 0, i32 2
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %169, %172
  %174 = mul i32 %168, %173
  %175 = add i32 %165, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 %168, %177
  %179 = getelementptr %array_call, %array_call* %c, i32 0, i32 0
  %180 = load %complex_4*, %complex_4** %179, align 8
  %181 = getelementptr inbounds %complex_4, %complex_4* %180, i32 %175
  %182 = load %complex_4, %complex_4* %181, align 4
  %183 = load float, float* %left, align 4
  %184 = fsub float 0.000000e+00, %183
  %185 = alloca %complex_4, align 8
  %186 = getelementptr %complex_4, %complex_4* %185, i32 0, i32 0
  %187 = getelementptr %complex_4, %complex_4* %185, i32 0, i32 1
  store float %184, float* %186, align 4
  store float 0.000000e+00, float* %187, align 4
  %188 = load %complex_4, %complex_4* %185, align 4
  %189 = load float, float* %right, align 4
  %190 = alloca %complex_4, align 8
  %191 = getelementptr %complex_4, %complex_4* %190, i32 0, i32 0
  %192 = getelementptr %complex_4, %complex_4* %190, i32 0, i32 1
  store float %189, float* %191, align 4
  store float 0.000000e+00, float* %192, align 4
  %193 = load %complex_4, %complex_4* %190, align 4
  %194 = alloca %complex_4, align 8
  %195 = getelementptr %complex_4, %complex_4* %194, i32 0, i32 0
  %196 = getelementptr %complex_4, %complex_4* %194, i32 0, i32 1
  store float 0.000000e+00, float* %195, align 4
  store float 1.000000e+00, float* %196, align 4
  %197 = load %complex_4, %complex_4* %194, align 4
  %198 = alloca %complex_4, align 8
  store %complex_4 %193, %complex_4* %198, align 4
  %199 = alloca %complex_4, align 8
  store %complex_4 %197, %complex_4* %199, align 4
  %200 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %198, %complex_4* %199, %complex_4* %200)
  %201 = load %complex_4, %complex_4* %200, align 4
  %202 = alloca %complex_4, align 8
  store %complex_4 %188, %complex_4* %202, align 4
  %203 = alloca %complex_4, align 8
  store %complex_4 %201, %complex_4* %203, align 4
  %204 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub(%complex_4* %202, %complex_4* %203, %complex_4* %204)
  %205 = load %complex_4, %complex_4* %204, align 4
  %206 = alloca %complex_4, align 8
  store %complex_4 %182, %complex_4* %206, align 4
  %207 = getelementptr %complex_4, %complex_4* %206, i32 0, i32 0
  %208 = load float, float* %207, align 4
  %209 = alloca %complex_4, align 8
  store %complex_4 %205, %complex_4* %209, align 4
  %210 = getelementptr %complex_4, %complex_4* %209, i32 0, i32 0
  %211 = load float, float* %210, align 4
  %212 = alloca %complex_4, align 8
  store %complex_4 %182, %complex_4* %212, align 4
  %213 = getelementptr %complex_4, %complex_4* %212, i32 0, i32 1
  %214 = load float, float* %213, align 4
  %215 = alloca %complex_4, align 8
  store %complex_4 %205, %complex_4* %215, align 4
  %216 = getelementptr %complex_4, %complex_4* %215, i32 0, i32 1
  %217 = load float, float* %216, align 4
  %218 = fcmp une float %208, %211
  %219 = fcmp une float %214, %217
  %220 = and i1 %218, %219
  br i1 %220, label %then8, label %else9

then8:                                            ; preds = %then7
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont10

else9:                                            ; preds = %then7
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %then8
  %iftmp11 = phi i32 [ 1, %then8 ], [ 2, %else9 ]
  br label %ifcont13

else12:                                           ; preds = %else6
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %ifcont10
  %iftmp14 = phi i32 [ 1, %ifcont10 ], [ 2, %else12 ]
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont13, %ifcont
  %iftmp16 = phi i32 [ 1, %ifcont ], [ 2, %ifcont13 ]
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end17:                                       ; preds = %loop.head1
  br label %loop.head

loop.end18:                                       ; preds = %loop.head
  ret void
}

declare void @_lfortran_complex_mul(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub(%complex_4*, %complex_4*, %complex_4*, ...)

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %"2_k" = alloca i32, align 4
  %"3_k" = alloca i32, align 4
  %a = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 2, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  store i32 1, i32* %12, align 4
  store i32 1, i32* %13, align 4
  store i32 2, i32* %14, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %13, align 4
  %18 = sub i32 %16, %17
  %19 = add i32 %18, 1
  store i32 %19, i32* %15, align 4
  %20 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 1, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  store i32 %28, i32* %24, align 4
  %b = alloca %array.1, align 8
  %29 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %31 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 2
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 3
  store i32 1, i32* %32, align 4
  store i32 1, i32* %33, align 4
  store i32 2, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = load i32, i32* %33, align 4
  %38 = sub i32 %36, %37
  %39 = add i32 %38, 1
  store i32 %39, i32* %35, align 4
  %40 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 1, i32* %42, align 4
  store i32 2, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  store i32 %48, i32* %44, align 4
  %49 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  store i32 1, i32* %50, align 4
  store i32 1, i32* %51, align 4
  store i32 1, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %51, align 4
  %56 = sub i32 %54, %55
  %57 = add i32 %56, 1
  store i32 %57, i32* %53, align 4
  %c = alloca %array.2, align 8
  %58 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  store i32 0, i32* %58, align 4
  %59 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %60 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  store i32 1, i32* %61, align 4
  store i32 1, i32* %62, align 4
  store i32 2, i32* %63, align 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %62, align 4
  %67 = sub i32 %65, %66
  %68 = add i32 %67, 1
  store i32 %68, i32* %64, align 4
  %69 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 1
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  store i32 1, i32* %70, align 4
  store i32 1, i32* %71, align 4
  store i32 2, i32* %72, align 4
  %74 = load i32, i32* %72, align 4
  %75 = load i32, i32* %71, align 4
  %76 = sub i32 %74, %75
  %77 = add i32 %76, 1
  store i32 %77, i32* %73, align 4
  %78 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 2
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 1, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  store i32 %86, i32* %82, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %"~0_implicit_cast_res" = alloca %array.2, align 8
  %87 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %87, align 4
  %88 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %89 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  store i32 1, i32* %90, align 4
  store i32 1, i32* %91, align 4
  store i32 2, i32* %92, align 4
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %91, align 4
  %96 = sub i32 %94, %95
  %97 = add i32 %96, 1
  store i32 %97, i32* %93, align 4
  %98 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 1
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 3
  store i32 1, i32* %99, align 4
  store i32 1, i32* %100, align 4
  store i32 2, i32* %101, align 4
  %103 = load i32, i32* %101, align 4
  %104 = load i32, i32* %100, align 4
  %105 = sub i32 %103, %104
  %106 = add i32 %105, 1
  store i32 %106, i32* %102, align 4
  %107 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 2
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 2
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  store i32 1, i32* %108, align 4
  store i32 1, i32* %109, align 4
  store i32 1, i32* %110, align 4
  %112 = load i32, i32* %110, align 4
  %113 = load i32, i32* %109, align 4
  %114 = sub i32 %112, %113
  %115 = add i32 %114, 1
  store i32 %115, i32* %111, align 4
  %"~1_implicit_cast_res" = alloca %array.2, align 8
  %116 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %116, align 4
  %117 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %118 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %117, i32 0, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 2
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  store i32 1, i32* %119, align 4
  store i32 1, i32* %120, align 4
  store i32 2, i32* %121, align 4
  %123 = load i32, i32* %121, align 4
  %124 = load i32, i32* %120, align 4
  %125 = sub i32 %123, %124
  %126 = add i32 %125, 1
  store i32 %126, i32* %122, align 4
  %127 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %117, i32 0, i32 1
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 0
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 1
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 2
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 3
  store i32 1, i32* %128, align 4
  store i32 1, i32* %129, align 4
  store i32 2, i32* %130, align 4
  %132 = load i32, i32* %130, align 4
  %133 = load i32, i32* %129, align 4
  %134 = sub i32 %132, %133
  %135 = add i32 %134, 1
  store i32 %135, i32* %131, align 4
  %136 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %117, i32 0, i32 2
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 0
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 2
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 3
  store i32 1, i32* %137, align 4
  store i32 1, i32* %138, align 4
  store i32 1, i32* %139, align 4
  %141 = load i32, i32* %139, align 4
  %142 = load i32, i32* %138, align 4
  %143 = sub i32 %141, %142
  %144 = add i32 %143, 1
  store i32 %144, i32* %140, align 4
  %"~2_bin_op_res" = alloca %array.2, align 8
  %145 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 1
  store i32 0, i32* %145, align 4
  %146 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %147 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %146, i32 0, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 2
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  store i32 1, i32* %148, align 4
  store i32 1, i32* %149, align 4
  store i32 2, i32* %150, align 4
  %152 = load i32, i32* %150, align 4
  %153 = load i32, i32* %149, align 4
  %154 = sub i32 %152, %153
  %155 = add i32 %154, 1
  store i32 %155, i32* %151, align 4
  %156 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %146, i32 0, i32 1
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %159 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 2
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 3
  store i32 1, i32* %157, align 4
  store i32 1, i32* %158, align 4
  store i32 2, i32* %159, align 4
  %161 = load i32, i32* %159, align 4
  %162 = load i32, i32* %158, align 4
  %163 = sub i32 %161, %162
  %164 = add i32 %163, 1
  store i32 %164, i32* %160, align 4
  %165 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %146, i32 0, i32 2
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 1
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 2
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 3
  store i32 1, i32* %166, align 4
  store i32 1, i32* %167, align 4
  store i32 1, i32* %168, align 4
  %170 = load i32, i32* %168, align 4
  %171 = load i32, i32* %167, align 4
  %172 = sub i32 %170, %171
  %173 = add i32 %172, 1
  store i32 %173, i32* %169, align 4
  %"~3_unary_op_res" = alloca %array.1, align 8
  %174 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 1
  store i32 0, i32* %174, align 4
  %175 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %176 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %175, i32 0, i32 0
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 0
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 2
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  store i32 1, i32* %177, align 4
  store i32 1, i32* %178, align 4
  store i32 2, i32* %179, align 4
  %181 = load i32, i32* %179, align 4
  %182 = load i32, i32* %178, align 4
  %183 = sub i32 %181, %182
  %184 = add i32 %183, 1
  store i32 %184, i32* %180, align 4
  %185 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %175, i32 0, i32 1
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 0
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 1
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 2
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 3
  store i32 1, i32* %186, align 4
  store i32 1, i32* %187, align 4
  store i32 2, i32* %188, align 4
  %190 = load i32, i32* %188, align 4
  %191 = load i32, i32* %187, align 4
  %192 = sub i32 %190, %191
  %193 = add i32 %192, 1
  store i32 %193, i32* %189, align 4
  %194 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %175, i32 0, i32 2
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 0
  %196 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 2
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  store i32 1, i32* %195, align 4
  store i32 1, i32* %196, align 4
  store i32 1, i32* %197, align 4
  %199 = load i32, i32* %197, align 4
  %200 = load i32, i32* %196, align 4
  %201 = sub i32 %199, %200
  %202 = add i32 %201, 1
  store i32 %202, i32* %198, align 4
  %"~4_implicit_cast_res" = alloca %array.2, align 8
  %203 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %203, align 4
  %204 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %205 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %204, i32 0, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 0
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 2
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  store i32 1, i32* %206, align 4
  store i32 1, i32* %207, align 4
  store i32 2, i32* %208, align 4
  %210 = load i32, i32* %208, align 4
  %211 = load i32, i32* %207, align 4
  %212 = sub i32 %210, %211
  %213 = add i32 %212, 1
  store i32 %213, i32* %209, align 4
  %214 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %204, i32 0, i32 1
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 2
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  store i32 1, i32* %215, align 4
  store i32 1, i32* %216, align 4
  store i32 2, i32* %217, align 4
  %219 = load i32, i32* %217, align 4
  %220 = load i32, i32* %216, align 4
  %221 = sub i32 %219, %220
  %222 = add i32 %221, 1
  store i32 %222, i32* %218, align 4
  %223 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %204, i32 0, i32 2
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 0
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 2
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 3
  store i32 1, i32* %224, align 4
  store i32 1, i32* %225, align 4
  store i32 1, i32* %226, align 4
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %225, align 4
  %230 = sub i32 %228, %229
  %231 = add i32 %230, 1
  store i32 %231, i32* %227, align 4
  %"~5_unary_op_res" = alloca %array.1, align 8
  %232 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 1
  store i32 0, i32* %232, align 4
  %233 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %234 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 0
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 1
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 2
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 3
  store i32 1, i32* %235, align 4
  store i32 1, i32* %236, align 4
  store i32 2, i32* %237, align 4
  %239 = load i32, i32* %237, align 4
  %240 = load i32, i32* %236, align 4
  %241 = sub i32 %239, %240
  %242 = add i32 %241, 1
  store i32 %242, i32* %238, align 4
  %243 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 1
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 0
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 2
  %247 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 3
  store i32 1, i32* %244, align 4
  store i32 1, i32* %245, align 4
  store i32 2, i32* %246, align 4
  %248 = load i32, i32* %246, align 4
  %249 = load i32, i32* %245, align 4
  %250 = sub i32 %248, %249
  %251 = add i32 %250, 1
  store i32 %251, i32* %247, align 4
  %252 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 2
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 0
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 2
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 3
  store i32 1, i32* %253, align 4
  store i32 1, i32* %254, align 4
  store i32 1, i32* %255, align 4
  %257 = load i32, i32* %255, align 4
  %258 = load i32, i32* %254, align 4
  %259 = sub i32 %257, %258
  %260 = add i32 %259, 1
  store i32 %260, i32* %256, align 4
  %"~6_implicit_cast_res" = alloca %array.2, align 8
  %261 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %261, align 4
  %262 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %263 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, i32 0, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 0
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 2
  %267 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  store i32 1, i32* %264, align 4
  store i32 1, i32* %265, align 4
  store i32 2, i32* %266, align 4
  %268 = load i32, i32* %266, align 4
  %269 = load i32, i32* %265, align 4
  %270 = sub i32 %268, %269
  %271 = add i32 %270, 1
  store i32 %271, i32* %267, align 4
  %272 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, i32 0, i32 1
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 0
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %275 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 2
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 3
  store i32 1, i32* %273, align 4
  store i32 1, i32* %274, align 4
  store i32 2, i32* %275, align 4
  %277 = load i32, i32* %275, align 4
  %278 = load i32, i32* %274, align 4
  %279 = sub i32 %277, %278
  %280 = add i32 %279, 1
  store i32 %280, i32* %276, align 4
  %281 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, i32 0, i32 2
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 1
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 2
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 3
  store i32 1, i32* %282, align 4
  store i32 1, i32* %283, align 4
  store i32 1, i32* %284, align 4
  %286 = load i32, i32* %284, align 4
  %287 = load i32, i32* %283, align 4
  %288 = sub i32 %286, %287
  %289 = add i32 %288, 1
  store i32 %289, i32* %285, align 4
  %"~7_bin_op_res" = alloca %array.2, align 8
  %290 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 1
  store i32 0, i32* %290, align 4
  %291 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %292 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %291, i32 0, i32 0
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 0
  %294 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 2
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 3
  store i32 1, i32* %293, align 4
  store i32 1, i32* %294, align 4
  store i32 2, i32* %295, align 4
  %297 = load i32, i32* %295, align 4
  %298 = load i32, i32* %294, align 4
  %299 = sub i32 %297, %298
  %300 = add i32 %299, 1
  store i32 %300, i32* %296, align 4
  %301 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %291, i32 0, i32 1
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 0
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 1
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 2
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 3
  store i32 1, i32* %302, align 4
  store i32 1, i32* %303, align 4
  store i32 2, i32* %304, align 4
  %306 = load i32, i32* %304, align 4
  %307 = load i32, i32* %303, align 4
  %308 = sub i32 %306, %307
  %309 = add i32 %308, 1
  store i32 %309, i32* %305, align 4
  %310 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %291, i32 0, i32 2
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 0
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 1
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 2
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 3
  store i32 1, i32* %311, align 4
  store i32 1, i32* %312, align 4
  store i32 1, i32* %313, align 4
  %315 = load i32, i32* %313, align 4
  %316 = load i32, i32* %312, align 4
  %317 = sub i32 %315, %316
  %318 = add i32 %317, 1
  store i32 %318, i32* %314, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %319 = load i32, i32* %i, align 4
  %320 = add i32 %319, 1
  %321 = icmp sle i32 %320, 2
  br i1 %321, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %322 = load i32, i32* %i, align 4
  %323 = add i32 %322, 1
  store i32 %323, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %324 = load i32, i32* %j, align 4
  %325 = add i32 %324, 1
  %326 = icmp sle i32 %325, 2
  br i1 %326, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %327 = load i32, i32* %j, align 4
  %328 = add i32 %327, 1
  store i32 %328, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %329 = load i32, i32* %k, align 4
  %330 = add i32 %329, 1
  %331 = icmp sle i32 %330, 1
  br i1 %331, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %332 = load i32, i32* %k, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %k, align 4
  %334 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %335 = load i32, i32* %i, align 4
  %336 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %334, i32 0, i32 0
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 %335, %338
  %340 = mul i32 1, %339
  %341 = add i32 0, %340
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = mul i32 1, %343
  %345 = load i32, i32* %j, align 4
  %346 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %334, i32 0, i32 1
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %346, i32 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = sub i32 %345, %348
  %350 = mul i32 %344, %349
  %351 = add i32 %341, %350
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %346, i32 0, i32 3
  %353 = load i32, i32* %352, align 4
  %354 = mul i32 %344, %353
  %355 = load i32, i32* %k, align 4
  %356 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %334, i32 0, i32 2
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 %355, %358
  %360 = mul i32 %354, %359
  %361 = add i32 %351, %360
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 3
  %363 = load i32, i32* %362, align 4
  %364 = mul i32 %354, %363
  %365 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %366 = getelementptr [4 x i32], [4 x i32]* %365, i32 0, i32 %361
  %367 = load i32, i32* %i, align 4
  %368 = load i32, i32* %j, align 4
  %369 = add i32 %367, %368
  %370 = load i32, i32* %k, align 4
  %371 = add i32 %369, %370
  store i32 %371, i32* %366, align 4
  %372 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %373 = load i32, i32* %i, align 4
  %374 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %372, i32 0, i32 0
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = sub i32 %373, %376
  %378 = mul i32 1, %377
  %379 = add i32 0, %378
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 3
  %381 = load i32, i32* %380, align 4
  %382 = mul i32 1, %381
  %383 = load i32, i32* %j, align 4
  %384 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %372, i32 0, i32 1
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %384, i32 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = sub i32 %383, %386
  %388 = mul i32 %382, %387
  %389 = add i32 %379, %388
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %384, i32 0, i32 3
  %391 = load i32, i32* %390, align 4
  %392 = mul i32 %382, %391
  %393 = load i32, i32* %k, align 4
  %394 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %372, i32 0, i32 2
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = sub i32 %393, %396
  %398 = mul i32 %392, %397
  %399 = add i32 %389, %398
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 3
  %401 = load i32, i32* %400, align 4
  %402 = mul i32 %392, %401
  %403 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %404 = getelementptr [4 x i32], [4 x i32]* %403, i32 0, i32 %399
  %405 = load i32, i32* %i, align 4
  %406 = load i32, i32* %j, align 4
  %407 = mul i32 %405, %406
  %408 = load i32, i32* %k, align 4
  %409 = mul i32 %407, %408
  store i32 %409, i32* %404, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %410 = alloca %dimension_descriptor*, align 8
  %411 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %412 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %411, i32 0, i32 0
  store %dimension_descriptor* %412, %dimension_descriptor** %410, align 8
  %413 = alloca i32, align 4
  store i32 1, i32* %413, align 4
  %414 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %410, i32* %413)
  %415 = sub i32 %414, 1
  store i32 %415, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %416 = load i32, i32* %"1_k", align 4
  %417 = add i32 %416, 1
  %418 = alloca %dimension_descriptor*, align 8
  %419 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %420 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %419, i32 0, i32 0
  store %dimension_descriptor* %420, %dimension_descriptor** %418, align 8
  %421 = alloca i32, align 4
  store i32 1, i32* %421, align 4
  %422 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %418, i32* %421)
  %423 = icmp sle i32 %417, %422
  br i1 %423, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %424 = load i32, i32* %"1_k", align 4
  %425 = add i32 %424, 1
  store i32 %425, i32* %"1_k", align 4
  %426 = alloca %dimension_descriptor*, align 8
  %427 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %428 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %427, i32 0, i32 0
  store %dimension_descriptor* %428, %dimension_descriptor** %426, align 8
  %429 = alloca i32, align 4
  store i32 2, i32* %429, align 4
  %430 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %426, i32* %429)
  %431 = sub i32 %430, 1
  store i32 %431, i32* %"2_k", align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %432 = load i32, i32* %"2_k", align 4
  %433 = add i32 %432, 1
  %434 = alloca %dimension_descriptor*, align 8
  %435 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %436 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %435, i32 0, i32 0
  store %dimension_descriptor* %436, %dimension_descriptor** %434, align 8
  %437 = alloca i32, align 4
  store i32 2, i32* %437, align 4
  %438 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %434, i32* %437)
  %439 = icmp sle i32 %433, %438
  br i1 %439, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %440 = load i32, i32* %"2_k", align 4
  %441 = add i32 %440, 1
  store i32 %441, i32* %"2_k", align 4
  %442 = alloca %dimension_descriptor*, align 8
  %443 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %444 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %443, i32 0, i32 0
  store %dimension_descriptor* %444, %dimension_descriptor** %442, align 8
  %445 = alloca i32, align 4
  store i32 3, i32* %445, align 4
  %446 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %442, i32* %445)
  %447 = sub i32 %446, 1
  store i32 %447, i32* %"3_k", align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %448 = load i32, i32* %"3_k", align 4
  %449 = add i32 %448, 1
  %450 = alloca %dimension_descriptor*, align 8
  %451 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %452 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %451, i32 0, i32 0
  store %dimension_descriptor* %452, %dimension_descriptor** %450, align 8
  %453 = alloca i32, align 4
  store i32 3, i32* %453, align 4
  %454 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %450, i32* %453)
  %455 = icmp sle i32 %449, %454
  br i1 %455, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %456 = load i32, i32* %"3_k", align 4
  %457 = add i32 %456, 1
  store i32 %457, i32* %"3_k", align 4
  %458 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %459 = load i32, i32* %"1_k", align 4
  %460 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %458, i32 0, i32 0
  %461 = getelementptr %dimension_descriptor, %dimension_descriptor* %460, i32 0, i32 1
  %462 = load i32, i32* %461, align 4
  %463 = sub i32 %459, %462
  %464 = mul i32 1, %463
  %465 = add i32 0, %464
  %466 = getelementptr %dimension_descriptor, %dimension_descriptor* %460, i32 0, i32 3
  %467 = load i32, i32* %466, align 4
  %468 = mul i32 1, %467
  %469 = load i32, i32* %"2_k", align 4
  %470 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %458, i32 0, i32 1
  %471 = getelementptr %dimension_descriptor, %dimension_descriptor* %470, i32 0, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = sub i32 %469, %472
  %474 = mul i32 %468, %473
  %475 = add i32 %465, %474
  %476 = getelementptr %dimension_descriptor, %dimension_descriptor* %470, i32 0, i32 3
  %477 = load i32, i32* %476, align 4
  %478 = mul i32 %468, %477
  %479 = load i32, i32* %"3_k", align 4
  %480 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %458, i32 0, i32 2
  %481 = getelementptr %dimension_descriptor, %dimension_descriptor* %480, i32 0, i32 1
  %482 = load i32, i32* %481, align 4
  %483 = sub i32 %479, %482
  %484 = mul i32 %478, %483
  %485 = add i32 %475, %484
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %480, i32 0, i32 3
  %487 = load i32, i32* %486, align 4
  %488 = mul i32 %478, %487
  %489 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 0
  %490 = getelementptr [4 x %complex_4], [4 x %complex_4]* %489, i32 0, i32 %485
  %491 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %492 = load i32, i32* %"1_k", align 4
  %493 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %491, i32 0, i32 0
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = sub i32 %492, %495
  %497 = mul i32 1, %496
  %498 = add i32 0, %497
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 3
  %500 = load i32, i32* %499, align 4
  %501 = mul i32 1, %500
  %502 = load i32, i32* %"2_k", align 4
  %503 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %491, i32 0, i32 1
  %504 = getelementptr %dimension_descriptor, %dimension_descriptor* %503, i32 0, i32 1
  %505 = load i32, i32* %504, align 4
  %506 = sub i32 %502, %505
  %507 = mul i32 %501, %506
  %508 = add i32 %498, %507
  %509 = getelementptr %dimension_descriptor, %dimension_descriptor* %503, i32 0, i32 3
  %510 = load i32, i32* %509, align 4
  %511 = mul i32 %501, %510
  %512 = load i32, i32* %"3_k", align 4
  %513 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %491, i32 0, i32 2
  %514 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = sub i32 %512, %515
  %517 = mul i32 %511, %516
  %518 = add i32 %508, %517
  %519 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 3
  %520 = load i32, i32* %519, align 4
  %521 = mul i32 %511, %520
  %522 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %523 = getelementptr [4 x i32], [4 x i32]* %522, i32 0, i32 %518
  %524 = load i32, i32* %523, align 4
  %525 = sitofp i32 %524 to float
  %526 = alloca %complex_4, align 8
  %527 = getelementptr %complex_4, %complex_4* %526, i32 0, i32 0
  %528 = getelementptr %complex_4, %complex_4* %526, i32 0, i32 1
  store float %525, float* %527, align 4
  store float 0.000000e+00, float* %528, align 4
  %529 = load %complex_4, %complex_4* %526, align 4
  store %complex_4 %529, %complex_4* %490, align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  %530 = alloca %dimension_descriptor*, align 8
  %531 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %532 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %531, i32 0, i32 0
  store %dimension_descriptor* %532, %dimension_descriptor** %530, align 8
  %533 = alloca i32, align 4
  store i32 1, i32* %533, align 4
  %534 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %530, i32* %533)
  %535 = sub i32 %534, 1
  store i32 %535, i32* %"1_k", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.end23, %loop.end15
  %536 = load i32, i32* %"1_k", align 4
  %537 = add i32 %536, 1
  %538 = alloca %dimension_descriptor*, align 8
  %539 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %540 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %539, i32 0, i32 0
  store %dimension_descriptor* %540, %dimension_descriptor** %538, align 8
  %541 = alloca i32, align 4
  store i32 1, i32* %541, align 4
  %542 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %538, i32* %541)
  %543 = icmp sle i32 %537, %542
  br i1 %543, label %loop.body17, label %loop.end24

loop.body17:                                      ; preds = %loop.head16
  %544 = load i32, i32* %"1_k", align 4
  %545 = add i32 %544, 1
  store i32 %545, i32* %"1_k", align 4
  %546 = alloca %dimension_descriptor*, align 8
  %547 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %548 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %547, i32 0, i32 0
  store %dimension_descriptor* %548, %dimension_descriptor** %546, align 8
  %549 = alloca i32, align 4
  store i32 2, i32* %549, align 4
  %550 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %546, i32* %549)
  %551 = sub i32 %550, 1
  store i32 %551, i32* %"2_k", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end22, %loop.body17
  %552 = load i32, i32* %"2_k", align 4
  %553 = add i32 %552, 1
  %554 = alloca %dimension_descriptor*, align 8
  %555 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %556 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %555, i32 0, i32 0
  store %dimension_descriptor* %556, %dimension_descriptor** %554, align 8
  %557 = alloca i32, align 4
  store i32 2, i32* %557, align 4
  %558 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %554, i32* %557)
  %559 = icmp sle i32 %553, %558
  br i1 %559, label %loop.body19, label %loop.end23

loop.body19:                                      ; preds = %loop.head18
  %560 = load i32, i32* %"2_k", align 4
  %561 = add i32 %560, 1
  store i32 %561, i32* %"2_k", align 4
  %562 = alloca %dimension_descriptor*, align 8
  %563 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %564 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %563, i32 0, i32 0
  store %dimension_descriptor* %564, %dimension_descriptor** %562, align 8
  %565 = alloca i32, align 4
  store i32 3, i32* %565, align 4
  %566 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %562, i32* %565)
  %567 = sub i32 %566, 1
  store i32 %567, i32* %"3_k", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.body21, %loop.body19
  %568 = load i32, i32* %"3_k", align 4
  %569 = add i32 %568, 1
  %570 = alloca %dimension_descriptor*, align 8
  %571 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %572 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %571, i32 0, i32 0
  store %dimension_descriptor* %572, %dimension_descriptor** %570, align 8
  %573 = alloca i32, align 4
  store i32 3, i32* %573, align 4
  %574 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %570, i32* %573)
  %575 = icmp sle i32 %569, %574
  br i1 %575, label %loop.body21, label %loop.end22

loop.body21:                                      ; preds = %loop.head20
  %576 = load i32, i32* %"3_k", align 4
  %577 = add i32 %576, 1
  store i32 %577, i32* %"3_k", align 4
  %578 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %579 = load i32, i32* %"1_k", align 4
  %580 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %578, i32 0, i32 0
  %581 = getelementptr %dimension_descriptor, %dimension_descriptor* %580, i32 0, i32 1
  %582 = load i32, i32* %581, align 4
  %583 = sub i32 %579, %582
  %584 = mul i32 1, %583
  %585 = add i32 0, %584
  %586 = getelementptr %dimension_descriptor, %dimension_descriptor* %580, i32 0, i32 3
  %587 = load i32, i32* %586, align 4
  %588 = mul i32 1, %587
  %589 = load i32, i32* %"2_k", align 4
  %590 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %578, i32 0, i32 1
  %591 = getelementptr %dimension_descriptor, %dimension_descriptor* %590, i32 0, i32 1
  %592 = load i32, i32* %591, align 4
  %593 = sub i32 %589, %592
  %594 = mul i32 %588, %593
  %595 = add i32 %585, %594
  %596 = getelementptr %dimension_descriptor, %dimension_descriptor* %590, i32 0, i32 3
  %597 = load i32, i32* %596, align 4
  %598 = mul i32 %588, %597
  %599 = load i32, i32* %"3_k", align 4
  %600 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %578, i32 0, i32 2
  %601 = getelementptr %dimension_descriptor, %dimension_descriptor* %600, i32 0, i32 1
  %602 = load i32, i32* %601, align 4
  %603 = sub i32 %599, %602
  %604 = mul i32 %598, %603
  %605 = add i32 %595, %604
  %606 = getelementptr %dimension_descriptor, %dimension_descriptor* %600, i32 0, i32 3
  %607 = load i32, i32* %606, align 4
  %608 = mul i32 %598, %607
  %609 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 0
  %610 = getelementptr [4 x %complex_4], [4 x %complex_4]* %609, i32 0, i32 %605
  %611 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %612 = load i32, i32* %"1_k", align 4
  %613 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %611, i32 0, i32 0
  %614 = getelementptr %dimension_descriptor, %dimension_descriptor* %613, i32 0, i32 1
  %615 = load i32, i32* %614, align 4
  %616 = sub i32 %612, %615
  %617 = mul i32 1, %616
  %618 = add i32 0, %617
  %619 = getelementptr %dimension_descriptor, %dimension_descriptor* %613, i32 0, i32 3
  %620 = load i32, i32* %619, align 4
  %621 = mul i32 1, %620
  %622 = load i32, i32* %"2_k", align 4
  %623 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %611, i32 0, i32 1
  %624 = getelementptr %dimension_descriptor, %dimension_descriptor* %623, i32 0, i32 1
  %625 = load i32, i32* %624, align 4
  %626 = sub i32 %622, %625
  %627 = mul i32 %621, %626
  %628 = add i32 %618, %627
  %629 = getelementptr %dimension_descriptor, %dimension_descriptor* %623, i32 0, i32 3
  %630 = load i32, i32* %629, align 4
  %631 = mul i32 %621, %630
  %632 = load i32, i32* %"3_k", align 4
  %633 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %611, i32 0, i32 2
  %634 = getelementptr %dimension_descriptor, %dimension_descriptor* %633, i32 0, i32 1
  %635 = load i32, i32* %634, align 4
  %636 = sub i32 %632, %635
  %637 = mul i32 %631, %636
  %638 = add i32 %628, %637
  %639 = getelementptr %dimension_descriptor, %dimension_descriptor* %633, i32 0, i32 3
  %640 = load i32, i32* %639, align 4
  %641 = mul i32 %631, %640
  %642 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %643 = getelementptr [4 x i32], [4 x i32]* %642, i32 0, i32 %638
  %644 = load i32, i32* %643, align 4
  %645 = sitofp i32 %644 to float
  %646 = alloca %complex_4, align 8
  %647 = getelementptr %complex_4, %complex_4* %646, i32 0, i32 0
  %648 = getelementptr %complex_4, %complex_4* %646, i32 0, i32 1
  store float %645, float* %647, align 4
  store float 0.000000e+00, float* %648, align 4
  %649 = load %complex_4, %complex_4* %646, align 4
  store %complex_4 %649, %complex_4* %610, align 4
  br label %loop.head20

loop.end22:                                       ; preds = %loop.head20
  br label %loop.head18

loop.end23:                                       ; preds = %loop.head18
  br label %loop.head16

loop.end24:                                       ; preds = %loop.head16
  %650 = alloca %dimension_descriptor*, align 8
  %651 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %652 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %651, i32 0, i32 0
  store %dimension_descriptor* %652, %dimension_descriptor** %650, align 8
  %653 = alloca i32, align 4
  store i32 1, i32* %653, align 4
  %654 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %650, i32* %653)
  %655 = sub i32 %654, 1
  store i32 %655, i32* %"1_k", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.end32, %loop.end24
  %656 = load i32, i32* %"1_k", align 4
  %657 = add i32 %656, 1
  %658 = alloca %dimension_descriptor*, align 8
  %659 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %660 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %659, i32 0, i32 0
  store %dimension_descriptor* %660, %dimension_descriptor** %658, align 8
  %661 = alloca i32, align 4
  store i32 1, i32* %661, align 4
  %662 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %658, i32* %661)
  %663 = icmp sle i32 %657, %662
  br i1 %663, label %loop.body26, label %loop.end33

loop.body26:                                      ; preds = %loop.head25
  %664 = load i32, i32* %"1_k", align 4
  %665 = add i32 %664, 1
  store i32 %665, i32* %"1_k", align 4
  %666 = alloca %dimension_descriptor*, align 8
  %667 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %668 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %667, i32 0, i32 0
  store %dimension_descriptor* %668, %dimension_descriptor** %666, align 8
  %669 = alloca i32, align 4
  store i32 2, i32* %669, align 4
  %670 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %666, i32* %669)
  %671 = sub i32 %670, 1
  store i32 %671, i32* %"2_k", align 4
  br label %loop.head27

loop.head27:                                      ; preds = %loop.end31, %loop.body26
  %672 = load i32, i32* %"2_k", align 4
  %673 = add i32 %672, 1
  %674 = alloca %dimension_descriptor*, align 8
  %675 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %676 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %675, i32 0, i32 0
  store %dimension_descriptor* %676, %dimension_descriptor** %674, align 8
  %677 = alloca i32, align 4
  store i32 2, i32* %677, align 4
  %678 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %674, i32* %677)
  %679 = icmp sle i32 %673, %678
  br i1 %679, label %loop.body28, label %loop.end32

loop.body28:                                      ; preds = %loop.head27
  %680 = load i32, i32* %"2_k", align 4
  %681 = add i32 %680, 1
  store i32 %681, i32* %"2_k", align 4
  %682 = alloca %dimension_descriptor*, align 8
  %683 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %684 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %683, i32 0, i32 0
  store %dimension_descriptor* %684, %dimension_descriptor** %682, align 8
  %685 = alloca i32, align 4
  store i32 3, i32* %685, align 4
  %686 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %682, i32* %685)
  %687 = sub i32 %686, 1
  store i32 %687, i32* %"3_k", align 4
  br label %loop.head29

loop.head29:                                      ; preds = %loop.body30, %loop.body28
  %688 = load i32, i32* %"3_k", align 4
  %689 = add i32 %688, 1
  %690 = alloca %dimension_descriptor*, align 8
  %691 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %692 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %691, i32 0, i32 0
  store %dimension_descriptor* %692, %dimension_descriptor** %690, align 8
  %693 = alloca i32, align 4
  store i32 3, i32* %693, align 4
  %694 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %690, i32* %693)
  %695 = icmp sle i32 %689, %694
  br i1 %695, label %loop.body30, label %loop.end31

loop.body30:                                      ; preds = %loop.head29
  %696 = load i32, i32* %"3_k", align 4
  %697 = add i32 %696, 1
  store i32 %697, i32* %"3_k", align 4
  %698 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %699 = load i32, i32* %"1_k", align 4
  %700 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %698, i32 0, i32 0
  %701 = getelementptr %dimension_descriptor, %dimension_descriptor* %700, i32 0, i32 1
  %702 = load i32, i32* %701, align 4
  %703 = sub i32 %699, %702
  %704 = mul i32 1, %703
  %705 = add i32 0, %704
  %706 = getelementptr %dimension_descriptor, %dimension_descriptor* %700, i32 0, i32 3
  %707 = load i32, i32* %706, align 4
  %708 = mul i32 1, %707
  %709 = load i32, i32* %"2_k", align 4
  %710 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %698, i32 0, i32 1
  %711 = getelementptr %dimension_descriptor, %dimension_descriptor* %710, i32 0, i32 1
  %712 = load i32, i32* %711, align 4
  %713 = sub i32 %709, %712
  %714 = mul i32 %708, %713
  %715 = add i32 %705, %714
  %716 = getelementptr %dimension_descriptor, %dimension_descriptor* %710, i32 0, i32 3
  %717 = load i32, i32* %716, align 4
  %718 = mul i32 %708, %717
  %719 = load i32, i32* %"3_k", align 4
  %720 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %698, i32 0, i32 2
  %721 = getelementptr %dimension_descriptor, %dimension_descriptor* %720, i32 0, i32 1
  %722 = load i32, i32* %721, align 4
  %723 = sub i32 %719, %722
  %724 = mul i32 %718, %723
  %725 = add i32 %715, %724
  %726 = getelementptr %dimension_descriptor, %dimension_descriptor* %720, i32 0, i32 3
  %727 = load i32, i32* %726, align 4
  %728 = mul i32 %718, %727
  %729 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 0
  %730 = getelementptr [4 x %complex_4], [4 x %complex_4]* %729, i32 0, i32 %725
  %731 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %732 = load i32, i32* %"1_k", align 4
  %733 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %731, i32 0, i32 0
  %734 = getelementptr %dimension_descriptor, %dimension_descriptor* %733, i32 0, i32 1
  %735 = load i32, i32* %734, align 4
  %736 = sub i32 %732, %735
  %737 = mul i32 1, %736
  %738 = add i32 0, %737
  %739 = getelementptr %dimension_descriptor, %dimension_descriptor* %733, i32 0, i32 3
  %740 = load i32, i32* %739, align 4
  %741 = mul i32 1, %740
  %742 = load i32, i32* %"2_k", align 4
  %743 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %731, i32 0, i32 1
  %744 = getelementptr %dimension_descriptor, %dimension_descriptor* %743, i32 0, i32 1
  %745 = load i32, i32* %744, align 4
  %746 = sub i32 %742, %745
  %747 = mul i32 %741, %746
  %748 = add i32 %738, %747
  %749 = getelementptr %dimension_descriptor, %dimension_descriptor* %743, i32 0, i32 3
  %750 = load i32, i32* %749, align 4
  %751 = mul i32 %741, %750
  %752 = load i32, i32* %"3_k", align 4
  %753 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %731, i32 0, i32 2
  %754 = getelementptr %dimension_descriptor, %dimension_descriptor* %753, i32 0, i32 1
  %755 = load i32, i32* %754, align 4
  %756 = sub i32 %752, %755
  %757 = mul i32 %751, %756
  %758 = add i32 %748, %757
  %759 = getelementptr %dimension_descriptor, %dimension_descriptor* %753, i32 0, i32 3
  %760 = load i32, i32* %759, align 4
  %761 = mul i32 %751, %760
  %762 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 0
  %763 = getelementptr [4 x %complex_4], [4 x %complex_4]* %762, i32 0, i32 %758
  %764 = load %complex_4, %complex_4* %763, align 4
  %765 = alloca %complex_4, align 8
  %766 = getelementptr %complex_4, %complex_4* %765, i32 0, i32 0
  %767 = getelementptr %complex_4, %complex_4* %765, i32 0, i32 1
  store float 0.000000e+00, float* %766, align 4
  store float 1.000000e+00, float* %767, align 4
  %768 = load %complex_4, %complex_4* %765, align 4
  %769 = alloca %complex_4, align 8
  store %complex_4 %764, %complex_4* %769, align 4
  %770 = alloca %complex_4, align 8
  store %complex_4 %768, %complex_4* %770, align 4
  %771 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %769, %complex_4* %770, %complex_4* %771)
  %772 = load %complex_4, %complex_4* %771, align 4
  store %complex_4 %772, %complex_4* %730, align 4
  br label %loop.head29

loop.end31:                                       ; preds = %loop.head29
  br label %loop.head27

loop.end32:                                       ; preds = %loop.head27
  br label %loop.head25

loop.end33:                                       ; preds = %loop.head25
  %773 = alloca %dimension_descriptor*, align 8
  %774 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %775 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %774, i32 0, i32 0
  store %dimension_descriptor* %775, %dimension_descriptor** %773, align 8
  %776 = alloca i32, align 4
  store i32 1, i32* %776, align 4
  %777 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %773, i32* %776)
  %778 = sub i32 %777, 1
  store i32 %778, i32* %"1_k", align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.end41, %loop.end33
  %779 = load i32, i32* %"1_k", align 4
  %780 = add i32 %779, 1
  %781 = alloca %dimension_descriptor*, align 8
  %782 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %783 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %782, i32 0, i32 0
  store %dimension_descriptor* %783, %dimension_descriptor** %781, align 8
  %784 = alloca i32, align 4
  store i32 1, i32* %784, align 4
  %785 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %781, i32* %784)
  %786 = icmp sle i32 %780, %785
  br i1 %786, label %loop.body35, label %loop.end42

loop.body35:                                      ; preds = %loop.head34
  %787 = load i32, i32* %"1_k", align 4
  %788 = add i32 %787, 1
  store i32 %788, i32* %"1_k", align 4
  %789 = alloca %dimension_descriptor*, align 8
  %790 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %791 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %790, i32 0, i32 0
  store %dimension_descriptor* %791, %dimension_descriptor** %789, align 8
  %792 = alloca i32, align 4
  store i32 2, i32* %792, align 4
  %793 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %789, i32* %792)
  %794 = sub i32 %793, 1
  store i32 %794, i32* %"2_k", align 4
  br label %loop.head36

loop.head36:                                      ; preds = %loop.end40, %loop.body35
  %795 = load i32, i32* %"2_k", align 4
  %796 = add i32 %795, 1
  %797 = alloca %dimension_descriptor*, align 8
  %798 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %799 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %798, i32 0, i32 0
  store %dimension_descriptor* %799, %dimension_descriptor** %797, align 8
  %800 = alloca i32, align 4
  store i32 2, i32* %800, align 4
  %801 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %797, i32* %800)
  %802 = icmp sle i32 %796, %801
  br i1 %802, label %loop.body37, label %loop.end41

loop.body37:                                      ; preds = %loop.head36
  %803 = load i32, i32* %"2_k", align 4
  %804 = add i32 %803, 1
  store i32 %804, i32* %"2_k", align 4
  %805 = alloca %dimension_descriptor*, align 8
  %806 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %807 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %806, i32 0, i32 0
  store %dimension_descriptor* %807, %dimension_descriptor** %805, align 8
  %808 = alloca i32, align 4
  store i32 3, i32* %808, align 4
  %809 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %805, i32* %808)
  %810 = sub i32 %809, 1
  store i32 %810, i32* %"3_k", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.body39, %loop.body37
  %811 = load i32, i32* %"3_k", align 4
  %812 = add i32 %811, 1
  %813 = alloca %dimension_descriptor*, align 8
  %814 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %815 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %814, i32 0, i32 0
  store %dimension_descriptor* %815, %dimension_descriptor** %813, align 8
  %816 = alloca i32, align 4
  store i32 3, i32* %816, align 4
  %817 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %813, i32* %816)
  %818 = icmp sle i32 %812, %817
  br i1 %818, label %loop.body39, label %loop.end40

loop.body39:                                      ; preds = %loop.head38
  %819 = load i32, i32* %"3_k", align 4
  %820 = add i32 %819, 1
  store i32 %820, i32* %"3_k", align 4
  %821 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %822 = load i32, i32* %"1_k", align 4
  %823 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %821, i32 0, i32 0
  %824 = getelementptr %dimension_descriptor, %dimension_descriptor* %823, i32 0, i32 1
  %825 = load i32, i32* %824, align 4
  %826 = sub i32 %822, %825
  %827 = mul i32 1, %826
  %828 = add i32 0, %827
  %829 = getelementptr %dimension_descriptor, %dimension_descriptor* %823, i32 0, i32 3
  %830 = load i32, i32* %829, align 4
  %831 = mul i32 1, %830
  %832 = load i32, i32* %"2_k", align 4
  %833 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %821, i32 0, i32 1
  %834 = getelementptr %dimension_descriptor, %dimension_descriptor* %833, i32 0, i32 1
  %835 = load i32, i32* %834, align 4
  %836 = sub i32 %832, %835
  %837 = mul i32 %831, %836
  %838 = add i32 %828, %837
  %839 = getelementptr %dimension_descriptor, %dimension_descriptor* %833, i32 0, i32 3
  %840 = load i32, i32* %839, align 4
  %841 = mul i32 %831, %840
  %842 = load i32, i32* %"3_k", align 4
  %843 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %821, i32 0, i32 2
  %844 = getelementptr %dimension_descriptor, %dimension_descriptor* %843, i32 0, i32 1
  %845 = load i32, i32* %844, align 4
  %846 = sub i32 %842, %845
  %847 = mul i32 %841, %846
  %848 = add i32 %838, %847
  %849 = getelementptr %dimension_descriptor, %dimension_descriptor* %843, i32 0, i32 3
  %850 = load i32, i32* %849, align 4
  %851 = mul i32 %841, %850
  %852 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %853 = getelementptr [4 x %complex_4], [4 x %complex_4]* %852, i32 0, i32 %848
  %854 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %855 = load i32, i32* %"1_k", align 4
  %856 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %854, i32 0, i32 0
  %857 = getelementptr %dimension_descriptor, %dimension_descriptor* %856, i32 0, i32 1
  %858 = load i32, i32* %857, align 4
  %859 = sub i32 %855, %858
  %860 = mul i32 1, %859
  %861 = add i32 0, %860
  %862 = getelementptr %dimension_descriptor, %dimension_descriptor* %856, i32 0, i32 3
  %863 = load i32, i32* %862, align 4
  %864 = mul i32 1, %863
  %865 = load i32, i32* %"2_k", align 4
  %866 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %854, i32 0, i32 1
  %867 = getelementptr %dimension_descriptor, %dimension_descriptor* %866, i32 0, i32 1
  %868 = load i32, i32* %867, align 4
  %869 = sub i32 %865, %868
  %870 = mul i32 %864, %869
  %871 = add i32 %861, %870
  %872 = getelementptr %dimension_descriptor, %dimension_descriptor* %866, i32 0, i32 3
  %873 = load i32, i32* %872, align 4
  %874 = mul i32 %864, %873
  %875 = load i32, i32* %"3_k", align 4
  %876 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %854, i32 0, i32 2
  %877 = getelementptr %dimension_descriptor, %dimension_descriptor* %876, i32 0, i32 1
  %878 = load i32, i32* %877, align 4
  %879 = sub i32 %875, %878
  %880 = mul i32 %874, %879
  %881 = add i32 %871, %880
  %882 = getelementptr %dimension_descriptor, %dimension_descriptor* %876, i32 0, i32 3
  %883 = load i32, i32* %882, align 4
  %884 = mul i32 %874, %883
  %885 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 0
  %886 = getelementptr [4 x %complex_4], [4 x %complex_4]* %885, i32 0, i32 %881
  %887 = load %complex_4, %complex_4* %886, align 4
  %888 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %889 = load i32, i32* %"1_k", align 4
  %890 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %888, i32 0, i32 0
  %891 = getelementptr %dimension_descriptor, %dimension_descriptor* %890, i32 0, i32 1
  %892 = load i32, i32* %891, align 4
  %893 = sub i32 %889, %892
  %894 = mul i32 1, %893
  %895 = add i32 0, %894
  %896 = getelementptr %dimension_descriptor, %dimension_descriptor* %890, i32 0, i32 3
  %897 = load i32, i32* %896, align 4
  %898 = mul i32 1, %897
  %899 = load i32, i32* %"2_k", align 4
  %900 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %888, i32 0, i32 1
  %901 = getelementptr %dimension_descriptor, %dimension_descriptor* %900, i32 0, i32 1
  %902 = load i32, i32* %901, align 4
  %903 = sub i32 %899, %902
  %904 = mul i32 %898, %903
  %905 = add i32 %895, %904
  %906 = getelementptr %dimension_descriptor, %dimension_descriptor* %900, i32 0, i32 3
  %907 = load i32, i32* %906, align 4
  %908 = mul i32 %898, %907
  %909 = load i32, i32* %"3_k", align 4
  %910 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %888, i32 0, i32 2
  %911 = getelementptr %dimension_descriptor, %dimension_descriptor* %910, i32 0, i32 1
  %912 = load i32, i32* %911, align 4
  %913 = sub i32 %909, %912
  %914 = mul i32 %908, %913
  %915 = add i32 %905, %914
  %916 = getelementptr %dimension_descriptor, %dimension_descriptor* %910, i32 0, i32 3
  %917 = load i32, i32* %916, align 4
  %918 = mul i32 %908, %917
  %919 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 0
  %920 = getelementptr [4 x %complex_4], [4 x %complex_4]* %919, i32 0, i32 %915
  %921 = load %complex_4, %complex_4* %920, align 4
  %922 = alloca %complex_4, align 8
  store %complex_4 %887, %complex_4* %922, align 4
  %923 = alloca %complex_4, align 8
  store %complex_4 %921, %complex_4* %923, align 4
  %924 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %922, %complex_4* %923, %complex_4* %924)
  %925 = load %complex_4, %complex_4* %924, align 4
  store %complex_4 %925, %complex_4* %853, align 4
  br label %loop.head38

loop.end40:                                       ; preds = %loop.head38
  br label %loop.head36

loop.end41:                                       ; preds = %loop.head36
  br label %loop.head34

loop.end42:                                       ; preds = %loop.head34
  %926 = alloca %array_call, align 8
  %927 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %928 = getelementptr [4 x %complex_4], [4 x %complex_4]* %927, i32 0, i32 0
  %929 = getelementptr %array_call, %array_call* %926, i32 0, i32 0
  store %complex_4* %928, %complex_4** %929, align 8
  %930 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  %931 = load i32, i32* %930, align 4
  %932 = getelementptr %array_call, %array_call* %926, i32 0, i32 1
  store i32 %931, i32* %932, align 4
  %933 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %934 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %933, align 4
  %935 = getelementptr %array_call, %array_call* %926, i32 0, i32 2
  store [3 x %dimension_descriptor] %934, [3 x %dimension_descriptor]* %935, align 4
  %936 = alloca i32, align 4
  store i32 0, i32* %936, align 4
  call void @check(%array_call* %926, i32* %936)
  %937 = alloca %dimension_descriptor*, align 8
  %938 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %939 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %938, i32 0, i32 0
  store %dimension_descriptor* %939, %dimension_descriptor** %937, align 8
  %940 = alloca i32, align 4
  store i32 1, i32* %940, align 4
  %941 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %937, i32* %940)
  %942 = sub i32 %941, 1
  store i32 %942, i32* %"1_k", align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.end50, %loop.end42
  %943 = load i32, i32* %"1_k", align 4
  %944 = add i32 %943, 1
  %945 = alloca %dimension_descriptor*, align 8
  %946 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %947 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %946, i32 0, i32 0
  store %dimension_descriptor* %947, %dimension_descriptor** %945, align 8
  %948 = alloca i32, align 4
  store i32 1, i32* %948, align 4
  %949 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %945, i32* %948)
  %950 = icmp sle i32 %944, %949
  br i1 %950, label %loop.body44, label %loop.end51

loop.body44:                                      ; preds = %loop.head43
  %951 = load i32, i32* %"1_k", align 4
  %952 = add i32 %951, 1
  store i32 %952, i32* %"1_k", align 4
  %953 = alloca %dimension_descriptor*, align 8
  %954 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %955 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %954, i32 0, i32 0
  store %dimension_descriptor* %955, %dimension_descriptor** %953, align 8
  %956 = alloca i32, align 4
  store i32 2, i32* %956, align 4
  %957 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %953, i32* %956)
  %958 = sub i32 %957, 1
  store i32 %958, i32* %"2_k", align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end49, %loop.body44
  %959 = load i32, i32* %"2_k", align 4
  %960 = add i32 %959, 1
  %961 = alloca %dimension_descriptor*, align 8
  %962 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %963 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %962, i32 0, i32 0
  store %dimension_descriptor* %963, %dimension_descriptor** %961, align 8
  %964 = alloca i32, align 4
  store i32 2, i32* %964, align 4
  %965 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %961, i32* %964)
  %966 = icmp sle i32 %960, %965
  br i1 %966, label %loop.body46, label %loop.end50

loop.body46:                                      ; preds = %loop.head45
  %967 = load i32, i32* %"2_k", align 4
  %968 = add i32 %967, 1
  store i32 %968, i32* %"2_k", align 4
  %969 = alloca %dimension_descriptor*, align 8
  %970 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %971 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %970, i32 0, i32 0
  store %dimension_descriptor* %971, %dimension_descriptor** %969, align 8
  %972 = alloca i32, align 4
  store i32 3, i32* %972, align 4
  %973 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %969, i32* %972)
  %974 = sub i32 %973, 1
  store i32 %974, i32* %"3_k", align 4
  br label %loop.head47

loop.head47:                                      ; preds = %loop.body48, %loop.body46
  %975 = load i32, i32* %"3_k", align 4
  %976 = add i32 %975, 1
  %977 = alloca %dimension_descriptor*, align 8
  %978 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %979 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %978, i32 0, i32 0
  store %dimension_descriptor* %979, %dimension_descriptor** %977, align 8
  %980 = alloca i32, align 4
  store i32 3, i32* %980, align 4
  %981 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %977, i32* %980)
  %982 = icmp sle i32 %976, %981
  br i1 %982, label %loop.body48, label %loop.end49

loop.body48:                                      ; preds = %loop.head47
  %983 = load i32, i32* %"3_k", align 4
  %984 = add i32 %983, 1
  store i32 %984, i32* %"3_k", align 4
  %985 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %986 = load i32, i32* %"1_k", align 4
  %987 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %985, i32 0, i32 0
  %988 = getelementptr %dimension_descriptor, %dimension_descriptor* %987, i32 0, i32 1
  %989 = load i32, i32* %988, align 4
  %990 = sub i32 %986, %989
  %991 = mul i32 1, %990
  %992 = add i32 0, %991
  %993 = getelementptr %dimension_descriptor, %dimension_descriptor* %987, i32 0, i32 3
  %994 = load i32, i32* %993, align 4
  %995 = mul i32 1, %994
  %996 = load i32, i32* %"2_k", align 4
  %997 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %985, i32 0, i32 1
  %998 = getelementptr %dimension_descriptor, %dimension_descriptor* %997, i32 0, i32 1
  %999 = load i32, i32* %998, align 4
  %1000 = sub i32 %996, %999
  %1001 = mul i32 %995, %1000
  %1002 = add i32 %992, %1001
  %1003 = getelementptr %dimension_descriptor, %dimension_descriptor* %997, i32 0, i32 3
  %1004 = load i32, i32* %1003, align 4
  %1005 = mul i32 %995, %1004
  %1006 = load i32, i32* %"3_k", align 4
  %1007 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %985, i32 0, i32 2
  %1008 = getelementptr %dimension_descriptor, %dimension_descriptor* %1007, i32 0, i32 1
  %1009 = load i32, i32* %1008, align 4
  %1010 = sub i32 %1006, %1009
  %1011 = mul i32 %1005, %1010
  %1012 = add i32 %1002, %1011
  %1013 = getelementptr %dimension_descriptor, %dimension_descriptor* %1007, i32 0, i32 3
  %1014 = load i32, i32* %1013, align 4
  %1015 = mul i32 %1005, %1014
  %1016 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %1017 = getelementptr [4 x i32], [4 x i32]* %1016, i32 0, i32 %1012
  %1018 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %1019 = load i32, i32* %"1_k", align 4
  %1020 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1018, i32 0, i32 0
  %1021 = getelementptr %dimension_descriptor, %dimension_descriptor* %1020, i32 0, i32 1
  %1022 = load i32, i32* %1021, align 4
  %1023 = sub i32 %1019, %1022
  %1024 = mul i32 1, %1023
  %1025 = add i32 0, %1024
  %1026 = getelementptr %dimension_descriptor, %dimension_descriptor* %1020, i32 0, i32 3
  %1027 = load i32, i32* %1026, align 4
  %1028 = mul i32 1, %1027
  %1029 = load i32, i32* %"2_k", align 4
  %1030 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1018, i32 0, i32 1
  %1031 = getelementptr %dimension_descriptor, %dimension_descriptor* %1030, i32 0, i32 1
  %1032 = load i32, i32* %1031, align 4
  %1033 = sub i32 %1029, %1032
  %1034 = mul i32 %1028, %1033
  %1035 = add i32 %1025, %1034
  %1036 = getelementptr %dimension_descriptor, %dimension_descriptor* %1030, i32 0, i32 3
  %1037 = load i32, i32* %1036, align 4
  %1038 = mul i32 %1028, %1037
  %1039 = load i32, i32* %"3_k", align 4
  %1040 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1018, i32 0, i32 2
  %1041 = getelementptr %dimension_descriptor, %dimension_descriptor* %1040, i32 0, i32 1
  %1042 = load i32, i32* %1041, align 4
  %1043 = sub i32 %1039, %1042
  %1044 = mul i32 %1038, %1043
  %1045 = add i32 %1035, %1044
  %1046 = getelementptr %dimension_descriptor, %dimension_descriptor* %1040, i32 0, i32 3
  %1047 = load i32, i32* %1046, align 4
  %1048 = mul i32 %1038, %1047
  %1049 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %1050 = getelementptr [4 x i32], [4 x i32]* %1049, i32 0, i32 %1045
  %1051 = load i32, i32* %1050, align 4
  %1052 = sub i32 0, %1051
  store i32 %1052, i32* %1017, align 4
  br label %loop.head47

loop.end49:                                       ; preds = %loop.head47
  br label %loop.head45

loop.end50:                                       ; preds = %loop.head45
  br label %loop.head43

loop.end51:                                       ; preds = %loop.head43
  %1053 = alloca %dimension_descriptor*, align 8
  %1054 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1055 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1054, i32 0, i32 0
  store %dimension_descriptor* %1055, %dimension_descriptor** %1053, align 8
  %1056 = alloca i32, align 4
  store i32 1, i32* %1056, align 4
  %1057 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1053, i32* %1056)
  %1058 = sub i32 %1057, 1
  store i32 %1058, i32* %"1_k", align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.end59, %loop.end51
  %1059 = load i32, i32* %"1_k", align 4
  %1060 = add i32 %1059, 1
  %1061 = alloca %dimension_descriptor*, align 8
  %1062 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1063 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1062, i32 0, i32 0
  store %dimension_descriptor* %1063, %dimension_descriptor** %1061, align 8
  %1064 = alloca i32, align 4
  store i32 1, i32* %1064, align 4
  %1065 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1061, i32* %1064)
  %1066 = icmp sle i32 %1060, %1065
  br i1 %1066, label %loop.body53, label %loop.end60

loop.body53:                                      ; preds = %loop.head52
  %1067 = load i32, i32* %"1_k", align 4
  %1068 = add i32 %1067, 1
  store i32 %1068, i32* %"1_k", align 4
  %1069 = alloca %dimension_descriptor*, align 8
  %1070 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1071 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1070, i32 0, i32 0
  store %dimension_descriptor* %1071, %dimension_descriptor** %1069, align 8
  %1072 = alloca i32, align 4
  store i32 2, i32* %1072, align 4
  %1073 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1069, i32* %1072)
  %1074 = sub i32 %1073, 1
  store i32 %1074, i32* %"2_k", align 4
  br label %loop.head54

loop.head54:                                      ; preds = %loop.end58, %loop.body53
  %1075 = load i32, i32* %"2_k", align 4
  %1076 = add i32 %1075, 1
  %1077 = alloca %dimension_descriptor*, align 8
  %1078 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1079 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1078, i32 0, i32 0
  store %dimension_descriptor* %1079, %dimension_descriptor** %1077, align 8
  %1080 = alloca i32, align 4
  store i32 2, i32* %1080, align 4
  %1081 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1077, i32* %1080)
  %1082 = icmp sle i32 %1076, %1081
  br i1 %1082, label %loop.body55, label %loop.end59

loop.body55:                                      ; preds = %loop.head54
  %1083 = load i32, i32* %"2_k", align 4
  %1084 = add i32 %1083, 1
  store i32 %1084, i32* %"2_k", align 4
  %1085 = alloca %dimension_descriptor*, align 8
  %1086 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1087 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1086, i32 0, i32 0
  store %dimension_descriptor* %1087, %dimension_descriptor** %1085, align 8
  %1088 = alloca i32, align 4
  store i32 3, i32* %1088, align 4
  %1089 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1085, i32* %1088)
  %1090 = sub i32 %1089, 1
  store i32 %1090, i32* %"3_k", align 4
  br label %loop.head56

loop.head56:                                      ; preds = %loop.body57, %loop.body55
  %1091 = load i32, i32* %"3_k", align 4
  %1092 = add i32 %1091, 1
  %1093 = alloca %dimension_descriptor*, align 8
  %1094 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1095 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1094, i32 0, i32 0
  store %dimension_descriptor* %1095, %dimension_descriptor** %1093, align 8
  %1096 = alloca i32, align 4
  store i32 3, i32* %1096, align 4
  %1097 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1093, i32* %1096)
  %1098 = icmp sle i32 %1092, %1097
  br i1 %1098, label %loop.body57, label %loop.end58

loop.body57:                                      ; preds = %loop.head56
  %1099 = load i32, i32* %"3_k", align 4
  %1100 = add i32 %1099, 1
  store i32 %1100, i32* %"3_k", align 4
  %1101 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1102 = load i32, i32* %"1_k", align 4
  %1103 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1101, i32 0, i32 0
  %1104 = getelementptr %dimension_descriptor, %dimension_descriptor* %1103, i32 0, i32 1
  %1105 = load i32, i32* %1104, align 4
  %1106 = sub i32 %1102, %1105
  %1107 = mul i32 1, %1106
  %1108 = add i32 0, %1107
  %1109 = getelementptr %dimension_descriptor, %dimension_descriptor* %1103, i32 0, i32 3
  %1110 = load i32, i32* %1109, align 4
  %1111 = mul i32 1, %1110
  %1112 = load i32, i32* %"2_k", align 4
  %1113 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1101, i32 0, i32 1
  %1114 = getelementptr %dimension_descriptor, %dimension_descriptor* %1113, i32 0, i32 1
  %1115 = load i32, i32* %1114, align 4
  %1116 = sub i32 %1112, %1115
  %1117 = mul i32 %1111, %1116
  %1118 = add i32 %1108, %1117
  %1119 = getelementptr %dimension_descriptor, %dimension_descriptor* %1113, i32 0, i32 3
  %1120 = load i32, i32* %1119, align 4
  %1121 = mul i32 %1111, %1120
  %1122 = load i32, i32* %"3_k", align 4
  %1123 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1101, i32 0, i32 2
  %1124 = getelementptr %dimension_descriptor, %dimension_descriptor* %1123, i32 0, i32 1
  %1125 = load i32, i32* %1124, align 4
  %1126 = sub i32 %1122, %1125
  %1127 = mul i32 %1121, %1126
  %1128 = add i32 %1118, %1127
  %1129 = getelementptr %dimension_descriptor, %dimension_descriptor* %1123, i32 0, i32 3
  %1130 = load i32, i32* %1129, align 4
  %1131 = mul i32 %1121, %1130
  %1132 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 0
  %1133 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1132, i32 0, i32 %1128
  %1134 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1135 = load i32, i32* %"1_k", align 4
  %1136 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1134, i32 0, i32 0
  %1137 = getelementptr %dimension_descriptor, %dimension_descriptor* %1136, i32 0, i32 1
  %1138 = load i32, i32* %1137, align 4
  %1139 = sub i32 %1135, %1138
  %1140 = mul i32 1, %1139
  %1141 = add i32 0, %1140
  %1142 = getelementptr %dimension_descriptor, %dimension_descriptor* %1136, i32 0, i32 3
  %1143 = load i32, i32* %1142, align 4
  %1144 = mul i32 1, %1143
  %1145 = load i32, i32* %"2_k", align 4
  %1146 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1134, i32 0, i32 1
  %1147 = getelementptr %dimension_descriptor, %dimension_descriptor* %1146, i32 0, i32 1
  %1148 = load i32, i32* %1147, align 4
  %1149 = sub i32 %1145, %1148
  %1150 = mul i32 %1144, %1149
  %1151 = add i32 %1141, %1150
  %1152 = getelementptr %dimension_descriptor, %dimension_descriptor* %1146, i32 0, i32 3
  %1153 = load i32, i32* %1152, align 4
  %1154 = mul i32 %1144, %1153
  %1155 = load i32, i32* %"3_k", align 4
  %1156 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1134, i32 0, i32 2
  %1157 = getelementptr %dimension_descriptor, %dimension_descriptor* %1156, i32 0, i32 1
  %1158 = load i32, i32* %1157, align 4
  %1159 = sub i32 %1155, %1158
  %1160 = mul i32 %1154, %1159
  %1161 = add i32 %1151, %1160
  %1162 = getelementptr %dimension_descriptor, %dimension_descriptor* %1156, i32 0, i32 3
  %1163 = load i32, i32* %1162, align 4
  %1164 = mul i32 %1154, %1163
  %1165 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %1166 = getelementptr [4 x i32], [4 x i32]* %1165, i32 0, i32 %1161
  %1167 = load i32, i32* %1166, align 4
  %1168 = sitofp i32 %1167 to float
  %1169 = alloca %complex_4, align 8
  %1170 = getelementptr %complex_4, %complex_4* %1169, i32 0, i32 0
  %1171 = getelementptr %complex_4, %complex_4* %1169, i32 0, i32 1
  store float %1168, float* %1170, align 4
  store float 0.000000e+00, float* %1171, align 4
  %1172 = load %complex_4, %complex_4* %1169, align 4
  store %complex_4 %1172, %complex_4* %1133, align 4
  br label %loop.head56

loop.end58:                                       ; preds = %loop.head56
  br label %loop.head54

loop.end59:                                       ; preds = %loop.head54
  br label %loop.head52

loop.end60:                                       ; preds = %loop.head52
  %1173 = alloca %dimension_descriptor*, align 8
  %1174 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1175 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1174, i32 0, i32 0
  store %dimension_descriptor* %1175, %dimension_descriptor** %1173, align 8
  %1176 = alloca i32, align 4
  store i32 1, i32* %1176, align 4
  %1177 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1173, i32* %1176)
  %1178 = sub i32 %1177, 1
  store i32 %1178, i32* %"1_k", align 4
  br label %loop.head61

loop.head61:                                      ; preds = %loop.end68, %loop.end60
  %1179 = load i32, i32* %"1_k", align 4
  %1180 = add i32 %1179, 1
  %1181 = alloca %dimension_descriptor*, align 8
  %1182 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1183 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1182, i32 0, i32 0
  store %dimension_descriptor* %1183, %dimension_descriptor** %1181, align 8
  %1184 = alloca i32, align 4
  store i32 1, i32* %1184, align 4
  %1185 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1181, i32* %1184)
  %1186 = icmp sle i32 %1180, %1185
  br i1 %1186, label %loop.body62, label %loop.end69

loop.body62:                                      ; preds = %loop.head61
  %1187 = load i32, i32* %"1_k", align 4
  %1188 = add i32 %1187, 1
  store i32 %1188, i32* %"1_k", align 4
  %1189 = alloca %dimension_descriptor*, align 8
  %1190 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1191 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1190, i32 0, i32 0
  store %dimension_descriptor* %1191, %dimension_descriptor** %1189, align 8
  %1192 = alloca i32, align 4
  store i32 2, i32* %1192, align 4
  %1193 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1189, i32* %1192)
  %1194 = sub i32 %1193, 1
  store i32 %1194, i32* %"2_k", align 4
  br label %loop.head63

loop.head63:                                      ; preds = %loop.end67, %loop.body62
  %1195 = load i32, i32* %"2_k", align 4
  %1196 = add i32 %1195, 1
  %1197 = alloca %dimension_descriptor*, align 8
  %1198 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1199 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1198, i32 0, i32 0
  store %dimension_descriptor* %1199, %dimension_descriptor** %1197, align 8
  %1200 = alloca i32, align 4
  store i32 2, i32* %1200, align 4
  %1201 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1197, i32* %1200)
  %1202 = icmp sle i32 %1196, %1201
  br i1 %1202, label %loop.body64, label %loop.end68

loop.body64:                                      ; preds = %loop.head63
  %1203 = load i32, i32* %"2_k", align 4
  %1204 = add i32 %1203, 1
  store i32 %1204, i32* %"2_k", align 4
  %1205 = alloca %dimension_descriptor*, align 8
  %1206 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1207 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1206, i32 0, i32 0
  store %dimension_descriptor* %1207, %dimension_descriptor** %1205, align 8
  %1208 = alloca i32, align 4
  store i32 3, i32* %1208, align 4
  %1209 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1205, i32* %1208)
  %1210 = sub i32 %1209, 1
  store i32 %1210, i32* %"3_k", align 4
  br label %loop.head65

loop.head65:                                      ; preds = %loop.body66, %loop.body64
  %1211 = load i32, i32* %"3_k", align 4
  %1212 = add i32 %1211, 1
  %1213 = alloca %dimension_descriptor*, align 8
  %1214 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1215 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1214, i32 0, i32 0
  store %dimension_descriptor* %1215, %dimension_descriptor** %1213, align 8
  %1216 = alloca i32, align 4
  store i32 3, i32* %1216, align 4
  %1217 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1213, i32* %1216)
  %1218 = icmp sle i32 %1212, %1217
  br i1 %1218, label %loop.body66, label %loop.end67

loop.body66:                                      ; preds = %loop.head65
  %1219 = load i32, i32* %"3_k", align 4
  %1220 = add i32 %1219, 1
  store i32 %1220, i32* %"3_k", align 4
  %1221 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1222 = load i32, i32* %"1_k", align 4
  %1223 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1221, i32 0, i32 0
  %1224 = getelementptr %dimension_descriptor, %dimension_descriptor* %1223, i32 0, i32 1
  %1225 = load i32, i32* %1224, align 4
  %1226 = sub i32 %1222, %1225
  %1227 = mul i32 1, %1226
  %1228 = add i32 0, %1227
  %1229 = getelementptr %dimension_descriptor, %dimension_descriptor* %1223, i32 0, i32 3
  %1230 = load i32, i32* %1229, align 4
  %1231 = mul i32 1, %1230
  %1232 = load i32, i32* %"2_k", align 4
  %1233 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1221, i32 0, i32 1
  %1234 = getelementptr %dimension_descriptor, %dimension_descriptor* %1233, i32 0, i32 1
  %1235 = load i32, i32* %1234, align 4
  %1236 = sub i32 %1232, %1235
  %1237 = mul i32 %1231, %1236
  %1238 = add i32 %1228, %1237
  %1239 = getelementptr %dimension_descriptor, %dimension_descriptor* %1233, i32 0, i32 3
  %1240 = load i32, i32* %1239, align 4
  %1241 = mul i32 %1231, %1240
  %1242 = load i32, i32* %"3_k", align 4
  %1243 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1221, i32 0, i32 2
  %1244 = getelementptr %dimension_descriptor, %dimension_descriptor* %1243, i32 0, i32 1
  %1245 = load i32, i32* %1244, align 4
  %1246 = sub i32 %1242, %1245
  %1247 = mul i32 %1241, %1246
  %1248 = add i32 %1238, %1247
  %1249 = getelementptr %dimension_descriptor, %dimension_descriptor* %1243, i32 0, i32 3
  %1250 = load i32, i32* %1249, align 4
  %1251 = mul i32 %1241, %1250
  %1252 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %1253 = getelementptr [4 x i32], [4 x i32]* %1252, i32 0, i32 %1248
  %1254 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %1255 = load i32, i32* %"1_k", align 4
  %1256 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1254, i32 0, i32 0
  %1257 = getelementptr %dimension_descriptor, %dimension_descriptor* %1256, i32 0, i32 1
  %1258 = load i32, i32* %1257, align 4
  %1259 = sub i32 %1255, %1258
  %1260 = mul i32 1, %1259
  %1261 = add i32 0, %1260
  %1262 = getelementptr %dimension_descriptor, %dimension_descriptor* %1256, i32 0, i32 3
  %1263 = load i32, i32* %1262, align 4
  %1264 = mul i32 1, %1263
  %1265 = load i32, i32* %"2_k", align 4
  %1266 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1254, i32 0, i32 1
  %1267 = getelementptr %dimension_descriptor, %dimension_descriptor* %1266, i32 0, i32 1
  %1268 = load i32, i32* %1267, align 4
  %1269 = sub i32 %1265, %1268
  %1270 = mul i32 %1264, %1269
  %1271 = add i32 %1261, %1270
  %1272 = getelementptr %dimension_descriptor, %dimension_descriptor* %1266, i32 0, i32 3
  %1273 = load i32, i32* %1272, align 4
  %1274 = mul i32 %1264, %1273
  %1275 = load i32, i32* %"3_k", align 4
  %1276 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1254, i32 0, i32 2
  %1277 = getelementptr %dimension_descriptor, %dimension_descriptor* %1276, i32 0, i32 1
  %1278 = load i32, i32* %1277, align 4
  %1279 = sub i32 %1275, %1278
  %1280 = mul i32 %1274, %1279
  %1281 = add i32 %1271, %1280
  %1282 = getelementptr %dimension_descriptor, %dimension_descriptor* %1276, i32 0, i32 3
  %1283 = load i32, i32* %1282, align 4
  %1284 = mul i32 %1274, %1283
  %1285 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %1286 = getelementptr [4 x i32], [4 x i32]* %1285, i32 0, i32 %1281
  %1287 = load i32, i32* %1286, align 4
  %1288 = sub i32 0, %1287
  store i32 %1288, i32* %1253, align 4
  br label %loop.head65

loop.end67:                                       ; preds = %loop.head65
  br label %loop.head63

loop.end68:                                       ; preds = %loop.head63
  br label %loop.head61

loop.end69:                                       ; preds = %loop.head61
  %1289 = alloca %dimension_descriptor*, align 8
  %1290 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1291 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1290, i32 0, i32 0
  store %dimension_descriptor* %1291, %dimension_descriptor** %1289, align 8
  %1292 = alloca i32, align 4
  store i32 1, i32* %1292, align 4
  %1293 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1289, i32* %1292)
  %1294 = sub i32 %1293, 1
  store i32 %1294, i32* %"1_k", align 4
  br label %loop.head70

loop.head70:                                      ; preds = %loop.end77, %loop.end69
  %1295 = load i32, i32* %"1_k", align 4
  %1296 = add i32 %1295, 1
  %1297 = alloca %dimension_descriptor*, align 8
  %1298 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1299 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1298, i32 0, i32 0
  store %dimension_descriptor* %1299, %dimension_descriptor** %1297, align 8
  %1300 = alloca i32, align 4
  store i32 1, i32* %1300, align 4
  %1301 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1297, i32* %1300)
  %1302 = icmp sle i32 %1296, %1301
  br i1 %1302, label %loop.body71, label %loop.end78

loop.body71:                                      ; preds = %loop.head70
  %1303 = load i32, i32* %"1_k", align 4
  %1304 = add i32 %1303, 1
  store i32 %1304, i32* %"1_k", align 4
  %1305 = alloca %dimension_descriptor*, align 8
  %1306 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1307 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1306, i32 0, i32 0
  store %dimension_descriptor* %1307, %dimension_descriptor** %1305, align 8
  %1308 = alloca i32, align 4
  store i32 2, i32* %1308, align 4
  %1309 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1305, i32* %1308)
  %1310 = sub i32 %1309, 1
  store i32 %1310, i32* %"2_k", align 4
  br label %loop.head72

loop.head72:                                      ; preds = %loop.end76, %loop.body71
  %1311 = load i32, i32* %"2_k", align 4
  %1312 = add i32 %1311, 1
  %1313 = alloca %dimension_descriptor*, align 8
  %1314 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1315 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1314, i32 0, i32 0
  store %dimension_descriptor* %1315, %dimension_descriptor** %1313, align 8
  %1316 = alloca i32, align 4
  store i32 2, i32* %1316, align 4
  %1317 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1313, i32* %1316)
  %1318 = icmp sle i32 %1312, %1317
  br i1 %1318, label %loop.body73, label %loop.end77

loop.body73:                                      ; preds = %loop.head72
  %1319 = load i32, i32* %"2_k", align 4
  %1320 = add i32 %1319, 1
  store i32 %1320, i32* %"2_k", align 4
  %1321 = alloca %dimension_descriptor*, align 8
  %1322 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1323 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1322, i32 0, i32 0
  store %dimension_descriptor* %1323, %dimension_descriptor** %1321, align 8
  %1324 = alloca i32, align 4
  store i32 3, i32* %1324, align 4
  %1325 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1321, i32* %1324)
  %1326 = sub i32 %1325, 1
  store i32 %1326, i32* %"3_k", align 4
  br label %loop.head74

loop.head74:                                      ; preds = %loop.body75, %loop.body73
  %1327 = load i32, i32* %"3_k", align 4
  %1328 = add i32 %1327, 1
  %1329 = alloca %dimension_descriptor*, align 8
  %1330 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1331 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1330, i32 0, i32 0
  store %dimension_descriptor* %1331, %dimension_descriptor** %1329, align 8
  %1332 = alloca i32, align 4
  store i32 3, i32* %1332, align 4
  %1333 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1329, i32* %1332)
  %1334 = icmp sle i32 %1328, %1333
  br i1 %1334, label %loop.body75, label %loop.end76

loop.body75:                                      ; preds = %loop.head74
  %1335 = load i32, i32* %"3_k", align 4
  %1336 = add i32 %1335, 1
  store i32 %1336, i32* %"3_k", align 4
  %1337 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1338 = load i32, i32* %"1_k", align 4
  %1339 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1337, i32 0, i32 0
  %1340 = getelementptr %dimension_descriptor, %dimension_descriptor* %1339, i32 0, i32 1
  %1341 = load i32, i32* %1340, align 4
  %1342 = sub i32 %1338, %1341
  %1343 = mul i32 1, %1342
  %1344 = add i32 0, %1343
  %1345 = getelementptr %dimension_descriptor, %dimension_descriptor* %1339, i32 0, i32 3
  %1346 = load i32, i32* %1345, align 4
  %1347 = mul i32 1, %1346
  %1348 = load i32, i32* %"2_k", align 4
  %1349 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1337, i32 0, i32 1
  %1350 = getelementptr %dimension_descriptor, %dimension_descriptor* %1349, i32 0, i32 1
  %1351 = load i32, i32* %1350, align 4
  %1352 = sub i32 %1348, %1351
  %1353 = mul i32 %1347, %1352
  %1354 = add i32 %1344, %1353
  %1355 = getelementptr %dimension_descriptor, %dimension_descriptor* %1349, i32 0, i32 3
  %1356 = load i32, i32* %1355, align 4
  %1357 = mul i32 %1347, %1356
  %1358 = load i32, i32* %"3_k", align 4
  %1359 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1337, i32 0, i32 2
  %1360 = getelementptr %dimension_descriptor, %dimension_descriptor* %1359, i32 0, i32 1
  %1361 = load i32, i32* %1360, align 4
  %1362 = sub i32 %1358, %1361
  %1363 = mul i32 %1357, %1362
  %1364 = add i32 %1354, %1363
  %1365 = getelementptr %dimension_descriptor, %dimension_descriptor* %1359, i32 0, i32 3
  %1366 = load i32, i32* %1365, align 4
  %1367 = mul i32 %1357, %1366
  %1368 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 0
  %1369 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1368, i32 0, i32 %1364
  %1370 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1371 = load i32, i32* %"1_k", align 4
  %1372 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1370, i32 0, i32 0
  %1373 = getelementptr %dimension_descriptor, %dimension_descriptor* %1372, i32 0, i32 1
  %1374 = load i32, i32* %1373, align 4
  %1375 = sub i32 %1371, %1374
  %1376 = mul i32 1, %1375
  %1377 = add i32 0, %1376
  %1378 = getelementptr %dimension_descriptor, %dimension_descriptor* %1372, i32 0, i32 3
  %1379 = load i32, i32* %1378, align 4
  %1380 = mul i32 1, %1379
  %1381 = load i32, i32* %"2_k", align 4
  %1382 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1370, i32 0, i32 1
  %1383 = getelementptr %dimension_descriptor, %dimension_descriptor* %1382, i32 0, i32 1
  %1384 = load i32, i32* %1383, align 4
  %1385 = sub i32 %1381, %1384
  %1386 = mul i32 %1380, %1385
  %1387 = add i32 %1377, %1386
  %1388 = getelementptr %dimension_descriptor, %dimension_descriptor* %1382, i32 0, i32 3
  %1389 = load i32, i32* %1388, align 4
  %1390 = mul i32 %1380, %1389
  %1391 = load i32, i32* %"3_k", align 4
  %1392 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1370, i32 0, i32 2
  %1393 = getelementptr %dimension_descriptor, %dimension_descriptor* %1392, i32 0, i32 1
  %1394 = load i32, i32* %1393, align 4
  %1395 = sub i32 %1391, %1394
  %1396 = mul i32 %1390, %1395
  %1397 = add i32 %1387, %1396
  %1398 = getelementptr %dimension_descriptor, %dimension_descriptor* %1392, i32 0, i32 3
  %1399 = load i32, i32* %1398, align 4
  %1400 = mul i32 %1390, %1399
  %1401 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %1402 = getelementptr [4 x i32], [4 x i32]* %1401, i32 0, i32 %1397
  %1403 = load i32, i32* %1402, align 4
  %1404 = sitofp i32 %1403 to float
  %1405 = alloca %complex_4, align 8
  %1406 = getelementptr %complex_4, %complex_4* %1405, i32 0, i32 0
  %1407 = getelementptr %complex_4, %complex_4* %1405, i32 0, i32 1
  store float %1404, float* %1406, align 4
  store float 0.000000e+00, float* %1407, align 4
  %1408 = load %complex_4, %complex_4* %1405, align 4
  store %complex_4 %1408, %complex_4* %1369, align 4
  br label %loop.head74

loop.end76:                                       ; preds = %loop.head74
  br label %loop.head72

loop.end77:                                       ; preds = %loop.head72
  br label %loop.head70

loop.end78:                                       ; preds = %loop.head70
  %1409 = alloca %dimension_descriptor*, align 8
  %1410 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1411 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1410, i32 0, i32 0
  store %dimension_descriptor* %1411, %dimension_descriptor** %1409, align 8
  %1412 = alloca i32, align 4
  store i32 1, i32* %1412, align 4
  %1413 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1409, i32* %1412)
  %1414 = sub i32 %1413, 1
  store i32 %1414, i32* %"1_k", align 4
  br label %loop.head79

loop.head79:                                      ; preds = %loop.end86, %loop.end78
  %1415 = load i32, i32* %"1_k", align 4
  %1416 = add i32 %1415, 1
  %1417 = alloca %dimension_descriptor*, align 8
  %1418 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1419 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1418, i32 0, i32 0
  store %dimension_descriptor* %1419, %dimension_descriptor** %1417, align 8
  %1420 = alloca i32, align 4
  store i32 1, i32* %1420, align 4
  %1421 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1417, i32* %1420)
  %1422 = icmp sle i32 %1416, %1421
  br i1 %1422, label %loop.body80, label %loop.end87

loop.body80:                                      ; preds = %loop.head79
  %1423 = load i32, i32* %"1_k", align 4
  %1424 = add i32 %1423, 1
  store i32 %1424, i32* %"1_k", align 4
  %1425 = alloca %dimension_descriptor*, align 8
  %1426 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1427 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1426, i32 0, i32 0
  store %dimension_descriptor* %1427, %dimension_descriptor** %1425, align 8
  %1428 = alloca i32, align 4
  store i32 2, i32* %1428, align 4
  %1429 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1425, i32* %1428)
  %1430 = sub i32 %1429, 1
  store i32 %1430, i32* %"2_k", align 4
  br label %loop.head81

loop.head81:                                      ; preds = %loop.end85, %loop.body80
  %1431 = load i32, i32* %"2_k", align 4
  %1432 = add i32 %1431, 1
  %1433 = alloca %dimension_descriptor*, align 8
  %1434 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1435 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1434, i32 0, i32 0
  store %dimension_descriptor* %1435, %dimension_descriptor** %1433, align 8
  %1436 = alloca i32, align 4
  store i32 2, i32* %1436, align 4
  %1437 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1433, i32* %1436)
  %1438 = icmp sle i32 %1432, %1437
  br i1 %1438, label %loop.body82, label %loop.end86

loop.body82:                                      ; preds = %loop.head81
  %1439 = load i32, i32* %"2_k", align 4
  %1440 = add i32 %1439, 1
  store i32 %1440, i32* %"2_k", align 4
  %1441 = alloca %dimension_descriptor*, align 8
  %1442 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1443 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1442, i32 0, i32 0
  store %dimension_descriptor* %1443, %dimension_descriptor** %1441, align 8
  %1444 = alloca i32, align 4
  store i32 3, i32* %1444, align 4
  %1445 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1441, i32* %1444)
  %1446 = sub i32 %1445, 1
  store i32 %1446, i32* %"3_k", align 4
  br label %loop.head83

loop.head83:                                      ; preds = %loop.body84, %loop.body82
  %1447 = load i32, i32* %"3_k", align 4
  %1448 = add i32 %1447, 1
  %1449 = alloca %dimension_descriptor*, align 8
  %1450 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1451 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1450, i32 0, i32 0
  store %dimension_descriptor* %1451, %dimension_descriptor** %1449, align 8
  %1452 = alloca i32, align 4
  store i32 3, i32* %1452, align 4
  %1453 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1449, i32* %1452)
  %1454 = icmp sle i32 %1448, %1453
  br i1 %1454, label %loop.body84, label %loop.end85

loop.body84:                                      ; preds = %loop.head83
  %1455 = load i32, i32* %"3_k", align 4
  %1456 = add i32 %1455, 1
  store i32 %1456, i32* %"3_k", align 4
  %1457 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1458 = load i32, i32* %"1_k", align 4
  %1459 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1457, i32 0, i32 0
  %1460 = getelementptr %dimension_descriptor, %dimension_descriptor* %1459, i32 0, i32 1
  %1461 = load i32, i32* %1460, align 4
  %1462 = sub i32 %1458, %1461
  %1463 = mul i32 1, %1462
  %1464 = add i32 0, %1463
  %1465 = getelementptr %dimension_descriptor, %dimension_descriptor* %1459, i32 0, i32 3
  %1466 = load i32, i32* %1465, align 4
  %1467 = mul i32 1, %1466
  %1468 = load i32, i32* %"2_k", align 4
  %1469 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1457, i32 0, i32 1
  %1470 = getelementptr %dimension_descriptor, %dimension_descriptor* %1469, i32 0, i32 1
  %1471 = load i32, i32* %1470, align 4
  %1472 = sub i32 %1468, %1471
  %1473 = mul i32 %1467, %1472
  %1474 = add i32 %1464, %1473
  %1475 = getelementptr %dimension_descriptor, %dimension_descriptor* %1469, i32 0, i32 3
  %1476 = load i32, i32* %1475, align 4
  %1477 = mul i32 %1467, %1476
  %1478 = load i32, i32* %"3_k", align 4
  %1479 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1457, i32 0, i32 2
  %1480 = getelementptr %dimension_descriptor, %dimension_descriptor* %1479, i32 0, i32 1
  %1481 = load i32, i32* %1480, align 4
  %1482 = sub i32 %1478, %1481
  %1483 = mul i32 %1477, %1482
  %1484 = add i32 %1474, %1483
  %1485 = getelementptr %dimension_descriptor, %dimension_descriptor* %1479, i32 0, i32 3
  %1486 = load i32, i32* %1485, align 4
  %1487 = mul i32 %1477, %1486
  %1488 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 0
  %1489 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1488, i32 0, i32 %1484
  %1490 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1491 = load i32, i32* %"1_k", align 4
  %1492 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1490, i32 0, i32 0
  %1493 = getelementptr %dimension_descriptor, %dimension_descriptor* %1492, i32 0, i32 1
  %1494 = load i32, i32* %1493, align 4
  %1495 = sub i32 %1491, %1494
  %1496 = mul i32 1, %1495
  %1497 = add i32 0, %1496
  %1498 = getelementptr %dimension_descriptor, %dimension_descriptor* %1492, i32 0, i32 3
  %1499 = load i32, i32* %1498, align 4
  %1500 = mul i32 1, %1499
  %1501 = load i32, i32* %"2_k", align 4
  %1502 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1490, i32 0, i32 1
  %1503 = getelementptr %dimension_descriptor, %dimension_descriptor* %1502, i32 0, i32 1
  %1504 = load i32, i32* %1503, align 4
  %1505 = sub i32 %1501, %1504
  %1506 = mul i32 %1500, %1505
  %1507 = add i32 %1497, %1506
  %1508 = getelementptr %dimension_descriptor, %dimension_descriptor* %1502, i32 0, i32 3
  %1509 = load i32, i32* %1508, align 4
  %1510 = mul i32 %1500, %1509
  %1511 = load i32, i32* %"3_k", align 4
  %1512 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1490, i32 0, i32 2
  %1513 = getelementptr %dimension_descriptor, %dimension_descriptor* %1512, i32 0, i32 1
  %1514 = load i32, i32* %1513, align 4
  %1515 = sub i32 %1511, %1514
  %1516 = mul i32 %1510, %1515
  %1517 = add i32 %1507, %1516
  %1518 = getelementptr %dimension_descriptor, %dimension_descriptor* %1512, i32 0, i32 3
  %1519 = load i32, i32* %1518, align 4
  %1520 = mul i32 %1510, %1519
  %1521 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 0
  %1522 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1521, i32 0, i32 %1517
  %1523 = load %complex_4, %complex_4* %1522, align 4
  %1524 = alloca %complex_4, align 8
  %1525 = getelementptr %complex_4, %complex_4* %1524, i32 0, i32 0
  %1526 = getelementptr %complex_4, %complex_4* %1524, i32 0, i32 1
  store float 0.000000e+00, float* %1525, align 4
  store float 1.000000e+00, float* %1526, align 4
  %1527 = load %complex_4, %complex_4* %1524, align 4
  %1528 = alloca %complex_4, align 8
  store %complex_4 %1523, %complex_4* %1528, align 4
  %1529 = alloca %complex_4, align 8
  store %complex_4 %1527, %complex_4* %1529, align 4
  %1530 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %1528, %complex_4* %1529, %complex_4* %1530)
  %1531 = load %complex_4, %complex_4* %1530, align 4
  store %complex_4 %1531, %complex_4* %1489, align 4
  br label %loop.head83

loop.end85:                                       ; preds = %loop.head83
  br label %loop.head81

loop.end86:                                       ; preds = %loop.head81
  br label %loop.head79

loop.end87:                                       ; preds = %loop.head79
  %1532 = alloca %dimension_descriptor*, align 8
  %1533 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1534 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1533, i32 0, i32 0
  store %dimension_descriptor* %1534, %dimension_descriptor** %1532, align 8
  %1535 = alloca i32, align 4
  store i32 1, i32* %1535, align 4
  %1536 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1532, i32* %1535)
  %1537 = sub i32 %1536, 1
  store i32 %1537, i32* %"1_k", align 4
  br label %loop.head88

loop.head88:                                      ; preds = %loop.end95, %loop.end87
  %1538 = load i32, i32* %"1_k", align 4
  %1539 = add i32 %1538, 1
  %1540 = alloca %dimension_descriptor*, align 8
  %1541 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1542 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1541, i32 0, i32 0
  store %dimension_descriptor* %1542, %dimension_descriptor** %1540, align 8
  %1543 = alloca i32, align 4
  store i32 1, i32* %1543, align 4
  %1544 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1540, i32* %1543)
  %1545 = icmp sle i32 %1539, %1544
  br i1 %1545, label %loop.body89, label %loop.end96

loop.body89:                                      ; preds = %loop.head88
  %1546 = load i32, i32* %"1_k", align 4
  %1547 = add i32 %1546, 1
  store i32 %1547, i32* %"1_k", align 4
  %1548 = alloca %dimension_descriptor*, align 8
  %1549 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1550 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1549, i32 0, i32 0
  store %dimension_descriptor* %1550, %dimension_descriptor** %1548, align 8
  %1551 = alloca i32, align 4
  store i32 2, i32* %1551, align 4
  %1552 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1548, i32* %1551)
  %1553 = sub i32 %1552, 1
  store i32 %1553, i32* %"2_k", align 4
  br label %loop.head90

loop.head90:                                      ; preds = %loop.end94, %loop.body89
  %1554 = load i32, i32* %"2_k", align 4
  %1555 = add i32 %1554, 1
  %1556 = alloca %dimension_descriptor*, align 8
  %1557 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1558 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1557, i32 0, i32 0
  store %dimension_descriptor* %1558, %dimension_descriptor** %1556, align 8
  %1559 = alloca i32, align 4
  store i32 2, i32* %1559, align 4
  %1560 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1556, i32* %1559)
  %1561 = icmp sle i32 %1555, %1560
  br i1 %1561, label %loop.body91, label %loop.end95

loop.body91:                                      ; preds = %loop.head90
  %1562 = load i32, i32* %"2_k", align 4
  %1563 = add i32 %1562, 1
  store i32 %1563, i32* %"2_k", align 4
  %1564 = alloca %dimension_descriptor*, align 8
  %1565 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1566 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1565, i32 0, i32 0
  store %dimension_descriptor* %1566, %dimension_descriptor** %1564, align 8
  %1567 = alloca i32, align 4
  store i32 3, i32* %1567, align 4
  %1568 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %1564, i32* %1567)
  %1569 = sub i32 %1568, 1
  store i32 %1569, i32* %"3_k", align 4
  br label %loop.head92

loop.head92:                                      ; preds = %loop.body93, %loop.body91
  %1570 = load i32, i32* %"3_k", align 4
  %1571 = add i32 %1570, 1
  %1572 = alloca %dimension_descriptor*, align 8
  %1573 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1574 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1573, i32 0, i32 0
  store %dimension_descriptor* %1574, %dimension_descriptor** %1572, align 8
  %1575 = alloca i32, align 4
  store i32 3, i32* %1575, align 4
  %1576 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %1572, i32* %1575)
  %1577 = icmp sle i32 %1571, %1576
  br i1 %1577, label %loop.body93, label %loop.end94

loop.body93:                                      ; preds = %loop.head92
  %1578 = load i32, i32* %"3_k", align 4
  %1579 = add i32 %1578, 1
  store i32 %1579, i32* %"3_k", align 4
  %1580 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1581 = load i32, i32* %"1_k", align 4
  %1582 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1580, i32 0, i32 0
  %1583 = getelementptr %dimension_descriptor, %dimension_descriptor* %1582, i32 0, i32 1
  %1584 = load i32, i32* %1583, align 4
  %1585 = sub i32 %1581, %1584
  %1586 = mul i32 1, %1585
  %1587 = add i32 0, %1586
  %1588 = getelementptr %dimension_descriptor, %dimension_descriptor* %1582, i32 0, i32 3
  %1589 = load i32, i32* %1588, align 4
  %1590 = mul i32 1, %1589
  %1591 = load i32, i32* %"2_k", align 4
  %1592 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1580, i32 0, i32 1
  %1593 = getelementptr %dimension_descriptor, %dimension_descriptor* %1592, i32 0, i32 1
  %1594 = load i32, i32* %1593, align 4
  %1595 = sub i32 %1591, %1594
  %1596 = mul i32 %1590, %1595
  %1597 = add i32 %1587, %1596
  %1598 = getelementptr %dimension_descriptor, %dimension_descriptor* %1592, i32 0, i32 3
  %1599 = load i32, i32* %1598, align 4
  %1600 = mul i32 %1590, %1599
  %1601 = load i32, i32* %"3_k", align 4
  %1602 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1580, i32 0, i32 2
  %1603 = getelementptr %dimension_descriptor, %dimension_descriptor* %1602, i32 0, i32 1
  %1604 = load i32, i32* %1603, align 4
  %1605 = sub i32 %1601, %1604
  %1606 = mul i32 %1600, %1605
  %1607 = add i32 %1597, %1606
  %1608 = getelementptr %dimension_descriptor, %dimension_descriptor* %1602, i32 0, i32 3
  %1609 = load i32, i32* %1608, align 4
  %1610 = mul i32 %1600, %1609
  %1611 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %1612 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1611, i32 0, i32 %1607
  %1613 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1614 = load i32, i32* %"1_k", align 4
  %1615 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1613, i32 0, i32 0
  %1616 = getelementptr %dimension_descriptor, %dimension_descriptor* %1615, i32 0, i32 1
  %1617 = load i32, i32* %1616, align 4
  %1618 = sub i32 %1614, %1617
  %1619 = mul i32 1, %1618
  %1620 = add i32 0, %1619
  %1621 = getelementptr %dimension_descriptor, %dimension_descriptor* %1615, i32 0, i32 3
  %1622 = load i32, i32* %1621, align 4
  %1623 = mul i32 1, %1622
  %1624 = load i32, i32* %"2_k", align 4
  %1625 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1613, i32 0, i32 1
  %1626 = getelementptr %dimension_descriptor, %dimension_descriptor* %1625, i32 0, i32 1
  %1627 = load i32, i32* %1626, align 4
  %1628 = sub i32 %1624, %1627
  %1629 = mul i32 %1623, %1628
  %1630 = add i32 %1620, %1629
  %1631 = getelementptr %dimension_descriptor, %dimension_descriptor* %1625, i32 0, i32 3
  %1632 = load i32, i32* %1631, align 4
  %1633 = mul i32 %1623, %1632
  %1634 = load i32, i32* %"3_k", align 4
  %1635 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1613, i32 0, i32 2
  %1636 = getelementptr %dimension_descriptor, %dimension_descriptor* %1635, i32 0, i32 1
  %1637 = load i32, i32* %1636, align 4
  %1638 = sub i32 %1634, %1637
  %1639 = mul i32 %1633, %1638
  %1640 = add i32 %1630, %1639
  %1641 = getelementptr %dimension_descriptor, %dimension_descriptor* %1635, i32 0, i32 3
  %1642 = load i32, i32* %1641, align 4
  %1643 = mul i32 %1633, %1642
  %1644 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 0
  %1645 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1644, i32 0, i32 %1640
  %1646 = load %complex_4, %complex_4* %1645, align 4
  %1647 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1648 = load i32, i32* %"1_k", align 4
  %1649 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1647, i32 0, i32 0
  %1650 = getelementptr %dimension_descriptor, %dimension_descriptor* %1649, i32 0, i32 1
  %1651 = load i32, i32* %1650, align 4
  %1652 = sub i32 %1648, %1651
  %1653 = mul i32 1, %1652
  %1654 = add i32 0, %1653
  %1655 = getelementptr %dimension_descriptor, %dimension_descriptor* %1649, i32 0, i32 3
  %1656 = load i32, i32* %1655, align 4
  %1657 = mul i32 1, %1656
  %1658 = load i32, i32* %"2_k", align 4
  %1659 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1647, i32 0, i32 1
  %1660 = getelementptr %dimension_descriptor, %dimension_descriptor* %1659, i32 0, i32 1
  %1661 = load i32, i32* %1660, align 4
  %1662 = sub i32 %1658, %1661
  %1663 = mul i32 %1657, %1662
  %1664 = add i32 %1654, %1663
  %1665 = getelementptr %dimension_descriptor, %dimension_descriptor* %1659, i32 0, i32 3
  %1666 = load i32, i32* %1665, align 4
  %1667 = mul i32 %1657, %1666
  %1668 = load i32, i32* %"3_k", align 4
  %1669 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1647, i32 0, i32 2
  %1670 = getelementptr %dimension_descriptor, %dimension_descriptor* %1669, i32 0, i32 1
  %1671 = load i32, i32* %1670, align 4
  %1672 = sub i32 %1668, %1671
  %1673 = mul i32 %1667, %1672
  %1674 = add i32 %1664, %1673
  %1675 = getelementptr %dimension_descriptor, %dimension_descriptor* %1669, i32 0, i32 3
  %1676 = load i32, i32* %1675, align 4
  %1677 = mul i32 %1667, %1676
  %1678 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 0
  %1679 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1678, i32 0, i32 %1674
  %1680 = load %complex_4, %complex_4* %1679, align 4
  %1681 = alloca %complex_4, align 8
  store %complex_4 %1646, %complex_4* %1681, align 4
  %1682 = alloca %complex_4, align 8
  store %complex_4 %1680, %complex_4* %1682, align 4
  %1683 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %1681, %complex_4* %1682, %complex_4* %1683)
  %1684 = load %complex_4, %complex_4* %1683, align 4
  store %complex_4 %1684, %complex_4* %1612, align 4
  br label %loop.head92

loop.end94:                                       ; preds = %loop.head92
  br label %loop.head90

loop.end95:                                       ; preds = %loop.head90
  br label %loop.head88

loop.end96:                                       ; preds = %loop.head88
  %1685 = alloca %array_call, align 8
  %1686 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %1687 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1686, i32 0, i32 0
  %1688 = getelementptr %array_call, %array_call* %1685, i32 0, i32 0
  store %complex_4* %1687, %complex_4** %1688, align 8
  %1689 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  %1690 = load i32, i32* %1689, align 4
  %1691 = getelementptr %array_call, %array_call* %1685, i32 0, i32 1
  store i32 %1690, i32* %1691, align 4
  %1692 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1693 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1692, align 4
  %1694 = getelementptr %array_call, %array_call* %1685, i32 0, i32 2
  store [3 x %dimension_descriptor] %1693, [3 x %dimension_descriptor]* %1694, align 4
  %1695 = alloca i32, align 4
  store i32 1, i32* %1695, align 4
  call void @check(%array_call* %1685, i32* %1695)
  ret i32 0
}

