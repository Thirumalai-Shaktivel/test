; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { %complex_4*, i32, [3 x %dimension_descriptor], i1 }
%complex_4 = type { float, float }
%array.1 = type { [4 x i32], i32, [3 x %dimension_descriptor], i1 }
%array.2 = type { [4 x %complex_4], i32, [3 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define void @check(%array.0* %c, i32* %op_code) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %left = alloca float, align 4
  %right = alloca float, align 4
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end14, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end15

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end14

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont13, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %op_code, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %then, label %else6

then:                                             ; preds = %loop.body4
  %50 = load i32, i32* %i, align 4
  %51 = load i32, i32* %j, align 4
  %52 = add i32 %50, %51
  %53 = load i32, i32* %k, align 4
  %54 = add i32 %52, %53
  %55 = sitofp i32 %54 to float
  store float %55, float* %left, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32, i32* %j, align 4
  %58 = mul i32 %56, %57
  %59 = load i32, i32* %k, align 4
  %60 = mul i32 %58, %59
  %61 = sitofp i32 %60 to float
  store float %61, float* %right, align 4
  %62 = load i32, i32* %i, align 4
  %63 = load i32, i32* %j, align 4
  %64 = load i32, i32* %k, align 4
  %65 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %66 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %65, i32 0, i32 0
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 %62, %68
  %70 = mul i32 1, %69
  %71 = add i32 0, %70
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 1, %73
  %75 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %65, i32 0, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %63, %77
  %79 = mul i32 %74, %78
  %80 = add i32 %71, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %74, %82
  %84 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %65, i32 0, i32 2
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 %64, %86
  %88 = mul i32 %83, %87
  %89 = add i32 %80, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %83, %91
  %93 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %94 = load %complex_4*, %complex_4** %93, align 8
  %95 = getelementptr inbounds %complex_4, %complex_4* %94, i32 %89
  %96 = load %complex_4, %complex_4* %95, align 4
  %97 = load float, float* %left, align 4
  %98 = alloca %complex_4, align 8
  %99 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 0
  %100 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 1
  store float %97, float* %99, align 4
  store float 0.000000e+00, float* %100, align 4
  %101 = load %complex_4, %complex_4* %98, align 4
  %102 = load float, float* %right, align 4
  %103 = alloca %complex_4, align 8
  %104 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 0
  %105 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 1
  store float %102, float* %104, align 4
  store float 0.000000e+00, float* %105, align 4
  %106 = load %complex_4, %complex_4* %103, align 4
  %107 = alloca %complex_4, align 8
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 0
  %109 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  store float 0.000000e+00, float* %108, align 4
  store float 1.000000e+00, float* %109, align 4
  %110 = load %complex_4, %complex_4* %107, align 4
  %111 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %111, align 4
  %112 = alloca %complex_4, align 8
  store %complex_4 %110, %complex_4* %112, align 4
  %113 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %111, %complex_4* %112, %complex_4* %113)
  %114 = load %complex_4, %complex_4* %113, align 4
  %115 = alloca %complex_4, align 8
  store %complex_4 %101, %complex_4* %115, align 4
  %116 = alloca %complex_4, align 8
  store %complex_4 %114, %complex_4* %116, align 4
  %117 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %115, %complex_4* %116, %complex_4* %117)
  %118 = load %complex_4, %complex_4* %117, align 4
  %119 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %119, align 4
  %120 = getelementptr %complex_4, %complex_4* %119, i32 0, i32 0
  %121 = load float, float* %120, align 4
  %122 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %122, align 4
  %123 = getelementptr %complex_4, %complex_4* %122, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %125, align 4
  %126 = getelementptr %complex_4, %complex_4* %125, i32 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %128, align 4
  %129 = getelementptr %complex_4, %complex_4* %128, i32 0, i32 1
  %130 = load float, float* %129, align 4
  %131 = fcmp une float %121, %124
  %132 = fcmp une float %127, %130
  %133 = and i1 %131, %132
  br i1 %133, label %then5, label %else

then5:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then5
  br label %ifcont13

else6:                                            ; preds = %loop.body4
  %134 = load i32, i32* %op_code, align 4
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %then7, label %else11

then7:                                            ; preds = %else6
  %136 = load i32, i32* %i, align 4
  %137 = load i32, i32* %j, align 4
  %138 = add i32 %136, %137
  %139 = load i32, i32* %k, align 4
  %140 = add i32 %138, %139
  %141 = sitofp i32 %140 to float
  store float %141, float* %left, align 4
  %142 = load i32, i32* %i, align 4
  %143 = load i32, i32* %j, align 4
  %144 = mul i32 %142, %143
  %145 = load i32, i32* %k, align 4
  %146 = mul i32 %144, %145
  %147 = sitofp i32 %146 to float
  store float %147, float* %right, align 4
  %148 = load i32, i32* %i, align 4
  %149 = load i32, i32* %j, align 4
  %150 = load i32, i32* %k, align 4
  %151 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %152 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %151, i32 0, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %148, %154
  %156 = mul i32 1, %155
  %157 = add i32 0, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 1, %159
  %161 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %151, i32 0, i32 1
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = sub i32 %149, %163
  %165 = mul i32 %160, %164
  %166 = add i32 %157, %165
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = mul i32 %160, %168
  %170 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %151, i32 0, i32 2
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %150, %172
  %174 = mul i32 %169, %173
  %175 = add i32 %166, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 %169, %177
  %179 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %180 = load %complex_4*, %complex_4** %179, align 8
  %181 = getelementptr inbounds %complex_4, %complex_4* %180, i32 %175
  %182 = load %complex_4, %complex_4* %181, align 4
  %183 = load float, float* %left, align 4
  %184 = fsub float 0.000000e+00, %183
  %185 = alloca %complex_4, align 8
  %186 = getelementptr %complex_4, %complex_4* %185, i32 0, i32 0
  %187 = getelementptr %complex_4, %complex_4* %185, i32 0, i32 1
  store float %184, float* %186, align 4
  store float 0.000000e+00, float* %187, align 4
  %188 = load %complex_4, %complex_4* %185, align 4
  %189 = load float, float* %right, align 4
  %190 = alloca %complex_4, align 8
  %191 = getelementptr %complex_4, %complex_4* %190, i32 0, i32 0
  %192 = getelementptr %complex_4, %complex_4* %190, i32 0, i32 1
  store float %189, float* %191, align 4
  store float 0.000000e+00, float* %192, align 4
  %193 = load %complex_4, %complex_4* %190, align 4
  %194 = alloca %complex_4, align 8
  %195 = getelementptr %complex_4, %complex_4* %194, i32 0, i32 0
  %196 = getelementptr %complex_4, %complex_4* %194, i32 0, i32 1
  store float 0.000000e+00, float* %195, align 4
  store float 1.000000e+00, float* %196, align 4
  %197 = load %complex_4, %complex_4* %194, align 4
  %198 = alloca %complex_4, align 8
  store %complex_4 %193, %complex_4* %198, align 4
  %199 = alloca %complex_4, align 8
  store %complex_4 %197, %complex_4* %199, align 4
  %200 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %198, %complex_4* %199, %complex_4* %200)
  %201 = load %complex_4, %complex_4* %200, align 4
  %202 = alloca %complex_4, align 8
  store %complex_4 %188, %complex_4* %202, align 4
  %203 = alloca %complex_4, align 8
  store %complex_4 %201, %complex_4* %203, align 4
  %204 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub(%complex_4* %202, %complex_4* %203, %complex_4* %204)
  %205 = load %complex_4, %complex_4* %204, align 4
  %206 = alloca %complex_4, align 8
  store %complex_4 %182, %complex_4* %206, align 4
  %207 = getelementptr %complex_4, %complex_4* %206, i32 0, i32 0
  %208 = load float, float* %207, align 4
  %209 = alloca %complex_4, align 8
  store %complex_4 %205, %complex_4* %209, align 4
  %210 = getelementptr %complex_4, %complex_4* %209, i32 0, i32 0
  %211 = load float, float* %210, align 4
  %212 = alloca %complex_4, align 8
  store %complex_4 %182, %complex_4* %212, align 4
  %213 = getelementptr %complex_4, %complex_4* %212, i32 0, i32 1
  %214 = load float, float* %213, align 4
  %215 = alloca %complex_4, align 8
  store %complex_4 %205, %complex_4* %215, align 4
  %216 = getelementptr %complex_4, %complex_4* %215, i32 0, i32 1
  %217 = load float, float* %216, align 4
  %218 = fcmp une float %208, %211
  %219 = fcmp une float %214, %217
  %220 = and i1 %218, %219
  br i1 %220, label %then8, label %else9

then8:                                            ; preds = %then7
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont10

else9:                                            ; preds = %then7
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %then8
  br label %ifcont12

else11:                                           ; preds = %else6
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %ifcont10
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont12, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end14:                                       ; preds = %loop.head1
  br label %loop.head

loop.end15:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end15
  ret void
}

declare void @_lfortran_complex_mul(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub(%complex_4*, %complex_4*, %complex_4*, ...)

define i32 @main() {
.entry:
  %call_arg_value97 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_k" = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_k" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_k" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 2, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  store i32 1, i32* %12, align 4
  store i32 1, i32* %13, align 4
  store i32 2, i32* %14, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %13, align 4
  %18 = sub i32 %16, %17
  %19 = add i32 %18, 1
  store i32 %19, i32* %15, align 4
  %20 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 1, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  store i32 %28, i32* %24, align 4
  %b = alloca %array.1, align 8
  %29 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %31 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 2
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 3
  store i32 1, i32* %32, align 4
  store i32 1, i32* %33, align 4
  store i32 2, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = load i32, i32* %33, align 4
  %38 = sub i32 %36, %37
  %39 = add i32 %38, 1
  store i32 %39, i32* %35, align 4
  %40 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 1, i32* %42, align 4
  store i32 2, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  store i32 %48, i32* %44, align 4
  %49 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %30, i32 0, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  store i32 1, i32* %50, align 4
  store i32 1, i32* %51, align 4
  store i32 1, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %51, align 4
  %56 = sub i32 %54, %55
  %57 = add i32 %56, 1
  store i32 %57, i32* %53, align 4
  %c = alloca %array.2, align 8
  %58 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  store i32 0, i32* %58, align 4
  %59 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %60 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  store i32 1, i32* %61, align 4
  store i32 1, i32* %62, align 4
  store i32 2, i32* %63, align 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %62, align 4
  %67 = sub i32 %65, %66
  %68 = add i32 %67, 1
  store i32 %68, i32* %64, align 4
  %69 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 1
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  store i32 1, i32* %70, align 4
  store i32 1, i32* %71, align 4
  store i32 2, i32* %72, align 4
  %74 = load i32, i32* %72, align 4
  %75 = load i32, i32* %71, align 4
  %76 = sub i32 %74, %75
  %77 = add i32 %76, 1
  store i32 %77, i32* %73, align 4
  %78 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %59, i32 0, i32 2
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 1, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  store i32 %86, i32* %82, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %"~0_implicit_cast_res" = alloca %array.2, align 8
  %87 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %87, align 4
  %88 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %89 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  store i32 1, i32* %90, align 4
  store i32 1, i32* %91, align 4
  store i32 2, i32* %92, align 4
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %91, align 4
  %96 = sub i32 %94, %95
  %97 = add i32 %96, 1
  store i32 %97, i32* %93, align 4
  %98 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 1
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 3
  store i32 1, i32* %99, align 4
  store i32 1, i32* %100, align 4
  store i32 2, i32* %101, align 4
  %103 = load i32, i32* %101, align 4
  %104 = load i32, i32* %100, align 4
  %105 = sub i32 %103, %104
  %106 = add i32 %105, 1
  store i32 %106, i32* %102, align 4
  %107 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %88, i32 0, i32 2
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 2
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  store i32 1, i32* %108, align 4
  store i32 1, i32* %109, align 4
  store i32 1, i32* %110, align 4
  %112 = load i32, i32* %110, align 4
  %113 = load i32, i32* %109, align 4
  %114 = sub i32 %112, %113
  %115 = add i32 %114, 1
  store i32 %115, i32* %111, align 4
  %"~1_implicit_cast_res" = alloca %array.2, align 8
  %116 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %116, align 4
  %117 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %118 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %117, i32 0, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 2
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  store i32 1, i32* %119, align 4
  store i32 1, i32* %120, align 4
  store i32 2, i32* %121, align 4
  %123 = load i32, i32* %121, align 4
  %124 = load i32, i32* %120, align 4
  %125 = sub i32 %123, %124
  %126 = add i32 %125, 1
  store i32 %126, i32* %122, align 4
  %127 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %117, i32 0, i32 1
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 0
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 1
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 2
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 3
  store i32 1, i32* %128, align 4
  store i32 1, i32* %129, align 4
  store i32 2, i32* %130, align 4
  %132 = load i32, i32* %130, align 4
  %133 = load i32, i32* %129, align 4
  %134 = sub i32 %132, %133
  %135 = add i32 %134, 1
  store i32 %135, i32* %131, align 4
  %136 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %117, i32 0, i32 2
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 0
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 2
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 3
  store i32 1, i32* %137, align 4
  store i32 1, i32* %138, align 4
  store i32 1, i32* %139, align 4
  %141 = load i32, i32* %139, align 4
  %142 = load i32, i32* %138, align 4
  %143 = sub i32 %141, %142
  %144 = add i32 %143, 1
  store i32 %144, i32* %140, align 4
  %"~2_bin_op_res" = alloca %array.2, align 8
  %145 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 1
  store i32 0, i32* %145, align 4
  %146 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %147 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %146, i32 0, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 2
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  store i32 1, i32* %148, align 4
  store i32 1, i32* %149, align 4
  store i32 2, i32* %150, align 4
  %152 = load i32, i32* %150, align 4
  %153 = load i32, i32* %149, align 4
  %154 = sub i32 %152, %153
  %155 = add i32 %154, 1
  store i32 %155, i32* %151, align 4
  %156 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %146, i32 0, i32 1
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %159 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 2
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 3
  store i32 1, i32* %157, align 4
  store i32 1, i32* %158, align 4
  store i32 2, i32* %159, align 4
  %161 = load i32, i32* %159, align 4
  %162 = load i32, i32* %158, align 4
  %163 = sub i32 %161, %162
  %164 = add i32 %163, 1
  store i32 %164, i32* %160, align 4
  %165 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %146, i32 0, i32 2
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 1
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 2
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 3
  store i32 1, i32* %166, align 4
  store i32 1, i32* %167, align 4
  store i32 1, i32* %168, align 4
  %170 = load i32, i32* %168, align 4
  %171 = load i32, i32* %167, align 4
  %172 = sub i32 %170, %171
  %173 = add i32 %172, 1
  store i32 %173, i32* %169, align 4
  %"~3_unary_op_res" = alloca %array.1, align 8
  %174 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 1
  store i32 0, i32* %174, align 4
  %175 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %176 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %175, i32 0, i32 0
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 0
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 2
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  store i32 1, i32* %177, align 4
  store i32 1, i32* %178, align 4
  store i32 2, i32* %179, align 4
  %181 = load i32, i32* %179, align 4
  %182 = load i32, i32* %178, align 4
  %183 = sub i32 %181, %182
  %184 = add i32 %183, 1
  store i32 %184, i32* %180, align 4
  %185 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %175, i32 0, i32 1
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 0
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 1
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 2
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 3
  store i32 1, i32* %186, align 4
  store i32 1, i32* %187, align 4
  store i32 2, i32* %188, align 4
  %190 = load i32, i32* %188, align 4
  %191 = load i32, i32* %187, align 4
  %192 = sub i32 %190, %191
  %193 = add i32 %192, 1
  store i32 %193, i32* %189, align 4
  %194 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %175, i32 0, i32 2
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 0
  %196 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 2
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  store i32 1, i32* %195, align 4
  store i32 1, i32* %196, align 4
  store i32 1, i32* %197, align 4
  %199 = load i32, i32* %197, align 4
  %200 = load i32, i32* %196, align 4
  %201 = sub i32 %199, %200
  %202 = add i32 %201, 1
  store i32 %202, i32* %198, align 4
  %"~4_implicit_cast_res" = alloca %array.2, align 8
  %203 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %203, align 4
  %204 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %205 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %204, i32 0, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 0
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 2
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  store i32 1, i32* %206, align 4
  store i32 1, i32* %207, align 4
  store i32 2, i32* %208, align 4
  %210 = load i32, i32* %208, align 4
  %211 = load i32, i32* %207, align 4
  %212 = sub i32 %210, %211
  %213 = add i32 %212, 1
  store i32 %213, i32* %209, align 4
  %214 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %204, i32 0, i32 1
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 2
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  store i32 1, i32* %215, align 4
  store i32 1, i32* %216, align 4
  store i32 2, i32* %217, align 4
  %219 = load i32, i32* %217, align 4
  %220 = load i32, i32* %216, align 4
  %221 = sub i32 %219, %220
  %222 = add i32 %221, 1
  store i32 %222, i32* %218, align 4
  %223 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %204, i32 0, i32 2
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 0
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 2
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 3
  store i32 1, i32* %224, align 4
  store i32 1, i32* %225, align 4
  store i32 1, i32* %226, align 4
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %225, align 4
  %230 = sub i32 %228, %229
  %231 = add i32 %230, 1
  store i32 %231, i32* %227, align 4
  %"~5_unary_op_res" = alloca %array.1, align 8
  %232 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 1
  store i32 0, i32* %232, align 4
  %233 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %234 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 0
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 1
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 2
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 3
  store i32 1, i32* %235, align 4
  store i32 1, i32* %236, align 4
  store i32 2, i32* %237, align 4
  %239 = load i32, i32* %237, align 4
  %240 = load i32, i32* %236, align 4
  %241 = sub i32 %239, %240
  %242 = add i32 %241, 1
  store i32 %242, i32* %238, align 4
  %243 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 1
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 0
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 2
  %247 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 3
  store i32 1, i32* %244, align 4
  store i32 1, i32* %245, align 4
  store i32 2, i32* %246, align 4
  %248 = load i32, i32* %246, align 4
  %249 = load i32, i32* %245, align 4
  %250 = sub i32 %248, %249
  %251 = add i32 %250, 1
  store i32 %251, i32* %247, align 4
  %252 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 2
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 0
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 2
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 3
  store i32 1, i32* %253, align 4
  store i32 1, i32* %254, align 4
  store i32 1, i32* %255, align 4
  %257 = load i32, i32* %255, align 4
  %258 = load i32, i32* %254, align 4
  %259 = sub i32 %257, %258
  %260 = add i32 %259, 1
  store i32 %260, i32* %256, align 4
  %"~6_implicit_cast_res" = alloca %array.2, align 8
  %261 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %261, align 4
  %262 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %263 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, i32 0, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 0
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 2
  %267 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  store i32 1, i32* %264, align 4
  store i32 1, i32* %265, align 4
  store i32 2, i32* %266, align 4
  %268 = load i32, i32* %266, align 4
  %269 = load i32, i32* %265, align 4
  %270 = sub i32 %268, %269
  %271 = add i32 %270, 1
  store i32 %271, i32* %267, align 4
  %272 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, i32 0, i32 1
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 0
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %275 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 2
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 3
  store i32 1, i32* %273, align 4
  store i32 1, i32* %274, align 4
  store i32 2, i32* %275, align 4
  %277 = load i32, i32* %275, align 4
  %278 = load i32, i32* %274, align 4
  %279 = sub i32 %277, %278
  %280 = add i32 %279, 1
  store i32 %280, i32* %276, align 4
  %281 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %262, i32 0, i32 2
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 1
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 2
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 3
  store i32 1, i32* %282, align 4
  store i32 1, i32* %283, align 4
  store i32 1, i32* %284, align 4
  %286 = load i32, i32* %284, align 4
  %287 = load i32, i32* %283, align 4
  %288 = sub i32 %286, %287
  %289 = add i32 %288, 1
  store i32 %289, i32* %285, align 4
  %"~7_bin_op_res" = alloca %array.2, align 8
  %290 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 1
  store i32 0, i32* %290, align 4
  %291 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %292 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %291, i32 0, i32 0
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 0
  %294 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 2
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 3
  store i32 1, i32* %293, align 4
  store i32 1, i32* %294, align 4
  store i32 2, i32* %295, align 4
  %297 = load i32, i32* %295, align 4
  %298 = load i32, i32* %294, align 4
  %299 = sub i32 %297, %298
  %300 = add i32 %299, 1
  store i32 %300, i32* %296, align 4
  %301 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %291, i32 0, i32 1
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 0
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 1
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 2
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 3
  store i32 1, i32* %302, align 4
  store i32 1, i32* %303, align 4
  store i32 2, i32* %304, align 4
  %306 = load i32, i32* %304, align 4
  %307 = load i32, i32* %303, align 4
  %308 = sub i32 %306, %307
  %309 = add i32 %308, 1
  store i32 %309, i32* %305, align 4
  %310 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %291, i32 0, i32 2
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 0
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 1
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 2
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 3
  store i32 1, i32* %311, align 4
  store i32 1, i32* %312, align 4
  store i32 1, i32* %313, align 4
  %315 = load i32, i32* %313, align 4
  %316 = load i32, i32* %312, align 4
  %317 = sub i32 %315, %316
  %318 = add i32 %317, 1
  store i32 %318, i32* %314, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %319 = load i32, i32* %i, align 4
  %320 = add i32 %319, 1
  %321 = icmp sle i32 %320, 2
  br i1 %321, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %322 = load i32, i32* %i, align 4
  %323 = add i32 %322, 1
  store i32 %323, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %324 = load i32, i32* %j, align 4
  %325 = add i32 %324, 1
  %326 = icmp sle i32 %325, 2
  br i1 %326, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %327 = load i32, i32* %j, align 4
  %328 = add i32 %327, 1
  store i32 %328, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %329 = load i32, i32* %k, align 4
  %330 = add i32 %329, 1
  %331 = icmp sle i32 %330, 1
  br i1 %331, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %332 = load i32, i32* %k, align 4
  %333 = add i32 %332, 1
  store i32 %333, i32* %k, align 4
  %334 = load i32, i32* %i, align 4
  %335 = load i32, i32* %j, align 4
  %336 = load i32, i32* %k, align 4
  %337 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %338 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %337, i32 0, i32 0
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = sub i32 %334, %340
  %342 = mul i32 1, %341
  %343 = add i32 0, %342
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 3
  %345 = load i32, i32* %344, align 4
  %346 = mul i32 1, %345
  %347 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %337, i32 0, i32 1
  %348 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = sub i32 %335, %349
  %351 = mul i32 %346, %350
  %352 = add i32 %343, %351
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 3
  %354 = load i32, i32* %353, align 4
  %355 = mul i32 %346, %354
  %356 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %337, i32 0, i32 2
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 %336, %358
  %360 = mul i32 %355, %359
  %361 = add i32 %352, %360
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 3
  %363 = load i32, i32* %362, align 4
  %364 = mul i32 %355, %363
  %365 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %366 = getelementptr [4 x i32], [4 x i32]* %365, i32 0, i32 %361
  %367 = load i32, i32* %i, align 4
  %368 = load i32, i32* %j, align 4
  %369 = add i32 %367, %368
  %370 = load i32, i32* %k, align 4
  %371 = add i32 %369, %370
  store i32 %371, i32* %366, align 4
  %372 = load i32, i32* %i, align 4
  %373 = load i32, i32* %j, align 4
  %374 = load i32, i32* %k, align 4
  %375 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %376 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %375, i32 0, i32 0
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = sub i32 %372, %378
  %380 = mul i32 1, %379
  %381 = add i32 0, %380
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 3
  %383 = load i32, i32* %382, align 4
  %384 = mul i32 1, %383
  %385 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %375, i32 0, i32 1
  %386 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = sub i32 %373, %387
  %389 = mul i32 %384, %388
  %390 = add i32 %381, %389
  %391 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 3
  %392 = load i32, i32* %391, align 4
  %393 = mul i32 %384, %392
  %394 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %375, i32 0, i32 2
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = sub i32 %374, %396
  %398 = mul i32 %393, %397
  %399 = add i32 %390, %398
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 3
  %401 = load i32, i32* %400, align 4
  %402 = mul i32 %393, %401
  %403 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %404 = getelementptr [4 x i32], [4 x i32]* %403, i32 0, i32 %399
  %405 = load i32, i32* %i, align 4
  %406 = load i32, i32* %j, align 4
  %407 = mul i32 %405, %406
  %408 = load i32, i32* %k, align 4
  %409 = mul i32 %407, %408
  store i32 %409, i32* %404, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %410 = alloca %dimension_descriptor*, align 8
  %411 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %412 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %411, i32 0, i32 0
  store %dimension_descriptor* %412, %dimension_descriptor** %410, align 8
  %413 = alloca i32, align 4
  store i32 1, i32* %413, align 4
  %414 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %410, i32* %413)
  %415 = sub i32 %414, 1
  store i32 %415, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %416 = load i32, i32* %"1_k", align 4
  %417 = add i32 %416, 1
  %418 = alloca %dimension_descriptor*, align 8
  %419 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %420 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %419, i32 0, i32 0
  store %dimension_descriptor* %420, %dimension_descriptor** %418, align 8
  %421 = alloca i32, align 4
  store i32 1, i32* %421, align 4
  %422 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %418, i32* %421)
  %423 = icmp sle i32 %417, %422
  br i1 %423, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %424 = load i32, i32* %"1_k", align 4
  %425 = add i32 %424, 1
  store i32 %425, i32* %"1_k", align 4
  %426 = alloca %dimension_descriptor*, align 8
  %427 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %428 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %427, i32 0, i32 0
  store %dimension_descriptor* %428, %dimension_descriptor** %426, align 8
  %429 = alloca i32, align 4
  store i32 2, i32* %429, align 4
  %430 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %426, i32* %429)
  %431 = sub i32 %430, 1
  store i32 %431, i32* %"2_k", align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %432 = load i32, i32* %"2_k", align 4
  %433 = add i32 %432, 1
  %434 = alloca %dimension_descriptor*, align 8
  %435 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %436 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %435, i32 0, i32 0
  store %dimension_descriptor* %436, %dimension_descriptor** %434, align 8
  %437 = alloca i32, align 4
  store i32 2, i32* %437, align 4
  %438 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %434, i32* %437)
  %439 = icmp sle i32 %433, %438
  br i1 %439, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %440 = load i32, i32* %"2_k", align 4
  %441 = add i32 %440, 1
  store i32 %441, i32* %"2_k", align 4
  %442 = alloca %dimension_descriptor*, align 8
  %443 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %444 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %443, i32 0, i32 0
  store %dimension_descriptor* %444, %dimension_descriptor** %442, align 8
  %445 = alloca i32, align 4
  store i32 3, i32* %445, align 4
  %446 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %442, i32* %445)
  %447 = sub i32 %446, 1
  store i32 %447, i32* %"3_k", align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %448 = load i32, i32* %"3_k", align 4
  %449 = add i32 %448, 1
  %450 = alloca %dimension_descriptor*, align 8
  %451 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %452 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %451, i32 0, i32 0
  store %dimension_descriptor* %452, %dimension_descriptor** %450, align 8
  %453 = alloca i32, align 4
  store i32 3, i32* %453, align 4
  %454 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %450, i32* %453)
  %455 = icmp sle i32 %449, %454
  br i1 %455, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %456 = load i32, i32* %"3_k", align 4
  %457 = add i32 %456, 1
  store i32 %457, i32* %"3_k", align 4
  %458 = load i32, i32* %"1_k", align 4
  %459 = load i32, i32* %"2_k", align 4
  %460 = load i32, i32* %"3_k", align 4
  %461 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %462 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %461, i32 0, i32 0
  %463 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = sub i32 %458, %464
  %466 = mul i32 1, %465
  %467 = add i32 0, %466
  %468 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 3
  %469 = load i32, i32* %468, align 4
  %470 = mul i32 1, %469
  %471 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %461, i32 0, i32 1
  %472 = getelementptr %dimension_descriptor, %dimension_descriptor* %471, i32 0, i32 1
  %473 = load i32, i32* %472, align 4
  %474 = sub i32 %459, %473
  %475 = mul i32 %470, %474
  %476 = add i32 %467, %475
  %477 = getelementptr %dimension_descriptor, %dimension_descriptor* %471, i32 0, i32 3
  %478 = load i32, i32* %477, align 4
  %479 = mul i32 %470, %478
  %480 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %461, i32 0, i32 2
  %481 = getelementptr %dimension_descriptor, %dimension_descriptor* %480, i32 0, i32 1
  %482 = load i32, i32* %481, align 4
  %483 = sub i32 %460, %482
  %484 = mul i32 %479, %483
  %485 = add i32 %476, %484
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %480, i32 0, i32 3
  %487 = load i32, i32* %486, align 4
  %488 = mul i32 %479, %487
  %489 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 0
  %490 = getelementptr [4 x %complex_4], [4 x %complex_4]* %489, i32 0, i32 %485
  %491 = load i32, i32* %"1_k", align 4
  %492 = load i32, i32* %"2_k", align 4
  %493 = load i32, i32* %"3_k", align 4
  %494 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %495 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %494, i32 0, i32 0
  %496 = getelementptr %dimension_descriptor, %dimension_descriptor* %495, i32 0, i32 1
  %497 = load i32, i32* %496, align 4
  %498 = sub i32 %491, %497
  %499 = mul i32 1, %498
  %500 = add i32 0, %499
  %501 = getelementptr %dimension_descriptor, %dimension_descriptor* %495, i32 0, i32 3
  %502 = load i32, i32* %501, align 4
  %503 = mul i32 1, %502
  %504 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %494, i32 0, i32 1
  %505 = getelementptr %dimension_descriptor, %dimension_descriptor* %504, i32 0, i32 1
  %506 = load i32, i32* %505, align 4
  %507 = sub i32 %492, %506
  %508 = mul i32 %503, %507
  %509 = add i32 %500, %508
  %510 = getelementptr %dimension_descriptor, %dimension_descriptor* %504, i32 0, i32 3
  %511 = load i32, i32* %510, align 4
  %512 = mul i32 %503, %511
  %513 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %494, i32 0, i32 2
  %514 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = sub i32 %493, %515
  %517 = mul i32 %512, %516
  %518 = add i32 %509, %517
  %519 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 3
  %520 = load i32, i32* %519, align 4
  %521 = mul i32 %512, %520
  %522 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %523 = getelementptr [4 x i32], [4 x i32]* %522, i32 0, i32 %518
  %524 = load i32, i32* %523, align 4
  %525 = sitofp i32 %524 to float
  %526 = alloca %complex_4, align 8
  %527 = getelementptr %complex_4, %complex_4* %526, i32 0, i32 0
  %528 = getelementptr %complex_4, %complex_4* %526, i32 0, i32 1
  store float %525, float* %527, align 4
  store float 0.000000e+00, float* %528, align 4
  %529 = load %complex_4, %complex_4* %526, align 4
  store %complex_4 %529, %complex_4* %490, align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  %530 = alloca %dimension_descriptor*, align 8
  %531 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %532 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %531, i32 0, i32 0
  store %dimension_descriptor* %532, %dimension_descriptor** %530, align 8
  %533 = alloca i32, align 4
  store i32 1, i32* %533, align 4
  %534 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %530, i32* %533)
  %535 = sub i32 %534, 1
  store i32 %535, i32* %"1_k", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.end23, %loop.end15
  %536 = load i32, i32* %"1_k", align 4
  %537 = add i32 %536, 1
  %538 = alloca %dimension_descriptor*, align 8
  %539 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %540 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %539, i32 0, i32 0
  store %dimension_descriptor* %540, %dimension_descriptor** %538, align 8
  %541 = alloca i32, align 4
  store i32 1, i32* %541, align 4
  %542 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %538, i32* %541)
  %543 = icmp sle i32 %537, %542
  br i1 %543, label %loop.body17, label %loop.end24

loop.body17:                                      ; preds = %loop.head16
  %544 = load i32, i32* %"1_k", align 4
  %545 = add i32 %544, 1
  store i32 %545, i32* %"1_k", align 4
  %546 = alloca %dimension_descriptor*, align 8
  %547 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %548 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %547, i32 0, i32 0
  store %dimension_descriptor* %548, %dimension_descriptor** %546, align 8
  %549 = alloca i32, align 4
  store i32 2, i32* %549, align 4
  %550 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %546, i32* %549)
  %551 = sub i32 %550, 1
  store i32 %551, i32* %"2_k", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end22, %loop.body17
  %552 = load i32, i32* %"2_k", align 4
  %553 = add i32 %552, 1
  %554 = alloca %dimension_descriptor*, align 8
  %555 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %556 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %555, i32 0, i32 0
  store %dimension_descriptor* %556, %dimension_descriptor** %554, align 8
  %557 = alloca i32, align 4
  store i32 2, i32* %557, align 4
  %558 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %554, i32* %557)
  %559 = icmp sle i32 %553, %558
  br i1 %559, label %loop.body19, label %loop.end23

loop.body19:                                      ; preds = %loop.head18
  %560 = load i32, i32* %"2_k", align 4
  %561 = add i32 %560, 1
  store i32 %561, i32* %"2_k", align 4
  %562 = alloca %dimension_descriptor*, align 8
  %563 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %564 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %563, i32 0, i32 0
  store %dimension_descriptor* %564, %dimension_descriptor** %562, align 8
  %565 = alloca i32, align 4
  store i32 3, i32* %565, align 4
  %566 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %562, i32* %565)
  %567 = sub i32 %566, 1
  store i32 %567, i32* %"3_k", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.body21, %loop.body19
  %568 = load i32, i32* %"3_k", align 4
  %569 = add i32 %568, 1
  %570 = alloca %dimension_descriptor*, align 8
  %571 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %572 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %571, i32 0, i32 0
  store %dimension_descriptor* %572, %dimension_descriptor** %570, align 8
  %573 = alloca i32, align 4
  store i32 3, i32* %573, align 4
  %574 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %570, i32* %573)
  %575 = icmp sle i32 %569, %574
  br i1 %575, label %loop.body21, label %loop.end22

loop.body21:                                      ; preds = %loop.head20
  %576 = load i32, i32* %"3_k", align 4
  %577 = add i32 %576, 1
  store i32 %577, i32* %"3_k", align 4
  %578 = load i32, i32* %"1_k", align 4
  %579 = load i32, i32* %"2_k", align 4
  %580 = load i32, i32* %"3_k", align 4
  %581 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %582 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %581, i32 0, i32 0
  %583 = getelementptr %dimension_descriptor, %dimension_descriptor* %582, i32 0, i32 1
  %584 = load i32, i32* %583, align 4
  %585 = sub i32 %578, %584
  %586 = mul i32 1, %585
  %587 = add i32 0, %586
  %588 = getelementptr %dimension_descriptor, %dimension_descriptor* %582, i32 0, i32 3
  %589 = load i32, i32* %588, align 4
  %590 = mul i32 1, %589
  %591 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %581, i32 0, i32 1
  %592 = getelementptr %dimension_descriptor, %dimension_descriptor* %591, i32 0, i32 1
  %593 = load i32, i32* %592, align 4
  %594 = sub i32 %579, %593
  %595 = mul i32 %590, %594
  %596 = add i32 %587, %595
  %597 = getelementptr %dimension_descriptor, %dimension_descriptor* %591, i32 0, i32 3
  %598 = load i32, i32* %597, align 4
  %599 = mul i32 %590, %598
  %600 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %581, i32 0, i32 2
  %601 = getelementptr %dimension_descriptor, %dimension_descriptor* %600, i32 0, i32 1
  %602 = load i32, i32* %601, align 4
  %603 = sub i32 %580, %602
  %604 = mul i32 %599, %603
  %605 = add i32 %596, %604
  %606 = getelementptr %dimension_descriptor, %dimension_descriptor* %600, i32 0, i32 3
  %607 = load i32, i32* %606, align 4
  %608 = mul i32 %599, %607
  %609 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 0
  %610 = getelementptr [4 x %complex_4], [4 x %complex_4]* %609, i32 0, i32 %605
  %611 = load i32, i32* %"1_k", align 4
  %612 = load i32, i32* %"2_k", align 4
  %613 = load i32, i32* %"3_k", align 4
  %614 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %615 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %614, i32 0, i32 0
  %616 = getelementptr %dimension_descriptor, %dimension_descriptor* %615, i32 0, i32 1
  %617 = load i32, i32* %616, align 4
  %618 = sub i32 %611, %617
  %619 = mul i32 1, %618
  %620 = add i32 0, %619
  %621 = getelementptr %dimension_descriptor, %dimension_descriptor* %615, i32 0, i32 3
  %622 = load i32, i32* %621, align 4
  %623 = mul i32 1, %622
  %624 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %614, i32 0, i32 1
  %625 = getelementptr %dimension_descriptor, %dimension_descriptor* %624, i32 0, i32 1
  %626 = load i32, i32* %625, align 4
  %627 = sub i32 %612, %626
  %628 = mul i32 %623, %627
  %629 = add i32 %620, %628
  %630 = getelementptr %dimension_descriptor, %dimension_descriptor* %624, i32 0, i32 3
  %631 = load i32, i32* %630, align 4
  %632 = mul i32 %623, %631
  %633 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %614, i32 0, i32 2
  %634 = getelementptr %dimension_descriptor, %dimension_descriptor* %633, i32 0, i32 1
  %635 = load i32, i32* %634, align 4
  %636 = sub i32 %613, %635
  %637 = mul i32 %632, %636
  %638 = add i32 %629, %637
  %639 = getelementptr %dimension_descriptor, %dimension_descriptor* %633, i32 0, i32 3
  %640 = load i32, i32* %639, align 4
  %641 = mul i32 %632, %640
  %642 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %643 = getelementptr [4 x i32], [4 x i32]* %642, i32 0, i32 %638
  %644 = load i32, i32* %643, align 4
  %645 = sitofp i32 %644 to float
  %646 = alloca %complex_4, align 8
  %647 = getelementptr %complex_4, %complex_4* %646, i32 0, i32 0
  %648 = getelementptr %complex_4, %complex_4* %646, i32 0, i32 1
  store float %645, float* %647, align 4
  store float 0.000000e+00, float* %648, align 4
  %649 = load %complex_4, %complex_4* %646, align 4
  store %complex_4 %649, %complex_4* %610, align 4
  br label %loop.head20

loop.end22:                                       ; preds = %loop.head20
  br label %loop.head18

loop.end23:                                       ; preds = %loop.head18
  br label %loop.head16

loop.end24:                                       ; preds = %loop.head16
  store i32 1, i32* %"1_v", align 4
  %650 = alloca %dimension_descriptor*, align 8
  %651 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %652 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %651, i32 0, i32 0
  store %dimension_descriptor* %652, %dimension_descriptor** %650, align 8
  %653 = alloca i32, align 4
  store i32 1, i32* %653, align 4
  %654 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %650, i32* %653)
  %655 = sub i32 %654, 1
  store i32 %655, i32* %"1_t", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.end32, %loop.end24
  %656 = load i32, i32* %"1_t", align 4
  %657 = add i32 %656, 1
  %658 = alloca %dimension_descriptor*, align 8
  %659 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %660 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %659, i32 0, i32 0
  store %dimension_descriptor* %660, %dimension_descriptor** %658, align 8
  %661 = alloca i32, align 4
  store i32 1, i32* %661, align 4
  %662 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %658, i32* %661)
  %663 = icmp sle i32 %657, %662
  br i1 %663, label %loop.body26, label %loop.end33

loop.body26:                                      ; preds = %loop.head25
  %664 = load i32, i32* %"1_t", align 4
  %665 = add i32 %664, 1
  store i32 %665, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %666 = alloca %dimension_descriptor*, align 8
  %667 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %668 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %667, i32 0, i32 0
  store %dimension_descriptor* %668, %dimension_descriptor** %666, align 8
  %669 = alloca i32, align 4
  store i32 2, i32* %669, align 4
  %670 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %666, i32* %669)
  %671 = sub i32 %670, 1
  store i32 %671, i32* %"2_t", align 4
  br label %loop.head27

loop.head27:                                      ; preds = %loop.end31, %loop.body26
  %672 = load i32, i32* %"2_t", align 4
  %673 = add i32 %672, 1
  %674 = alloca %dimension_descriptor*, align 8
  %675 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %676 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %675, i32 0, i32 0
  store %dimension_descriptor* %676, %dimension_descriptor** %674, align 8
  %677 = alloca i32, align 4
  store i32 2, i32* %677, align 4
  %678 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %674, i32* %677)
  %679 = icmp sle i32 %673, %678
  br i1 %679, label %loop.body28, label %loop.end32

loop.body28:                                      ; preds = %loop.head27
  %680 = load i32, i32* %"2_t", align 4
  %681 = add i32 %680, 1
  store i32 %681, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %682 = alloca %dimension_descriptor*, align 8
  %683 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %684 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %683, i32 0, i32 0
  store %dimension_descriptor* %684, %dimension_descriptor** %682, align 8
  %685 = alloca i32, align 4
  store i32 3, i32* %685, align 4
  %686 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %682, i32* %685)
  %687 = sub i32 %686, 1
  store i32 %687, i32* %"3_t", align 4
  br label %loop.head29

loop.head29:                                      ; preds = %loop.body30, %loop.body28
  %688 = load i32, i32* %"3_t", align 4
  %689 = add i32 %688, 1
  %690 = alloca %dimension_descriptor*, align 8
  %691 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %692 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %691, i32 0, i32 0
  store %dimension_descriptor* %692, %dimension_descriptor** %690, align 8
  %693 = alloca i32, align 4
  store i32 3, i32* %693, align 4
  %694 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %690, i32* %693)
  %695 = icmp sle i32 %689, %694
  br i1 %695, label %loop.body30, label %loop.end31

loop.body30:                                      ; preds = %loop.head29
  %696 = load i32, i32* %"3_t", align 4
  %697 = add i32 %696, 1
  store i32 %697, i32* %"3_t", align 4
  %698 = load i32, i32* %"1_t", align 4
  %699 = load i32, i32* %"2_t", align 4
  %700 = load i32, i32* %"3_t", align 4
  %701 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %702 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %701, i32 0, i32 0
  %703 = getelementptr %dimension_descriptor, %dimension_descriptor* %702, i32 0, i32 1
  %704 = load i32, i32* %703, align 4
  %705 = sub i32 %698, %704
  %706 = mul i32 1, %705
  %707 = add i32 0, %706
  %708 = getelementptr %dimension_descriptor, %dimension_descriptor* %702, i32 0, i32 3
  %709 = load i32, i32* %708, align 4
  %710 = mul i32 1, %709
  %711 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %701, i32 0, i32 1
  %712 = getelementptr %dimension_descriptor, %dimension_descriptor* %711, i32 0, i32 1
  %713 = load i32, i32* %712, align 4
  %714 = sub i32 %699, %713
  %715 = mul i32 %710, %714
  %716 = add i32 %707, %715
  %717 = getelementptr %dimension_descriptor, %dimension_descriptor* %711, i32 0, i32 3
  %718 = load i32, i32* %717, align 4
  %719 = mul i32 %710, %718
  %720 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %701, i32 0, i32 2
  %721 = getelementptr %dimension_descriptor, %dimension_descriptor* %720, i32 0, i32 1
  %722 = load i32, i32* %721, align 4
  %723 = sub i32 %700, %722
  %724 = mul i32 %719, %723
  %725 = add i32 %716, %724
  %726 = getelementptr %dimension_descriptor, %dimension_descriptor* %720, i32 0, i32 3
  %727 = load i32, i32* %726, align 4
  %728 = mul i32 %719, %727
  %729 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 0
  %730 = getelementptr [4 x %complex_4], [4 x %complex_4]* %729, i32 0, i32 %725
  %731 = load i32, i32* %"1_v", align 4
  %732 = load i32, i32* %"2_v", align 4
  %733 = load i32, i32* %"3_v", align 4
  %734 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 2
  %735 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %734, i32 0, i32 0
  %736 = getelementptr %dimension_descriptor, %dimension_descriptor* %735, i32 0, i32 1
  %737 = load i32, i32* %736, align 4
  %738 = sub i32 %731, %737
  %739 = mul i32 1, %738
  %740 = add i32 0, %739
  %741 = getelementptr %dimension_descriptor, %dimension_descriptor* %735, i32 0, i32 3
  %742 = load i32, i32* %741, align 4
  %743 = mul i32 1, %742
  %744 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %734, i32 0, i32 1
  %745 = getelementptr %dimension_descriptor, %dimension_descriptor* %744, i32 0, i32 1
  %746 = load i32, i32* %745, align 4
  %747 = sub i32 %732, %746
  %748 = mul i32 %743, %747
  %749 = add i32 %740, %748
  %750 = getelementptr %dimension_descriptor, %dimension_descriptor* %744, i32 0, i32 3
  %751 = load i32, i32* %750, align 4
  %752 = mul i32 %743, %751
  %753 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %734, i32 0, i32 2
  %754 = getelementptr %dimension_descriptor, %dimension_descriptor* %753, i32 0, i32 1
  %755 = load i32, i32* %754, align 4
  %756 = sub i32 %733, %755
  %757 = mul i32 %752, %756
  %758 = add i32 %749, %757
  %759 = getelementptr %dimension_descriptor, %dimension_descriptor* %753, i32 0, i32 3
  %760 = load i32, i32* %759, align 4
  %761 = mul i32 %752, %760
  %762 = getelementptr %array.2, %array.2* %"~1_implicit_cast_res", i32 0, i32 0
  %763 = getelementptr [4 x %complex_4], [4 x %complex_4]* %762, i32 0, i32 %758
  %764 = load %complex_4, %complex_4* %763, align 4
  %765 = alloca %complex_4, align 8
  %766 = getelementptr %complex_4, %complex_4* %765, i32 0, i32 0
  %767 = getelementptr %complex_4, %complex_4* %765, i32 0, i32 1
  store float 0.000000e+00, float* %766, align 4
  store float 1.000000e+00, float* %767, align 4
  %768 = load %complex_4, %complex_4* %765, align 4
  %769 = alloca %complex_4, align 8
  store %complex_4 %764, %complex_4* %769, align 4
  %770 = alloca %complex_4, align 8
  store %complex_4 %768, %complex_4* %770, align 4
  %771 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %769, %complex_4* %770, %complex_4* %771)
  %772 = load %complex_4, %complex_4* %771, align 4
  store %complex_4 %772, %complex_4* %730, align 4
  %773 = load i32, i32* %"3_v", align 4
  %774 = add i32 %773, 1
  store i32 %774, i32* %"3_v", align 4
  br label %loop.head29

loop.end31:                                       ; preds = %loop.head29
  %775 = load i32, i32* %"2_v", align 4
  %776 = add i32 %775, 1
  store i32 %776, i32* %"2_v", align 4
  br label %loop.head27

loop.end32:                                       ; preds = %loop.head27
  %777 = load i32, i32* %"1_v", align 4
  %778 = add i32 %777, 1
  store i32 %778, i32* %"1_v", align 4
  br label %loop.head25

loop.end33:                                       ; preds = %loop.head25
  store i32 1, i32* %"1_v", align 4
  %779 = alloca %dimension_descriptor*, align 8
  %780 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %781 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %780, i32 0, i32 0
  store %dimension_descriptor* %781, %dimension_descriptor** %779, align 8
  %782 = alloca i32, align 4
  store i32 1, i32* %782, align 4
  %783 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %779, i32* %782)
  %784 = sub i32 %783, 1
  store i32 %784, i32* %"1_t", align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.end41, %loop.end33
  %785 = load i32, i32* %"1_t", align 4
  %786 = add i32 %785, 1
  %787 = alloca %dimension_descriptor*, align 8
  %788 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %789 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %788, i32 0, i32 0
  store %dimension_descriptor* %789, %dimension_descriptor** %787, align 8
  %790 = alloca i32, align 4
  store i32 1, i32* %790, align 4
  %791 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %787, i32* %790)
  %792 = icmp sle i32 %786, %791
  br i1 %792, label %loop.body35, label %loop.end42

loop.body35:                                      ; preds = %loop.head34
  %793 = load i32, i32* %"1_t", align 4
  %794 = add i32 %793, 1
  store i32 %794, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %795 = alloca %dimension_descriptor*, align 8
  %796 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %797 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %796, i32 0, i32 0
  store %dimension_descriptor* %797, %dimension_descriptor** %795, align 8
  %798 = alloca i32, align 4
  store i32 2, i32* %798, align 4
  %799 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %795, i32* %798)
  %800 = sub i32 %799, 1
  store i32 %800, i32* %"2_t", align 4
  br label %loop.head36

loop.head36:                                      ; preds = %loop.end40, %loop.body35
  %801 = load i32, i32* %"2_t", align 4
  %802 = add i32 %801, 1
  %803 = alloca %dimension_descriptor*, align 8
  %804 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %805 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %804, i32 0, i32 0
  store %dimension_descriptor* %805, %dimension_descriptor** %803, align 8
  %806 = alloca i32, align 4
  store i32 2, i32* %806, align 4
  %807 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %803, i32* %806)
  %808 = icmp sle i32 %802, %807
  br i1 %808, label %loop.body37, label %loop.end41

loop.body37:                                      ; preds = %loop.head36
  %809 = load i32, i32* %"2_t", align 4
  %810 = add i32 %809, 1
  store i32 %810, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %811 = alloca %dimension_descriptor*, align 8
  %812 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %813 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %812, i32 0, i32 0
  store %dimension_descriptor* %813, %dimension_descriptor** %811, align 8
  %814 = alloca i32, align 4
  store i32 3, i32* %814, align 4
  %815 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %811, i32* %814)
  %816 = sub i32 %815, 1
  store i32 %816, i32* %"3_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.body39, %loop.body37
  %817 = load i32, i32* %"3_t", align 4
  %818 = add i32 %817, 1
  %819 = alloca %dimension_descriptor*, align 8
  %820 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %821 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %820, i32 0, i32 0
  store %dimension_descriptor* %821, %dimension_descriptor** %819, align 8
  %822 = alloca i32, align 4
  store i32 3, i32* %822, align 4
  %823 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %819, i32* %822)
  %824 = icmp sle i32 %818, %823
  br i1 %824, label %loop.body39, label %loop.end40

loop.body39:                                      ; preds = %loop.head38
  %825 = load i32, i32* %"3_t", align 4
  %826 = add i32 %825, 1
  store i32 %826, i32* %"3_t", align 4
  %827 = load i32, i32* %"1_t", align 4
  %828 = load i32, i32* %"2_t", align 4
  %829 = load i32, i32* %"3_t", align 4
  %830 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %831 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %830, i32 0, i32 0
  %832 = getelementptr %dimension_descriptor, %dimension_descriptor* %831, i32 0, i32 1
  %833 = load i32, i32* %832, align 4
  %834 = sub i32 %827, %833
  %835 = mul i32 1, %834
  %836 = add i32 0, %835
  %837 = getelementptr %dimension_descriptor, %dimension_descriptor* %831, i32 0, i32 3
  %838 = load i32, i32* %837, align 4
  %839 = mul i32 1, %838
  %840 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %830, i32 0, i32 1
  %841 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 1
  %842 = load i32, i32* %841, align 4
  %843 = sub i32 %828, %842
  %844 = mul i32 %839, %843
  %845 = add i32 %836, %844
  %846 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 3
  %847 = load i32, i32* %846, align 4
  %848 = mul i32 %839, %847
  %849 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %830, i32 0, i32 2
  %850 = getelementptr %dimension_descriptor, %dimension_descriptor* %849, i32 0, i32 1
  %851 = load i32, i32* %850, align 4
  %852 = sub i32 %829, %851
  %853 = mul i32 %848, %852
  %854 = add i32 %845, %853
  %855 = getelementptr %dimension_descriptor, %dimension_descriptor* %849, i32 0, i32 3
  %856 = load i32, i32* %855, align 4
  %857 = mul i32 %848, %856
  %858 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %859 = getelementptr [4 x %complex_4], [4 x %complex_4]* %858, i32 0, i32 %854
  %860 = load i32, i32* %"1_v", align 4
  %861 = load i32, i32* %"2_v", align 4
  %862 = load i32, i32* %"3_v", align 4
  %863 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 2
  %864 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %863, i32 0, i32 0
  %865 = getelementptr %dimension_descriptor, %dimension_descriptor* %864, i32 0, i32 1
  %866 = load i32, i32* %865, align 4
  %867 = sub i32 %860, %866
  %868 = mul i32 1, %867
  %869 = add i32 0, %868
  %870 = getelementptr %dimension_descriptor, %dimension_descriptor* %864, i32 0, i32 3
  %871 = load i32, i32* %870, align 4
  %872 = mul i32 1, %871
  %873 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %863, i32 0, i32 1
  %874 = getelementptr %dimension_descriptor, %dimension_descriptor* %873, i32 0, i32 1
  %875 = load i32, i32* %874, align 4
  %876 = sub i32 %861, %875
  %877 = mul i32 %872, %876
  %878 = add i32 %869, %877
  %879 = getelementptr %dimension_descriptor, %dimension_descriptor* %873, i32 0, i32 3
  %880 = load i32, i32* %879, align 4
  %881 = mul i32 %872, %880
  %882 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %863, i32 0, i32 2
  %883 = getelementptr %dimension_descriptor, %dimension_descriptor* %882, i32 0, i32 1
  %884 = load i32, i32* %883, align 4
  %885 = sub i32 %862, %884
  %886 = mul i32 %881, %885
  %887 = add i32 %878, %886
  %888 = getelementptr %dimension_descriptor, %dimension_descriptor* %882, i32 0, i32 3
  %889 = load i32, i32* %888, align 4
  %890 = mul i32 %881, %889
  %891 = getelementptr %array.2, %array.2* %"~0_implicit_cast_res", i32 0, i32 0
  %892 = getelementptr [4 x %complex_4], [4 x %complex_4]* %891, i32 0, i32 %887
  %893 = load %complex_4, %complex_4* %892, align 4
  %894 = load i32, i32* %"1_v", align 4
  %895 = load i32, i32* %"2_v", align 4
  %896 = load i32, i32* %"3_v", align 4
  %897 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 2
  %898 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %897, i32 0, i32 0
  %899 = getelementptr %dimension_descriptor, %dimension_descriptor* %898, i32 0, i32 1
  %900 = load i32, i32* %899, align 4
  %901 = sub i32 %894, %900
  %902 = mul i32 1, %901
  %903 = add i32 0, %902
  %904 = getelementptr %dimension_descriptor, %dimension_descriptor* %898, i32 0, i32 3
  %905 = load i32, i32* %904, align 4
  %906 = mul i32 1, %905
  %907 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %897, i32 0, i32 1
  %908 = getelementptr %dimension_descriptor, %dimension_descriptor* %907, i32 0, i32 1
  %909 = load i32, i32* %908, align 4
  %910 = sub i32 %895, %909
  %911 = mul i32 %906, %910
  %912 = add i32 %903, %911
  %913 = getelementptr %dimension_descriptor, %dimension_descriptor* %907, i32 0, i32 3
  %914 = load i32, i32* %913, align 4
  %915 = mul i32 %906, %914
  %916 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %897, i32 0, i32 2
  %917 = getelementptr %dimension_descriptor, %dimension_descriptor* %916, i32 0, i32 1
  %918 = load i32, i32* %917, align 4
  %919 = sub i32 %896, %918
  %920 = mul i32 %915, %919
  %921 = add i32 %912, %920
  %922 = getelementptr %dimension_descriptor, %dimension_descriptor* %916, i32 0, i32 3
  %923 = load i32, i32* %922, align 4
  %924 = mul i32 %915, %923
  %925 = getelementptr %array.2, %array.2* %"~2_bin_op_res", i32 0, i32 0
  %926 = getelementptr [4 x %complex_4], [4 x %complex_4]* %925, i32 0, i32 %921
  %927 = load %complex_4, %complex_4* %926, align 4
  %928 = alloca %complex_4, align 8
  store %complex_4 %893, %complex_4* %928, align 4
  %929 = alloca %complex_4, align 8
  store %complex_4 %927, %complex_4* %929, align 4
  %930 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %928, %complex_4* %929, %complex_4* %930)
  %931 = load %complex_4, %complex_4* %930, align 4
  store %complex_4 %931, %complex_4* %859, align 4
  %932 = load i32, i32* %"3_v", align 4
  %933 = add i32 %932, 1
  store i32 %933, i32* %"3_v", align 4
  br label %loop.head38

loop.end40:                                       ; preds = %loop.head38
  %934 = load i32, i32* %"2_v", align 4
  %935 = add i32 %934, 1
  store i32 %935, i32* %"2_v", align 4
  br label %loop.head36

loop.end41:                                       ; preds = %loop.head36
  %936 = load i32, i32* %"1_v", align 4
  %937 = add i32 %936, 1
  store i32 %937, i32* %"1_v", align 4
  br label %loop.head34

loop.end42:                                       ; preds = %loop.head34
  %938 = alloca %array.0, align 8
  %939 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %940 = getelementptr [4 x %complex_4], [4 x %complex_4]* %939, i32 0, i32 0
  %941 = getelementptr %array.0, %array.0* %938, i32 0, i32 0
  store %complex_4* %940, %complex_4** %941, align 8
  %942 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  %943 = load i32, i32* %942, align 4
  %944 = getelementptr %array.0, %array.0* %938, i32 0, i32 1
  store i32 %943, i32* %944, align 4
  %945 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %946 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %945, align 4
  %947 = getelementptr %array.0, %array.0* %938, i32 0, i32 2
  store [3 x %dimension_descriptor] %946, [3 x %dimension_descriptor]* %947, align 4
  store i32 0, i32* %call_arg_value, align 4
  call void @check(%array.0* %938, i32* %call_arg_value)
  %948 = alloca %dimension_descriptor*, align 8
  %949 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %950 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %949, i32 0, i32 0
  store %dimension_descriptor* %950, %dimension_descriptor** %948, align 8
  %951 = alloca i32, align 4
  store i32 1, i32* %951, align 4
  %952 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %948, i32* %951)
  %953 = sub i32 %952, 1
  store i32 %953, i32* %"1_k", align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.end50, %loop.end42
  %954 = load i32, i32* %"1_k", align 4
  %955 = add i32 %954, 1
  %956 = alloca %dimension_descriptor*, align 8
  %957 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %958 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %957, i32 0, i32 0
  store %dimension_descriptor* %958, %dimension_descriptor** %956, align 8
  %959 = alloca i32, align 4
  store i32 1, i32* %959, align 4
  %960 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %956, i32* %959)
  %961 = icmp sle i32 %955, %960
  br i1 %961, label %loop.body44, label %loop.end51

loop.body44:                                      ; preds = %loop.head43
  %962 = load i32, i32* %"1_k", align 4
  %963 = add i32 %962, 1
  store i32 %963, i32* %"1_k", align 4
  %964 = alloca %dimension_descriptor*, align 8
  %965 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %966 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %965, i32 0, i32 0
  store %dimension_descriptor* %966, %dimension_descriptor** %964, align 8
  %967 = alloca i32, align 4
  store i32 2, i32* %967, align 4
  %968 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %964, i32* %967)
  %969 = sub i32 %968, 1
  store i32 %969, i32* %"2_k", align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end49, %loop.body44
  %970 = load i32, i32* %"2_k", align 4
  %971 = add i32 %970, 1
  %972 = alloca %dimension_descriptor*, align 8
  %973 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %974 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %973, i32 0, i32 0
  store %dimension_descriptor* %974, %dimension_descriptor** %972, align 8
  %975 = alloca i32, align 4
  store i32 2, i32* %975, align 4
  %976 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %972, i32* %975)
  %977 = icmp sle i32 %971, %976
  br i1 %977, label %loop.body46, label %loop.end50

loop.body46:                                      ; preds = %loop.head45
  %978 = load i32, i32* %"2_k", align 4
  %979 = add i32 %978, 1
  store i32 %979, i32* %"2_k", align 4
  %980 = alloca %dimension_descriptor*, align 8
  %981 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %982 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %981, i32 0, i32 0
  store %dimension_descriptor* %982, %dimension_descriptor** %980, align 8
  %983 = alloca i32, align 4
  store i32 3, i32* %983, align 4
  %984 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %980, i32* %983)
  %985 = sub i32 %984, 1
  store i32 %985, i32* %"3_k", align 4
  br label %loop.head47

loop.head47:                                      ; preds = %loop.body48, %loop.body46
  %986 = load i32, i32* %"3_k", align 4
  %987 = add i32 %986, 1
  %988 = alloca %dimension_descriptor*, align 8
  %989 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %990 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %989, i32 0, i32 0
  store %dimension_descriptor* %990, %dimension_descriptor** %988, align 8
  %991 = alloca i32, align 4
  store i32 3, i32* %991, align 4
  %992 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %988, i32* %991)
  %993 = icmp sle i32 %987, %992
  br i1 %993, label %loop.body48, label %loop.end49

loop.body48:                                      ; preds = %loop.head47
  %994 = load i32, i32* %"3_k", align 4
  %995 = add i32 %994, 1
  store i32 %995, i32* %"3_k", align 4
  %996 = load i32, i32* %"1_k", align 4
  %997 = load i32, i32* %"2_k", align 4
  %998 = load i32, i32* %"3_k", align 4
  %999 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1000 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %999, i32 0, i32 0
  %1001 = getelementptr %dimension_descriptor, %dimension_descriptor* %1000, i32 0, i32 1
  %1002 = load i32, i32* %1001, align 4
  %1003 = sub i32 %996, %1002
  %1004 = mul i32 1, %1003
  %1005 = add i32 0, %1004
  %1006 = getelementptr %dimension_descriptor, %dimension_descriptor* %1000, i32 0, i32 3
  %1007 = load i32, i32* %1006, align 4
  %1008 = mul i32 1, %1007
  %1009 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %999, i32 0, i32 1
  %1010 = getelementptr %dimension_descriptor, %dimension_descriptor* %1009, i32 0, i32 1
  %1011 = load i32, i32* %1010, align 4
  %1012 = sub i32 %997, %1011
  %1013 = mul i32 %1008, %1012
  %1014 = add i32 %1005, %1013
  %1015 = getelementptr %dimension_descriptor, %dimension_descriptor* %1009, i32 0, i32 3
  %1016 = load i32, i32* %1015, align 4
  %1017 = mul i32 %1008, %1016
  %1018 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %999, i32 0, i32 2
  %1019 = getelementptr %dimension_descriptor, %dimension_descriptor* %1018, i32 0, i32 1
  %1020 = load i32, i32* %1019, align 4
  %1021 = sub i32 %998, %1020
  %1022 = mul i32 %1017, %1021
  %1023 = add i32 %1014, %1022
  %1024 = getelementptr %dimension_descriptor, %dimension_descriptor* %1018, i32 0, i32 3
  %1025 = load i32, i32* %1024, align 4
  %1026 = mul i32 %1017, %1025
  %1027 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %1028 = getelementptr [4 x i32], [4 x i32]* %1027, i32 0, i32 %1023
  %1029 = load i32, i32* %"1_k", align 4
  %1030 = load i32, i32* %"2_k", align 4
  %1031 = load i32, i32* %"3_k", align 4
  %1032 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %1033 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1032, i32 0, i32 0
  %1034 = getelementptr %dimension_descriptor, %dimension_descriptor* %1033, i32 0, i32 1
  %1035 = load i32, i32* %1034, align 4
  %1036 = sub i32 %1029, %1035
  %1037 = mul i32 1, %1036
  %1038 = add i32 0, %1037
  %1039 = getelementptr %dimension_descriptor, %dimension_descriptor* %1033, i32 0, i32 3
  %1040 = load i32, i32* %1039, align 4
  %1041 = mul i32 1, %1040
  %1042 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1032, i32 0, i32 1
  %1043 = getelementptr %dimension_descriptor, %dimension_descriptor* %1042, i32 0, i32 1
  %1044 = load i32, i32* %1043, align 4
  %1045 = sub i32 %1030, %1044
  %1046 = mul i32 %1041, %1045
  %1047 = add i32 %1038, %1046
  %1048 = getelementptr %dimension_descriptor, %dimension_descriptor* %1042, i32 0, i32 3
  %1049 = load i32, i32* %1048, align 4
  %1050 = mul i32 %1041, %1049
  %1051 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1032, i32 0, i32 2
  %1052 = getelementptr %dimension_descriptor, %dimension_descriptor* %1051, i32 0, i32 1
  %1053 = load i32, i32* %1052, align 4
  %1054 = sub i32 %1031, %1053
  %1055 = mul i32 %1050, %1054
  %1056 = add i32 %1047, %1055
  %1057 = getelementptr %dimension_descriptor, %dimension_descriptor* %1051, i32 0, i32 3
  %1058 = load i32, i32* %1057, align 4
  %1059 = mul i32 %1050, %1058
  %1060 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %1061 = getelementptr [4 x i32], [4 x i32]* %1060, i32 0, i32 %1056
  %1062 = load i32, i32* %1061, align 4
  %1063 = sub i32 0, %1062
  store i32 %1063, i32* %1028, align 4
  br label %loop.head47

loop.end49:                                       ; preds = %loop.head47
  br label %loop.head45

loop.end50:                                       ; preds = %loop.head45
  br label %loop.head43

loop.end51:                                       ; preds = %loop.head43
  %1064 = alloca %dimension_descriptor*, align 8
  %1065 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1066 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1065, i32 0, i32 0
  store %dimension_descriptor* %1066, %dimension_descriptor** %1064, align 8
  %1067 = alloca i32, align 4
  store i32 1, i32* %1067, align 4
  %1068 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1064, i32* %1067)
  %1069 = sub i32 %1068, 1
  store i32 %1069, i32* %"1_k", align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.end59, %loop.end51
  %1070 = load i32, i32* %"1_k", align 4
  %1071 = add i32 %1070, 1
  %1072 = alloca %dimension_descriptor*, align 8
  %1073 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1074 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1073, i32 0, i32 0
  store %dimension_descriptor* %1074, %dimension_descriptor** %1072, align 8
  %1075 = alloca i32, align 4
  store i32 1, i32* %1075, align 4
  %1076 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1072, i32* %1075)
  %1077 = icmp sle i32 %1071, %1076
  br i1 %1077, label %loop.body53, label %loop.end60

loop.body53:                                      ; preds = %loop.head52
  %1078 = load i32, i32* %"1_k", align 4
  %1079 = add i32 %1078, 1
  store i32 %1079, i32* %"1_k", align 4
  %1080 = alloca %dimension_descriptor*, align 8
  %1081 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1082 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1081, i32 0, i32 0
  store %dimension_descriptor* %1082, %dimension_descriptor** %1080, align 8
  %1083 = alloca i32, align 4
  store i32 2, i32* %1083, align 4
  %1084 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1080, i32* %1083)
  %1085 = sub i32 %1084, 1
  store i32 %1085, i32* %"2_k", align 4
  br label %loop.head54

loop.head54:                                      ; preds = %loop.end58, %loop.body53
  %1086 = load i32, i32* %"2_k", align 4
  %1087 = add i32 %1086, 1
  %1088 = alloca %dimension_descriptor*, align 8
  %1089 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1090 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1089, i32 0, i32 0
  store %dimension_descriptor* %1090, %dimension_descriptor** %1088, align 8
  %1091 = alloca i32, align 4
  store i32 2, i32* %1091, align 4
  %1092 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1088, i32* %1091)
  %1093 = icmp sle i32 %1087, %1092
  br i1 %1093, label %loop.body55, label %loop.end59

loop.body55:                                      ; preds = %loop.head54
  %1094 = load i32, i32* %"2_k", align 4
  %1095 = add i32 %1094, 1
  store i32 %1095, i32* %"2_k", align 4
  %1096 = alloca %dimension_descriptor*, align 8
  %1097 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1098 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1097, i32 0, i32 0
  store %dimension_descriptor* %1098, %dimension_descriptor** %1096, align 8
  %1099 = alloca i32, align 4
  store i32 3, i32* %1099, align 4
  %1100 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1096, i32* %1099)
  %1101 = sub i32 %1100, 1
  store i32 %1101, i32* %"3_k", align 4
  br label %loop.head56

loop.head56:                                      ; preds = %loop.body57, %loop.body55
  %1102 = load i32, i32* %"3_k", align 4
  %1103 = add i32 %1102, 1
  %1104 = alloca %dimension_descriptor*, align 8
  %1105 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1106 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1105, i32 0, i32 0
  store %dimension_descriptor* %1106, %dimension_descriptor** %1104, align 8
  %1107 = alloca i32, align 4
  store i32 3, i32* %1107, align 4
  %1108 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1104, i32* %1107)
  %1109 = icmp sle i32 %1103, %1108
  br i1 %1109, label %loop.body57, label %loop.end58

loop.body57:                                      ; preds = %loop.head56
  %1110 = load i32, i32* %"3_k", align 4
  %1111 = add i32 %1110, 1
  store i32 %1111, i32* %"3_k", align 4
  %1112 = load i32, i32* %"1_k", align 4
  %1113 = load i32, i32* %"2_k", align 4
  %1114 = load i32, i32* %"3_k", align 4
  %1115 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1116 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1115, i32 0, i32 0
  %1117 = getelementptr %dimension_descriptor, %dimension_descriptor* %1116, i32 0, i32 1
  %1118 = load i32, i32* %1117, align 4
  %1119 = sub i32 %1112, %1118
  %1120 = mul i32 1, %1119
  %1121 = add i32 0, %1120
  %1122 = getelementptr %dimension_descriptor, %dimension_descriptor* %1116, i32 0, i32 3
  %1123 = load i32, i32* %1122, align 4
  %1124 = mul i32 1, %1123
  %1125 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1115, i32 0, i32 1
  %1126 = getelementptr %dimension_descriptor, %dimension_descriptor* %1125, i32 0, i32 1
  %1127 = load i32, i32* %1126, align 4
  %1128 = sub i32 %1113, %1127
  %1129 = mul i32 %1124, %1128
  %1130 = add i32 %1121, %1129
  %1131 = getelementptr %dimension_descriptor, %dimension_descriptor* %1125, i32 0, i32 3
  %1132 = load i32, i32* %1131, align 4
  %1133 = mul i32 %1124, %1132
  %1134 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1115, i32 0, i32 2
  %1135 = getelementptr %dimension_descriptor, %dimension_descriptor* %1134, i32 0, i32 1
  %1136 = load i32, i32* %1135, align 4
  %1137 = sub i32 %1114, %1136
  %1138 = mul i32 %1133, %1137
  %1139 = add i32 %1130, %1138
  %1140 = getelementptr %dimension_descriptor, %dimension_descriptor* %1134, i32 0, i32 3
  %1141 = load i32, i32* %1140, align 4
  %1142 = mul i32 %1133, %1141
  %1143 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 0
  %1144 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1143, i32 0, i32 %1139
  %1145 = load i32, i32* %"1_k", align 4
  %1146 = load i32, i32* %"2_k", align 4
  %1147 = load i32, i32* %"3_k", align 4
  %1148 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1149 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1148, i32 0, i32 0
  %1150 = getelementptr %dimension_descriptor, %dimension_descriptor* %1149, i32 0, i32 1
  %1151 = load i32, i32* %1150, align 4
  %1152 = sub i32 %1145, %1151
  %1153 = mul i32 1, %1152
  %1154 = add i32 0, %1153
  %1155 = getelementptr %dimension_descriptor, %dimension_descriptor* %1149, i32 0, i32 3
  %1156 = load i32, i32* %1155, align 4
  %1157 = mul i32 1, %1156
  %1158 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1148, i32 0, i32 1
  %1159 = getelementptr %dimension_descriptor, %dimension_descriptor* %1158, i32 0, i32 1
  %1160 = load i32, i32* %1159, align 4
  %1161 = sub i32 %1146, %1160
  %1162 = mul i32 %1157, %1161
  %1163 = add i32 %1154, %1162
  %1164 = getelementptr %dimension_descriptor, %dimension_descriptor* %1158, i32 0, i32 3
  %1165 = load i32, i32* %1164, align 4
  %1166 = mul i32 %1157, %1165
  %1167 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1148, i32 0, i32 2
  %1168 = getelementptr %dimension_descriptor, %dimension_descriptor* %1167, i32 0, i32 1
  %1169 = load i32, i32* %1168, align 4
  %1170 = sub i32 %1147, %1169
  %1171 = mul i32 %1166, %1170
  %1172 = add i32 %1163, %1171
  %1173 = getelementptr %dimension_descriptor, %dimension_descriptor* %1167, i32 0, i32 3
  %1174 = load i32, i32* %1173, align 4
  %1175 = mul i32 %1166, %1174
  %1176 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %1177 = getelementptr [4 x i32], [4 x i32]* %1176, i32 0, i32 %1172
  %1178 = load i32, i32* %1177, align 4
  %1179 = sitofp i32 %1178 to float
  %1180 = alloca %complex_4, align 8
  %1181 = getelementptr %complex_4, %complex_4* %1180, i32 0, i32 0
  %1182 = getelementptr %complex_4, %complex_4* %1180, i32 0, i32 1
  store float %1179, float* %1181, align 4
  store float 0.000000e+00, float* %1182, align 4
  %1183 = load %complex_4, %complex_4* %1180, align 4
  store %complex_4 %1183, %complex_4* %1144, align 4
  br label %loop.head56

loop.end58:                                       ; preds = %loop.head56
  br label %loop.head54

loop.end59:                                       ; preds = %loop.head54
  br label %loop.head52

loop.end60:                                       ; preds = %loop.head52
  %1184 = alloca %dimension_descriptor*, align 8
  %1185 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1186 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1185, i32 0, i32 0
  store %dimension_descriptor* %1186, %dimension_descriptor** %1184, align 8
  %1187 = alloca i32, align 4
  store i32 1, i32* %1187, align 4
  %1188 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1184, i32* %1187)
  %1189 = sub i32 %1188, 1
  store i32 %1189, i32* %"1_k", align 4
  br label %loop.head61

loop.head61:                                      ; preds = %loop.end68, %loop.end60
  %1190 = load i32, i32* %"1_k", align 4
  %1191 = add i32 %1190, 1
  %1192 = alloca %dimension_descriptor*, align 8
  %1193 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1194 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1193, i32 0, i32 0
  store %dimension_descriptor* %1194, %dimension_descriptor** %1192, align 8
  %1195 = alloca i32, align 4
  store i32 1, i32* %1195, align 4
  %1196 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1192, i32* %1195)
  %1197 = icmp sle i32 %1191, %1196
  br i1 %1197, label %loop.body62, label %loop.end69

loop.body62:                                      ; preds = %loop.head61
  %1198 = load i32, i32* %"1_k", align 4
  %1199 = add i32 %1198, 1
  store i32 %1199, i32* %"1_k", align 4
  %1200 = alloca %dimension_descriptor*, align 8
  %1201 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1202 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1201, i32 0, i32 0
  store %dimension_descriptor* %1202, %dimension_descriptor** %1200, align 8
  %1203 = alloca i32, align 4
  store i32 2, i32* %1203, align 4
  %1204 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1200, i32* %1203)
  %1205 = sub i32 %1204, 1
  store i32 %1205, i32* %"2_k", align 4
  br label %loop.head63

loop.head63:                                      ; preds = %loop.end67, %loop.body62
  %1206 = load i32, i32* %"2_k", align 4
  %1207 = add i32 %1206, 1
  %1208 = alloca %dimension_descriptor*, align 8
  %1209 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1210 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1209, i32 0, i32 0
  store %dimension_descriptor* %1210, %dimension_descriptor** %1208, align 8
  %1211 = alloca i32, align 4
  store i32 2, i32* %1211, align 4
  %1212 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1208, i32* %1211)
  %1213 = icmp sle i32 %1207, %1212
  br i1 %1213, label %loop.body64, label %loop.end68

loop.body64:                                      ; preds = %loop.head63
  %1214 = load i32, i32* %"2_k", align 4
  %1215 = add i32 %1214, 1
  store i32 %1215, i32* %"2_k", align 4
  %1216 = alloca %dimension_descriptor*, align 8
  %1217 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1218 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1217, i32 0, i32 0
  store %dimension_descriptor* %1218, %dimension_descriptor** %1216, align 8
  %1219 = alloca i32, align 4
  store i32 3, i32* %1219, align 4
  %1220 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1216, i32* %1219)
  %1221 = sub i32 %1220, 1
  store i32 %1221, i32* %"3_k", align 4
  br label %loop.head65

loop.head65:                                      ; preds = %loop.body66, %loop.body64
  %1222 = load i32, i32* %"3_k", align 4
  %1223 = add i32 %1222, 1
  %1224 = alloca %dimension_descriptor*, align 8
  %1225 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1226 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1225, i32 0, i32 0
  store %dimension_descriptor* %1226, %dimension_descriptor** %1224, align 8
  %1227 = alloca i32, align 4
  store i32 3, i32* %1227, align 4
  %1228 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1224, i32* %1227)
  %1229 = icmp sle i32 %1223, %1228
  br i1 %1229, label %loop.body66, label %loop.end67

loop.body66:                                      ; preds = %loop.head65
  %1230 = load i32, i32* %"3_k", align 4
  %1231 = add i32 %1230, 1
  store i32 %1231, i32* %"3_k", align 4
  %1232 = load i32, i32* %"1_k", align 4
  %1233 = load i32, i32* %"2_k", align 4
  %1234 = load i32, i32* %"3_k", align 4
  %1235 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1236 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1235, i32 0, i32 0
  %1237 = getelementptr %dimension_descriptor, %dimension_descriptor* %1236, i32 0, i32 1
  %1238 = load i32, i32* %1237, align 4
  %1239 = sub i32 %1232, %1238
  %1240 = mul i32 1, %1239
  %1241 = add i32 0, %1240
  %1242 = getelementptr %dimension_descriptor, %dimension_descriptor* %1236, i32 0, i32 3
  %1243 = load i32, i32* %1242, align 4
  %1244 = mul i32 1, %1243
  %1245 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1235, i32 0, i32 1
  %1246 = getelementptr %dimension_descriptor, %dimension_descriptor* %1245, i32 0, i32 1
  %1247 = load i32, i32* %1246, align 4
  %1248 = sub i32 %1233, %1247
  %1249 = mul i32 %1244, %1248
  %1250 = add i32 %1241, %1249
  %1251 = getelementptr %dimension_descriptor, %dimension_descriptor* %1245, i32 0, i32 3
  %1252 = load i32, i32* %1251, align 4
  %1253 = mul i32 %1244, %1252
  %1254 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1235, i32 0, i32 2
  %1255 = getelementptr %dimension_descriptor, %dimension_descriptor* %1254, i32 0, i32 1
  %1256 = load i32, i32* %1255, align 4
  %1257 = sub i32 %1234, %1256
  %1258 = mul i32 %1253, %1257
  %1259 = add i32 %1250, %1258
  %1260 = getelementptr %dimension_descriptor, %dimension_descriptor* %1254, i32 0, i32 3
  %1261 = load i32, i32* %1260, align 4
  %1262 = mul i32 %1253, %1261
  %1263 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %1264 = getelementptr [4 x i32], [4 x i32]* %1263, i32 0, i32 %1259
  %1265 = load i32, i32* %"1_k", align 4
  %1266 = load i32, i32* %"2_k", align 4
  %1267 = load i32, i32* %"3_k", align 4
  %1268 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %1269 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1268, i32 0, i32 0
  %1270 = getelementptr %dimension_descriptor, %dimension_descriptor* %1269, i32 0, i32 1
  %1271 = load i32, i32* %1270, align 4
  %1272 = sub i32 %1265, %1271
  %1273 = mul i32 1, %1272
  %1274 = add i32 0, %1273
  %1275 = getelementptr %dimension_descriptor, %dimension_descriptor* %1269, i32 0, i32 3
  %1276 = load i32, i32* %1275, align 4
  %1277 = mul i32 1, %1276
  %1278 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1268, i32 0, i32 1
  %1279 = getelementptr %dimension_descriptor, %dimension_descriptor* %1278, i32 0, i32 1
  %1280 = load i32, i32* %1279, align 4
  %1281 = sub i32 %1266, %1280
  %1282 = mul i32 %1277, %1281
  %1283 = add i32 %1274, %1282
  %1284 = getelementptr %dimension_descriptor, %dimension_descriptor* %1278, i32 0, i32 3
  %1285 = load i32, i32* %1284, align 4
  %1286 = mul i32 %1277, %1285
  %1287 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1268, i32 0, i32 2
  %1288 = getelementptr %dimension_descriptor, %dimension_descriptor* %1287, i32 0, i32 1
  %1289 = load i32, i32* %1288, align 4
  %1290 = sub i32 %1267, %1289
  %1291 = mul i32 %1286, %1290
  %1292 = add i32 %1283, %1291
  %1293 = getelementptr %dimension_descriptor, %dimension_descriptor* %1287, i32 0, i32 3
  %1294 = load i32, i32* %1293, align 4
  %1295 = mul i32 %1286, %1294
  %1296 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %1297 = getelementptr [4 x i32], [4 x i32]* %1296, i32 0, i32 %1292
  %1298 = load i32, i32* %1297, align 4
  %1299 = sub i32 0, %1298
  store i32 %1299, i32* %1264, align 4
  br label %loop.head65

loop.end67:                                       ; preds = %loop.head65
  br label %loop.head63

loop.end68:                                       ; preds = %loop.head63
  br label %loop.head61

loop.end69:                                       ; preds = %loop.head61
  %1300 = alloca %dimension_descriptor*, align 8
  %1301 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1302 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1301, i32 0, i32 0
  store %dimension_descriptor* %1302, %dimension_descriptor** %1300, align 8
  %1303 = alloca i32, align 4
  store i32 1, i32* %1303, align 4
  %1304 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1300, i32* %1303)
  %1305 = sub i32 %1304, 1
  store i32 %1305, i32* %"1_k", align 4
  br label %loop.head70

loop.head70:                                      ; preds = %loop.end77, %loop.end69
  %1306 = load i32, i32* %"1_k", align 4
  %1307 = add i32 %1306, 1
  %1308 = alloca %dimension_descriptor*, align 8
  %1309 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1310 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1309, i32 0, i32 0
  store %dimension_descriptor* %1310, %dimension_descriptor** %1308, align 8
  %1311 = alloca i32, align 4
  store i32 1, i32* %1311, align 4
  %1312 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1308, i32* %1311)
  %1313 = icmp sle i32 %1307, %1312
  br i1 %1313, label %loop.body71, label %loop.end78

loop.body71:                                      ; preds = %loop.head70
  %1314 = load i32, i32* %"1_k", align 4
  %1315 = add i32 %1314, 1
  store i32 %1315, i32* %"1_k", align 4
  %1316 = alloca %dimension_descriptor*, align 8
  %1317 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1318 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1317, i32 0, i32 0
  store %dimension_descriptor* %1318, %dimension_descriptor** %1316, align 8
  %1319 = alloca i32, align 4
  store i32 2, i32* %1319, align 4
  %1320 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1316, i32* %1319)
  %1321 = sub i32 %1320, 1
  store i32 %1321, i32* %"2_k", align 4
  br label %loop.head72

loop.head72:                                      ; preds = %loop.end76, %loop.body71
  %1322 = load i32, i32* %"2_k", align 4
  %1323 = add i32 %1322, 1
  %1324 = alloca %dimension_descriptor*, align 8
  %1325 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1326 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1325, i32 0, i32 0
  store %dimension_descriptor* %1326, %dimension_descriptor** %1324, align 8
  %1327 = alloca i32, align 4
  store i32 2, i32* %1327, align 4
  %1328 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1324, i32* %1327)
  %1329 = icmp sle i32 %1323, %1328
  br i1 %1329, label %loop.body73, label %loop.end77

loop.body73:                                      ; preds = %loop.head72
  %1330 = load i32, i32* %"2_k", align 4
  %1331 = add i32 %1330, 1
  store i32 %1331, i32* %"2_k", align 4
  %1332 = alloca %dimension_descriptor*, align 8
  %1333 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1334 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1333, i32 0, i32 0
  store %dimension_descriptor* %1334, %dimension_descriptor** %1332, align 8
  %1335 = alloca i32, align 4
  store i32 3, i32* %1335, align 4
  %1336 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1332, i32* %1335)
  %1337 = sub i32 %1336, 1
  store i32 %1337, i32* %"3_k", align 4
  br label %loop.head74

loop.head74:                                      ; preds = %loop.body75, %loop.body73
  %1338 = load i32, i32* %"3_k", align 4
  %1339 = add i32 %1338, 1
  %1340 = alloca %dimension_descriptor*, align 8
  %1341 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1342 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1341, i32 0, i32 0
  store %dimension_descriptor* %1342, %dimension_descriptor** %1340, align 8
  %1343 = alloca i32, align 4
  store i32 3, i32* %1343, align 4
  %1344 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1340, i32* %1343)
  %1345 = icmp sle i32 %1339, %1344
  br i1 %1345, label %loop.body75, label %loop.end76

loop.body75:                                      ; preds = %loop.head74
  %1346 = load i32, i32* %"3_k", align 4
  %1347 = add i32 %1346, 1
  store i32 %1347, i32* %"3_k", align 4
  %1348 = load i32, i32* %"1_k", align 4
  %1349 = load i32, i32* %"2_k", align 4
  %1350 = load i32, i32* %"3_k", align 4
  %1351 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1352 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1351, i32 0, i32 0
  %1353 = getelementptr %dimension_descriptor, %dimension_descriptor* %1352, i32 0, i32 1
  %1354 = load i32, i32* %1353, align 4
  %1355 = sub i32 %1348, %1354
  %1356 = mul i32 1, %1355
  %1357 = add i32 0, %1356
  %1358 = getelementptr %dimension_descriptor, %dimension_descriptor* %1352, i32 0, i32 3
  %1359 = load i32, i32* %1358, align 4
  %1360 = mul i32 1, %1359
  %1361 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1351, i32 0, i32 1
  %1362 = getelementptr %dimension_descriptor, %dimension_descriptor* %1361, i32 0, i32 1
  %1363 = load i32, i32* %1362, align 4
  %1364 = sub i32 %1349, %1363
  %1365 = mul i32 %1360, %1364
  %1366 = add i32 %1357, %1365
  %1367 = getelementptr %dimension_descriptor, %dimension_descriptor* %1361, i32 0, i32 3
  %1368 = load i32, i32* %1367, align 4
  %1369 = mul i32 %1360, %1368
  %1370 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1351, i32 0, i32 2
  %1371 = getelementptr %dimension_descriptor, %dimension_descriptor* %1370, i32 0, i32 1
  %1372 = load i32, i32* %1371, align 4
  %1373 = sub i32 %1350, %1372
  %1374 = mul i32 %1369, %1373
  %1375 = add i32 %1366, %1374
  %1376 = getelementptr %dimension_descriptor, %dimension_descriptor* %1370, i32 0, i32 3
  %1377 = load i32, i32* %1376, align 4
  %1378 = mul i32 %1369, %1377
  %1379 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 0
  %1380 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1379, i32 0, i32 %1375
  %1381 = load i32, i32* %"1_k", align 4
  %1382 = load i32, i32* %"2_k", align 4
  %1383 = load i32, i32* %"3_k", align 4
  %1384 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1385 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1384, i32 0, i32 0
  %1386 = getelementptr %dimension_descriptor, %dimension_descriptor* %1385, i32 0, i32 1
  %1387 = load i32, i32* %1386, align 4
  %1388 = sub i32 %1381, %1387
  %1389 = mul i32 1, %1388
  %1390 = add i32 0, %1389
  %1391 = getelementptr %dimension_descriptor, %dimension_descriptor* %1385, i32 0, i32 3
  %1392 = load i32, i32* %1391, align 4
  %1393 = mul i32 1, %1392
  %1394 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1384, i32 0, i32 1
  %1395 = getelementptr %dimension_descriptor, %dimension_descriptor* %1394, i32 0, i32 1
  %1396 = load i32, i32* %1395, align 4
  %1397 = sub i32 %1382, %1396
  %1398 = mul i32 %1393, %1397
  %1399 = add i32 %1390, %1398
  %1400 = getelementptr %dimension_descriptor, %dimension_descriptor* %1394, i32 0, i32 3
  %1401 = load i32, i32* %1400, align 4
  %1402 = mul i32 %1393, %1401
  %1403 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1384, i32 0, i32 2
  %1404 = getelementptr %dimension_descriptor, %dimension_descriptor* %1403, i32 0, i32 1
  %1405 = load i32, i32* %1404, align 4
  %1406 = sub i32 %1383, %1405
  %1407 = mul i32 %1402, %1406
  %1408 = add i32 %1399, %1407
  %1409 = getelementptr %dimension_descriptor, %dimension_descriptor* %1403, i32 0, i32 3
  %1410 = load i32, i32* %1409, align 4
  %1411 = mul i32 %1402, %1410
  %1412 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %1413 = getelementptr [4 x i32], [4 x i32]* %1412, i32 0, i32 %1408
  %1414 = load i32, i32* %1413, align 4
  %1415 = sitofp i32 %1414 to float
  %1416 = alloca %complex_4, align 8
  %1417 = getelementptr %complex_4, %complex_4* %1416, i32 0, i32 0
  %1418 = getelementptr %complex_4, %complex_4* %1416, i32 0, i32 1
  store float %1415, float* %1417, align 4
  store float 0.000000e+00, float* %1418, align 4
  %1419 = load %complex_4, %complex_4* %1416, align 4
  store %complex_4 %1419, %complex_4* %1380, align 4
  br label %loop.head74

loop.end76:                                       ; preds = %loop.head74
  br label %loop.head72

loop.end77:                                       ; preds = %loop.head72
  br label %loop.head70

loop.end78:                                       ; preds = %loop.head70
  store i32 1, i32* %"1_v", align 4
  %1420 = alloca %dimension_descriptor*, align 8
  %1421 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1422 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1421, i32 0, i32 0
  store %dimension_descriptor* %1422, %dimension_descriptor** %1420, align 8
  %1423 = alloca i32, align 4
  store i32 1, i32* %1423, align 4
  %1424 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1420, i32* %1423)
  %1425 = sub i32 %1424, 1
  store i32 %1425, i32* %"1_t", align 4
  br label %loop.head79

loop.head79:                                      ; preds = %loop.end86, %loop.end78
  %1426 = load i32, i32* %"1_t", align 4
  %1427 = add i32 %1426, 1
  %1428 = alloca %dimension_descriptor*, align 8
  %1429 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1430 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1429, i32 0, i32 0
  store %dimension_descriptor* %1430, %dimension_descriptor** %1428, align 8
  %1431 = alloca i32, align 4
  store i32 1, i32* %1431, align 4
  %1432 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1428, i32* %1431)
  %1433 = icmp sle i32 %1427, %1432
  br i1 %1433, label %loop.body80, label %loop.end87

loop.body80:                                      ; preds = %loop.head79
  %1434 = load i32, i32* %"1_t", align 4
  %1435 = add i32 %1434, 1
  store i32 %1435, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %1436 = alloca %dimension_descriptor*, align 8
  %1437 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1438 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1437, i32 0, i32 0
  store %dimension_descriptor* %1438, %dimension_descriptor** %1436, align 8
  %1439 = alloca i32, align 4
  store i32 2, i32* %1439, align 4
  %1440 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1436, i32* %1439)
  %1441 = sub i32 %1440, 1
  store i32 %1441, i32* %"2_t", align 4
  br label %loop.head81

loop.head81:                                      ; preds = %loop.end85, %loop.body80
  %1442 = load i32, i32* %"2_t", align 4
  %1443 = add i32 %1442, 1
  %1444 = alloca %dimension_descriptor*, align 8
  %1445 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1446 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1445, i32 0, i32 0
  store %dimension_descriptor* %1446, %dimension_descriptor** %1444, align 8
  %1447 = alloca i32, align 4
  store i32 2, i32* %1447, align 4
  %1448 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1444, i32* %1447)
  %1449 = icmp sle i32 %1443, %1448
  br i1 %1449, label %loop.body82, label %loop.end86

loop.body82:                                      ; preds = %loop.head81
  %1450 = load i32, i32* %"2_t", align 4
  %1451 = add i32 %1450, 1
  store i32 %1451, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %1452 = alloca %dimension_descriptor*, align 8
  %1453 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1454 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1453, i32 0, i32 0
  store %dimension_descriptor* %1454, %dimension_descriptor** %1452, align 8
  %1455 = alloca i32, align 4
  store i32 3, i32* %1455, align 4
  %1456 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1452, i32* %1455)
  %1457 = sub i32 %1456, 1
  store i32 %1457, i32* %"3_t", align 4
  br label %loop.head83

loop.head83:                                      ; preds = %loop.body84, %loop.body82
  %1458 = load i32, i32* %"3_t", align 4
  %1459 = add i32 %1458, 1
  %1460 = alloca %dimension_descriptor*, align 8
  %1461 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1462 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1461, i32 0, i32 0
  store %dimension_descriptor* %1462, %dimension_descriptor** %1460, align 8
  %1463 = alloca i32, align 4
  store i32 3, i32* %1463, align 4
  %1464 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1460, i32* %1463)
  %1465 = icmp sle i32 %1459, %1464
  br i1 %1465, label %loop.body84, label %loop.end85

loop.body84:                                      ; preds = %loop.head83
  %1466 = load i32, i32* %"3_t", align 4
  %1467 = add i32 %1466, 1
  store i32 %1467, i32* %"3_t", align 4
  %1468 = load i32, i32* %"1_t", align 4
  %1469 = load i32, i32* %"2_t", align 4
  %1470 = load i32, i32* %"3_t", align 4
  %1471 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1472 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1471, i32 0, i32 0
  %1473 = getelementptr %dimension_descriptor, %dimension_descriptor* %1472, i32 0, i32 1
  %1474 = load i32, i32* %1473, align 4
  %1475 = sub i32 %1468, %1474
  %1476 = mul i32 1, %1475
  %1477 = add i32 0, %1476
  %1478 = getelementptr %dimension_descriptor, %dimension_descriptor* %1472, i32 0, i32 3
  %1479 = load i32, i32* %1478, align 4
  %1480 = mul i32 1, %1479
  %1481 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1471, i32 0, i32 1
  %1482 = getelementptr %dimension_descriptor, %dimension_descriptor* %1481, i32 0, i32 1
  %1483 = load i32, i32* %1482, align 4
  %1484 = sub i32 %1469, %1483
  %1485 = mul i32 %1480, %1484
  %1486 = add i32 %1477, %1485
  %1487 = getelementptr %dimension_descriptor, %dimension_descriptor* %1481, i32 0, i32 3
  %1488 = load i32, i32* %1487, align 4
  %1489 = mul i32 %1480, %1488
  %1490 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1471, i32 0, i32 2
  %1491 = getelementptr %dimension_descriptor, %dimension_descriptor* %1490, i32 0, i32 1
  %1492 = load i32, i32* %1491, align 4
  %1493 = sub i32 %1470, %1492
  %1494 = mul i32 %1489, %1493
  %1495 = add i32 %1486, %1494
  %1496 = getelementptr %dimension_descriptor, %dimension_descriptor* %1490, i32 0, i32 3
  %1497 = load i32, i32* %1496, align 4
  %1498 = mul i32 %1489, %1497
  %1499 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 0
  %1500 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1499, i32 0, i32 %1495
  %1501 = load i32, i32* %"1_v", align 4
  %1502 = load i32, i32* %"2_v", align 4
  %1503 = load i32, i32* %"3_v", align 4
  %1504 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 2
  %1505 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1504, i32 0, i32 0
  %1506 = getelementptr %dimension_descriptor, %dimension_descriptor* %1505, i32 0, i32 1
  %1507 = load i32, i32* %1506, align 4
  %1508 = sub i32 %1501, %1507
  %1509 = mul i32 1, %1508
  %1510 = add i32 0, %1509
  %1511 = getelementptr %dimension_descriptor, %dimension_descriptor* %1505, i32 0, i32 3
  %1512 = load i32, i32* %1511, align 4
  %1513 = mul i32 1, %1512
  %1514 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1504, i32 0, i32 1
  %1515 = getelementptr %dimension_descriptor, %dimension_descriptor* %1514, i32 0, i32 1
  %1516 = load i32, i32* %1515, align 4
  %1517 = sub i32 %1502, %1516
  %1518 = mul i32 %1513, %1517
  %1519 = add i32 %1510, %1518
  %1520 = getelementptr %dimension_descriptor, %dimension_descriptor* %1514, i32 0, i32 3
  %1521 = load i32, i32* %1520, align 4
  %1522 = mul i32 %1513, %1521
  %1523 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1504, i32 0, i32 2
  %1524 = getelementptr %dimension_descriptor, %dimension_descriptor* %1523, i32 0, i32 1
  %1525 = load i32, i32* %1524, align 4
  %1526 = sub i32 %1503, %1525
  %1527 = mul i32 %1522, %1526
  %1528 = add i32 %1519, %1527
  %1529 = getelementptr %dimension_descriptor, %dimension_descriptor* %1523, i32 0, i32 3
  %1530 = load i32, i32* %1529, align 4
  %1531 = mul i32 %1522, %1530
  %1532 = getelementptr %array.2, %array.2* %"~6_implicit_cast_res", i32 0, i32 0
  %1533 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1532, i32 0, i32 %1528
  %1534 = load %complex_4, %complex_4* %1533, align 4
  %1535 = alloca %complex_4, align 8
  %1536 = getelementptr %complex_4, %complex_4* %1535, i32 0, i32 0
  %1537 = getelementptr %complex_4, %complex_4* %1535, i32 0, i32 1
  store float 0.000000e+00, float* %1536, align 4
  store float 1.000000e+00, float* %1537, align 4
  %1538 = load %complex_4, %complex_4* %1535, align 4
  %1539 = alloca %complex_4, align 8
  store %complex_4 %1534, %complex_4* %1539, align 4
  %1540 = alloca %complex_4, align 8
  store %complex_4 %1538, %complex_4* %1540, align 4
  %1541 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %1539, %complex_4* %1540, %complex_4* %1541)
  %1542 = load %complex_4, %complex_4* %1541, align 4
  store %complex_4 %1542, %complex_4* %1500, align 4
  %1543 = load i32, i32* %"3_v", align 4
  %1544 = add i32 %1543, 1
  store i32 %1544, i32* %"3_v", align 4
  br label %loop.head83

loop.end85:                                       ; preds = %loop.head83
  %1545 = load i32, i32* %"2_v", align 4
  %1546 = add i32 %1545, 1
  store i32 %1546, i32* %"2_v", align 4
  br label %loop.head81

loop.end86:                                       ; preds = %loop.head81
  %1547 = load i32, i32* %"1_v", align 4
  %1548 = add i32 %1547, 1
  store i32 %1548, i32* %"1_v", align 4
  br label %loop.head79

loop.end87:                                       ; preds = %loop.head79
  store i32 1, i32* %"1_v", align 4
  %1549 = alloca %dimension_descriptor*, align 8
  %1550 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1551 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1550, i32 0, i32 0
  store %dimension_descriptor* %1551, %dimension_descriptor** %1549, align 8
  %1552 = alloca i32, align 4
  store i32 1, i32* %1552, align 4
  %1553 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1549, i32* %1552)
  %1554 = sub i32 %1553, 1
  store i32 %1554, i32* %"1_t", align 4
  br label %loop.head88

loop.head88:                                      ; preds = %loop.end95, %loop.end87
  %1555 = load i32, i32* %"1_t", align 4
  %1556 = add i32 %1555, 1
  %1557 = alloca %dimension_descriptor*, align 8
  %1558 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1559 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1558, i32 0, i32 0
  store %dimension_descriptor* %1559, %dimension_descriptor** %1557, align 8
  %1560 = alloca i32, align 4
  store i32 1, i32* %1560, align 4
  %1561 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1557, i32* %1560)
  %1562 = icmp sle i32 %1556, %1561
  br i1 %1562, label %loop.body89, label %loop.end96

loop.body89:                                      ; preds = %loop.head88
  %1563 = load i32, i32* %"1_t", align 4
  %1564 = add i32 %1563, 1
  store i32 %1564, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %1565 = alloca %dimension_descriptor*, align 8
  %1566 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1567 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1566, i32 0, i32 0
  store %dimension_descriptor* %1567, %dimension_descriptor** %1565, align 8
  %1568 = alloca i32, align 4
  store i32 2, i32* %1568, align 4
  %1569 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1565, i32* %1568)
  %1570 = sub i32 %1569, 1
  store i32 %1570, i32* %"2_t", align 4
  br label %loop.head90

loop.head90:                                      ; preds = %loop.end94, %loop.body89
  %1571 = load i32, i32* %"2_t", align 4
  %1572 = add i32 %1571, 1
  %1573 = alloca %dimension_descriptor*, align 8
  %1574 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1575 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1574, i32 0, i32 0
  store %dimension_descriptor* %1575, %dimension_descriptor** %1573, align 8
  %1576 = alloca i32, align 4
  store i32 2, i32* %1576, align 4
  %1577 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1573, i32* %1576)
  %1578 = icmp sle i32 %1572, %1577
  br i1 %1578, label %loop.body91, label %loop.end95

loop.body91:                                      ; preds = %loop.head90
  %1579 = load i32, i32* %"2_t", align 4
  %1580 = add i32 %1579, 1
  store i32 %1580, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %1581 = alloca %dimension_descriptor*, align 8
  %1582 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1583 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1582, i32 0, i32 0
  store %dimension_descriptor* %1583, %dimension_descriptor** %1581, align 8
  %1584 = alloca i32, align 4
  store i32 3, i32* %1584, align 4
  %1585 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1581, i32* %1584)
  %1586 = sub i32 %1585, 1
  store i32 %1586, i32* %"3_t", align 4
  br label %loop.head92

loop.head92:                                      ; preds = %loop.body93, %loop.body91
  %1587 = load i32, i32* %"3_t", align 4
  %1588 = add i32 %1587, 1
  %1589 = alloca %dimension_descriptor*, align 8
  %1590 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1591 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1590, i32 0, i32 0
  store %dimension_descriptor* %1591, %dimension_descriptor** %1589, align 8
  %1592 = alloca i32, align 4
  store i32 3, i32* %1592, align 4
  %1593 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1589, i32* %1592)
  %1594 = icmp sle i32 %1588, %1593
  br i1 %1594, label %loop.body93, label %loop.end94

loop.body93:                                      ; preds = %loop.head92
  %1595 = load i32, i32* %"3_t", align 4
  %1596 = add i32 %1595, 1
  store i32 %1596, i32* %"3_t", align 4
  %1597 = load i32, i32* %"1_t", align 4
  %1598 = load i32, i32* %"2_t", align 4
  %1599 = load i32, i32* %"3_t", align 4
  %1600 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1601 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1600, i32 0, i32 0
  %1602 = getelementptr %dimension_descriptor, %dimension_descriptor* %1601, i32 0, i32 1
  %1603 = load i32, i32* %1602, align 4
  %1604 = sub i32 %1597, %1603
  %1605 = mul i32 1, %1604
  %1606 = add i32 0, %1605
  %1607 = getelementptr %dimension_descriptor, %dimension_descriptor* %1601, i32 0, i32 3
  %1608 = load i32, i32* %1607, align 4
  %1609 = mul i32 1, %1608
  %1610 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1600, i32 0, i32 1
  %1611 = getelementptr %dimension_descriptor, %dimension_descriptor* %1610, i32 0, i32 1
  %1612 = load i32, i32* %1611, align 4
  %1613 = sub i32 %1598, %1612
  %1614 = mul i32 %1609, %1613
  %1615 = add i32 %1606, %1614
  %1616 = getelementptr %dimension_descriptor, %dimension_descriptor* %1610, i32 0, i32 3
  %1617 = load i32, i32* %1616, align 4
  %1618 = mul i32 %1609, %1617
  %1619 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1600, i32 0, i32 2
  %1620 = getelementptr %dimension_descriptor, %dimension_descriptor* %1619, i32 0, i32 1
  %1621 = load i32, i32* %1620, align 4
  %1622 = sub i32 %1599, %1621
  %1623 = mul i32 %1618, %1622
  %1624 = add i32 %1615, %1623
  %1625 = getelementptr %dimension_descriptor, %dimension_descriptor* %1619, i32 0, i32 3
  %1626 = load i32, i32* %1625, align 4
  %1627 = mul i32 %1618, %1626
  %1628 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %1629 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1628, i32 0, i32 %1624
  %1630 = load i32, i32* %"1_v", align 4
  %1631 = load i32, i32* %"2_v", align 4
  %1632 = load i32, i32* %"3_v", align 4
  %1633 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 2
  %1634 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1633, i32 0, i32 0
  %1635 = getelementptr %dimension_descriptor, %dimension_descriptor* %1634, i32 0, i32 1
  %1636 = load i32, i32* %1635, align 4
  %1637 = sub i32 %1630, %1636
  %1638 = mul i32 1, %1637
  %1639 = add i32 0, %1638
  %1640 = getelementptr %dimension_descriptor, %dimension_descriptor* %1634, i32 0, i32 3
  %1641 = load i32, i32* %1640, align 4
  %1642 = mul i32 1, %1641
  %1643 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1633, i32 0, i32 1
  %1644 = getelementptr %dimension_descriptor, %dimension_descriptor* %1643, i32 0, i32 1
  %1645 = load i32, i32* %1644, align 4
  %1646 = sub i32 %1631, %1645
  %1647 = mul i32 %1642, %1646
  %1648 = add i32 %1639, %1647
  %1649 = getelementptr %dimension_descriptor, %dimension_descriptor* %1643, i32 0, i32 3
  %1650 = load i32, i32* %1649, align 4
  %1651 = mul i32 %1642, %1650
  %1652 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1633, i32 0, i32 2
  %1653 = getelementptr %dimension_descriptor, %dimension_descriptor* %1652, i32 0, i32 1
  %1654 = load i32, i32* %1653, align 4
  %1655 = sub i32 %1632, %1654
  %1656 = mul i32 %1651, %1655
  %1657 = add i32 %1648, %1656
  %1658 = getelementptr %dimension_descriptor, %dimension_descriptor* %1652, i32 0, i32 3
  %1659 = load i32, i32* %1658, align 4
  %1660 = mul i32 %1651, %1659
  %1661 = getelementptr %array.2, %array.2* %"~4_implicit_cast_res", i32 0, i32 0
  %1662 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1661, i32 0, i32 %1657
  %1663 = load %complex_4, %complex_4* %1662, align 4
  %1664 = load i32, i32* %"1_v", align 4
  %1665 = load i32, i32* %"2_v", align 4
  %1666 = load i32, i32* %"3_v", align 4
  %1667 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 2
  %1668 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1667, i32 0, i32 0
  %1669 = getelementptr %dimension_descriptor, %dimension_descriptor* %1668, i32 0, i32 1
  %1670 = load i32, i32* %1669, align 4
  %1671 = sub i32 %1664, %1670
  %1672 = mul i32 1, %1671
  %1673 = add i32 0, %1672
  %1674 = getelementptr %dimension_descriptor, %dimension_descriptor* %1668, i32 0, i32 3
  %1675 = load i32, i32* %1674, align 4
  %1676 = mul i32 1, %1675
  %1677 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1667, i32 0, i32 1
  %1678 = getelementptr %dimension_descriptor, %dimension_descriptor* %1677, i32 0, i32 1
  %1679 = load i32, i32* %1678, align 4
  %1680 = sub i32 %1665, %1679
  %1681 = mul i32 %1676, %1680
  %1682 = add i32 %1673, %1681
  %1683 = getelementptr %dimension_descriptor, %dimension_descriptor* %1677, i32 0, i32 3
  %1684 = load i32, i32* %1683, align 4
  %1685 = mul i32 %1676, %1684
  %1686 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1667, i32 0, i32 2
  %1687 = getelementptr %dimension_descriptor, %dimension_descriptor* %1686, i32 0, i32 1
  %1688 = load i32, i32* %1687, align 4
  %1689 = sub i32 %1666, %1688
  %1690 = mul i32 %1685, %1689
  %1691 = add i32 %1682, %1690
  %1692 = getelementptr %dimension_descriptor, %dimension_descriptor* %1686, i32 0, i32 3
  %1693 = load i32, i32* %1692, align 4
  %1694 = mul i32 %1685, %1693
  %1695 = getelementptr %array.2, %array.2* %"~7_bin_op_res", i32 0, i32 0
  %1696 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1695, i32 0, i32 %1691
  %1697 = load %complex_4, %complex_4* %1696, align 4
  %1698 = alloca %complex_4, align 8
  store %complex_4 %1663, %complex_4* %1698, align 4
  %1699 = alloca %complex_4, align 8
  store %complex_4 %1697, %complex_4* %1699, align 4
  %1700 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %1698, %complex_4* %1699, %complex_4* %1700)
  %1701 = load %complex_4, %complex_4* %1700, align 4
  store %complex_4 %1701, %complex_4* %1629, align 4
  %1702 = load i32, i32* %"3_v", align 4
  %1703 = add i32 %1702, 1
  store i32 %1703, i32* %"3_v", align 4
  br label %loop.head92

loop.end94:                                       ; preds = %loop.head92
  %1704 = load i32, i32* %"2_v", align 4
  %1705 = add i32 %1704, 1
  store i32 %1705, i32* %"2_v", align 4
  br label %loop.head90

loop.end95:                                       ; preds = %loop.head90
  %1706 = load i32, i32* %"1_v", align 4
  %1707 = add i32 %1706, 1
  store i32 %1707, i32* %"1_v", align 4
  br label %loop.head88

loop.end96:                                       ; preds = %loop.head88
  %1708 = alloca %array.0, align 8
  %1709 = getelementptr %array.2, %array.2* %c, i32 0, i32 0
  %1710 = getelementptr [4 x %complex_4], [4 x %complex_4]* %1709, i32 0, i32 0
  %1711 = getelementptr %array.0, %array.0* %1708, i32 0, i32 0
  store %complex_4* %1710, %complex_4** %1711, align 8
  %1712 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  %1713 = load i32, i32* %1712, align 4
  %1714 = getelementptr %array.0, %array.0* %1708, i32 0, i32 1
  store i32 %1713, i32* %1714, align 4
  %1715 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %1716 = load [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1715, align 4
  %1717 = getelementptr %array.0, %array.0* %1708, i32 0, i32 2
  store [3 x %dimension_descriptor] %1716, [3 x %dimension_descriptor]* %1717, align 4
  store i32 1, i32* %call_arg_value97, align 4
  call void @check(%array.0* %1708, i32* %call_arg_value97)
  ret i32 0
}
