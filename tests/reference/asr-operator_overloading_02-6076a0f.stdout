(TranslationUnit (SymbolTable 1 {main: (Program (SymbolTable 4 {logical_gets_integer: (ExternalSymbol 4 logical_gets_integer 2 logical_gets_integer overload_assignment_m [] logical_gets_integer Private), tf: (Variable 4 tf Local () () Default (Logical 4 []) Source Private Required .false.), ~assign: (ExternalSymbol 4 ~assign 2 ~assign overload_assignment_m [] ~assign Private)}) main [overload_assignment_m] [(= (Var 4 tf) (ImplicitCast (ConstantInteger 0 (Integer 4 [])) IntegerToLogical (Logical 4 []) ()) (SubroutineCall 4 logical_gets_integer 2 ~assign [(Var 4 tf) (ConstantInteger 0 (Integer 4 []))] ())) (Print () [(ConstantString "tf=0:" (Character 1 5 () [])) (Var 4 tf)]) (= (Var 4 tf) (ImplicitCast (ConstantInteger 1 (Integer 4 [])) IntegerToLogical (Logical 4 []) ()) (SubroutineCall 4 logical_gets_integer 2 ~assign [(Var 4 tf) (ConstantInteger 1 (Integer 4 []))] ())) (Print () [(ConstantString "tf=1:" (Character 1 5 () [])) (Var 4 tf)])]), overload_assignment_m: (Module (SymbolTable 2 {logical_gets_integer: (Subroutine (SymbolTable 3 {i: (Variable 3 i In () () Default (Integer 4 []) Source Private Required .false.), tf: (Variable 3 tf Out () () Default (Logical 4 []) Source Private Required .false.)}) logical_gets_integer [(Var 3 tf) (Var 3 i)] [(= (Var 3 tf) (Compare (Var 3 i) Eq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) ())] Source Private Implementation () .false. .false.), ~assign: (CustomOperator 2 ~assign [2 logical_gets_integer] Public)}) overload_assignment_m [] .false.)}) [])
