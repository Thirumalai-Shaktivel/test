; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%complex_4 = type { float, float }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = sub i32 3, %11
  %13 = add i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = alloca i32, align 4
  store i32 3, i32* %14, align 4
  %15 = getelementptr %array, %array* %a, i32 0, i32 0
  %16 = load i32, i32* %14, align 4
  %17 = alloca %complex_4, i32 %16, align 8
  store %complex_4* %17, %complex_4** %15, align 8
  %b = alloca %array, align 8
  %18 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %18, align 4
  %19 = getelementptr %array, %array* %b, i32 0, i32 2
  %20 = alloca i32, align 4
  store i32 1, i32* %20, align 4
  %21 = load i32, i32* %20, align 4
  %22 = alloca %dimension_descriptor, i32 %21, align 8
  %23 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %23, align 4
  store %dimension_descriptor* %22, %dimension_descriptor** %19, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = sub i32 4, %29
  %31 = add i32 %30, 1
  store i32 %31, i32* %28, align 4
  %32 = alloca i32, align 4
  store i32 4, i32* %32, align 4
  %33 = getelementptr %array, %array* %b, i32 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = alloca %complex_4, i32 %34, align 8
  store %complex_4* %35, %complex_4** %33, align 8
  %c = alloca %array.0, align 8
  %36 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = alloca i32, align 4
  store i32 2, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = alloca %dimension_descriptor, i32 %39, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 2, i32* %41, align 4
  store %dimension_descriptor* %40, %dimension_descriptor** %37, align 8
  %42 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  %47 = load i32, i32* %45, align 4
  %48 = sub i32 2, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %46, align 4
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  store i32 1, i32* %51, align 4
  store i32 1, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = sub i32 2, %54
  %56 = add i32 %55, 1
  store i32 %56, i32* %53, align 4
  %57 = alloca i32, align 4
  store i32 4, i32* %57, align 4
  %58 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %59 = load i32, i32* %57, align 4
  %60 = alloca %complex_4, i32 %59, align 8
  store %complex_4* %60, %complex_4** %58, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %61 = load i32, i32* %i, align 4
  %62 = add i32 %61, 1
  %63 = icmp sle i32 %62, 3
  br i1 %63, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %64 = load i32, i32* %i, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %i, align 4
  %66 = load i32, i32* %i, align 4
  %67 = getelementptr %array, %array* %a, i32 0, i32 2
  %68 = load %dimension_descriptor*, %dimension_descriptor** %67, align 8
  %69 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 %66, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr %array, %array* %a, i32 0, i32 0
  %79 = load %complex_4*, %complex_4** %78, align 8
  %80 = getelementptr inbounds %complex_4, %complex_4* %79, i32 %74
  %81 = load i32, i32* %i, align 4
  %82 = add i32 %81, 10
  %83 = sitofp i32 %82 to float
  %84 = alloca %complex_4, align 8
  %85 = getelementptr %complex_4, %complex_4* %84, i32 0, i32 0
  %86 = getelementptr %complex_4, %complex_4* %84, i32 0, i32 1
  store float %83, float* %85, align 4
  store float 0.000000e+00, float* %86, align 4
  %87 = load %complex_4, %complex_4* %84, align 4
  store %complex_4 %87, %complex_4* %80, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %88 = getelementptr %array, %array* %a, i32 0, i32 2
  %89 = load %dimension_descriptor*, %dimension_descriptor** %88, align 8
  %90 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %89, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 1, %92
  %94 = mul i32 1, %93
  %95 = add i32 0, %94
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = mul i32 1, %97
  %99 = getelementptr %array, %array* %a, i32 0, i32 0
  %100 = load %complex_4*, %complex_4** %99, align 8
  %101 = getelementptr inbounds %complex_4, %complex_4* %100, i32 %95
  %102 = load %complex_4, %complex_4* %101, align 4
  %103 = alloca %complex_4, align 8
  %104 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 0
  %105 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 1
  store float 1.100000e+01, float* %104, align 4
  store float 0.000000e+00, float* %105, align 4
  %106 = load %complex_4, %complex_4* %103, align 4
  %107 = alloca %complex_4, align 8
  store %complex_4 %102, %complex_4* %107, align 4
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 0
  %109 = load float, float* %108, align 4
  %110 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %110, align 4
  %111 = getelementptr %complex_4, %complex_4* %110, i32 0, i32 0
  %112 = load float, float* %111, align 4
  %113 = alloca %complex_4, align 8
  store %complex_4 %102, %complex_4* %113, align 4
  %114 = getelementptr %complex_4, %complex_4* %113, i32 0, i32 1
  %115 = load float, float* %114, align 4
  %116 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %116, align 4
  %117 = getelementptr %complex_4, %complex_4* %116, i32 0, i32 1
  %118 = load float, float* %117, align 4
  %119 = fcmp une float %109, %112
  %120 = fcmp une float %115, %118
  %121 = and i1 %119, %120
  br i1 %121, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %122 = getelementptr %array, %array* %a, i32 0, i32 2
  %123 = load %dimension_descriptor*, %dimension_descriptor** %122, align 8
  %124 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %123, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sub i32 2, %126
  %128 = mul i32 1, %127
  %129 = add i32 0, %128
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 1, %131
  %133 = getelementptr %array, %array* %a, i32 0, i32 0
  %134 = load %complex_4*, %complex_4** %133, align 8
  %135 = getelementptr inbounds %complex_4, %complex_4* %134, i32 %129
  %136 = load %complex_4, %complex_4* %135, align 4
  %137 = alloca %complex_4, align 8
  %138 = getelementptr %complex_4, %complex_4* %137, i32 0, i32 0
  %139 = getelementptr %complex_4, %complex_4* %137, i32 0, i32 1
  store float 1.200000e+01, float* %138, align 4
  store float 0.000000e+00, float* %139, align 4
  %140 = load %complex_4, %complex_4* %137, align 4
  %141 = alloca %complex_4, align 8
  store %complex_4 %136, %complex_4* %141, align 4
  %142 = getelementptr %complex_4, %complex_4* %141, i32 0, i32 0
  %143 = load float, float* %142, align 4
  %144 = alloca %complex_4, align 8
  store %complex_4 %140, %complex_4* %144, align 4
  %145 = getelementptr %complex_4, %complex_4* %144, i32 0, i32 0
  %146 = load float, float* %145, align 4
  %147 = alloca %complex_4, align 8
  store %complex_4 %136, %complex_4* %147, align 4
  %148 = getelementptr %complex_4, %complex_4* %147, i32 0, i32 1
  %149 = load float, float* %148, align 4
  %150 = alloca %complex_4, align 8
  store %complex_4 %140, %complex_4* %150, align 4
  %151 = getelementptr %complex_4, %complex_4* %150, i32 0, i32 1
  %152 = load float, float* %151, align 4
  %153 = fcmp une float %143, %146
  %154 = fcmp une float %149, %152
  %155 = and i1 %153, %154
  br i1 %155, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %156 = getelementptr %array, %array* %a, i32 0, i32 2
  %157 = load %dimension_descriptor*, %dimension_descriptor** %156, align 8
  %158 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %157, i32 0
  %159 = getelementptr %dimension_descriptor, %dimension_descriptor* %158, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = sub i32 3, %160
  %162 = mul i32 1, %161
  %163 = add i32 0, %162
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %158, i32 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = mul i32 1, %165
  %167 = getelementptr %array, %array* %a, i32 0, i32 0
  %168 = load %complex_4*, %complex_4** %167, align 8
  %169 = getelementptr inbounds %complex_4, %complex_4* %168, i32 %163
  %170 = load %complex_4, %complex_4* %169, align 4
  %171 = alloca %complex_4, align 8
  %172 = getelementptr %complex_4, %complex_4* %171, i32 0, i32 0
  %173 = getelementptr %complex_4, %complex_4* %171, i32 0, i32 1
  store float 1.300000e+01, float* %172, align 4
  store float 0.000000e+00, float* %173, align 4
  %174 = load %complex_4, %complex_4* %171, align 4
  %175 = alloca %complex_4, align 8
  store %complex_4 %170, %complex_4* %175, align 4
  %176 = getelementptr %complex_4, %complex_4* %175, i32 0, i32 0
  %177 = load float, float* %176, align 4
  %178 = alloca %complex_4, align 8
  store %complex_4 %174, %complex_4* %178, align 4
  %179 = getelementptr %complex_4, %complex_4* %178, i32 0, i32 0
  %180 = load float, float* %179, align 4
  %181 = alloca %complex_4, align 8
  store %complex_4 %170, %complex_4* %181, align 4
  %182 = getelementptr %complex_4, %complex_4* %181, i32 0, i32 1
  %183 = load float, float* %182, align 4
  %184 = alloca %complex_4, align 8
  store %complex_4 %174, %complex_4* %184, align 4
  %185 = getelementptr %complex_4, %complex_4* %184, i32 0, i32 1
  %186 = load float, float* %185, align 4
  %187 = fcmp une float %177, %180
  %188 = fcmp une float %183, %186
  %189 = and i1 %187, %188
  br i1 %189, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %190 = load i32, i32* %i, align 4
  %191 = add i32 %190, 1
  %192 = icmp sle i32 %191, 14
  br i1 %192, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %193 = load i32, i32* %i, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %i, align 4
  %195 = load i32, i32* %i, align 4
  %196 = sub i32 %195, 10
  %197 = getelementptr %array, %array* %b, i32 0, i32 2
  %198 = load %dimension_descriptor*, %dimension_descriptor** %197, align 8
  %199 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %198, i32 0
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sub i32 %196, %201
  %203 = mul i32 1, %202
  %204 = add i32 0, %203
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 2
  %206 = load i32, i32* %205, align 4
  %207 = mul i32 1, %206
  %208 = getelementptr %array, %array* %b, i32 0, i32 0
  %209 = load %complex_4*, %complex_4** %208, align 8
  %210 = getelementptr inbounds %complex_4, %complex_4* %209, i32 %204
  %211 = load i32, i32* %i, align 4
  %212 = sitofp i32 %211 to float
  %213 = alloca %complex_4, align 8
  %214 = getelementptr %complex_4, %complex_4* %213, i32 0, i32 0
  %215 = getelementptr %complex_4, %complex_4* %213, i32 0, i32 1
  store float %212, float* %214, align 4
  store float 0.000000e+00, float* %215, align 4
  %216 = load %complex_4, %complex_4* %213, align 4
  store %complex_4 %216, %complex_4* %210, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %217 = getelementptr %array, %array* %b, i32 0, i32 2
  %218 = load %dimension_descriptor*, %dimension_descriptor** %217, align 8
  %219 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %218, i32 0
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = sub i32 1, %221
  %223 = mul i32 1, %222
  %224 = add i32 0, %223
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = mul i32 1, %226
  %228 = getelementptr %array, %array* %b, i32 0, i32 0
  %229 = load %complex_4*, %complex_4** %228, align 8
  %230 = getelementptr inbounds %complex_4, %complex_4* %229, i32 %224
  %231 = load %complex_4, %complex_4* %230, align 4
  %232 = alloca %complex_4, align 8
  %233 = getelementptr %complex_4, %complex_4* %232, i32 0, i32 0
  %234 = getelementptr %complex_4, %complex_4* %232, i32 0, i32 1
  store float 1.100000e+01, float* %233, align 4
  store float 0.000000e+00, float* %234, align 4
  %235 = load %complex_4, %complex_4* %232, align 4
  %236 = alloca %complex_4, align 8
  store %complex_4 %231, %complex_4* %236, align 4
  %237 = getelementptr %complex_4, %complex_4* %236, i32 0, i32 0
  %238 = load float, float* %237, align 4
  %239 = alloca %complex_4, align 8
  store %complex_4 %235, %complex_4* %239, align 4
  %240 = getelementptr %complex_4, %complex_4* %239, i32 0, i32 0
  %241 = load float, float* %240, align 4
  %242 = alloca %complex_4, align 8
  store %complex_4 %231, %complex_4* %242, align 4
  %243 = getelementptr %complex_4, %complex_4* %242, i32 0, i32 1
  %244 = load float, float* %243, align 4
  %245 = alloca %complex_4, align 8
  store %complex_4 %235, %complex_4* %245, align 4
  %246 = getelementptr %complex_4, %complex_4* %245, i32 0, i32 1
  %247 = load float, float* %246, align 4
  %248 = fcmp une float %238, %241
  %249 = fcmp une float %244, %247
  %250 = and i1 %248, %249
  br i1 %250, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %251 = getelementptr %array, %array* %b, i32 0, i32 2
  %252 = load %dimension_descriptor*, %dimension_descriptor** %251, align 8
  %253 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %252, i32 0
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %253, i32 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = sub i32 2, %255
  %257 = mul i32 1, %256
  %258 = add i32 0, %257
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %253, i32 0, i32 2
  %260 = load i32, i32* %259, align 4
  %261 = mul i32 1, %260
  %262 = getelementptr %array, %array* %b, i32 0, i32 0
  %263 = load %complex_4*, %complex_4** %262, align 8
  %264 = getelementptr inbounds %complex_4, %complex_4* %263, i32 %258
  %265 = load %complex_4, %complex_4* %264, align 4
  %266 = alloca %complex_4, align 8
  %267 = getelementptr %complex_4, %complex_4* %266, i32 0, i32 0
  %268 = getelementptr %complex_4, %complex_4* %266, i32 0, i32 1
  store float 1.200000e+01, float* %267, align 4
  store float 0.000000e+00, float* %268, align 4
  %269 = load %complex_4, %complex_4* %266, align 4
  %270 = alloca %complex_4, align 8
  store %complex_4 %265, %complex_4* %270, align 4
  %271 = getelementptr %complex_4, %complex_4* %270, i32 0, i32 0
  %272 = load float, float* %271, align 4
  %273 = alloca %complex_4, align 8
  store %complex_4 %269, %complex_4* %273, align 4
  %274 = getelementptr %complex_4, %complex_4* %273, i32 0, i32 0
  %275 = load float, float* %274, align 4
  %276 = alloca %complex_4, align 8
  store %complex_4 %265, %complex_4* %276, align 4
  %277 = getelementptr %complex_4, %complex_4* %276, i32 0, i32 1
  %278 = load float, float* %277, align 4
  %279 = alloca %complex_4, align 8
  store %complex_4 %269, %complex_4* %279, align 4
  %280 = getelementptr %complex_4, %complex_4* %279, i32 0, i32 1
  %281 = load float, float* %280, align 4
  %282 = fcmp une float %272, %275
  %283 = fcmp une float %278, %281
  %284 = and i1 %282, %283
  br i1 %284, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %285 = getelementptr %array, %array* %b, i32 0, i32 2
  %286 = load %dimension_descriptor*, %dimension_descriptor** %285, align 8
  %287 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %286, i32 0
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %287, i32 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = sub i32 3, %289
  %291 = mul i32 1, %290
  %292 = add i32 0, %291
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %287, i32 0, i32 2
  %294 = load i32, i32* %293, align 4
  %295 = mul i32 1, %294
  %296 = getelementptr %array, %array* %b, i32 0, i32 0
  %297 = load %complex_4*, %complex_4** %296, align 8
  %298 = getelementptr inbounds %complex_4, %complex_4* %297, i32 %292
  %299 = load %complex_4, %complex_4* %298, align 4
  %300 = alloca %complex_4, align 8
  %301 = getelementptr %complex_4, %complex_4* %300, i32 0, i32 0
  %302 = getelementptr %complex_4, %complex_4* %300, i32 0, i32 1
  store float 1.300000e+01, float* %301, align 4
  store float 0.000000e+00, float* %302, align 4
  %303 = load %complex_4, %complex_4* %300, align 4
  %304 = alloca %complex_4, align 8
  store %complex_4 %299, %complex_4* %304, align 4
  %305 = getelementptr %complex_4, %complex_4* %304, i32 0, i32 0
  %306 = load float, float* %305, align 4
  %307 = alloca %complex_4, align 8
  store %complex_4 %303, %complex_4* %307, align 4
  %308 = getelementptr %complex_4, %complex_4* %307, i32 0, i32 0
  %309 = load float, float* %308, align 4
  %310 = alloca %complex_4, align 8
  store %complex_4 %299, %complex_4* %310, align 4
  %311 = getelementptr %complex_4, %complex_4* %310, i32 0, i32 1
  %312 = load float, float* %311, align 4
  %313 = alloca %complex_4, align 8
  store %complex_4 %303, %complex_4* %313, align 4
  %314 = getelementptr %complex_4, %complex_4* %313, i32 0, i32 1
  %315 = load float, float* %314, align 4
  %316 = fcmp une float %306, %309
  %317 = fcmp une float %312, %315
  %318 = and i1 %316, %317
  br i1 %318, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %319 = getelementptr %array, %array* %b, i32 0, i32 2
  %320 = load %dimension_descriptor*, %dimension_descriptor** %319, align 8
  %321 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %320, i32 0
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %321, i32 0, i32 1
  %323 = load i32, i32* %322, align 4
  %324 = sub i32 4, %323
  %325 = mul i32 1, %324
  %326 = add i32 0, %325
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %321, i32 0, i32 2
  %328 = load i32, i32* %327, align 4
  %329 = mul i32 1, %328
  %330 = getelementptr %array, %array* %b, i32 0, i32 0
  %331 = load %complex_4*, %complex_4** %330, align 8
  %332 = getelementptr inbounds %complex_4, %complex_4* %331, i32 %326
  %333 = load %complex_4, %complex_4* %332, align 4
  %334 = alloca %complex_4, align 8
  %335 = getelementptr %complex_4, %complex_4* %334, i32 0, i32 0
  %336 = getelementptr %complex_4, %complex_4* %334, i32 0, i32 1
  store float 1.400000e+01, float* %335, align 4
  store float 0.000000e+00, float* %336, align 4
  %337 = load %complex_4, %complex_4* %334, align 4
  %338 = alloca %complex_4, align 8
  store %complex_4 %333, %complex_4* %338, align 4
  %339 = getelementptr %complex_4, %complex_4* %338, i32 0, i32 0
  %340 = load float, float* %339, align 4
  %341 = alloca %complex_4, align 8
  store %complex_4 %337, %complex_4* %341, align 4
  %342 = getelementptr %complex_4, %complex_4* %341, i32 0, i32 0
  %343 = load float, float* %342, align 4
  %344 = alloca %complex_4, align 8
  store %complex_4 %333, %complex_4* %344, align 4
  %345 = getelementptr %complex_4, %complex_4* %344, i32 0, i32 1
  %346 = load float, float* %345, align 4
  %347 = alloca %complex_4, align 8
  store %complex_4 %337, %complex_4* %347, align 4
  %348 = getelementptr %complex_4, %complex_4* %347, i32 0, i32 1
  %349 = load float, float* %348, align 4
  %350 = fcmp une float %340, %343
  %351 = fcmp une float %346, %349
  %352 = and i1 %350, %351
  br i1 %352, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %353 = load i32, i32* %i, align 4
  %354 = add i32 %353, 1
  %355 = icmp sle i32 %354, 3
  br i1 %355, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %356 = load i32, i32* %i, align 4
  %357 = add i32 %356, 1
  store i32 %357, i32* %i, align 4
  %358 = load i32, i32* %i, align 4
  %359 = getelementptr %array, %array* %b, i32 0, i32 2
  %360 = load %dimension_descriptor*, %dimension_descriptor** %359, align 8
  %361 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 0
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = sub i32 %358, %363
  %365 = mul i32 1, %364
  %366 = add i32 0, %365
  %367 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 2
  %368 = load i32, i32* %367, align 4
  %369 = mul i32 1, %368
  %370 = getelementptr %array, %array* %b, i32 0, i32 0
  %371 = load %complex_4*, %complex_4** %370, align 8
  %372 = getelementptr inbounds %complex_4, %complex_4* %371, i32 %366
  %373 = load i32, i32* %i, align 4
  %374 = getelementptr %array, %array* %a, i32 0, i32 2
  %375 = load %dimension_descriptor*, %dimension_descriptor** %374, align 8
  %376 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %375, i32 0
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = sub i32 %373, %378
  %380 = mul i32 1, %379
  %381 = add i32 0, %380
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 2
  %383 = load i32, i32* %382, align 4
  %384 = mul i32 1, %383
  %385 = getelementptr %array, %array* %a, i32 0, i32 0
  %386 = load %complex_4*, %complex_4** %385, align 8
  %387 = getelementptr inbounds %complex_4, %complex_4* %386, i32 %381
  %388 = load %complex_4, %complex_4* %387, align 4
  %389 = alloca %complex_4, align 8
  %390 = getelementptr %complex_4, %complex_4* %389, i32 0, i32 0
  %391 = getelementptr %complex_4, %complex_4* %389, i32 0, i32 1
  store float 1.000000e+01, float* %390, align 4
  store float 0.000000e+00, float* %391, align 4
  %392 = load %complex_4, %complex_4* %389, align 4
  %393 = alloca %complex_4, align 8
  store %complex_4 %388, %complex_4* %393, align 4
  %394 = alloca %complex_4, align 8
  store %complex_4 %392, %complex_4* %394, align 4
  %395 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub_32(%complex_4* %393, %complex_4* %394, %complex_4* %395)
  %396 = load %complex_4, %complex_4* %395, align 4
  store %complex_4 %396, %complex_4* %372, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %397 = getelementptr %array, %array* %b, i32 0, i32 2
  %398 = load %dimension_descriptor*, %dimension_descriptor** %397, align 8
  %399 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %398, i32 0
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %399, i32 0, i32 1
  %401 = load i32, i32* %400, align 4
  %402 = sub i32 1, %401
  %403 = mul i32 1, %402
  %404 = add i32 0, %403
  %405 = getelementptr %dimension_descriptor, %dimension_descriptor* %399, i32 0, i32 2
  %406 = load i32, i32* %405, align 4
  %407 = mul i32 1, %406
  %408 = getelementptr %array, %array* %b, i32 0, i32 0
  %409 = load %complex_4*, %complex_4** %408, align 8
  %410 = getelementptr inbounds %complex_4, %complex_4* %409, i32 %404
  %411 = load %complex_4, %complex_4* %410, align 4
  %412 = alloca %complex_4, align 8
  %413 = getelementptr %complex_4, %complex_4* %412, i32 0, i32 0
  %414 = getelementptr %complex_4, %complex_4* %412, i32 0, i32 1
  store float 1.000000e+00, float* %413, align 4
  store float 0.000000e+00, float* %414, align 4
  %415 = load %complex_4, %complex_4* %412, align 4
  %416 = alloca %complex_4, align 8
  store %complex_4 %411, %complex_4* %416, align 4
  %417 = getelementptr %complex_4, %complex_4* %416, i32 0, i32 0
  %418 = load float, float* %417, align 4
  %419 = alloca %complex_4, align 8
  store %complex_4 %415, %complex_4* %419, align 4
  %420 = getelementptr %complex_4, %complex_4* %419, i32 0, i32 0
  %421 = load float, float* %420, align 4
  %422 = alloca %complex_4, align 8
  store %complex_4 %411, %complex_4* %422, align 4
  %423 = getelementptr %complex_4, %complex_4* %422, i32 0, i32 1
  %424 = load float, float* %423, align 4
  %425 = alloca %complex_4, align 8
  store %complex_4 %415, %complex_4* %425, align 4
  %426 = getelementptr %complex_4, %complex_4* %425, i32 0, i32 1
  %427 = load float, float* %426, align 4
  %428 = fcmp une float %418, %421
  %429 = fcmp une float %424, %427
  %430 = and i1 %428, %429
  br i1 %430, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %431 = getelementptr %array, %array* %b, i32 0, i32 2
  %432 = load %dimension_descriptor*, %dimension_descriptor** %431, align 8
  %433 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %432, i32 0
  %434 = getelementptr %dimension_descriptor, %dimension_descriptor* %433, i32 0, i32 1
  %435 = load i32, i32* %434, align 4
  %436 = sub i32 2, %435
  %437 = mul i32 1, %436
  %438 = add i32 0, %437
  %439 = getelementptr %dimension_descriptor, %dimension_descriptor* %433, i32 0, i32 2
  %440 = load i32, i32* %439, align 4
  %441 = mul i32 1, %440
  %442 = getelementptr %array, %array* %b, i32 0, i32 0
  %443 = load %complex_4*, %complex_4** %442, align 8
  %444 = getelementptr inbounds %complex_4, %complex_4* %443, i32 %438
  %445 = load %complex_4, %complex_4* %444, align 4
  %446 = alloca %complex_4, align 8
  %447 = getelementptr %complex_4, %complex_4* %446, i32 0, i32 0
  %448 = getelementptr %complex_4, %complex_4* %446, i32 0, i32 1
  store float 2.000000e+00, float* %447, align 4
  store float 0.000000e+00, float* %448, align 4
  %449 = load %complex_4, %complex_4* %446, align 4
  %450 = alloca %complex_4, align 8
  store %complex_4 %445, %complex_4* %450, align 4
  %451 = getelementptr %complex_4, %complex_4* %450, i32 0, i32 0
  %452 = load float, float* %451, align 4
  %453 = alloca %complex_4, align 8
  store %complex_4 %449, %complex_4* %453, align 4
  %454 = getelementptr %complex_4, %complex_4* %453, i32 0, i32 0
  %455 = load float, float* %454, align 4
  %456 = alloca %complex_4, align 8
  store %complex_4 %445, %complex_4* %456, align 4
  %457 = getelementptr %complex_4, %complex_4* %456, i32 0, i32 1
  %458 = load float, float* %457, align 4
  %459 = alloca %complex_4, align 8
  store %complex_4 %449, %complex_4* %459, align 4
  %460 = getelementptr %complex_4, %complex_4* %459, i32 0, i32 1
  %461 = load float, float* %460, align 4
  %462 = fcmp une float %452, %455
  %463 = fcmp une float %458, %461
  %464 = and i1 %462, %463
  br i1 %464, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %465 = getelementptr %array, %array* %b, i32 0, i32 2
  %466 = load %dimension_descriptor*, %dimension_descriptor** %465, align 8
  %467 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %466, i32 0
  %468 = getelementptr %dimension_descriptor, %dimension_descriptor* %467, i32 0, i32 1
  %469 = load i32, i32* %468, align 4
  %470 = sub i32 3, %469
  %471 = mul i32 1, %470
  %472 = add i32 0, %471
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %467, i32 0, i32 2
  %474 = load i32, i32* %473, align 4
  %475 = mul i32 1, %474
  %476 = getelementptr %array, %array* %b, i32 0, i32 0
  %477 = load %complex_4*, %complex_4** %476, align 8
  %478 = getelementptr inbounds %complex_4, %complex_4* %477, i32 %472
  %479 = load %complex_4, %complex_4* %478, align 4
  %480 = alloca %complex_4, align 8
  %481 = getelementptr %complex_4, %complex_4* %480, i32 0, i32 0
  %482 = getelementptr %complex_4, %complex_4* %480, i32 0, i32 1
  store float 3.000000e+00, float* %481, align 4
  store float 0.000000e+00, float* %482, align 4
  %483 = load %complex_4, %complex_4* %480, align 4
  %484 = alloca %complex_4, align 8
  store %complex_4 %479, %complex_4* %484, align 4
  %485 = getelementptr %complex_4, %complex_4* %484, i32 0, i32 0
  %486 = load float, float* %485, align 4
  %487 = alloca %complex_4, align 8
  store %complex_4 %483, %complex_4* %487, align 4
  %488 = getelementptr %complex_4, %complex_4* %487, i32 0, i32 0
  %489 = load float, float* %488, align 4
  %490 = alloca %complex_4, align 8
  store %complex_4 %479, %complex_4* %490, align 4
  %491 = getelementptr %complex_4, %complex_4* %490, i32 0, i32 1
  %492 = load float, float* %491, align 4
  %493 = alloca %complex_4, align 8
  store %complex_4 %483, %complex_4* %493, align 4
  %494 = getelementptr %complex_4, %complex_4* %493, i32 0, i32 1
  %495 = load float, float* %494, align 4
  %496 = fcmp une float %486, %489
  %497 = fcmp une float %492, %495
  %498 = and i1 %496, %497
  br i1 %498, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %499 = getelementptr %array, %array* %b, i32 0, i32 2
  %500 = load %dimension_descriptor*, %dimension_descriptor** %499, align 8
  %501 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %500, i32 0
  %502 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 1
  %503 = load i32, i32* %502, align 4
  %504 = sub i32 4, %503
  %505 = mul i32 1, %504
  %506 = add i32 0, %505
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 2
  %508 = load i32, i32* %507, align 4
  %509 = mul i32 1, %508
  %510 = getelementptr %array, %array* %b, i32 0, i32 0
  %511 = load %complex_4*, %complex_4** %510, align 8
  %512 = getelementptr inbounds %complex_4, %complex_4* %511, i32 %506
  %513 = getelementptr %array, %array* %b, i32 0, i32 2
  %514 = load %dimension_descriptor*, %dimension_descriptor** %513, align 8
  %515 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %514, i32 0
  %516 = getelementptr %dimension_descriptor, %dimension_descriptor* %515, i32 0, i32 1
  %517 = load i32, i32* %516, align 4
  %518 = sub i32 1, %517
  %519 = mul i32 1, %518
  %520 = add i32 0, %519
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %515, i32 0, i32 2
  %522 = load i32, i32* %521, align 4
  %523 = mul i32 1, %522
  %524 = getelementptr %array, %array* %b, i32 0, i32 0
  %525 = load %complex_4*, %complex_4** %524, align 8
  %526 = getelementptr inbounds %complex_4, %complex_4* %525, i32 %520
  %527 = load %complex_4, %complex_4* %526, align 4
  %528 = getelementptr %array, %array* %b, i32 0, i32 2
  %529 = load %dimension_descriptor*, %dimension_descriptor** %528, align 8
  %530 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %529, i32 0
  %531 = getelementptr %dimension_descriptor, %dimension_descriptor* %530, i32 0, i32 1
  %532 = load i32, i32* %531, align 4
  %533 = sub i32 2, %532
  %534 = mul i32 1, %533
  %535 = add i32 0, %534
  %536 = getelementptr %dimension_descriptor, %dimension_descriptor* %530, i32 0, i32 2
  %537 = load i32, i32* %536, align 4
  %538 = mul i32 1, %537
  %539 = getelementptr %array, %array* %b, i32 0, i32 0
  %540 = load %complex_4*, %complex_4** %539, align 8
  %541 = getelementptr inbounds %complex_4, %complex_4* %540, i32 %535
  %542 = load %complex_4, %complex_4* %541, align 4
  %543 = alloca %complex_4, align 8
  store %complex_4 %527, %complex_4* %543, align 4
  %544 = alloca %complex_4, align 8
  store %complex_4 %542, %complex_4* %544, align 4
  %545 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %543, %complex_4* %544, %complex_4* %545)
  %546 = load %complex_4, %complex_4* %545, align 4
  %547 = getelementptr %array, %array* %b, i32 0, i32 2
  %548 = load %dimension_descriptor*, %dimension_descriptor** %547, align 8
  %549 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %548, i32 0
  %550 = getelementptr %dimension_descriptor, %dimension_descriptor* %549, i32 0, i32 1
  %551 = load i32, i32* %550, align 4
  %552 = sub i32 3, %551
  %553 = mul i32 1, %552
  %554 = add i32 0, %553
  %555 = getelementptr %dimension_descriptor, %dimension_descriptor* %549, i32 0, i32 2
  %556 = load i32, i32* %555, align 4
  %557 = mul i32 1, %556
  %558 = getelementptr %array, %array* %b, i32 0, i32 0
  %559 = load %complex_4*, %complex_4** %558, align 8
  %560 = getelementptr inbounds %complex_4, %complex_4* %559, i32 %554
  %561 = load %complex_4, %complex_4* %560, align 4
  %562 = alloca %complex_4, align 8
  store %complex_4 %546, %complex_4* %562, align 4
  %563 = alloca %complex_4, align 8
  store %complex_4 %561, %complex_4* %563, align 4
  %564 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %562, %complex_4* %563, %complex_4* %564)
  %565 = load %complex_4, %complex_4* %564, align 4
  %566 = getelementptr %array, %array* %a, i32 0, i32 2
  %567 = load %dimension_descriptor*, %dimension_descriptor** %566, align 8
  %568 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %567, i32 0
  %569 = getelementptr %dimension_descriptor, %dimension_descriptor* %568, i32 0, i32 1
  %570 = load i32, i32* %569, align 4
  %571 = sub i32 1, %570
  %572 = mul i32 1, %571
  %573 = add i32 0, %572
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %568, i32 0, i32 2
  %575 = load i32, i32* %574, align 4
  %576 = mul i32 1, %575
  %577 = getelementptr %array, %array* %a, i32 0, i32 0
  %578 = load %complex_4*, %complex_4** %577, align 8
  %579 = getelementptr inbounds %complex_4, %complex_4* %578, i32 %573
  %580 = load %complex_4, %complex_4* %579, align 4
  %581 = alloca %complex_4, align 8
  store %complex_4 %565, %complex_4* %581, align 4
  %582 = alloca %complex_4, align 8
  store %complex_4 %580, %complex_4* %582, align 4
  %583 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %581, %complex_4* %582, %complex_4* %583)
  %584 = load %complex_4, %complex_4* %583, align 4
  store %complex_4 %584, %complex_4* %512, align 4
  %585 = getelementptr %array, %array* %b, i32 0, i32 2
  %586 = load %dimension_descriptor*, %dimension_descriptor** %585, align 8
  %587 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %586, i32 0
  %588 = getelementptr %dimension_descriptor, %dimension_descriptor* %587, i32 0, i32 1
  %589 = load i32, i32* %588, align 4
  %590 = sub i32 4, %589
  %591 = mul i32 1, %590
  %592 = add i32 0, %591
  %593 = getelementptr %dimension_descriptor, %dimension_descriptor* %587, i32 0, i32 2
  %594 = load i32, i32* %593, align 4
  %595 = mul i32 1, %594
  %596 = getelementptr %array, %array* %b, i32 0, i32 0
  %597 = load %complex_4*, %complex_4** %596, align 8
  %598 = getelementptr inbounds %complex_4, %complex_4* %597, i32 %592
  %599 = load %complex_4, %complex_4* %598, align 4
  %600 = alloca %complex_4, align 8
  %601 = getelementptr %complex_4, %complex_4* %600, i32 0, i32 0
  %602 = getelementptr %complex_4, %complex_4* %600, i32 0, i32 1
  store float 1.700000e+01, float* %601, align 4
  store float 0.000000e+00, float* %602, align 4
  %603 = load %complex_4, %complex_4* %600, align 4
  %604 = alloca %complex_4, align 8
  store %complex_4 %599, %complex_4* %604, align 4
  %605 = getelementptr %complex_4, %complex_4* %604, i32 0, i32 0
  %606 = load float, float* %605, align 4
  %607 = alloca %complex_4, align 8
  store %complex_4 %603, %complex_4* %607, align 4
  %608 = getelementptr %complex_4, %complex_4* %607, i32 0, i32 0
  %609 = load float, float* %608, align 4
  %610 = alloca %complex_4, align 8
  store %complex_4 %599, %complex_4* %610, align 4
  %611 = getelementptr %complex_4, %complex_4* %610, i32 0, i32 1
  %612 = load float, float* %611, align 4
  %613 = alloca %complex_4, align 8
  store %complex_4 %603, %complex_4* %613, align 4
  %614 = getelementptr %complex_4, %complex_4* %613, i32 0, i32 1
  %615 = load float, float* %614, align 4
  %616 = fcmp une float %606, %609
  %617 = fcmp une float %612, %615
  %618 = and i1 %616, %617
  br i1 %618, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %619 = getelementptr %array, %array* %b, i32 0, i32 2
  %620 = load %dimension_descriptor*, %dimension_descriptor** %619, align 8
  %621 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %620, i32 0
  %622 = getelementptr %dimension_descriptor, %dimension_descriptor* %621, i32 0, i32 1
  %623 = load i32, i32* %622, align 4
  %624 = sub i32 4, %623
  %625 = mul i32 1, %624
  %626 = add i32 0, %625
  %627 = getelementptr %dimension_descriptor, %dimension_descriptor* %621, i32 0, i32 2
  %628 = load i32, i32* %627, align 4
  %629 = mul i32 1, %628
  %630 = getelementptr %array, %array* %b, i32 0, i32 0
  %631 = load %complex_4*, %complex_4** %630, align 8
  %632 = getelementptr inbounds %complex_4, %complex_4* %631, i32 %626
  %633 = getelementptr %array, %array* %a, i32 0, i32 2
  %634 = load %dimension_descriptor*, %dimension_descriptor** %633, align 8
  %635 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %634, i32 0
  %636 = getelementptr %dimension_descriptor, %dimension_descriptor* %635, i32 0, i32 1
  %637 = load i32, i32* %636, align 4
  %638 = sub i32 1, %637
  %639 = mul i32 1, %638
  %640 = add i32 0, %639
  %641 = getelementptr %dimension_descriptor, %dimension_descriptor* %635, i32 0, i32 2
  %642 = load i32, i32* %641, align 4
  %643 = mul i32 1, %642
  %644 = getelementptr %array, %array* %a, i32 0, i32 0
  %645 = load %complex_4*, %complex_4** %644, align 8
  %646 = getelementptr inbounds %complex_4, %complex_4* %645, i32 %640
  %647 = load %complex_4, %complex_4* %646, align 4
  store %complex_4 %647, %complex_4* %632, align 4
  %648 = getelementptr %array, %array* %b, i32 0, i32 2
  %649 = load %dimension_descriptor*, %dimension_descriptor** %648, align 8
  %650 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %649, i32 0
  %651 = getelementptr %dimension_descriptor, %dimension_descriptor* %650, i32 0, i32 1
  %652 = load i32, i32* %651, align 4
  %653 = sub i32 4, %652
  %654 = mul i32 1, %653
  %655 = add i32 0, %654
  %656 = getelementptr %dimension_descriptor, %dimension_descriptor* %650, i32 0, i32 2
  %657 = load i32, i32* %656, align 4
  %658 = mul i32 1, %657
  %659 = getelementptr %array, %array* %b, i32 0, i32 0
  %660 = load %complex_4*, %complex_4** %659, align 8
  %661 = getelementptr inbounds %complex_4, %complex_4* %660, i32 %655
  %662 = load %complex_4, %complex_4* %661, align 4
  %663 = alloca %complex_4, align 8
  %664 = getelementptr %complex_4, %complex_4* %663, i32 0, i32 0
  %665 = getelementptr %complex_4, %complex_4* %663, i32 0, i32 1
  store float 1.100000e+01, float* %664, align 4
  store float 0.000000e+00, float* %665, align 4
  %666 = load %complex_4, %complex_4* %663, align 4
  %667 = alloca %complex_4, align 8
  store %complex_4 %662, %complex_4* %667, align 4
  %668 = getelementptr %complex_4, %complex_4* %667, i32 0, i32 0
  %669 = load float, float* %668, align 4
  %670 = alloca %complex_4, align 8
  store %complex_4 %666, %complex_4* %670, align 4
  %671 = getelementptr %complex_4, %complex_4* %670, i32 0, i32 0
  %672 = load float, float* %671, align 4
  %673 = alloca %complex_4, align 8
  store %complex_4 %662, %complex_4* %673, align 4
  %674 = getelementptr %complex_4, %complex_4* %673, i32 0, i32 1
  %675 = load float, float* %674, align 4
  %676 = alloca %complex_4, align 8
  store %complex_4 %666, %complex_4* %676, align 4
  %677 = getelementptr %complex_4, %complex_4* %676, i32 0, i32 1
  %678 = load float, float* %677, align 4
  %679 = fcmp une float %669, %672
  %680 = fcmp une float %675, %678
  %681 = and i1 %679, %680
  br i1 %681, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %682 = load i32, i32* %i, align 4
  %683 = add i32 %682, 1
  %684 = icmp sle i32 %683, 2
  br i1 %684, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %685 = load i32, i32* %i, align 4
  %686 = add i32 %685, 1
  store i32 %686, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %687 = load i32, i32* %j, align 4
  %688 = add i32 %687, 1
  %689 = icmp sle i32 %688, 2
  br i1 %689, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %690 = load i32, i32* %j, align 4
  %691 = add i32 %690, 1
  store i32 %691, i32* %j, align 4
  %692 = load i32, i32* %i, align 4
  %693 = load i32, i32* %j, align 4
  %694 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %695 = load %dimension_descriptor*, %dimension_descriptor** %694, align 8
  %696 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %695, i32 0
  %697 = getelementptr %dimension_descriptor, %dimension_descriptor* %696, i32 0, i32 1
  %698 = load i32, i32* %697, align 4
  %699 = sub i32 %692, %698
  %700 = mul i32 1, %699
  %701 = add i32 0, %700
  %702 = getelementptr %dimension_descriptor, %dimension_descriptor* %696, i32 0, i32 2
  %703 = load i32, i32* %702, align 4
  %704 = mul i32 1, %703
  %705 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %695, i32 1
  %706 = getelementptr %dimension_descriptor, %dimension_descriptor* %705, i32 0, i32 1
  %707 = load i32, i32* %706, align 4
  %708 = sub i32 %693, %707
  %709 = mul i32 %704, %708
  %710 = add i32 %701, %709
  %711 = getelementptr %dimension_descriptor, %dimension_descriptor* %705, i32 0, i32 2
  %712 = load i32, i32* %711, align 4
  %713 = mul i32 %704, %712
  %714 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %715 = load %complex_4*, %complex_4** %714, align 8
  %716 = getelementptr inbounds %complex_4, %complex_4* %715, i32 %710
  %717 = load i32, i32* %i, align 4
  %718 = load i32, i32* %j, align 4
  %719 = add i32 %717, %718
  %720 = add i32 %719, 10
  %721 = sitofp i32 %720 to float
  %722 = alloca %complex_4, align 8
  %723 = getelementptr %complex_4, %complex_4* %722, i32 0, i32 0
  %724 = getelementptr %complex_4, %complex_4* %722, i32 0, i32 1
  store float %721, float* %723, align 4
  store float 0.000000e+00, float* %724, align 4
  %725 = load %complex_4, %complex_4* %722, align 4
  store %complex_4 %725, %complex_4* %716, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %726 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %727 = load %dimension_descriptor*, %dimension_descriptor** %726, align 8
  %728 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %727, i32 0
  %729 = getelementptr %dimension_descriptor, %dimension_descriptor* %728, i32 0, i32 1
  %730 = load i32, i32* %729, align 4
  %731 = sub i32 1, %730
  %732 = mul i32 1, %731
  %733 = add i32 0, %732
  %734 = getelementptr %dimension_descriptor, %dimension_descriptor* %728, i32 0, i32 2
  %735 = load i32, i32* %734, align 4
  %736 = mul i32 1, %735
  %737 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %727, i32 1
  %738 = getelementptr %dimension_descriptor, %dimension_descriptor* %737, i32 0, i32 1
  %739 = load i32, i32* %738, align 4
  %740 = sub i32 1, %739
  %741 = mul i32 %736, %740
  %742 = add i32 %733, %741
  %743 = getelementptr %dimension_descriptor, %dimension_descriptor* %737, i32 0, i32 2
  %744 = load i32, i32* %743, align 4
  %745 = mul i32 %736, %744
  %746 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %747 = load %complex_4*, %complex_4** %746, align 8
  %748 = getelementptr inbounds %complex_4, %complex_4* %747, i32 %742
  %749 = load %complex_4, %complex_4* %748, align 4
  %750 = alloca %complex_4, align 8
  %751 = getelementptr %complex_4, %complex_4* %750, i32 0, i32 0
  %752 = getelementptr %complex_4, %complex_4* %750, i32 0, i32 1
  store float 1.200000e+01, float* %751, align 4
  store float 0.000000e+00, float* %752, align 4
  %753 = load %complex_4, %complex_4* %750, align 4
  %754 = alloca %complex_4, align 8
  store %complex_4 %749, %complex_4* %754, align 4
  %755 = getelementptr %complex_4, %complex_4* %754, i32 0, i32 0
  %756 = load float, float* %755, align 4
  %757 = alloca %complex_4, align 8
  store %complex_4 %753, %complex_4* %757, align 4
  %758 = getelementptr %complex_4, %complex_4* %757, i32 0, i32 0
  %759 = load float, float* %758, align 4
  %760 = alloca %complex_4, align 8
  store %complex_4 %749, %complex_4* %760, align 4
  %761 = getelementptr %complex_4, %complex_4* %760, i32 0, i32 1
  %762 = load float, float* %761, align 4
  %763 = alloca %complex_4, align 8
  store %complex_4 %753, %complex_4* %763, align 4
  %764 = getelementptr %complex_4, %complex_4* %763, i32 0, i32 1
  %765 = load float, float* %764, align 4
  %766 = fcmp une float %756, %759
  %767 = fcmp une float %762, %765
  %768 = and i1 %766, %767
  br i1 %768, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %769 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %770 = load %dimension_descriptor*, %dimension_descriptor** %769, align 8
  %771 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %770, i32 0
  %772 = getelementptr %dimension_descriptor, %dimension_descriptor* %771, i32 0, i32 1
  %773 = load i32, i32* %772, align 4
  %774 = sub i32 1, %773
  %775 = mul i32 1, %774
  %776 = add i32 0, %775
  %777 = getelementptr %dimension_descriptor, %dimension_descriptor* %771, i32 0, i32 2
  %778 = load i32, i32* %777, align 4
  %779 = mul i32 1, %778
  %780 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %770, i32 1
  %781 = getelementptr %dimension_descriptor, %dimension_descriptor* %780, i32 0, i32 1
  %782 = load i32, i32* %781, align 4
  %783 = sub i32 2, %782
  %784 = mul i32 %779, %783
  %785 = add i32 %776, %784
  %786 = getelementptr %dimension_descriptor, %dimension_descriptor* %780, i32 0, i32 2
  %787 = load i32, i32* %786, align 4
  %788 = mul i32 %779, %787
  %789 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %790 = load %complex_4*, %complex_4** %789, align 8
  %791 = getelementptr inbounds %complex_4, %complex_4* %790, i32 %785
  %792 = load %complex_4, %complex_4* %791, align 4
  %793 = alloca %complex_4, align 8
  %794 = getelementptr %complex_4, %complex_4* %793, i32 0, i32 0
  %795 = getelementptr %complex_4, %complex_4* %793, i32 0, i32 1
  store float 1.300000e+01, float* %794, align 4
  store float 0.000000e+00, float* %795, align 4
  %796 = load %complex_4, %complex_4* %793, align 4
  %797 = alloca %complex_4, align 8
  store %complex_4 %792, %complex_4* %797, align 4
  %798 = getelementptr %complex_4, %complex_4* %797, i32 0, i32 0
  %799 = load float, float* %798, align 4
  %800 = alloca %complex_4, align 8
  store %complex_4 %796, %complex_4* %800, align 4
  %801 = getelementptr %complex_4, %complex_4* %800, i32 0, i32 0
  %802 = load float, float* %801, align 4
  %803 = alloca %complex_4, align 8
  store %complex_4 %792, %complex_4* %803, align 4
  %804 = getelementptr %complex_4, %complex_4* %803, i32 0, i32 1
  %805 = load float, float* %804, align 4
  %806 = alloca %complex_4, align 8
  store %complex_4 %796, %complex_4* %806, align 4
  %807 = getelementptr %complex_4, %complex_4* %806, i32 0, i32 1
  %808 = load float, float* %807, align 4
  %809 = fcmp une float %799, %802
  %810 = fcmp une float %805, %808
  %811 = and i1 %809, %810
  br i1 %811, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %812 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %813 = load %dimension_descriptor*, %dimension_descriptor** %812, align 8
  %814 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %813, i32 0
  %815 = getelementptr %dimension_descriptor, %dimension_descriptor* %814, i32 0, i32 1
  %816 = load i32, i32* %815, align 4
  %817 = sub i32 2, %816
  %818 = mul i32 1, %817
  %819 = add i32 0, %818
  %820 = getelementptr %dimension_descriptor, %dimension_descriptor* %814, i32 0, i32 2
  %821 = load i32, i32* %820, align 4
  %822 = mul i32 1, %821
  %823 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %813, i32 1
  %824 = getelementptr %dimension_descriptor, %dimension_descriptor* %823, i32 0, i32 1
  %825 = load i32, i32* %824, align 4
  %826 = sub i32 1, %825
  %827 = mul i32 %822, %826
  %828 = add i32 %819, %827
  %829 = getelementptr %dimension_descriptor, %dimension_descriptor* %823, i32 0, i32 2
  %830 = load i32, i32* %829, align 4
  %831 = mul i32 %822, %830
  %832 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %833 = load %complex_4*, %complex_4** %832, align 8
  %834 = getelementptr inbounds %complex_4, %complex_4* %833, i32 %828
  %835 = load %complex_4, %complex_4* %834, align 4
  %836 = alloca %complex_4, align 8
  %837 = getelementptr %complex_4, %complex_4* %836, i32 0, i32 0
  %838 = getelementptr %complex_4, %complex_4* %836, i32 0, i32 1
  store float 1.300000e+01, float* %837, align 4
  store float 0.000000e+00, float* %838, align 4
  %839 = load %complex_4, %complex_4* %836, align 4
  %840 = alloca %complex_4, align 8
  store %complex_4 %835, %complex_4* %840, align 4
  %841 = getelementptr %complex_4, %complex_4* %840, i32 0, i32 0
  %842 = load float, float* %841, align 4
  %843 = alloca %complex_4, align 8
  store %complex_4 %839, %complex_4* %843, align 4
  %844 = getelementptr %complex_4, %complex_4* %843, i32 0, i32 0
  %845 = load float, float* %844, align 4
  %846 = alloca %complex_4, align 8
  store %complex_4 %835, %complex_4* %846, align 4
  %847 = getelementptr %complex_4, %complex_4* %846, i32 0, i32 1
  %848 = load float, float* %847, align 4
  %849 = alloca %complex_4, align 8
  store %complex_4 %839, %complex_4* %849, align 4
  %850 = getelementptr %complex_4, %complex_4* %849, i32 0, i32 1
  %851 = load float, float* %850, align 4
  %852 = fcmp une float %842, %845
  %853 = fcmp une float %848, %851
  %854 = and i1 %852, %853
  br i1 %854, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %855 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %856 = load %dimension_descriptor*, %dimension_descriptor** %855, align 8
  %857 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %856, i32 0
  %858 = getelementptr %dimension_descriptor, %dimension_descriptor* %857, i32 0, i32 1
  %859 = load i32, i32* %858, align 4
  %860 = sub i32 2, %859
  %861 = mul i32 1, %860
  %862 = add i32 0, %861
  %863 = getelementptr %dimension_descriptor, %dimension_descriptor* %857, i32 0, i32 2
  %864 = load i32, i32* %863, align 4
  %865 = mul i32 1, %864
  %866 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %856, i32 1
  %867 = getelementptr %dimension_descriptor, %dimension_descriptor* %866, i32 0, i32 1
  %868 = load i32, i32* %867, align 4
  %869 = sub i32 2, %868
  %870 = mul i32 %865, %869
  %871 = add i32 %862, %870
  %872 = getelementptr %dimension_descriptor, %dimension_descriptor* %866, i32 0, i32 2
  %873 = load i32, i32* %872, align 4
  %874 = mul i32 %865, %873
  %875 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %876 = load %complex_4*, %complex_4** %875, align 8
  %877 = getelementptr inbounds %complex_4, %complex_4* %876, i32 %871
  %878 = load %complex_4, %complex_4* %877, align 4
  %879 = alloca %complex_4, align 8
  %880 = getelementptr %complex_4, %complex_4* %879, i32 0, i32 0
  %881 = getelementptr %complex_4, %complex_4* %879, i32 0, i32 1
  store float 1.400000e+01, float* %880, align 4
  store float 0.000000e+00, float* %881, align 4
  %882 = load %complex_4, %complex_4* %879, align 4
  %883 = alloca %complex_4, align 8
  store %complex_4 %878, %complex_4* %883, align 4
  %884 = getelementptr %complex_4, %complex_4* %883, i32 0, i32 0
  %885 = load float, float* %884, align 4
  %886 = alloca %complex_4, align 8
  store %complex_4 %882, %complex_4* %886, align 4
  %887 = getelementptr %complex_4, %complex_4* %886, i32 0, i32 0
  %888 = load float, float* %887, align 4
  %889 = alloca %complex_4, align 8
  store %complex_4 %878, %complex_4* %889, align 4
  %890 = getelementptr %complex_4, %complex_4* %889, i32 0, i32 1
  %891 = load float, float* %890, align 4
  %892 = alloca %complex_4, align 8
  store %complex_4 %882, %complex_4* %892, align 4
  %893 = getelementptr %complex_4, %complex_4* %892, i32 0, i32 1
  %894 = load float, float* %893, align 4
  %895 = fcmp une float %885, %888
  %896 = fcmp une float %891, %894
  %897 = and i1 %895, %896
  br i1 %897, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)
