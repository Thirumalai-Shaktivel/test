; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i8**, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"%s%s%s%s%s%s%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %greetings = alloca %array, align 8
  %0 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %greetings, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %user_data = alloca %array, align 8
  %6 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array, %array* %user_data, i32 0, i32 4
  store i32 1, i32* %10, align 4
  %11 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %12 = getelementptr %array, %array* %user_data, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 true, i1* %13, align 1
  %14 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %15 = load %dimension_descriptor*, %dimension_descriptor** %14, align 8
  %16 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %15, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 1
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 2
  store i32 1, i32* %17, align 4
  store i32 1, i32* %18, align 4
  %20 = load i32, i32* %18, align 4
  %21 = sub i32 3, %20
  %22 = add i32 %21, 1
  %23 = mul i32 1, %22
  store i32 %22, i32* %19, align 4
  %24 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %25 = alloca i32, align 4
  %26 = mul i32 %23, 8
  store i32 %26, i32* %25, align 4
  %27 = load i32, i32* %25, align 4
  %28 = call i8* (i32, ...) @_lfortran_malloc(i32 %27)
  %29 = bitcast i8* %28 to i8**
  store i8** %29, i8*** %24, align 8
  %30 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %31 = load %dimension_descriptor*, %dimension_descriptor** %30, align 8
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub i32 1, %34
  %36 = mul i32 1, %35
  %37 = add i32 0, %36
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = mul i32 1, %39
  %41 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i32 %37
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %43, align 8
  %44 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %45 = load %dimension_descriptor*, %dimension_descriptor** %44, align 8
  %46 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 2, %48
  %50 = mul i32 1, %49
  %51 = add i32 0, %50
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 1, %53
  %55 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %56 = load i8**, i8*** %55, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i32 %51
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %57, align 8
  %58 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %59 = load %dimension_descriptor*, %dimension_descriptor** %58, align 8
  %60 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %59, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 3, %62
  %64 = mul i32 1, %63
  %65 = add i32 0, %64
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 1, %67
  %69 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %70 = load i8**, i8*** %69, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i32 %65
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %71, align 8
  %72 = getelementptr %array, %array* %greetings, i32 0, i32 1
  store i32 0, i32* %72, align 4
  %73 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 true, i1* %73, align 1
  %74 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %75 = load %dimension_descriptor*, %dimension_descriptor** %74, align 8
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 0
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 2
  store i32 1, i32* %77, align 4
  store i32 1, i32* %78, align 4
  %80 = load i32, i32* %78, align 4
  %81 = sub i32 5, %80
  %82 = add i32 %81, 1
  %83 = mul i32 1, %82
  store i32 %82, i32* %79, align 4
  %84 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %85 = alloca i32, align 4
  %86 = mul i32 %83, 8
  store i32 %86, i32* %85, align 4
  %87 = load i32, i32* %85, align 4
  %88 = call i8* (i32, ...) @_lfortran_malloc(i32 %87)
  %89 = bitcast i8* %88 to i8**
  store i8** %89, i8*** %84, align 8
  %90 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  %92 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %91, i32 0
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 1, %94
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 1, %99
  %101 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %102 = load i8**, i8*** %101, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i32 %97
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %103, align 8
  %104 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %105 = load %dimension_descriptor*, %dimension_descriptor** %104, align 8
  %106 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %105, i32 0
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = sub i32 2, %108
  %110 = mul i32 1, %109
  %111 = add i32 0, %110
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = mul i32 1, %113
  %115 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %116 = load i8**, i8*** %115, align 8
  %117 = getelementptr inbounds i8*, i8** %116, i32 %111
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %117, align 8
  %118 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %119 = load %dimension_descriptor*, %dimension_descriptor** %118, align 8
  %120 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %119, i32 0
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = sub i32 3, %122
  %124 = mul i32 1, %123
  %125 = add i32 0, %124
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 1, %127
  %129 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %130 = load i8**, i8*** %129, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i32 %125
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %131, align 8
  %132 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %133 = load %dimension_descriptor*, %dimension_descriptor** %132, align 8
  %134 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %133, i32 0
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = sub i32 4, %136
  %138 = mul i32 1, %137
  %139 = add i32 0, %138
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = mul i32 1, %141
  %143 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %144 = load i8**, i8*** %143, align 8
  %145 = getelementptr inbounds i8*, i8** %144, i32 %139
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %145, align 8
  %146 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %147 = load %dimension_descriptor*, %dimension_descriptor** %146, align 8
  %148 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %147, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 5, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %158 = load i8**, i8*** %157, align 8
  %159 = getelementptr inbounds i8*, i8** %158, i32 %153
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %159, align 8
  %160 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %161 = load %dimension_descriptor*, %dimension_descriptor** %160, align 8
  %162 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %161, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 1, %164
  %166 = mul i32 1, %165
  %167 = add i32 0, %166
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 1, %169
  %171 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %172 = load i8**, i8*** %171, align 8
  %173 = getelementptr inbounds i8*, i8** %172, i32 %167
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %176 = load %dimension_descriptor*, %dimension_descriptor** %175, align 8
  %177 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %176, i32 0
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = sub i32 2, %179
  %181 = mul i32 1, %180
  %182 = add i32 0, %181
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = mul i32 1, %184
  %186 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %187 = load i8**, i8*** %186, align 8
  %188 = getelementptr inbounds i8*, i8** %187, i32 %182
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %191 = load %dimension_descriptor*, %dimension_descriptor** %190, align 8
  %192 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %191, i32 0
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = sub i32 3, %194
  %196 = mul i32 1, %195
  %197 = add i32 0, %196
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = mul i32 1, %199
  %201 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %202 = load i8**, i8*** %201, align 8
  %203 = getelementptr inbounds i8*, i8** %202, i32 %197
  %204 = load i8*, i8** %203, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %174, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %189, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  %205 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %206 = load %dimension_descriptor*, %dimension_descriptor** %205, align 8
  %207 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %206, i32 0
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = sub i32 %209, 1
  store i32 %210, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %211 = load i32, i32* %"1_k", align 4
  %212 = add i32 %211, 1
  %213 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %214 = load %dimension_descriptor*, %dimension_descriptor** %213, align 8
  %215 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %214, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 2
  %219 = load i32, i32* %218, align 4
  %220 = add i32 %219, %217
  %221 = sub i32 %220, 1
  %222 = icmp sle i32 %212, %221
  br i1 %222, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %223 = load i32, i32* %"1_k", align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %"1_k", align 4
  %225 = load i32, i32* %"1_k", align 4
  %226 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %227 = load %dimension_descriptor*, %dimension_descriptor** %226, align 8
  %228 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %227, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 %225, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %238 = load i8**, i8*** %237, align 8
  %239 = getelementptr inbounds i8*, i8** %238, i32 %233
  %240 = load i8*, i8** %239, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %240, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  %241 = getelementptr %array, %array* %greetings, i32 0, i32 3
  %242 = load i1, i1* %241, align 1
  br i1 %242, label %then, label %else

then:                                             ; preds = %loop.end
  %243 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %244 = load i8**, i8*** %243, align 8
  %245 = alloca i8*, align 8
  %246 = bitcast i8** %244 to i8*
  store i8* %246, i8** %245, align 8
  %247 = load i8*, i8** %245, align 8
  call void (i8*, ...) @_lfortran_free(i8* %247)
  %248 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 false, i1* %248, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %249 = getelementptr %array, %array* %user_data, i32 0, i32 3
  %250 = load i1, i1* %249, align 1
  br i1 %250, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %251 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %252 = load i8**, i8*** %251, align 8
  %253 = alloca i8*, align 8
  %254 = bitcast i8** %252 to i8*
  store i8* %254, i8** %253, align 8
  %255 = load i8*, i8** %253, align 8
  call void (i8*, ...) @_lfortran_free(i8* %255)
  %256 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 false, i1* %256, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
