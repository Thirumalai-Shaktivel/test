; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i8**, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@9 = private unnamed_addr constant [13 x i8] c"%s %s %s %s\0A\00", align 1
@10 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %greetings = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %user_data = alloca %array.0, align 8
  %6 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 4
  store i32 1, i32* %10, align 4
  %11 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %12 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 true, i1* %13, align 1
  %14 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %15 = load %dimension_descriptor*, %dimension_descriptor** %14, align 8
  %16 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %15, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 1
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 3
  store i32 1, i32* %17, align 4
  store i32 1, i32* %18, align 4
  store i32 3, i32* %19, align 4
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %18, align 4
  %23 = sub i32 %21, %22
  %24 = add i32 %23, 1
  %25 = mul i32 1, %24
  store i32 %24, i32* %20, align 4
  %26 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %27 = alloca i32, align 4
  %28 = mul i32 %25, 8
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = call i8* (i32, ...) @_lfortran_malloc(i32 %29)
  %31 = bitcast i8* %30 to i8**
  store i8** %31, i8*** %26, align 8
  %32 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 1, %36
  %38 = mul i32 1, %37
  %39 = add i32 0, %38
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = mul i32 1, %41
  %43 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %44 = load i8**, i8*** %43, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i32 %39
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %45, align 8
  %46 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %47 = load %dimension_descriptor*, %dimension_descriptor** %46, align 8
  %48 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 2, %50
  %52 = mul i32 1, %51
  %53 = add i32 0, %52
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = mul i32 1, %55
  %57 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %58 = load i8**, i8*** %57, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i32 %53
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %59, align 8
  %60 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %61 = load %dimension_descriptor*, %dimension_descriptor** %60, align 8
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %61, i32 0
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 3, %64
  %66 = mul i32 1, %65
  %67 = add i32 0, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 1, %69
  %71 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %72 = load i8**, i8*** %71, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i32 %67
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %73, align 8
  %74 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 1
  store i32 0, i32* %74, align 4
  %75 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 true, i1* %75, align 1
  %76 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 5, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  %87 = mul i32 1, %86
  store i32 %86, i32* %82, align 4
  %88 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %89 = alloca i32, align 4
  %90 = mul i32 %87, 8
  store i32 %90, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = call i8* (i32, ...) @_lfortran_malloc(i32 %91)
  %93 = bitcast i8* %92 to i8**
  store i8** %93, i8*** %88, align 8
  %94 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 1, %98
  %100 = mul i32 1, %99
  %101 = add i32 0, %100
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = mul i32 1, %103
  %105 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %106 = load i8**, i8*** %105, align 8
  %107 = getelementptr inbounds i8*, i8** %106, i32 %101
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %107, align 8
  %108 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  %110 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 2, %112
  %114 = mul i32 1, %113
  %115 = add i32 0, %114
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = mul i32 1, %117
  %119 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %120 = load i8**, i8*** %119, align 8
  %121 = getelementptr inbounds i8*, i8** %120, i32 %115
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %121, align 8
  %122 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %123 = load %dimension_descriptor*, %dimension_descriptor** %122, align 8
  %124 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %123, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sub i32 3, %126
  %128 = mul i32 1, %127
  %129 = add i32 0, %128
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 1, %131
  %133 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %134 = load i8**, i8*** %133, align 8
  %135 = getelementptr inbounds i8*, i8** %134, i32 %129
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %135, align 8
  %136 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %137 = load %dimension_descriptor*, %dimension_descriptor** %136, align 8
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %137, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 4, %140
  %142 = mul i32 1, %141
  %143 = add i32 0, %142
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = mul i32 1, %145
  %147 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %148 = load i8**, i8*** %147, align 8
  %149 = getelementptr inbounds i8*, i8** %148, i32 %143
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %149, align 8
  %150 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 5, %154
  %156 = mul i32 1, %155
  %157 = add i32 0, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 1, %159
  %161 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %162 = load i8**, i8*** %161, align 8
  %163 = getelementptr inbounds i8*, i8** %162, i32 %157
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %163, align 8
  %164 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %165 = load %dimension_descriptor*, %dimension_descriptor** %164, align 8
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %165, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 1, %168
  %170 = mul i32 1, %169
  %171 = add i32 0, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 1, %173
  %175 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %176 = load i8**, i8*** %175, align 8
  %177 = getelementptr inbounds i8*, i8** %176, i32 %171
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %180 = load %dimension_descriptor*, %dimension_descriptor** %179, align 8
  %181 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %180, i32 0
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = sub i32 2, %183
  %185 = mul i32 1, %184
  %186 = add i32 0, %185
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 3
  %188 = load i32, i32* %187, align 4
  %189 = mul i32 1, %188
  %190 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %191 = load i8**, i8*** %190, align 8
  %192 = getelementptr inbounds i8*, i8** %191, i32 %186
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %195 = load %dimension_descriptor*, %dimension_descriptor** %194, align 8
  %196 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %195, i32 0
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 3, %198
  %200 = mul i32 1, %199
  %201 = add i32 0, %200
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = mul i32 1, %203
  %205 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %206 = load i8**, i8*** %205, align 8
  %207 = getelementptr inbounds i8*, i8** %206, i32 %201
  %208 = load i8*, i8** %207, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i32 0, i32 0), i8* %178, i8* %193, i8* %208)
  %209 = alloca %dimension_descriptor*, align 8
  %210 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  store %dimension_descriptor* %211, %dimension_descriptor** %209, align 8
  %212 = alloca i32, align 4
  store i32 1, i32* %212, align 4
  %213 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %209, i32* %212)
  %214 = sub i32 %213, 1
  store i32 %214, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %215 = load i32, i32* %"1_k", align 4
  %216 = add i32 %215, 1
  %217 = alloca %dimension_descriptor*, align 8
  %218 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %219 = load %dimension_descriptor*, %dimension_descriptor** %218, align 8
  store %dimension_descriptor* %219, %dimension_descriptor** %217, align 8
  %220 = alloca i32, align 4
  store i32 1, i32* %220, align 4
  %221 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %217, i32* %220)
  %222 = icmp sle i32 %216, %221
  br i1 %222, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %223 = load i32, i32* %"1_k", align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %"1_k", align 4
  %225 = load i32, i32* %"1_k", align 4
  %226 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %227 = load %dimension_descriptor*, %dimension_descriptor** %226, align 8
  %228 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %227, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 %225, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %238 = load i8**, i8*** %237, align 8
  %239 = getelementptr inbounds i8*, i8** %238, i32 %233
  %240 = load i8*, i8** %239, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i32 0, i32 0), i8* %240)
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0))
  %241 = load %array.0, %array.0* %greetings, align 8
  %242 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  %243 = load i1, i1* %242, align 1
  br i1 %243, label %then, label %else

then:                                             ; preds = %loop.end
  %244 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %245 = load i8**, i8*** %244, align 8
  %246 = alloca i8*, align 8
  %247 = bitcast i8** %245 to i8*
  store i8* %247, i8** %246, align 8
  %248 = load i8*, i8** %246, align 8
  call void (i8*, ...) @_lfortran_free(i8* %248)
  %249 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 false, i1* %249, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %250 = load %array.0, %array.0* %user_data, align 8
  %251 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  %252 = load i1, i1* %251, align 1
  br i1 %252, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %253 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %254 = load i8**, i8*** %253, align 8
  %255 = alloca i8*, align 8
  %256 = bitcast i8** %254 to i8*
  store i8* %256, i8** %255, align 8
  %257 = load i8*, i8** %255, align 8
  call void (i8*, ...) @_lfortran_free(i8* %257)
  %258 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 false, i1* %258, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
