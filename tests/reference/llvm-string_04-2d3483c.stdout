; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i8**, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@9 = private unnamed_addr constant [13 x i8] c"%s %s %s %s\0A\00", align 1
@10 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %greetings = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %user_data = alloca %array.0, align 8
  %6 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 4
  store i32 1, i32* %10, align 4
  %11 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %12 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 true, i1* %13, align 1
  %14 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %15 = alloca i32, align 4
  store i32 1, i32* %15, align 4
  %16 = load i32, i32* %15, align 4
  %17 = alloca %dimension_descriptor, i32 %16, align 8
  store %dimension_descriptor* %17, %dimension_descriptor** %14, align 8
  %18 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 4
  store i32 1, i32* %18, align 4
  %19 = load %dimension_descriptor*, %dimension_descriptor** %14, align 8
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %19, i32 0
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 3, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  %29 = mul i32 1, %28
  store i32 %28, i32* %24, align 4
  %30 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %31 = alloca i32, align 4
  %32 = mul i32 %29, 8
  store i32 %32, i32* %31, align 4
  %33 = load i32, i32* %31, align 4
  %34 = call i8* (i32, ...) @_lfortran_malloc(i32 %33)
  %35 = bitcast i8* %34 to i8**
  store i8** %35, i8*** %30, align 8
  %36 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %37 = load %dimension_descriptor*, %dimension_descriptor** %36, align 8
  %38 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %37, i32 0
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sub i32 1, %40
  %42 = mul i32 1, %41
  %43 = add i32 0, %42
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = mul i32 1, %45
  %47 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %48 = load i8**, i8*** %47, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i32 %43
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %49, align 8
  %50 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %51 = load %dimension_descriptor*, %dimension_descriptor** %50, align 8
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %51, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 2, %54
  %56 = mul i32 1, %55
  %57 = add i32 0, %56
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 1, %59
  %61 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %62 = load i8**, i8*** %61, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i32 %57
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %63, align 8
  %64 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %65 = load %dimension_descriptor*, %dimension_descriptor** %64, align 8
  %66 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %65, i32 0
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 3, %68
  %70 = mul i32 1, %69
  %71 = add i32 0, %70
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 1, %73
  %75 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %76 = load i8**, i8*** %75, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i32 %71
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %77, align 8
  %78 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 1
  store i32 0, i32* %78, align 4
  %79 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 true, i1* %79, align 1
  %80 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %81 = alloca i32, align 4
  store i32 1, i32* %81, align 4
  %82 = load i32, i32* %81, align 4
  %83 = alloca %dimension_descriptor, i32 %82, align 8
  store %dimension_descriptor* %83, %dimension_descriptor** %80, align 8
  %84 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 4
  store i32 1, i32* %84, align 4
  %85 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %85, i32 0
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 0
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 2
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 3
  store i32 1, i32* %87, align 4
  store i32 1, i32* %88, align 4
  store i32 5, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = load i32, i32* %88, align 4
  %93 = sub i32 %91, %92
  %94 = add i32 %93, 1
  %95 = mul i32 1, %94
  store i32 %94, i32* %90, align 4
  %96 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %97 = alloca i32, align 4
  %98 = mul i32 %95, 8
  store i32 %98, i32* %97, align 4
  %99 = load i32, i32* %97, align 4
  %100 = call i8* (i32, ...) @_lfortran_malloc(i32 %99)
  %101 = bitcast i8* %100 to i8**
  store i8** %101, i8*** %96, align 8
  %102 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 1, %106
  %108 = mul i32 1, %107
  %109 = add i32 0, %108
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = mul i32 1, %111
  %113 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %114 = load i8**, i8*** %113, align 8
  %115 = getelementptr inbounds i8*, i8** %114, i32 %109
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %115, align 8
  %116 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %117 = load %dimension_descriptor*, %dimension_descriptor** %116, align 8
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sub i32 2, %120
  %122 = mul i32 1, %121
  %123 = add i32 0, %122
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 1, %125
  %127 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %128 = load i8**, i8*** %127, align 8
  %129 = getelementptr inbounds i8*, i8** %128, i32 %123
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %129, align 8
  %130 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %131 = load %dimension_descriptor*, %dimension_descriptor** %130, align 8
  %132 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %131, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 3, %134
  %136 = mul i32 1, %135
  %137 = add i32 0, %136
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 3
  %139 = load i32, i32* %138, align 4
  %140 = mul i32 1, %139
  %141 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %142 = load i8**, i8*** %141, align 8
  %143 = getelementptr inbounds i8*, i8** %142, i32 %137
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %143, align 8
  %144 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %145 = load %dimension_descriptor*, %dimension_descriptor** %144, align 8
  %146 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %145, i32 0
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 4, %148
  %150 = mul i32 1, %149
  %151 = add i32 0, %150
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = mul i32 1, %153
  %155 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %156 = load i8**, i8*** %155, align 8
  %157 = getelementptr inbounds i8*, i8** %156, i32 %151
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %157, align 8
  %158 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %159 = load %dimension_descriptor*, %dimension_descriptor** %158, align 8
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 0
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = sub i32 5, %162
  %164 = mul i32 1, %163
  %165 = add i32 0, %164
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = mul i32 1, %167
  %169 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %170 = load i8**, i8*** %169, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i32 %165
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %171, align 8
  %172 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %173 = load %dimension_descriptor*, %dimension_descriptor** %172, align 8
  %174 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %173, i32 0
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 1, %176
  %178 = mul i32 1, %177
  %179 = add i32 0, %178
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = mul i32 1, %181
  %183 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %184 = load i8**, i8*** %183, align 8
  %185 = getelementptr inbounds i8*, i8** %184, i32 %179
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 2, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %199 = load i8**, i8*** %198, align 8
  %200 = getelementptr inbounds i8*, i8** %199, i32 %194
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %203 = load %dimension_descriptor*, %dimension_descriptor** %202, align 8
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %203, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 3, %206
  %208 = mul i32 1, %207
  %209 = add i32 0, %208
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 3
  %211 = load i32, i32* %210, align 4
  %212 = mul i32 1, %211
  %213 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %214 = load i8**, i8*** %213, align 8
  %215 = getelementptr inbounds i8*, i8** %214, i32 %209
  %216 = load i8*, i8** %215, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i32 0, i32 0), i8* %186, i8* %201, i8* %216)
  %217 = alloca %dimension_descriptor*, align 8
  %218 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %219 = load %dimension_descriptor*, %dimension_descriptor** %218, align 8
  store %dimension_descriptor* %219, %dimension_descriptor** %217, align 8
  %220 = alloca i32, align 4
  store i32 1, i32* %220, align 4
  %221 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %217, i32* %220)
  %222 = sub i32 %221, 1
  store i32 %222, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %223 = load i32, i32* %"1_k", align 4
  %224 = add i32 %223, 1
  %225 = alloca %dimension_descriptor*, align 8
  %226 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %227 = load %dimension_descriptor*, %dimension_descriptor** %226, align 8
  store %dimension_descriptor* %227, %dimension_descriptor** %225, align 8
  %228 = alloca i32, align 4
  store i32 1, i32* %228, align 4
  %229 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %225, i32* %228)
  %230 = icmp sle i32 %224, %229
  br i1 %230, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %231 = load i32, i32* %"1_k", align 4
  %232 = add i32 %231, 1
  store i32 %232, i32* %"1_k", align 4
  %233 = load i32, i32* %"1_k", align 4
  %234 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %235 = load %dimension_descriptor*, %dimension_descriptor** %234, align 8
  %236 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %235, i32 0
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = sub i32 %233, %238
  %240 = mul i32 1, %239
  %241 = add i32 0, %240
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = mul i32 1, %243
  %245 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %246 = load i8**, i8*** %245, align 8
  %247 = getelementptr inbounds i8*, i8** %246, i32 %241
  %248 = load i8*, i8** %247, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i32 0, i32 0), i8* %248)
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0))
  %249 = load %array.0, %array.0* %greetings, align 8
  %250 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  %251 = load i1, i1* %250, align 1
  br i1 %251, label %then, label %else

then:                                             ; preds = %loop.end
  %252 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %253 = load i8**, i8*** %252, align 8
  %254 = alloca i8*, align 8
  %255 = bitcast i8** %253 to i8*
  store i8* %255, i8** %254, align 8
  %256 = load i8*, i8** %254, align 8
  call void (i8*, ...) @_lfortran_free(i8* %256)
  %257 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 false, i1* %257, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %258 = load %array.0, %array.0* %user_data, align 8
  %259 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  %260 = load i1, i1* %259, align 1
  br i1 %260, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %261 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %262 = load i8**, i8*** %261, align 8
  %263 = alloca i8*, align 8
  %264 = bitcast i8** %262 to i8*
  store i8* %264, i8** %263, align 8
  %265 = load i8*, i8** %263, align 8
  call void (i8*, ...) @_lfortran_free(i8* %265)
  %266 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 false, i1* %266, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
