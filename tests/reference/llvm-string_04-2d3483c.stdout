; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i8**, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@9 = private unnamed_addr constant [13 x i8] c"%s %s %s %s\0A\00", align 1
@10 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %greetings = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %user_data = alloca %array.0, align 8
  %1 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 false, i1* %1, align 1
  %2 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 true, i1* %3, align 1
  %4 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %5 = alloca i32, align 4
  store i32 1, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca %dimension_descriptor, i32 %6, align 8
  store %dimension_descriptor* %7, %dimension_descriptor** %4, align 8
  %8 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 4
  store i32 1, i32* %8, align 4
  %9 = load %dimension_descriptor*, %dimension_descriptor** %4, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 0
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 3
  store i32 1, i32* %11, align 4
  store i32 1, i32* %12, align 4
  store i32 3, i32* %13, align 4
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %12, align 4
  %17 = sub i32 %15, %16
  %18 = add i32 %17, 1
  %19 = mul i32 1, %18
  store i32 %18, i32* %14, align 4
  %20 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %21 = alloca i32, align 4
  %22 = mul i32 %19, 8
  store i32 %22, i32* %21, align 4
  %23 = load i32, i32* %21, align 4
  %24 = call i8* (i32, ...) @_lfortran_malloc(i32 %23)
  %25 = bitcast i8* %24 to i8**
  store i8** %25, i8*** %20, align 8
  %26 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %27 = load %dimension_descriptor*, %dimension_descriptor** %26, align 8
  %28 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %27, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 1, %30
  %32 = mul i32 1, %31
  %33 = add i32 0, %32
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = mul i32 1, %35
  %37 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %38 = load i8**, i8*** %37, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i32 %33
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %39, align 8
  %40 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %41 = load %dimension_descriptor*, %dimension_descriptor** %40, align 8
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 2, %44
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 1, %49
  %51 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %52 = load i8**, i8*** %51, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i32 %47
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %53, align 8
  %54 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %55 = load %dimension_descriptor*, %dimension_descriptor** %54, align 8
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %55, i32 0
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sub i32 3, %58
  %60 = mul i32 1, %59
  %61 = add i32 0, %60
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = mul i32 1, %63
  %65 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %66 = load i8**, i8*** %65, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i32 %61
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %67, align 8
  %68 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 1
  store i32 0, i32* %68, align 4
  %69 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 true, i1* %69, align 1
  %70 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %71 = alloca i32, align 4
  store i32 1, i32* %71, align 4
  %72 = load i32, i32* %71, align 4
  %73 = alloca %dimension_descriptor, i32 %72, align 8
  store %dimension_descriptor* %73, %dimension_descriptor** %70, align 8
  %74 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 4
  store i32 1, i32* %74, align 4
  %75 = load %dimension_descriptor*, %dimension_descriptor** %70, align 8
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 0
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 2
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 3
  store i32 1, i32* %77, align 4
  store i32 1, i32* %78, align 4
  store i32 5, i32* %79, align 4
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %78, align 4
  %83 = sub i32 %81, %82
  %84 = add i32 %83, 1
  %85 = mul i32 1, %84
  store i32 %84, i32* %80, align 4
  %86 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %87 = alloca i32, align 4
  %88 = mul i32 %85, 8
  store i32 %88, i32* %87, align 4
  %89 = load i32, i32* %87, align 4
  %90 = call i8* (i32, ...) @_lfortran_malloc(i32 %89)
  %91 = bitcast i8* %90 to i8**
  store i8** %91, i8*** %86, align 8
  %92 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  %94 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %93, i32 0
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = sub i32 1, %96
  %98 = mul i32 1, %97
  %99 = add i32 0, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 1, %101
  %103 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %104 = load i8**, i8*** %103, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i32 %99
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %105, align 8
  %106 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %107 = load %dimension_descriptor*, %dimension_descriptor** %106, align 8
  %108 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %107, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sub i32 2, %110
  %112 = mul i32 1, %111
  %113 = add i32 0, %112
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = mul i32 1, %115
  %117 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %118 = load i8**, i8*** %117, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i32 %113
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %119, align 8
  %120 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 3, %124
  %126 = mul i32 1, %125
  %127 = add i32 0, %126
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = mul i32 1, %129
  %131 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %132 = load i8**, i8*** %131, align 8
  %133 = getelementptr inbounds i8*, i8** %132, i32 %127
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %133, align 8
  %134 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %135 = load %dimension_descriptor*, %dimension_descriptor** %134, align 8
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %135, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 4, %138
  %140 = mul i32 1, %139
  %141 = add i32 0, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 1, %143
  %145 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %146 = load i8**, i8*** %145, align 8
  %147 = getelementptr inbounds i8*, i8** %146, i32 %141
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %147, align 8
  %148 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %149 = load %dimension_descriptor*, %dimension_descriptor** %148, align 8
  %150 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %149, i32 0
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = sub i32 5, %152
  %154 = mul i32 1, %153
  %155 = add i32 0, %154
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = mul i32 1, %157
  %159 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %160 = load i8**, i8*** %159, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i32 %155
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %161, align 8
  %162 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %163 = load %dimension_descriptor*, %dimension_descriptor** %162, align 8
  %164 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %163, i32 0
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = sub i32 1, %166
  %168 = mul i32 1, %167
  %169 = add i32 0, %168
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 3
  %171 = load i32, i32* %170, align 4
  %172 = mul i32 1, %171
  %173 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %174 = load i8**, i8*** %173, align 8
  %175 = getelementptr inbounds i8*, i8** %174, i32 %169
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 0
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 2, %181
  %183 = mul i32 1, %182
  %184 = add i32 0, %183
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 3
  %186 = load i32, i32* %185, align 4
  %187 = mul i32 1, %186
  %188 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %189 = load i8**, i8*** %188, align 8
  %190 = getelementptr inbounds i8*, i8** %189, i32 %184
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 2
  %193 = load %dimension_descriptor*, %dimension_descriptor** %192, align 8
  %194 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 0
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 3, %196
  %198 = mul i32 1, %197
  %199 = add i32 0, %198
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 1, %201
  %203 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %204 = load i8**, i8*** %203, align 8
  %205 = getelementptr inbounds i8*, i8** %204, i32 %199
  %206 = load i8*, i8** %205, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i32 0, i32 0), i8* %176, i8* %191, i8* %206)
  %207 = alloca %dimension_descriptor*, align 8
  %208 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %209 = load %dimension_descriptor*, %dimension_descriptor** %208, align 8
  store %dimension_descriptor* %209, %dimension_descriptor** %207, align 8
  %210 = alloca i32, align 4
  store i32 1, i32* %210, align 4
  %211 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %207, i32* %210)
  %212 = sub i32 %211, 1
  store i32 %212, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %213 = load i32, i32* %"1_k", align 4
  %214 = add i32 %213, 1
  %215 = alloca %dimension_descriptor*, align 8
  %216 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %217 = load %dimension_descriptor*, %dimension_descriptor** %216, align 8
  store %dimension_descriptor* %217, %dimension_descriptor** %215, align 8
  %218 = alloca i32, align 4
  store i32 1, i32* %218, align 4
  %219 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %215, i32* %218)
  %220 = icmp sle i32 %214, %219
  br i1 %220, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %221 = load i32, i32* %"1_k", align 4
  %222 = add i32 %221, 1
  store i32 %222, i32* %"1_k", align 4
  %223 = load i32, i32* %"1_k", align 4
  %224 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 2
  %225 = load %dimension_descriptor*, %dimension_descriptor** %224, align 8
  %226 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %225, i32 0
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = sub i32 %223, %228
  %230 = mul i32 1, %229
  %231 = add i32 0, %230
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 3
  %233 = load i32, i32* %232, align 4
  %234 = mul i32 1, %233
  %235 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %236 = load i8**, i8*** %235, align 8
  %237 = getelementptr inbounds i8*, i8** %236, i32 %231
  %238 = load i8*, i8** %237, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i32 0, i32 0), i8* %238)
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0))
  %239 = load %array.0, %array.0* %greetings, align 8
  %240 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  %241 = load i1, i1* %240, align 1
  br i1 %241, label %then, label %else

then:                                             ; preds = %loop.end
  %242 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 0
  %243 = load i8**, i8*** %242, align 8
  %244 = alloca i8*, align 8
  %245 = bitcast i8** %243 to i8*
  store i8* %245, i8** %244, align 8
  %246 = load i8*, i8** %244, align 8
  call void (i8*, ...) @_lfortran_free(i8* %246)
  %247 = getelementptr %array.0, %array.0* %greetings, i32 0, i32 3
  store i1 false, i1* %247, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %248 = load %array.0, %array.0* %user_data, align 8
  %249 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  %250 = load i1, i1* %249, align 1
  br i1 %250, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %251 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 0
  %252 = load i8**, i8*** %251, align 8
  %253 = alloca i8*, align 8
  %254 = bitcast i8** %252 to i8*
  store i8* %254, i8** %253, align 8
  %255 = load i8*, i8** %253, align 8
  call void (i8*, ...) @_lfortran_free(i8* %255)
  %256 = getelementptr %array.0, %array.0* %user_data, i32 0, i32 3
  store i1 false, i1* %256, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
