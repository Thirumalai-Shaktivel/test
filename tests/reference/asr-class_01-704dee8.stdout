(TranslationUnit (SymbolTable 1 {circle_test: (Program (SymbolTable 6 {Circle: (ExternalSymbol 6 Circle 2 Circle class_Circle Circle Private), c: (Variable 6 c Local () () Default (Derived 6 Circle []) Source Private Required)}) circle_test [class_Circle] [(= (DerivedRef (Var 6 c) 3 radius (Real 4 []) ()) (ConstantReal 1.500000 (Real 4 []))) (SubroutineCall 2 circle_print 2 print [])]), class_Circle: (Module (SymbolTable 2 {Circle: (DerivedType (SymbolTable 3 {area: (ClassProcedure 2 area circle_area 2 circle_area Source), print: (ClassProcedure 2 print circle_print 2 circle_print Source), radius: (Variable 3 radius Local () () Default (Real 4 []) Source Private Required)}) Circle Source Private), circle_area: (Function (SymbolTable 4 {area: (Variable 4 area ReturnVar () () Default (Real 4 []) Source Private Required), this: (Variable 4 this In () () Default (Class 2 Circle []) Source Private Required)}) circle_area [(Var 4 this)] [(= (Var 4 area) (BinOp (Var 2 pi) Mul (BinOp (DerivedRef (Var 4 this) 3 radius (Real 4 []) ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) ()) (Real 4 []) ()) (Real 4 []) ()))] (Var 4 area) Source Private Implementation), circle_print: (Subroutine (SymbolTable 5 {area: (Variable 5 area Local () () Default (Real 4 []) Source Private Required), this: (Variable 5 this In () () Default (Class 2 Circle []) Source Private Required)}) circle_print [(Var 5 this)] [(= (Var 5 area) (ArrayRef 5 area [] (Real 4 []) ())) (Print () [(ConstantString "Circle: r = " (Character 8 [])) (DerivedRef (Var 5 this) 3 radius (Real 4 []) ()) (ConstantString " area = " (Character 8 [])) (Var 5 area)])] Source Private Implementation), pi: (Variable 2 pi Local (ConstantReal 3.141593 (Real 4 [])) () Default (Real 4 []) Source Private Required)}) class_Circle [] .false.)}) [])
