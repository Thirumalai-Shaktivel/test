<<<<<<< HEAD
(TranslationUnit (SymbolTable 1 {lfortran_intrinsic_util: (IntrinsicModule lfortran_intrinsic_util), optmod: (Module (SymbolTable 2 {optional_argument: (Subroutine (SymbolTable 3 {name: (Variable 3 name In () () Default (Character 4 []) Source Public Optional .false.), present: (ExternalSymbol 3 present 5 present lfortran_intrinsic_util present Private)}) optional_argument [(Var 3 name)] [(If (FunctionCall 3 present () [(Var 3 name)] [] (Logical 4 []) () ()) [(Print () [(StrOp (ConstantString "Hello " (Character 8 [])) Concat (Var 3 name) (Character 4 []) ())])] [(Print () [(ConstantString "Hello world!" (Character 8 []))])])] Source Public Implementation ())}) optmod [lfortran_intrinsic_util] .false.)}) [])
=======
(TranslationUnit (SymbolTable 1 {optmod: (Module (SymbolTable 2 {optional_argument: (Subroutine (SymbolTable 3 {name: (Variable 3 name In () () Default (Character 1 []) Source Public Optional .false.)}) optional_argument [(Var 3 name)] [(If (FunctionCall 1 present () [(Var 3 name)] [] (Logical 4 []) () ()) [(Print () [(StrOp (ConstantString "Hello " (Character 1 [])) Concat (Var 3 name) (Character 1 []) ())])] [(Print () [(ConstantString "Hello world!" (Character 1 []))])])] Source Public Implementation ())}) optmod [] .false.), present: (Function (SymbolTable 4 {present: (Variable 4 present ReturnVar () () Default (Logical 4 []) Source Public Required .false.)}) present [] [] (Var 4 present) Source Public Implementation ())}) [])
>>>>>>> master
