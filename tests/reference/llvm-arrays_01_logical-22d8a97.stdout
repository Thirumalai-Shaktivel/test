; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i1], i32, [1 x %dimension_descriptor], i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x i1], i32, [1 x %dimension_descriptor], i1 }
%array.1 = type { [4 x i1], i32, [2 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %c = alloca %array.1, align 8
  %22 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %24 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %23, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 2, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %42 = getelementptr %array, %array* %a, i32 0, i32 2
  %43 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %42, i32 0, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %45
  %47 = mul i32 1, %46
  %48 = add i32 0, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 1, %50
  %52 = getelementptr %array, %array* %a, i32 0, i32 0
  %53 = getelementptr [3 x i1], [3 x i1]* %52, i32 0, i32 %48
  store i1 true, i1* %53, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  %56 = icmp sle i32 %55, 3
  br i1 %56, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %57 = load i32, i32* %i, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %i, align 4
  %59 = load i32, i32* %i, align 4
  %60 = getelementptr %array, %array* %a, i32 0, i32 2
  %61 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %59, %63
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 1, %68
  %70 = getelementptr %array, %array* %a, i32 0, i32 0
  %71 = getelementptr [3 x i1], [3 x i1]* %70, i32 0, i32 %66
  %72 = load i32, i32* %i, align 4
  %73 = sub i32 %72, 1
  %74 = getelementptr %array, %array* %a, i32 0, i32 2
  %75 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %74, i32 0, i32 0
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %73, %77
  %79 = mul i32 1, %78
  %80 = add i32 0, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 1, %82
  %84 = getelementptr %array, %array* %a, i32 0, i32 0
  %85 = getelementptr [3 x i1], [3 x i1]* %84, i32 0, i32 %80
  %86 = load i1, i1* %85, align 1
  %87 = xor i1 %86, true
  store i1 %87, i1* %71, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %88 = getelementptr %array, %array* %a, i32 0, i32 2
  %89 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = sub i32 1, %91
  %93 = mul i32 1, %92
  %94 = add i32 0, %93
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = mul i32 1, %96
  %98 = getelementptr %array, %array* %a, i32 0, i32 0
  %99 = getelementptr [3 x i1], [3 x i1]* %98, i32 0, i32 %94
  %100 = load i1, i1* %99, align 1
  %101 = xor i1 %100, true
  br i1 %101, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %102 = getelementptr %array, %array* %a, i32 0, i32 2
  %103 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %102, i32 0, i32 0
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = sub i32 2, %105
  %107 = mul i32 1, %106
  %108 = add i32 0, %107
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = mul i32 1, %110
  %112 = getelementptr %array, %array* %a, i32 0, i32 0
  %113 = getelementptr [3 x i1], [3 x i1]* %112, i32 0, i32 %108
  %114 = load i1, i1* %113, align 1
  br i1 %114, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %115 = getelementptr %array, %array* %a, i32 0, i32 2
  %116 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %115, i32 0, i32 0
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sub i32 3, %118
  %120 = mul i32 1, %119
  %121 = add i32 0, %120
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %116, i32 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = mul i32 1, %123
  %125 = getelementptr %array, %array* %a, i32 0, i32 0
  %126 = getelementptr [3 x i1], [3 x i1]* %125, i32 0, i32 %121
  %127 = load i1, i1* %126, align 1
  %128 = xor i1 %127, true
  br i1 %128, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  %129 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %130 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %129, i32 0, i32 0
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 1, %132
  %134 = mul i32 1, %133
  %135 = add i32 0, %134
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = mul i32 1, %137
  %139 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %140 = getelementptr [4 x i1], [4 x i1]* %139, i32 0, i32 %135
  store i1 false, i1* %140, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %141 = load i32, i32* %i, align 4
  %142 = add i32 %141, 1
  %143 = icmp sle i32 %142, 14
  br i1 %143, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %144 = load i32, i32* %i, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %i, align 4
  %146 = load i32, i32* %i, align 4
  %147 = sub i32 %146, 10
  %148 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %149 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %148, i32 0, i32 0
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 %147, %151
  %153 = mul i32 1, %152
  %154 = add i32 0, %153
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = mul i32 1, %156
  %158 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %159 = getelementptr [4 x i1], [4 x i1]* %158, i32 0, i32 %154
  %160 = load i32, i32* %i, align 4
  %161 = sub i32 %160, 10
  %162 = sub i32 %161, 1
  %163 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %164 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %163, i32 0, i32 0
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = sub i32 %162, %166
  %168 = mul i32 1, %167
  %169 = add i32 0, %168
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 3
  %171 = load i32, i32* %170, align 4
  %172 = mul i32 1, %171
  %173 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %174 = getelementptr [4 x i1], [4 x i1]* %173, i32 0, i32 %169
  %175 = load i1, i1* %174, align 1
  %176 = xor i1 %175, true
  store i1 %176, i1* %159, align 1
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %177 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %178 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %177, i32 0, i32 0
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 1, %180
  %182 = mul i32 1, %181
  %183 = add i32 0, %182
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = mul i32 1, %185
  %187 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %188 = getelementptr [4 x i1], [4 x i1]* %187, i32 0, i32 %183
  %189 = load i1, i1* %188, align 1
  br i1 %189, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %190 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %191 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %190, i32 0, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 2, %193
  %195 = mul i32 1, %194
  %196 = add i32 0, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 1, %198
  %200 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %201 = getelementptr [4 x i1], [4 x i1]* %200, i32 0, i32 %196
  %202 = load i1, i1* %201, align 1
  %203 = xor i1 %202, true
  br i1 %203, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %204 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %205 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %204, i32 0, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 3, %207
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 1, %212
  %214 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %215 = getelementptr [4 x i1], [4 x i1]* %214, i32 0, i32 %210
  %216 = load i1, i1* %215, align 1
  br i1 %216, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %217 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %218 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %217, i32 0, i32 0
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 4, %220
  %222 = mul i32 1, %221
  %223 = add i32 0, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 1, %225
  %227 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %228 = getelementptr [4 x i1], [4 x i1]* %227, i32 0, i32 %223
  %229 = load i1, i1* %228, align 1
  %230 = xor i1 %229, true
  br i1 %230, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %231 = load i32, i32* %i, align 4
  %232 = add i32 %231, 1
  %233 = icmp sle i32 %232, 3
  br i1 %233, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %234 = load i32, i32* %i, align 4
  %235 = add i32 %234, 1
  store i32 %235, i32* %i, align 4
  %236 = load i32, i32* %i, align 4
  %237 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %238 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %237, i32 0, i32 0
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = sub i32 %236, %240
  %242 = mul i32 1, %241
  %243 = add i32 0, %242
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = mul i32 1, %245
  %247 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %248 = getelementptr [4 x i1], [4 x i1]* %247, i32 0, i32 %243
  %249 = load i32, i32* %i, align 4
  %250 = getelementptr %array, %array* %a, i32 0, i32 2
  %251 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %250, i32 0, i32 0
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = sub i32 %249, %253
  %255 = mul i32 1, %254
  %256 = add i32 0, %255
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 3
  %258 = load i32, i32* %257, align 4
  %259 = mul i32 1, %258
  %260 = getelementptr %array, %array* %a, i32 0, i32 0
  %261 = getelementptr [3 x i1], [3 x i1]* %260, i32 0, i32 %256
  %262 = load i1, i1* %261, align 1
  %263 = and i1 %262, false
  store i1 %263, i1* %248, align 1
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %264 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %265 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %264, i32 0, i32 0
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = sub i32 1, %267
  %269 = mul i32 1, %268
  %270 = add i32 0, %269
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = mul i32 1, %272
  %274 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %275 = getelementptr [4 x i1], [4 x i1]* %274, i32 0, i32 %270
  %276 = load i1, i1* %275, align 1
  br i1 %276, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %277 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %278 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %277, i32 0, i32 0
  %279 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = sub i32 2, %280
  %282 = mul i32 1, %281
  %283 = add i32 0, %282
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 3
  %285 = load i32, i32* %284, align 4
  %286 = mul i32 1, %285
  %287 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %288 = getelementptr [4 x i1], [4 x i1]* %287, i32 0, i32 %283
  %289 = load i1, i1* %288, align 1
  br i1 %289, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %290 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %291 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %290, i32 0, i32 0
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 3, %293
  %295 = mul i32 1, %294
  %296 = add i32 0, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 1, %298
  %300 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %301 = getelementptr [4 x i1], [4 x i1]* %300, i32 0, i32 %296
  %302 = load i1, i1* %301, align 1
  br i1 %302, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %303 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %304 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %303, i32 0, i32 0
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = sub i32 4, %306
  %308 = mul i32 1, %307
  %309 = add i32 0, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 3
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 1, %311
  %313 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %314 = getelementptr [4 x i1], [4 x i1]* %313, i32 0, i32 %309
  %315 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %316 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %315, i32 0, i32 0
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = sub i32 1, %318
  %320 = mul i32 1, %319
  %321 = add i32 0, %320
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 3
  %323 = load i32, i32* %322, align 4
  %324 = mul i32 1, %323
  %325 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %326 = getelementptr [4 x i1], [4 x i1]* %325, i32 0, i32 %321
  %327 = load i1, i1* %326, align 1
  %328 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %329 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %328, i32 0, i32 0
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = sub i32 2, %331
  %333 = mul i32 1, %332
  %334 = add i32 0, %333
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = mul i32 1, %336
  %338 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %339 = getelementptr [4 x i1], [4 x i1]* %338, i32 0, i32 %334
  %340 = load i1, i1* %339, align 1
  %341 = or i1 %327, %340
  %342 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %343 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %342, i32 0, i32 0
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = sub i32 3, %345
  %347 = mul i32 1, %346
  %348 = add i32 0, %347
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 3
  %350 = load i32, i32* %349, align 4
  %351 = mul i32 1, %350
  %352 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %353 = getelementptr [4 x i1], [4 x i1]* %352, i32 0, i32 %348
  %354 = load i1, i1* %353, align 1
  %355 = or i1 %341, %354
  %356 = getelementptr %array, %array* %a, i32 0, i32 2
  %357 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %356, i32 0, i32 0
  %358 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = sub i32 1, %359
  %361 = mul i32 1, %360
  %362 = add i32 0, %361
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 3
  %364 = load i32, i32* %363, align 4
  %365 = mul i32 1, %364
  %366 = getelementptr %array, %array* %a, i32 0, i32 0
  %367 = getelementptr [3 x i1], [3 x i1]* %366, i32 0, i32 %362
  %368 = load i1, i1* %367, align 1
  %369 = or i1 %355, %368
  store i1 %369, i1* %314, align 1
  %370 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %371 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %370, i32 0, i32 0
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 1
  %373 = load i32, i32* %372, align 4
  %374 = sub i32 4, %373
  %375 = mul i32 1, %374
  %376 = add i32 0, %375
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 3
  %378 = load i32, i32* %377, align 4
  %379 = mul i32 1, %378
  %380 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %381 = getelementptr [4 x i1], [4 x i1]* %380, i32 0, i32 %376
  %382 = load i1, i1* %381, align 1
  %383 = xor i1 %382, true
  br i1 %383, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %384 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %385 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %384, i32 0, i32 0
  %386 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = sub i32 4, %387
  %389 = mul i32 1, %388
  %390 = add i32 0, %389
  %391 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 3
  %392 = load i32, i32* %391, align 4
  %393 = mul i32 1, %392
  %394 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %395 = getelementptr [4 x i1], [4 x i1]* %394, i32 0, i32 %390
  %396 = getelementptr %array, %array* %a, i32 0, i32 2
  %397 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %396, i32 0, i32 0
  %398 = getelementptr %dimension_descriptor, %dimension_descriptor* %397, i32 0, i32 1
  %399 = load i32, i32* %398, align 4
  %400 = sub i32 1, %399
  %401 = mul i32 1, %400
  %402 = add i32 0, %401
  %403 = getelementptr %dimension_descriptor, %dimension_descriptor* %397, i32 0, i32 3
  %404 = load i32, i32* %403, align 4
  %405 = mul i32 1, %404
  %406 = getelementptr %array, %array* %a, i32 0, i32 0
  %407 = getelementptr [3 x i1], [3 x i1]* %406, i32 0, i32 %402
  %408 = load i1, i1* %407, align 1
  store i1 %408, i1* %395, align 1
  %409 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %410 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %409, i32 0, i32 0
  %411 = getelementptr %dimension_descriptor, %dimension_descriptor* %410, i32 0, i32 1
  %412 = load i32, i32* %411, align 4
  %413 = sub i32 4, %412
  %414 = mul i32 1, %413
  %415 = add i32 0, %414
  %416 = getelementptr %dimension_descriptor, %dimension_descriptor* %410, i32 0, i32 3
  %417 = load i32, i32* %416, align 4
  %418 = mul i32 1, %417
  %419 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %420 = getelementptr [4 x i1], [4 x i1]* %419, i32 0, i32 %415
  %421 = load i1, i1* %420, align 1
  %422 = xor i1 %421, true
  br i1 %422, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  store i32 0, i32* %i, align 4
  br label %loop.head51

loop.head51:                                      ; preds = %loop.end59, %ifcont49
  %423 = load i32, i32* %i, align 4
  %424 = add i32 %423, 1
  %425 = icmp sle i32 %424, 2
  br i1 %425, label %loop.body52, label %loop.end60

loop.body52:                                      ; preds = %loop.head51
  %426 = load i32, i32* %i, align 4
  %427 = add i32 %426, 1
  store i32 %427, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head53

loop.head53:                                      ; preds = %ifcont57, %loop.body52
  %428 = load i32, i32* %j, align 4
  %429 = add i32 %428, 1
  %430 = icmp sle i32 %429, 2
  br i1 %430, label %loop.body54, label %loop.end59

loop.body54:                                      ; preds = %loop.head53
  %431 = load i32, i32* %j, align 4
  %432 = add i32 %431, 1
  store i32 %432, i32* %j, align 4
  %433 = load i32, i32* %i, align 4
  %434 = load i32, i32* %j, align 4
  %435 = add i32 %433, %434
  %436 = load i32, i32* %i, align 4
  %437 = load i32, i32* %j, align 4
  %438 = add i32 %436, %437
  %439 = udiv i32 %438, 2
  %440 = mul i32 2, %439
  %441 = sub i32 %435, %440
  %442 = icmp eq i32 %441, 1
  br i1 %442, label %then55, label %else56

then55:                                           ; preds = %loop.body54
  %443 = load i32, i32* %i, align 4
  %444 = load i32, i32* %j, align 4
  %445 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %446 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %445, i32 0, i32 0
  %447 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 1
  %448 = load i32, i32* %447, align 4
  %449 = sub i32 %443, %448
  %450 = mul i32 1, %449
  %451 = add i32 0, %450
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 3
  %453 = load i32, i32* %452, align 4
  %454 = mul i32 1, %453
  %455 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %445, i32 0, i32 1
  %456 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = sub i32 %444, %457
  %459 = mul i32 %454, %458
  %460 = add i32 %451, %459
  %461 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 3
  %462 = load i32, i32* %461, align 4
  %463 = mul i32 %454, %462
  %464 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %465 = getelementptr [4 x i1], [4 x i1]* %464, i32 0, i32 %460
  store i1 true, i1* %465, align 1
  br label %ifcont57

else56:                                           ; preds = %loop.body54
  %466 = load i32, i32* %i, align 4
  %467 = load i32, i32* %j, align 4
  %468 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %469 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %468, i32 0, i32 0
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %469, i32 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = sub i32 %466, %471
  %473 = mul i32 1, %472
  %474 = add i32 0, %473
  %475 = getelementptr %dimension_descriptor, %dimension_descriptor* %469, i32 0, i32 3
  %476 = load i32, i32* %475, align 4
  %477 = mul i32 1, %476
  %478 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %468, i32 0, i32 1
  %479 = getelementptr %dimension_descriptor, %dimension_descriptor* %478, i32 0, i32 1
  %480 = load i32, i32* %479, align 4
  %481 = sub i32 %467, %480
  %482 = mul i32 %477, %481
  %483 = add i32 %474, %482
  %484 = getelementptr %dimension_descriptor, %dimension_descriptor* %478, i32 0, i32 3
  %485 = load i32, i32* %484, align 4
  %486 = mul i32 %477, %485
  %487 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %488 = getelementptr [4 x i1], [4 x i1]* %487, i32 0, i32 %483
  store i1 false, i1* %488, align 1
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %iftmp58 = phi i32 [ 1, %then55 ], [ 2, %else56 ]
  br label %loop.head53

loop.end59:                                       ; preds = %loop.head53
  br label %loop.head51

loop.end60:                                       ; preds = %loop.head51
  %489 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %490 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %489, i32 0, i32 0
  %491 = getelementptr %dimension_descriptor, %dimension_descriptor* %490, i32 0, i32 1
  %492 = load i32, i32* %491, align 4
  %493 = sub i32 1, %492
  %494 = mul i32 1, %493
  %495 = add i32 0, %494
  %496 = getelementptr %dimension_descriptor, %dimension_descriptor* %490, i32 0, i32 3
  %497 = load i32, i32* %496, align 4
  %498 = mul i32 1, %497
  %499 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %489, i32 0, i32 1
  %500 = getelementptr %dimension_descriptor, %dimension_descriptor* %499, i32 0, i32 1
  %501 = load i32, i32* %500, align 4
  %502 = sub i32 1, %501
  %503 = mul i32 %498, %502
  %504 = add i32 %495, %503
  %505 = getelementptr %dimension_descriptor, %dimension_descriptor* %499, i32 0, i32 3
  %506 = load i32, i32* %505, align 4
  %507 = mul i32 %498, %506
  %508 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %509 = getelementptr [4 x i1], [4 x i1]* %508, i32 0, i32 %504
  %510 = load i1, i1* %509, align 1
  br i1 %510, label %then61, label %else62

then61:                                           ; preds = %loop.end60
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %loop.end60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %iftmp64 = phi i32 [ 1, %then61 ], [ 2, %else62 ]
  %511 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %512 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %511, i32 0, i32 0
  %513 = getelementptr %dimension_descriptor, %dimension_descriptor* %512, i32 0, i32 1
  %514 = load i32, i32* %513, align 4
  %515 = sub i32 1, %514
  %516 = mul i32 1, %515
  %517 = add i32 0, %516
  %518 = getelementptr %dimension_descriptor, %dimension_descriptor* %512, i32 0, i32 3
  %519 = load i32, i32* %518, align 4
  %520 = mul i32 1, %519
  %521 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %511, i32 0, i32 1
  %522 = getelementptr %dimension_descriptor, %dimension_descriptor* %521, i32 0, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = sub i32 2, %523
  %525 = mul i32 %520, %524
  %526 = add i32 %517, %525
  %527 = getelementptr %dimension_descriptor, %dimension_descriptor* %521, i32 0, i32 3
  %528 = load i32, i32* %527, align 4
  %529 = mul i32 %520, %528
  %530 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %531 = getelementptr [4 x i1], [4 x i1]* %530, i32 0, i32 %526
  %532 = load i1, i1* %531, align 1
  %533 = xor i1 %532, true
  br i1 %533, label %then65, label %else66

then65:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %ifcont63
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %iftmp68 = phi i32 [ 1, %then65 ], [ 2, %else66 ]
  %534 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %535 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %534, i32 0, i32 0
  %536 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 1
  %537 = load i32, i32* %536, align 4
  %538 = sub i32 2, %537
  %539 = mul i32 1, %538
  %540 = add i32 0, %539
  %541 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 3
  %542 = load i32, i32* %541, align 4
  %543 = mul i32 1, %542
  %544 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %534, i32 0, i32 1
  %545 = getelementptr %dimension_descriptor, %dimension_descriptor* %544, i32 0, i32 1
  %546 = load i32, i32* %545, align 4
  %547 = sub i32 1, %546
  %548 = mul i32 %543, %547
  %549 = add i32 %540, %548
  %550 = getelementptr %dimension_descriptor, %dimension_descriptor* %544, i32 0, i32 3
  %551 = load i32, i32* %550, align 4
  %552 = mul i32 %543, %551
  %553 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %554 = getelementptr [4 x i1], [4 x i1]* %553, i32 0, i32 %549
  %555 = load i1, i1* %554, align 1
  %556 = xor i1 %555, true
  br i1 %556, label %then69, label %else70

then69:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %ifcont67
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %iftmp72 = phi i32 [ 1, %then69 ], [ 2, %else70 ]
  %557 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %558 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %557, i32 0, i32 0
  %559 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = sub i32 2, %560
  %562 = mul i32 1, %561
  %563 = add i32 0, %562
  %564 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 3
  %565 = load i32, i32* %564, align 4
  %566 = mul i32 1, %565
  %567 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %557, i32 0, i32 1
  %568 = getelementptr %dimension_descriptor, %dimension_descriptor* %567, i32 0, i32 1
  %569 = load i32, i32* %568, align 4
  %570 = sub i32 2, %569
  %571 = mul i32 %566, %570
  %572 = add i32 %563, %571
  %573 = getelementptr %dimension_descriptor, %dimension_descriptor* %567, i32 0, i32 3
  %574 = load i32, i32* %573, align 4
  %575 = mul i32 %566, %574
  %576 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %577 = getelementptr [4 x i1], [4 x i1]* %576, i32 0, i32 %572
  %578 = load i1, i1* %577, align 1
  br i1 %578, label %then73, label %else74

then73:                                           ; preds = %ifcont71
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont75

else74:                                           ; preds = %ifcont71
  br label %ifcont75

ifcont75:                                         ; preds = %else74, %then73
  %iftmp76 = phi i32 [ 1, %then73 ], [ 2, %else74 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
