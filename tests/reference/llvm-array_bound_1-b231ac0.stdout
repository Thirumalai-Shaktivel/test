; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [0 x i32], i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%array.0 = type { [196 x i32], i32, [3 x %dimension_descriptor] }
%array.1 = type { [96 x i32], i32, [4 x %dimension_descriptor] }
%array.2 = type { [35 x i32], i32, [2 x %dimension_descriptor] }
%array.3 = type { [4 x i32], i32, [1 x %dimension_descriptor] }

@0 = private unnamed_addr constant [10 x i8] c"%d %d %d\0A\00", align 1
@1 = private unnamed_addr constant [10 x i8] c"%d %d %d\0A\00", align 1
@2 = private unnamed_addr constant [13 x i8] c"%d %d %d %d\0A\00", align 1
@3 = private unnamed_addr constant [13 x i8] c"%d %d %d %d\0A\00", align 1
@4 = private unnamed_addr constant [7 x i8] c"%d %d\0A\00", align 1
@5 = private unnamed_addr constant [7 x i8] c"%d %d\0A\00", align 1
@6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@7 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @__module_lfortran_intrinsic_array_abs(%array*)

declare i1 @__module_lfortran_intrinsic_array_allocated(%array)

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %r = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %r, align 4
  %6 = load i32, i32* %r, align 4
  ret i32 %6
}

declare i32 @__module_lfortran_intrinsic_array_max(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_min(i32*, i32*)

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %r = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %r, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %r, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %r, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %r, align 4
  ret i32 %14
}

declare i32 @__module_lfortran_intrinsic_array_sum(%array)

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %r = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %r, align 4
  %6 = load i32, i32* %r, align 4
  ret i32 %6
}

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 2, i32* %4, align 4
  store i32 5, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  store i32 1, i32* %12, align 4
  store i32 3, i32* %13, align 4
  store i32 9, i32* %14, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %13, align 4
  %18 = sub i32 %16, %17
  %19 = add i32 %18, 1
  store i32 %19, i32* %15, align 4
  %20 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 7, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  store i32 %28, i32* %24, align 4
  %b = alloca %array.1, align 8
  %29 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %31 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %30, i32 0, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 2
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 3
  store i32 1, i32* %32, align 4
  store i32 1, i32* %33, align 4
  store i32 2, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = load i32, i32* %33, align 4
  %38 = sub i32 %36, %37
  %39 = add i32 %38, 1
  store i32 %39, i32* %35, align 4
  %40 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %30, i32 0, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 2, i32* %42, align 4
  store i32 4, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  store i32 %48, i32* %44, align 4
  %49 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %30, i32 0, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  store i32 1, i32* %50, align 4
  store i32 3, i32* %51, align 4
  store i32 6, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %51, align 4
  %56 = sub i32 %54, %55
  %57 = add i32 %56, 1
  store i32 %57, i32* %53, align 4
  %58 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %30, i32 0, i32 3
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  store i32 1, i32* %59, align 4
  store i32 4, i32* %60, align 4
  store i32 7, i32* %61, align 4
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %60, align 4
  %65 = sub i32 %63, %64
  %66 = add i32 %65, 1
  store i32 %66, i32* %62, align 4
  %c = alloca %array.2, align 8
  %67 = getelementptr %array.2, %array.2* %c, i32 0, i32 1
  store i32 0, i32* %67, align 4
  %68 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %69 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  store i32 1, i32* %70, align 4
  store i32 6, i32* %71, align 4
  store i32 10, i32* %72, align 4
  %74 = load i32, i32* %72, align 4
  %75 = load i32, i32* %71, align 4
  %76 = sub i32 %74, %75
  %77 = add i32 %76, 1
  store i32 %77, i32* %73, align 4
  %78 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %68, i32 0, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 7, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  store i32 %86, i32* %82, align 4
  %d = alloca %array.3, align 8
  %87 = getelementptr %array.3, %array.3* %d, i32 0, i32 1
  store i32 0, i32* %87, align 4
  %88 = getelementptr %array.3, %array.3* %d, i32 0, i32 2
  %89 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  store i32 1, i32* %90, align 4
  store i32 1, i32* %91, align 4
  store i32 4, i32* %92, align 4
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %91, align 4
  %96 = sub i32 %94, %95
  %97 = add i32 %96, 1
  store i32 %97, i32* %93, align 4
  %98 = alloca %dimension_descriptor*, align 8
  %99 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %100 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %99, i32 0, i32 0
  store %dimension_descriptor* %100, %dimension_descriptor** %98, align 8
  %101 = alloca i32, align 4
  store i32 1, i32* %101, align 4
  %102 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %98, i32* %101)
  %103 = alloca %dimension_descriptor*, align 8
  %104 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %105 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %104, i32 0, i32 0
  store %dimension_descriptor* %105, %dimension_descriptor** %103, align 8
  %106 = alloca i32, align 4
  store i32 2, i32* %106, align 4
  %107 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %103, i32* %106)
  %108 = alloca %dimension_descriptor*, align 8
  %109 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %110 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %109, i32 0, i32 0
  store %dimension_descriptor* %110, %dimension_descriptor** %108, align 8
  %111 = alloca i32, align 4
  store i32 3, i32* %111, align 4
  %112 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %108, i32* %111)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @0, i32 0, i32 0), i32 %102, i32 %107, i32 %112)
  %113 = alloca %dimension_descriptor*, align 8
  %114 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %115 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %114, i32 0, i32 0
  store %dimension_descriptor* %115, %dimension_descriptor** %113, align 8
  %116 = alloca i32, align 4
  store i32 1, i32* %116, align 4
  %117 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %113, i32* %116)
  %118 = alloca %dimension_descriptor*, align 8
  %119 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %120 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %119, i32 0, i32 0
  store %dimension_descriptor* %120, %dimension_descriptor** %118, align 8
  %121 = alloca i32, align 4
  store i32 2, i32* %121, align 4
  %122 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %118, i32* %121)
  %123 = alloca %dimension_descriptor*, align 8
  %124 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %125 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %124, i32 0, i32 0
  store %dimension_descriptor* %125, %dimension_descriptor** %123, align 8
  %126 = alloca i32, align 4
  store i32 3, i32* %126, align 4
  %127 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %123, i32* %126)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1, i32 0, i32 0), i32 %117, i32 %122, i32 %127)
  %128 = alloca %dimension_descriptor*, align 8
  %129 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %130 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %129, i32 0, i32 0
  store %dimension_descriptor* %130, %dimension_descriptor** %128, align 8
  %131 = alloca i32, align 4
  store i32 1, i32* %131, align 4
  %132 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %128, i32* %131)
  %133 = alloca %dimension_descriptor*, align 8
  %134 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %135 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %134, i32 0, i32 0
  store %dimension_descriptor* %135, %dimension_descriptor** %133, align 8
  %136 = alloca i32, align 4
  store i32 2, i32* %136, align 4
  %137 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %133, i32* %136)
  %138 = alloca %dimension_descriptor*, align 8
  %139 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %140 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %139, i32 0, i32 0
  store %dimension_descriptor* %140, %dimension_descriptor** %138, align 8
  %141 = alloca i32, align 4
  store i32 3, i32* %141, align 4
  %142 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %138, i32* %141)
  %143 = alloca %dimension_descriptor*, align 8
  %144 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %145 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %144, i32 0, i32 0
  store %dimension_descriptor* %145, %dimension_descriptor** %143, align 8
  %146 = alloca i32, align 4
  store i32 4, i32* %146, align 4
  %147 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %143, i32* %146)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i32 %132, i32 %137, i32 %142, i32 %147)
  %148 = alloca %dimension_descriptor*, align 8
  %149 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %150 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %149, i32 0, i32 0
  store %dimension_descriptor* %150, %dimension_descriptor** %148, align 8
  %151 = alloca i32, align 4
  store i32 1, i32* %151, align 4
  %152 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %148, i32* %151)
  %153 = alloca %dimension_descriptor*, align 8
  %154 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %155 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %154, i32 0, i32 0
  store %dimension_descriptor* %155, %dimension_descriptor** %153, align 8
  %156 = alloca i32, align 4
  store i32 2, i32* %156, align 4
  %157 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %153, i32* %156)
  %158 = alloca %dimension_descriptor*, align 8
  %159 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %160 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %159, i32 0, i32 0
  store %dimension_descriptor* %160, %dimension_descriptor** %158, align 8
  %161 = alloca i32, align 4
  store i32 3, i32* %161, align 4
  %162 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %158, i32* %161)
  %163 = alloca %dimension_descriptor*, align 8
  %164 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %165 = getelementptr [4 x %dimension_descriptor], [4 x %dimension_descriptor]* %164, i32 0, i32 0
  store %dimension_descriptor* %165, %dimension_descriptor** %163, align 8
  %166 = alloca i32, align 4
  store i32 4, i32* %166, align 4
  %167 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %163, i32* %166)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @3, i32 0, i32 0), i32 %152, i32 %157, i32 %162, i32 %167)
  %168 = alloca %dimension_descriptor*, align 8
  %169 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %170 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %169, i32 0, i32 0
  store %dimension_descriptor* %170, %dimension_descriptor** %168, align 8
  %171 = alloca i32, align 4
  store i32 1, i32* %171, align 4
  %172 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %168, i32* %171)
  %173 = alloca %dimension_descriptor*, align 8
  %174 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %175 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %174, i32 0, i32 0
  store %dimension_descriptor* %175, %dimension_descriptor** %173, align 8
  %176 = alloca i32, align 4
  store i32 2, i32* %176, align 4
  %177 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %173, i32* %176)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i32 0, i32 0), i32 %172, i32 %177)
  %178 = alloca %dimension_descriptor*, align 8
  %179 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %180 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %179, i32 0, i32 0
  store %dimension_descriptor* %180, %dimension_descriptor** %178, align 8
  %181 = alloca i32, align 4
  store i32 1, i32* %181, align 4
  %182 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %178, i32* %181)
  %183 = alloca %dimension_descriptor*, align 8
  %184 = getelementptr %array.2, %array.2* %c, i32 0, i32 2
  %185 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %184, i32 0, i32 0
  store %dimension_descriptor* %185, %dimension_descriptor** %183, align 8
  %186 = alloca i32, align 4
  store i32 2, i32* %186, align 4
  %187 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %183, i32* %186)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i32 0, i32 0), i32 %182, i32 %187)
  %188 = alloca %dimension_descriptor*, align 8
  %189 = getelementptr %array.3, %array.3* %d, i32 0, i32 2
  %190 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %189, i32 0, i32 0
  store %dimension_descriptor* %190, %dimension_descriptor** %188, align 8
  %191 = alloca i32, align 4
  store i32 1, i32* %191, align 4
  %192 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %188, i32* %191)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i32 0, i32 0), i32 %192)
  %193 = alloca %dimension_descriptor*, align 8
  %194 = getelementptr %array.3, %array.3* %d, i32 0, i32 2
  %195 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %194, i32 0, i32 0
  store %dimension_descriptor* %195, %dimension_descriptor** %193, align 8
  %196 = alloca i32, align 4
  store i32 1, i32* %196, align 4
  %197 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %193, i32* %196)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @7, i32 0, i32 0), i32 %197)
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

