
#include <stdlib.h>
#include <stdbool.h>
#include <stdio.h>
#include <lfortran_intrinsics.h>

#define ASSERT(cond)                                                           \
    {                                                                          \
        if (!(cond)) {                                                         \
            printf("%s%s", "ASSERT failed: ", __FILE__);                       \
            printf("%s%s", "\nfunction ", __func__);                           \
            printf("%s%d%s", "(), line number ", __LINE__, " at \n");          \
            printf("%s%s", #cond, "\n");                                       \
            exit(1);                                                           \
        }                                                                      \
    }
#define ASSERT_MSG(cond, msg)                                                  \
    {                                                                          \
        if (!(cond)) {                                                         \
            printf("%s%s", "ASSERT failed: ", __FILE__);                       \
            printf("%s%s", "\nfunction ", __func__);                           \
            printf("%s%d%s", "(), line number ", __LINE__, " at \n");          \
            printf("%s%s", #cond, "\n");                                       \
            printf("%s", "ERROR MESSAGE:\n");                                  \
            printf("%s%s", msg, "\n");                                         \
            exit(1);                                                           \
        }                                                                      \
    }

// Forward declarations
float func1(float a, float b);
float func2(float a, float b);

// Implementations
float func1(float a, float b)
{
    float c;
    static float saved=  2.00000000000000000e+00;
    saved = saved +   1.00000000000000000e+00;
    c = c + a + b + saved;
    return c;
}

float func2(float a, float b)
{
    float c;
    static float d;
    static float saved=  2.00000000000000000e+00;
    saved = saved +   1.00000000000000000e+00;
    c = d + c + a + b + saved;
    d = d +   1.00000000000000000e+00;
    return c;
}

int main(int argc, char* argv[])
{
    float x;
    float y;
    float z;
    x =   1.00000000000000000e+00;
    y =   2.00000000000000000e+00;
    z = func1(x, y);
    printf("%s %f\n", "6.0 == ", z);
    z = func1(x, y);
    printf("%s %f\n", "7.0 == ", z);
    z = func2(x, y);
    printf("%s %f\n", "6.0 == ", z);
    z = func2(x, y);
    printf("%s %f\n", "8.0 == ", z);
    return 0;
}
