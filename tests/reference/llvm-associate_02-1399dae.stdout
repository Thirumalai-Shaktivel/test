; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

define i32 @main() {
.entry:
  %p1 = alloca i32*, align 8
  %p2 = alloca double*, align 8
  %t1 = alloca i32, align 4
  store i32 2, i32* %t1, align 4
  %t2 = alloca double, align 8
  store double 2.000000e+00, double* %t2, align 8
  store i32* %t1, i32** %p1, align 8
  store double* %t2, double** %p2, align 8
  %0 = load i32*, i32** %p1, align 8
  store i32 1, i32* %0, align 4
  %1 = load double*, double** %p2, align 8
  store double 4.000000e+00, double* %1, align 8
  %2 = load i32*, i32** %p1, align 8
  %3 = load i32, i32* %2, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %3)
  %4 = load i32, i32* %t1, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), i32 %4)
  %5 = load double*, double** %p2, align 8
  %6 = load double, double* %5, align 8
  %7 = load i32*, i32** %p1, align 8
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %8 to double
  %10 = fadd double %6, %9
  %11 = fptosi double %10 to i32
  store i32 %11, i32* %t1, align 4
  %12 = load i32*, i32** %p1, align 8
  %13 = load i32, i32* %12, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i32 %13)
  %14 = load i32, i32* %t1, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @3, i32 0, i32 0), i32 %14)
  store i32 8, i32* %t1, align 4
  %15 = load i32*, i32** %p1, align 8
  %16 = load i32, i32* %15, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i32 0, i32 0), i32 %16)
  %17 = load i32, i32* %t1, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i32 %17)
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

