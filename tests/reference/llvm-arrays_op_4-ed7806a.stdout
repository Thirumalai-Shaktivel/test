; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { float*, i32, [1 x %dimension_descriptor] }
%size_arg = type { %dimension_descriptor*, i32 }
%array.1 = type { i1*, i32, [3 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

declare i32 @__module_lfortran_intrinsic_array_abs(%array*)

declare i1 @__module_lfortran_intrinsic_array_allocated(%array*)

define i32 @__module_lfortran_intrinsic_array_iint(i32* %x) {
.entry:
  %iint = alloca i32, align 4
  %0 = load i32, i32* %iint, align 4
  ret i32 %0
}

define i32 @__module_lfortran_intrinsic_array_iinta(%array* %x) {
.entry:
  %iinta = alloca i32, align 4
  %0 = load i32, i32* %iinta, align 4
  ret i32 %0
}

define i32 @__module_lfortran_intrinsic_array_iintk(%array* %x, i32* %kind) {
.entry:
  %iintk = alloca i32, align 4
  %0 = load i32, i32* %iintk, align 4
  ret i32 %0
}

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare i32 @__module_lfortran_intrinsic_array_max(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_maxval(%array*)

declare i32 @__module_lfortran_intrinsic_array_min(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_minval(%array*)

declare float @__module_lfortran_intrinsic_array_real(%array*, i32*)

define i32 @__module_lfortran_intrinsic_array_rint(float* %x) {
.entry:
  %rint = alloca i32, align 4
  %0 = load i32, i32* %rint, align 4
  ret i32 %0
}

define i32 @__module_lfortran_intrinsic_array_rinta(%array.0* %x) {
.entry:
  %rinta = alloca i32, align 4
  %0 = load i32, i32* %rinta, align 4
  ret i32 %0
}

define i32 @__module_lfortran_intrinsic_array_rintk(%array.0* %x, i32* %kind) {
.entry:
  %rintk = alloca i32, align 4
  %0 = load i32, i32* %rintk, align 4
  ret i32 %0
}

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

declare i32 @__module_lfortran_intrinsic_array_sum(%array*)

declare float @__module_lfortran_intrinsic_array_tiny(%array*)

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i1 @modulo2(i32* %x) {
.entry:
  %r = alloca i1, align 1
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %x, align 4
  %2 = udiv i32 %1, 2
  %3 = mul i32 2, %2
  %4 = sub i32 %0, %3
  %5 = icmp eq i32 %4, 1
  store i1 %5, i1* %r, align 1
  %6 = load i1, i1* %r, align 1
  ret i1 %6
}

define void @verify(%array.1* %c, i32* %op_code) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i1, align 1
  %y = alloca i1, align 1
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end33, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end34

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end33

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont31, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %j, align 4
  %50 = add i32 %48, %49
  %51 = load i32, i32* %k, align 4
  %52 = add i32 %50, %51
  %53 = alloca i32, align 4
  store i32 %52, i32* %53, align 4
  %54 = call i1 @modulo2(i32* %53)
  store i1 %54, i1* %x, align 1
  %55 = load i32, i32* %i, align 4
  %56 = load i32, i32* %j, align 4
  %57 = mul i32 %55, %56
  %58 = load i32, i32* %j, align 4
  %59 = load i32, i32* %k, align 4
  %60 = mul i32 %58, %59
  %61 = add i32 %57, %60
  %62 = load i32, i32* %k, align 4
  %63 = load i32, i32* %j, align 4
  %64 = mul i32 %62, %63
  %65 = add i32 %61, %64
  %66 = alloca i32, align 4
  store i32 %65, i32* %66, align 4
  %67 = call i1 @modulo2(i32* %66)
  store i1 %67, i1* %y, align 1
  %68 = load i32, i32* %op_code, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %then, label %else6

then:                                             ; preds = %loop.body4
  %70 = load i32, i32* %i, align 4
  %71 = load i32, i32* %j, align 4
  %72 = load i32, i32* %k, align 4
  %73 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %74 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %70, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %73, i32 0, i32 1
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sub i32 %71, %85
  %87 = mul i32 %82, %86
  %88 = add i32 %79, %87
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 %82, %90
  %92 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %73, i32 0, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 %72, %94
  %96 = mul i32 %91, %95
  %97 = add i32 %88, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 %91, %99
  %101 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %102 = load i1*, i1** %101, align 8
  %103 = getelementptr inbounds i1, i1* %102, i32 %97
  %104 = load i1, i1* %103, align 1
  %105 = load i1, i1* %x, align 1
  %106 = load i1, i1* %y, align 1
  %107 = and i1 %105, %106
  %108 = xor i1 %104, %107
  br i1 %108, label %then5, label %else

then5:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then5
  %iftmp = phi i32 [ 1, %then5 ], [ 2, %else ]
  br label %ifcont31

else6:                                            ; preds = %loop.body4
  %109 = load i32, i32* %op_code, align 4
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %then7, label %else12

then7:                                            ; preds = %else6
  %111 = load i32, i32* %i, align 4
  %112 = load i32, i32* %j, align 4
  %113 = load i32, i32* %k, align 4
  %114 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %115 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %114, i32 0, i32 0
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sub i32 %111, %117
  %119 = mul i32 1, %118
  %120 = add i32 0, %119
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = mul i32 1, %122
  %124 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %114, i32 0, i32 1
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sub i32 %112, %126
  %128 = mul i32 %123, %127
  %129 = add i32 %120, %128
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 %123, %131
  %133 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %114, i32 0, i32 2
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %113, %135
  %137 = mul i32 %132, %136
  %138 = add i32 %129, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 %132, %140
  %142 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %143 = load i1*, i1** %142, align 8
  %144 = getelementptr inbounds i1, i1* %143, i32 %138
  %145 = load i1, i1* %144, align 1
  %146 = load i1, i1* %x, align 1
  %147 = load i1, i1* %y, align 1
  %148 = or i1 %146, %147
  %149 = xor i1 %145, %148
  br i1 %149, label %then8, label %else9

then8:                                            ; preds = %then7
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont10

else9:                                            ; preds = %then7
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %then8
  %iftmp11 = phi i32 [ 1, %then8 ], [ 2, %else9 ]
  br label %ifcont29

else12:                                           ; preds = %else6
  %150 = load i32, i32* %op_code, align 4
  %151 = icmp eq i32 %150, 2
  br i1 %151, label %then13, label %else18

then13:                                           ; preds = %else12
  %152 = load i32, i32* %i, align 4
  %153 = load i32, i32* %j, align 4
  %154 = load i32, i32* %k, align 4
  %155 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %156 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %155, i32 0, i32 0
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 %152, %158
  %160 = mul i32 1, %159
  %161 = add i32 0, %160
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = mul i32 1, %163
  %165 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %155, i32 0, i32 1
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = sub i32 %153, %167
  %169 = mul i32 %164, %168
  %170 = add i32 %161, %169
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = mul i32 %164, %172
  %174 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %155, i32 0, i32 2
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 %154, %176
  %178 = mul i32 %173, %177
  %179 = add i32 %170, %178
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = mul i32 %173, %181
  %183 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %184 = load i1*, i1** %183, align 8
  %185 = getelementptr inbounds i1, i1* %184, i32 %179
  %186 = load i1, i1* %185, align 1
  %187 = load i1, i1* %x, align 1
  %188 = load i1, i1* %y, align 1
  %189 = xor i1 %187, %188
  %190 = xor i1 %189, true
  %191 = xor i1 %186, %190
  br i1 %191, label %then14, label %else15

then14:                                           ; preds = %then13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %then13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  %iftmp17 = phi i32 [ 1, %then14 ], [ 2, %else15 ]
  br label %ifcont27

else18:                                           ; preds = %else12
  %192 = load i32, i32* %op_code, align 4
  %193 = icmp eq i32 %192, 3
  br i1 %193, label %then19, label %else24

then19:                                           ; preds = %else18
  %194 = load i32, i32* %i, align 4
  %195 = load i32, i32* %j, align 4
  %196 = load i32, i32* %k, align 4
  %197 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %198 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %197, i32 0, i32 0
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sub i32 %194, %200
  %202 = mul i32 1, %201
  %203 = add i32 0, %202
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = mul i32 1, %205
  %207 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %197, i32 0, i32 1
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = sub i32 %195, %209
  %211 = mul i32 %206, %210
  %212 = add i32 %203, %211
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 3
  %214 = load i32, i32* %213, align 4
  %215 = mul i32 %206, %214
  %216 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %197, i32 0, i32 2
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = sub i32 %196, %218
  %220 = mul i32 %215, %219
  %221 = add i32 %212, %220
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 3
  %223 = load i32, i32* %222, align 4
  %224 = mul i32 %215, %223
  %225 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %226 = load i1*, i1** %225, align 8
  %227 = getelementptr inbounds i1, i1* %226, i32 %221
  %228 = load i1, i1* %227, align 1
  %229 = load i1, i1* %x, align 1
  %230 = load i1, i1* %y, align 1
  %231 = xor i1 %229, %230
  %232 = xor i1 %228, %231
  br i1 %232, label %then20, label %else21

then20:                                           ; preds = %then19
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %then19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  br label %ifcont25

else24:                                           ; preds = %else18
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %ifcont22
  %iftmp26 = phi i32 [ 1, %ifcont22 ], [ 2, %else24 ]
  br label %ifcont27

ifcont27:                                         ; preds = %ifcont25, %ifcont16
  %iftmp28 = phi i32 [ 1, %ifcont16 ], [ 2, %ifcont25 ]
  br label %ifcont29

ifcont29:                                         ; preds = %ifcont27, %ifcont10
  %iftmp30 = phi i32 [ 1, %ifcont10 ], [ 2, %ifcont27 ]
  br label %ifcont31

ifcont31:                                         ; preds = %ifcont29, %ifcont
  %iftmp32 = phi i32 [ 1, %ifcont ], [ 2, %ifcont29 ]
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end33:                                       ; preds = %loop.head1
  br label %loop.head

loop.end34:                                       ; preds = %loop.head
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.1, align 8
  %b = alloca %array.1, align 8
  %c = alloca %array.1, align 8
  %dim1 = alloca i32, align 4
  store i32 10, i32* %dim1, align 4
  %dim2 = alloca i32, align 4
  store i32 100, i32* %dim2, align 4
  %dim3 = alloca i32, align 4
  store i32 1, i32* %dim3, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = load i32, i32* %dim1, align 4
  %1 = load i32, i32* %dim2, align 4
  %2 = load i32, i32* %dim3, align 4
  %3 = getelementptr %array.1, %array.1* %a, i32 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr %array.1, %array.1* %a, i32 0, i32 3
  store i1 true, i1* %4, align 1
  %5 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %6 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 %0, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  %15 = mul i32 1, %14
  store i32 %14, i32* %10, align 4
  %16 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 1
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 3
  store i32 1, i32* %17, align 4
  store i32 1, i32* %18, align 4
  store i32 %1, i32* %19, align 4
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %18, align 4
  %23 = sub i32 %21, %22
  %24 = add i32 %23, 1
  %25 = mul i32 %15, %24
  store i32 %24, i32* %20, align 4
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 2
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 3
  store i32 1, i32* %27, align 4
  store i32 1, i32* %28, align 4
  store i32 %2, i32* %29, align 4
  %31 = load i32, i32* %29, align 4
  %32 = load i32, i32* %28, align 4
  %33 = sub i32 %31, %32
  %34 = add i32 %33, 1
  %35 = mul i32 %25, %34
  store i32 %34, i32* %30, align 4
  %36 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %37 = alloca i32, align 4
  %38 = mul i32 %35, 1
  store i32 %38, i32* %37, align 4
  %39 = load i32, i32* %37, align 4
  %40 = call i8* (i32, ...) @_lfortran_malloc(i32 %39)
  %41 = bitcast i8* %40 to i1*
  store i1* %41, i1** %36, align 8
  %42 = load i32, i32* %dim1, align 4
  %43 = load i32, i32* %dim2, align 4
  %44 = load i32, i32* %dim3, align 4
  %45 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %45, align 4
  %46 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %46, align 1
  %47 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %48 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %47, i32 0, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 3
  store i32 1, i32* %49, align 4
  store i32 1, i32* %50, align 4
  store i32 %42, i32* %51, align 4
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %50, align 4
  %55 = sub i32 %53, %54
  %56 = add i32 %55, 1
  %57 = mul i32 1, %56
  store i32 %56, i32* %52, align 4
  %58 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %47, i32 0, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  store i32 1, i32* %59, align 4
  store i32 1, i32* %60, align 4
  store i32 %43, i32* %61, align 4
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %60, align 4
  %65 = sub i32 %63, %64
  %66 = add i32 %65, 1
  %67 = mul i32 %57, %66
  store i32 %66, i32* %62, align 4
  %68 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %47, i32 0, i32 2
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 1, i32* %70, align 4
  store i32 %44, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  %77 = mul i32 %67, %76
  store i32 %76, i32* %72, align 4
  %78 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %79 = alloca i32, align 4
  %80 = mul i32 %77, 1
  store i32 %80, i32* %79, align 4
  %81 = load i32, i32* %79, align 4
  %82 = call i8* (i32, ...) @_lfortran_malloc(i32 %81)
  %83 = bitcast i8* %82 to i1*
  store i1* %83, i1** %78, align 8
  %84 = load i32, i32* %dim1, align 4
  %85 = load i32, i32* %dim2, align 4
  %86 = load i32, i32* %dim3, align 4
  %87 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %87, align 4
  %88 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 true, i1* %88, align 1
  %89 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %90 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 2
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 3
  store i32 1, i32* %91, align 4
  store i32 1, i32* %92, align 4
  store i32 %84, i32* %93, align 4
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %92, align 4
  %97 = sub i32 %95, %96
  %98 = add i32 %97, 1
  %99 = mul i32 1, %98
  store i32 %98, i32* %94, align 4
  %100 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 1
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 1
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 2
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 3
  store i32 1, i32* %101, align 4
  store i32 1, i32* %102, align 4
  store i32 %85, i32* %103, align 4
  %105 = load i32, i32* %103, align 4
  %106 = load i32, i32* %102, align 4
  %107 = sub i32 %105, %106
  %108 = add i32 %107, 1
  %109 = mul i32 %99, %108
  store i32 %108, i32* %104, align 4
  %110 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 2
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 2
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  store i32 1, i32* %111, align 4
  store i32 1, i32* %112, align 4
  store i32 %86, i32* %113, align 4
  %115 = load i32, i32* %113, align 4
  %116 = load i32, i32* %112, align 4
  %117 = sub i32 %115, %116
  %118 = add i32 %117, 1
  %119 = mul i32 %109, %118
  store i32 %118, i32* %114, align 4
  %120 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %121 = alloca i32, align 4
  %122 = mul i32 %119, 1
  store i32 %122, i32* %121, align 4
  %123 = load i32, i32* %121, align 4
  %124 = call i8* (i32, ...) @_lfortran_malloc(i32 %123)
  %125 = bitcast i8* %124 to i1*
  store i1* %125, i1** %120, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %126 = load i32, i32* %i, align 4
  %127 = add i32 %126, 1
  %128 = load i32, i32* %dim1, align 4
  %129 = icmp sle i32 %127, %128
  br i1 %129, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %130 = load i32, i32* %i, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %132 = load i32, i32* %j, align 4
  %133 = add i32 %132, 1
  %134 = load i32, i32* %dim2, align 4
  %135 = icmp sle i32 %133, %134
  br i1 %135, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %136 = load i32, i32* %j, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %138 = load i32, i32* %k, align 4
  %139 = add i32 %138, 1
  %140 = load i32, i32* %dim3, align 4
  %141 = icmp sle i32 %139, %140
  br i1 %141, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %142 = load i32, i32* %k, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %k, align 4
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %j, align 4
  %146 = load i32, i32* %k, align 4
  %147 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %148 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 %144, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %147, i32 0, i32 1
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %145, %159
  %161 = mul i32 %156, %160
  %162 = add i32 %153, %161
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 %156, %164
  %166 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %147, i32 0, i32 2
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %146, %168
  %170 = mul i32 %165, %169
  %171 = add i32 %162, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %165, %173
  %175 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %176 = load i1*, i1** %175, align 8
  %177 = getelementptr inbounds i1, i1* %176, i32 %171
  %178 = load i32, i32* %i, align 4
  %179 = load i32, i32* %j, align 4
  %180 = add i32 %178, %179
  %181 = load i32, i32* %k, align 4
  %182 = add i32 %180, %181
  %183 = alloca i32, align 4
  store i32 %182, i32* %183, align 4
  %184 = call i1 @modulo2(i32* %183)
  store i1 %184, i1* %177, align 1
  %185 = load i32, i32* %i, align 4
  %186 = load i32, i32* %j, align 4
  %187 = load i32, i32* %k, align 4
  %188 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %189 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %188, i32 0, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 %185, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %188, i32 0, i32 1
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sub i32 %186, %200
  %202 = mul i32 %197, %201
  %203 = add i32 %194, %202
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = mul i32 %197, %205
  %207 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %188, i32 0, i32 2
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = sub i32 %187, %209
  %211 = mul i32 %206, %210
  %212 = add i32 %203, %211
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 3
  %214 = load i32, i32* %213, align 4
  %215 = mul i32 %206, %214
  %216 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %217 = load i1*, i1** %216, align 8
  %218 = getelementptr inbounds i1, i1* %217, i32 %212
  %219 = load i32, i32* %i, align 4
  %220 = load i32, i32* %j, align 4
  %221 = mul i32 %219, %220
  %222 = load i32, i32* %j, align 4
  %223 = load i32, i32* %k, align 4
  %224 = mul i32 %222, %223
  %225 = add i32 %221, %224
  %226 = load i32, i32* %k, align 4
  %227 = load i32, i32* %j, align 4
  %228 = mul i32 %226, %227
  %229 = add i32 %225, %228
  %230 = alloca i32, align 4
  store i32 %229, i32* %230, align 4
  %231 = call i1 @modulo2(i32* %230)
  store i1 %231, i1* %218, align 1
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %232 = alloca %dimension_descriptor*, align 8
  %233 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %234 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %233, i32 0, i32 0
  store %dimension_descriptor* %234, %dimension_descriptor** %232, align 8
  %235 = alloca i32, align 4
  store i32 1, i32* %235, align 4
  %236 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %232, i32* %235)
  %237 = sub i32 %236, 1
  store i32 %237, i32* %"1_t", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %238 = load i32, i32* %"1_t", align 4
  %239 = add i32 %238, 1
  %240 = alloca %dimension_descriptor*, align 8
  %241 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %242 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %241, i32 0, i32 0
  store %dimension_descriptor* %242, %dimension_descriptor** %240, align 8
  %243 = alloca i32, align 4
  store i32 1, i32* %243, align 4
  %244 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %240, i32* %243)
  %245 = icmp sle i32 %239, %244
  br i1 %245, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %246 = load i32, i32* %"1_t", align 4
  %247 = add i32 %246, 1
  store i32 %247, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %248 = alloca %dimension_descriptor*, align 8
  %249 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %250 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %249, i32 0, i32 0
  store %dimension_descriptor* %250, %dimension_descriptor** %248, align 8
  %251 = alloca i32, align 4
  store i32 2, i32* %251, align 4
  %252 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %248, i32* %251)
  %253 = sub i32 %252, 1
  store i32 %253, i32* %"2_t", align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %254 = load i32, i32* %"2_t", align 4
  %255 = add i32 %254, 1
  %256 = alloca %dimension_descriptor*, align 8
  %257 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %258 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %257, i32 0, i32 0
  store %dimension_descriptor* %258, %dimension_descriptor** %256, align 8
  %259 = alloca i32, align 4
  store i32 2, i32* %259, align 4
  %260 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %256, i32* %259)
  %261 = icmp sle i32 %255, %260
  br i1 %261, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %262 = load i32, i32* %"2_t", align 4
  %263 = add i32 %262, 1
  store i32 %263, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %264 = alloca %dimension_descriptor*, align 8
  %265 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %266 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %265, i32 0, i32 0
  store %dimension_descriptor* %266, %dimension_descriptor** %264, align 8
  %267 = alloca i32, align 4
  store i32 3, i32* %267, align 4
  %268 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %264, i32* %267)
  %269 = sub i32 %268, 1
  store i32 %269, i32* %"3_t", align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %270 = load i32, i32* %"3_t", align 4
  %271 = add i32 %270, 1
  %272 = alloca %dimension_descriptor*, align 8
  %273 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %274 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %273, i32 0, i32 0
  store %dimension_descriptor* %274, %dimension_descriptor** %272, align 8
  %275 = alloca i32, align 4
  store i32 3, i32* %275, align 4
  %276 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %272, i32* %275)
  %277 = icmp sle i32 %271, %276
  br i1 %277, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %278 = load i32, i32* %"3_t", align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %"3_t", align 4
  %280 = load i32, i32* %"1_t", align 4
  %281 = load i32, i32* %"2_t", align 4
  %282 = load i32, i32* %"3_t", align 4
  %283 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %284 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %283, i32 0, i32 0
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = sub i32 %280, %286
  %288 = mul i32 1, %287
  %289 = add i32 0, %288
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 3
  %291 = load i32, i32* %290, align 4
  %292 = mul i32 1, %291
  %293 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %283, i32 0, i32 1
  %294 = getelementptr %dimension_descriptor, %dimension_descriptor* %293, i32 0, i32 1
  %295 = load i32, i32* %294, align 4
  %296 = sub i32 %281, %295
  %297 = mul i32 %292, %296
  %298 = add i32 %289, %297
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %293, i32 0, i32 3
  %300 = load i32, i32* %299, align 4
  %301 = mul i32 %292, %300
  %302 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %283, i32 0, i32 2
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = sub i32 %282, %304
  %306 = mul i32 %301, %305
  %307 = add i32 %298, %306
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 3
  %309 = load i32, i32* %308, align 4
  %310 = mul i32 %301, %309
  %311 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %312 = load i1*, i1** %311, align 8
  %313 = getelementptr inbounds i1, i1* %312, i32 %307
  %314 = load i32, i32* %"1_v", align 4
  %315 = load i32, i32* %"2_v", align 4
  %316 = load i32, i32* %"3_v", align 4
  %317 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %318 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %317, i32 0, i32 0
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = sub i32 %314, %320
  %322 = mul i32 1, %321
  %323 = add i32 0, %322
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 3
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 1, %325
  %327 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %317, i32 0, i32 1
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 %315, %329
  %331 = mul i32 %326, %330
  %332 = add i32 %323, %331
  %333 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 3
  %334 = load i32, i32* %333, align 4
  %335 = mul i32 %326, %334
  %336 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %317, i32 0, i32 2
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 %316, %338
  %340 = mul i32 %335, %339
  %341 = add i32 %332, %340
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = mul i32 %335, %343
  %345 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %346 = load i1*, i1** %345, align 8
  %347 = getelementptr inbounds i1, i1* %346, i32 %341
  %348 = load i1, i1* %347, align 1
  %349 = load i32, i32* %"1_v", align 4
  %350 = load i32, i32* %"2_v", align 4
  %351 = load i32, i32* %"3_v", align 4
  %352 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %353 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %352, i32 0, i32 0
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %353, i32 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = sub i32 %349, %355
  %357 = mul i32 1, %356
  %358 = add i32 0, %357
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %353, i32 0, i32 3
  %360 = load i32, i32* %359, align 4
  %361 = mul i32 1, %360
  %362 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %352, i32 0, i32 1
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sub i32 %350, %364
  %366 = mul i32 %361, %365
  %367 = add i32 %358, %366
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 3
  %369 = load i32, i32* %368, align 4
  %370 = mul i32 %361, %369
  %371 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %352, i32 0, i32 2
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 1
  %373 = load i32, i32* %372, align 4
  %374 = sub i32 %351, %373
  %375 = mul i32 %370, %374
  %376 = add i32 %367, %375
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 3
  %378 = load i32, i32* %377, align 4
  %379 = mul i32 %370, %378
  %380 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %381 = load i1*, i1** %380, align 8
  %382 = getelementptr inbounds i1, i1* %381, i32 %376
  %383 = load i1, i1* %382, align 1
  %384 = and i1 %348, %383
  store i1 %384, i1* %313, align 1
  %385 = load i32, i32* %"3_v", align 4
  %386 = add i32 %385, 1
  store i32 %386, i32* %"3_v", align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  %387 = load i32, i32* %"2_v", align 4
  %388 = add i32 %387, 1
  store i32 %388, i32* %"2_v", align 4
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  %389 = load i32, i32* %"1_v", align 4
  %390 = add i32 %389, 1
  store i32 %390, i32* %"1_v", align 4
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  %391 = alloca %array.1, align 8
  %392 = alloca i32, align 4
  store i32 0, i32* %392, align 4
  call void @verify(%array.1* %c, i32* %392)
  store i32 1, i32* %"1_v", align 4
  %393 = alloca %dimension_descriptor*, align 8
  %394 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %395 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %394, i32 0, i32 0
  store %dimension_descriptor* %395, %dimension_descriptor** %393, align 8
  %396 = alloca i32, align 4
  store i32 1, i32* %396, align 4
  %397 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %393, i32* %396)
  %398 = sub i32 %397, 1
  store i32 %398, i32* %"1_t", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.end23, %loop.end15
  %399 = load i32, i32* %"1_t", align 4
  %400 = add i32 %399, 1
  %401 = alloca %dimension_descriptor*, align 8
  %402 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %403 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %402, i32 0, i32 0
  store %dimension_descriptor* %403, %dimension_descriptor** %401, align 8
  %404 = alloca i32, align 4
  store i32 1, i32* %404, align 4
  %405 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %401, i32* %404)
  %406 = icmp sle i32 %400, %405
  br i1 %406, label %loop.body17, label %loop.end24

loop.body17:                                      ; preds = %loop.head16
  %407 = load i32, i32* %"1_t", align 4
  %408 = add i32 %407, 1
  store i32 %408, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %409 = alloca %dimension_descriptor*, align 8
  %410 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %411 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %410, i32 0, i32 0
  store %dimension_descriptor* %411, %dimension_descriptor** %409, align 8
  %412 = alloca i32, align 4
  store i32 2, i32* %412, align 4
  %413 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %409, i32* %412)
  %414 = sub i32 %413, 1
  store i32 %414, i32* %"2_t", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end22, %loop.body17
  %415 = load i32, i32* %"2_t", align 4
  %416 = add i32 %415, 1
  %417 = alloca %dimension_descriptor*, align 8
  %418 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %419 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %418, i32 0, i32 0
  store %dimension_descriptor* %419, %dimension_descriptor** %417, align 8
  %420 = alloca i32, align 4
  store i32 2, i32* %420, align 4
  %421 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %417, i32* %420)
  %422 = icmp sle i32 %416, %421
  br i1 %422, label %loop.body19, label %loop.end23

loop.body19:                                      ; preds = %loop.head18
  %423 = load i32, i32* %"2_t", align 4
  %424 = add i32 %423, 1
  store i32 %424, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %425 = alloca %dimension_descriptor*, align 8
  %426 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %427 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %426, i32 0, i32 0
  store %dimension_descriptor* %427, %dimension_descriptor** %425, align 8
  %428 = alloca i32, align 4
  store i32 3, i32* %428, align 4
  %429 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %425, i32* %428)
  %430 = sub i32 %429, 1
  store i32 %430, i32* %"3_t", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.body21, %loop.body19
  %431 = load i32, i32* %"3_t", align 4
  %432 = add i32 %431, 1
  %433 = alloca %dimension_descriptor*, align 8
  %434 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %435 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %434, i32 0, i32 0
  store %dimension_descriptor* %435, %dimension_descriptor** %433, align 8
  %436 = alloca i32, align 4
  store i32 3, i32* %436, align 4
  %437 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %433, i32* %436)
  %438 = icmp sle i32 %432, %437
  br i1 %438, label %loop.body21, label %loop.end22

loop.body21:                                      ; preds = %loop.head20
  %439 = load i32, i32* %"3_t", align 4
  %440 = add i32 %439, 1
  store i32 %440, i32* %"3_t", align 4
  %441 = load i32, i32* %"1_t", align 4
  %442 = load i32, i32* %"2_t", align 4
  %443 = load i32, i32* %"3_t", align 4
  %444 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %445 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %444, i32 0, i32 0
  %446 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = sub i32 %441, %447
  %449 = mul i32 1, %448
  %450 = add i32 0, %449
  %451 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 3
  %452 = load i32, i32* %451, align 4
  %453 = mul i32 1, %452
  %454 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %444, i32 0, i32 1
  %455 = getelementptr %dimension_descriptor, %dimension_descriptor* %454, i32 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = sub i32 %442, %456
  %458 = mul i32 %453, %457
  %459 = add i32 %450, %458
  %460 = getelementptr %dimension_descriptor, %dimension_descriptor* %454, i32 0, i32 3
  %461 = load i32, i32* %460, align 4
  %462 = mul i32 %453, %461
  %463 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %444, i32 0, i32 2
  %464 = getelementptr %dimension_descriptor, %dimension_descriptor* %463, i32 0, i32 1
  %465 = load i32, i32* %464, align 4
  %466 = sub i32 %443, %465
  %467 = mul i32 %462, %466
  %468 = add i32 %459, %467
  %469 = getelementptr %dimension_descriptor, %dimension_descriptor* %463, i32 0, i32 3
  %470 = load i32, i32* %469, align 4
  %471 = mul i32 %462, %470
  %472 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %473 = load i1*, i1** %472, align 8
  %474 = getelementptr inbounds i1, i1* %473, i32 %468
  %475 = load i32, i32* %"1_v", align 4
  %476 = load i32, i32* %"2_v", align 4
  %477 = load i32, i32* %"3_v", align 4
  %478 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %479 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %478, i32 0, i32 0
  %480 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 1
  %481 = load i32, i32* %480, align 4
  %482 = sub i32 %475, %481
  %483 = mul i32 1, %482
  %484 = add i32 0, %483
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 3
  %486 = load i32, i32* %485, align 4
  %487 = mul i32 1, %486
  %488 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %478, i32 0, i32 1
  %489 = getelementptr %dimension_descriptor, %dimension_descriptor* %488, i32 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = sub i32 %476, %490
  %492 = mul i32 %487, %491
  %493 = add i32 %484, %492
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %488, i32 0, i32 3
  %495 = load i32, i32* %494, align 4
  %496 = mul i32 %487, %495
  %497 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %478, i32 0, i32 2
  %498 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = sub i32 %477, %499
  %501 = mul i32 %496, %500
  %502 = add i32 %493, %501
  %503 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 3
  %504 = load i32, i32* %503, align 4
  %505 = mul i32 %496, %504
  %506 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %507 = load i1*, i1** %506, align 8
  %508 = getelementptr inbounds i1, i1* %507, i32 %502
  %509 = load i1, i1* %508, align 1
  %510 = load i32, i32* %"1_v", align 4
  %511 = load i32, i32* %"2_v", align 4
  %512 = load i32, i32* %"3_v", align 4
  %513 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %514 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %513, i32 0, i32 0
  %515 = getelementptr %dimension_descriptor, %dimension_descriptor* %514, i32 0, i32 1
  %516 = load i32, i32* %515, align 4
  %517 = sub i32 %510, %516
  %518 = mul i32 1, %517
  %519 = add i32 0, %518
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %514, i32 0, i32 3
  %521 = load i32, i32* %520, align 4
  %522 = mul i32 1, %521
  %523 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %513, i32 0, i32 1
  %524 = getelementptr %dimension_descriptor, %dimension_descriptor* %523, i32 0, i32 1
  %525 = load i32, i32* %524, align 4
  %526 = sub i32 %511, %525
  %527 = mul i32 %522, %526
  %528 = add i32 %519, %527
  %529 = getelementptr %dimension_descriptor, %dimension_descriptor* %523, i32 0, i32 3
  %530 = load i32, i32* %529, align 4
  %531 = mul i32 %522, %530
  %532 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %513, i32 0, i32 2
  %533 = getelementptr %dimension_descriptor, %dimension_descriptor* %532, i32 0, i32 1
  %534 = load i32, i32* %533, align 4
  %535 = sub i32 %512, %534
  %536 = mul i32 %531, %535
  %537 = add i32 %528, %536
  %538 = getelementptr %dimension_descriptor, %dimension_descriptor* %532, i32 0, i32 3
  %539 = load i32, i32* %538, align 4
  %540 = mul i32 %531, %539
  %541 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %542 = load i1*, i1** %541, align 8
  %543 = getelementptr inbounds i1, i1* %542, i32 %537
  %544 = load i1, i1* %543, align 1
  %545 = or i1 %509, %544
  store i1 %545, i1* %474, align 1
  %546 = load i32, i32* %"3_v", align 4
  %547 = add i32 %546, 1
  store i32 %547, i32* %"3_v", align 4
  br label %loop.head20

loop.end22:                                       ; preds = %loop.head20
  %548 = load i32, i32* %"2_v", align 4
  %549 = add i32 %548, 1
  store i32 %549, i32* %"2_v", align 4
  br label %loop.head18

loop.end23:                                       ; preds = %loop.head18
  %550 = load i32, i32* %"1_v", align 4
  %551 = add i32 %550, 1
  store i32 %551, i32* %"1_v", align 4
  br label %loop.head16

loop.end24:                                       ; preds = %loop.head16
  %552 = alloca %array.1, align 8
  %553 = alloca i32, align 4
  store i32 1, i32* %553, align 4
  call void @verify(%array.1* %c, i32* %553)
  store i32 1, i32* %"1_v", align 4
  %554 = alloca %dimension_descriptor*, align 8
  %555 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %556 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %555, i32 0, i32 0
  store %dimension_descriptor* %556, %dimension_descriptor** %554, align 8
  %557 = alloca i32, align 4
  store i32 1, i32* %557, align 4
  %558 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %554, i32* %557)
  %559 = sub i32 %558, 1
  store i32 %559, i32* %"1_t", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.end32, %loop.end24
  %560 = load i32, i32* %"1_t", align 4
  %561 = add i32 %560, 1
  %562 = alloca %dimension_descriptor*, align 8
  %563 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %564 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %563, i32 0, i32 0
  store %dimension_descriptor* %564, %dimension_descriptor** %562, align 8
  %565 = alloca i32, align 4
  store i32 1, i32* %565, align 4
  %566 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %562, i32* %565)
  %567 = icmp sle i32 %561, %566
  br i1 %567, label %loop.body26, label %loop.end33

loop.body26:                                      ; preds = %loop.head25
  %568 = load i32, i32* %"1_t", align 4
  %569 = add i32 %568, 1
  store i32 %569, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %570 = alloca %dimension_descriptor*, align 8
  %571 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %572 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %571, i32 0, i32 0
  store %dimension_descriptor* %572, %dimension_descriptor** %570, align 8
  %573 = alloca i32, align 4
  store i32 2, i32* %573, align 4
  %574 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %570, i32* %573)
  %575 = sub i32 %574, 1
  store i32 %575, i32* %"2_t", align 4
  br label %loop.head27

loop.head27:                                      ; preds = %loop.end31, %loop.body26
  %576 = load i32, i32* %"2_t", align 4
  %577 = add i32 %576, 1
  %578 = alloca %dimension_descriptor*, align 8
  %579 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %580 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %579, i32 0, i32 0
  store %dimension_descriptor* %580, %dimension_descriptor** %578, align 8
  %581 = alloca i32, align 4
  store i32 2, i32* %581, align 4
  %582 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %578, i32* %581)
  %583 = icmp sle i32 %577, %582
  br i1 %583, label %loop.body28, label %loop.end32

loop.body28:                                      ; preds = %loop.head27
  %584 = load i32, i32* %"2_t", align 4
  %585 = add i32 %584, 1
  store i32 %585, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %586 = alloca %dimension_descriptor*, align 8
  %587 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %588 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %587, i32 0, i32 0
  store %dimension_descriptor* %588, %dimension_descriptor** %586, align 8
  %589 = alloca i32, align 4
  store i32 3, i32* %589, align 4
  %590 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %586, i32* %589)
  %591 = sub i32 %590, 1
  store i32 %591, i32* %"3_t", align 4
  br label %loop.head29

loop.head29:                                      ; preds = %loop.body30, %loop.body28
  %592 = load i32, i32* %"3_t", align 4
  %593 = add i32 %592, 1
  %594 = alloca %dimension_descriptor*, align 8
  %595 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %596 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %595, i32 0, i32 0
  store %dimension_descriptor* %596, %dimension_descriptor** %594, align 8
  %597 = alloca i32, align 4
  store i32 3, i32* %597, align 4
  %598 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %594, i32* %597)
  %599 = icmp sle i32 %593, %598
  br i1 %599, label %loop.body30, label %loop.end31

loop.body30:                                      ; preds = %loop.head29
  %600 = load i32, i32* %"3_t", align 4
  %601 = add i32 %600, 1
  store i32 %601, i32* %"3_t", align 4
  %602 = load i32, i32* %"1_t", align 4
  %603 = load i32, i32* %"2_t", align 4
  %604 = load i32, i32* %"3_t", align 4
  %605 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %606 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %605, i32 0, i32 0
  %607 = getelementptr %dimension_descriptor, %dimension_descriptor* %606, i32 0, i32 1
  %608 = load i32, i32* %607, align 4
  %609 = sub i32 %602, %608
  %610 = mul i32 1, %609
  %611 = add i32 0, %610
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %606, i32 0, i32 3
  %613 = load i32, i32* %612, align 4
  %614 = mul i32 1, %613
  %615 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %605, i32 0, i32 1
  %616 = getelementptr %dimension_descriptor, %dimension_descriptor* %615, i32 0, i32 1
  %617 = load i32, i32* %616, align 4
  %618 = sub i32 %603, %617
  %619 = mul i32 %614, %618
  %620 = add i32 %611, %619
  %621 = getelementptr %dimension_descriptor, %dimension_descriptor* %615, i32 0, i32 3
  %622 = load i32, i32* %621, align 4
  %623 = mul i32 %614, %622
  %624 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %605, i32 0, i32 2
  %625 = getelementptr %dimension_descriptor, %dimension_descriptor* %624, i32 0, i32 1
  %626 = load i32, i32* %625, align 4
  %627 = sub i32 %604, %626
  %628 = mul i32 %623, %627
  %629 = add i32 %620, %628
  %630 = getelementptr %dimension_descriptor, %dimension_descriptor* %624, i32 0, i32 3
  %631 = load i32, i32* %630, align 4
  %632 = mul i32 %623, %631
  %633 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %634 = load i1*, i1** %633, align 8
  %635 = getelementptr inbounds i1, i1* %634, i32 %629
  %636 = load i32, i32* %"1_v", align 4
  %637 = load i32, i32* %"2_v", align 4
  %638 = load i32, i32* %"3_v", align 4
  %639 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %640 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %639, i32 0, i32 0
  %641 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 1
  %642 = load i32, i32* %641, align 4
  %643 = sub i32 %636, %642
  %644 = mul i32 1, %643
  %645 = add i32 0, %644
  %646 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 3
  %647 = load i32, i32* %646, align 4
  %648 = mul i32 1, %647
  %649 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %639, i32 0, i32 1
  %650 = getelementptr %dimension_descriptor, %dimension_descriptor* %649, i32 0, i32 1
  %651 = load i32, i32* %650, align 4
  %652 = sub i32 %637, %651
  %653 = mul i32 %648, %652
  %654 = add i32 %645, %653
  %655 = getelementptr %dimension_descriptor, %dimension_descriptor* %649, i32 0, i32 3
  %656 = load i32, i32* %655, align 4
  %657 = mul i32 %648, %656
  %658 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %639, i32 0, i32 2
  %659 = getelementptr %dimension_descriptor, %dimension_descriptor* %658, i32 0, i32 1
  %660 = load i32, i32* %659, align 4
  %661 = sub i32 %638, %660
  %662 = mul i32 %657, %661
  %663 = add i32 %654, %662
  %664 = getelementptr %dimension_descriptor, %dimension_descriptor* %658, i32 0, i32 3
  %665 = load i32, i32* %664, align 4
  %666 = mul i32 %657, %665
  %667 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %668 = load i1*, i1** %667, align 8
  %669 = getelementptr inbounds i1, i1* %668, i32 %663
  %670 = load i1, i1* %669, align 1
  %671 = load i32, i32* %"1_v", align 4
  %672 = load i32, i32* %"2_v", align 4
  %673 = load i32, i32* %"3_v", align 4
  %674 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %675 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %674, i32 0, i32 0
  %676 = getelementptr %dimension_descriptor, %dimension_descriptor* %675, i32 0, i32 1
  %677 = load i32, i32* %676, align 4
  %678 = sub i32 %671, %677
  %679 = mul i32 1, %678
  %680 = add i32 0, %679
  %681 = getelementptr %dimension_descriptor, %dimension_descriptor* %675, i32 0, i32 3
  %682 = load i32, i32* %681, align 4
  %683 = mul i32 1, %682
  %684 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %674, i32 0, i32 1
  %685 = getelementptr %dimension_descriptor, %dimension_descriptor* %684, i32 0, i32 1
  %686 = load i32, i32* %685, align 4
  %687 = sub i32 %672, %686
  %688 = mul i32 %683, %687
  %689 = add i32 %680, %688
  %690 = getelementptr %dimension_descriptor, %dimension_descriptor* %684, i32 0, i32 3
  %691 = load i32, i32* %690, align 4
  %692 = mul i32 %683, %691
  %693 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %674, i32 0, i32 2
  %694 = getelementptr %dimension_descriptor, %dimension_descriptor* %693, i32 0, i32 1
  %695 = load i32, i32* %694, align 4
  %696 = sub i32 %673, %695
  %697 = mul i32 %692, %696
  %698 = add i32 %689, %697
  %699 = getelementptr %dimension_descriptor, %dimension_descriptor* %693, i32 0, i32 3
  %700 = load i32, i32* %699, align 4
  %701 = mul i32 %692, %700
  %702 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %703 = load i1*, i1** %702, align 8
  %704 = getelementptr inbounds i1, i1* %703, i32 %698
  %705 = load i1, i1* %704, align 1
  %706 = xor i1 %670, %705
  %707 = xor i1 %706, true
  store i1 %707, i1* %635, align 1
  %708 = load i32, i32* %"3_v", align 4
  %709 = add i32 %708, 1
  store i32 %709, i32* %"3_v", align 4
  br label %loop.head29

loop.end31:                                       ; preds = %loop.head29
  %710 = load i32, i32* %"2_v", align 4
  %711 = add i32 %710, 1
  store i32 %711, i32* %"2_v", align 4
  br label %loop.head27

loop.end32:                                       ; preds = %loop.head27
  %712 = load i32, i32* %"1_v", align 4
  %713 = add i32 %712, 1
  store i32 %713, i32* %"1_v", align 4
  br label %loop.head25

loop.end33:                                       ; preds = %loop.head25
  %714 = alloca %array.1, align 8
  %715 = alloca i32, align 4
  store i32 2, i32* %715, align 4
  call void @verify(%array.1* %c, i32* %715)
  store i32 1, i32* %"1_v", align 4
  %716 = alloca %dimension_descriptor*, align 8
  %717 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %718 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %717, i32 0, i32 0
  store %dimension_descriptor* %718, %dimension_descriptor** %716, align 8
  %719 = alloca i32, align 4
  store i32 1, i32* %719, align 4
  %720 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %716, i32* %719)
  %721 = sub i32 %720, 1
  store i32 %721, i32* %"1_t", align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.end41, %loop.end33
  %722 = load i32, i32* %"1_t", align 4
  %723 = add i32 %722, 1
  %724 = alloca %dimension_descriptor*, align 8
  %725 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %726 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %725, i32 0, i32 0
  store %dimension_descriptor* %726, %dimension_descriptor** %724, align 8
  %727 = alloca i32, align 4
  store i32 1, i32* %727, align 4
  %728 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %724, i32* %727)
  %729 = icmp sle i32 %723, %728
  br i1 %729, label %loop.body35, label %loop.end42

loop.body35:                                      ; preds = %loop.head34
  %730 = load i32, i32* %"1_t", align 4
  %731 = add i32 %730, 1
  store i32 %731, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %732 = alloca %dimension_descriptor*, align 8
  %733 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %734 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %733, i32 0, i32 0
  store %dimension_descriptor* %734, %dimension_descriptor** %732, align 8
  %735 = alloca i32, align 4
  store i32 2, i32* %735, align 4
  %736 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %732, i32* %735)
  %737 = sub i32 %736, 1
  store i32 %737, i32* %"2_t", align 4
  br label %loop.head36

loop.head36:                                      ; preds = %loop.end40, %loop.body35
  %738 = load i32, i32* %"2_t", align 4
  %739 = add i32 %738, 1
  %740 = alloca %dimension_descriptor*, align 8
  %741 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %742 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %741, i32 0, i32 0
  store %dimension_descriptor* %742, %dimension_descriptor** %740, align 8
  %743 = alloca i32, align 4
  store i32 2, i32* %743, align 4
  %744 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %740, i32* %743)
  %745 = icmp sle i32 %739, %744
  br i1 %745, label %loop.body37, label %loop.end41

loop.body37:                                      ; preds = %loop.head36
  %746 = load i32, i32* %"2_t", align 4
  %747 = add i32 %746, 1
  store i32 %747, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %748 = alloca %dimension_descriptor*, align 8
  %749 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %750 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %749, i32 0, i32 0
  store %dimension_descriptor* %750, %dimension_descriptor** %748, align 8
  %751 = alloca i32, align 4
  store i32 3, i32* %751, align 4
  %752 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %748, i32* %751)
  %753 = sub i32 %752, 1
  store i32 %753, i32* %"3_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.body39, %loop.body37
  %754 = load i32, i32* %"3_t", align 4
  %755 = add i32 %754, 1
  %756 = alloca %dimension_descriptor*, align 8
  %757 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %758 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %757, i32 0, i32 0
  store %dimension_descriptor* %758, %dimension_descriptor** %756, align 8
  %759 = alloca i32, align 4
  store i32 3, i32* %759, align 4
  %760 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %756, i32* %759)
  %761 = icmp sle i32 %755, %760
  br i1 %761, label %loop.body39, label %loop.end40

loop.body39:                                      ; preds = %loop.head38
  %762 = load i32, i32* %"3_t", align 4
  %763 = add i32 %762, 1
  store i32 %763, i32* %"3_t", align 4
  %764 = load i32, i32* %"1_t", align 4
  %765 = load i32, i32* %"2_t", align 4
  %766 = load i32, i32* %"3_t", align 4
  %767 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %768 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %767, i32 0, i32 0
  %769 = getelementptr %dimension_descriptor, %dimension_descriptor* %768, i32 0, i32 1
  %770 = load i32, i32* %769, align 4
  %771 = sub i32 %764, %770
  %772 = mul i32 1, %771
  %773 = add i32 0, %772
  %774 = getelementptr %dimension_descriptor, %dimension_descriptor* %768, i32 0, i32 3
  %775 = load i32, i32* %774, align 4
  %776 = mul i32 1, %775
  %777 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %767, i32 0, i32 1
  %778 = getelementptr %dimension_descriptor, %dimension_descriptor* %777, i32 0, i32 1
  %779 = load i32, i32* %778, align 4
  %780 = sub i32 %765, %779
  %781 = mul i32 %776, %780
  %782 = add i32 %773, %781
  %783 = getelementptr %dimension_descriptor, %dimension_descriptor* %777, i32 0, i32 3
  %784 = load i32, i32* %783, align 4
  %785 = mul i32 %776, %784
  %786 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %767, i32 0, i32 2
  %787 = getelementptr %dimension_descriptor, %dimension_descriptor* %786, i32 0, i32 1
  %788 = load i32, i32* %787, align 4
  %789 = sub i32 %766, %788
  %790 = mul i32 %785, %789
  %791 = add i32 %782, %790
  %792 = getelementptr %dimension_descriptor, %dimension_descriptor* %786, i32 0, i32 3
  %793 = load i32, i32* %792, align 4
  %794 = mul i32 %785, %793
  %795 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %796 = load i1*, i1** %795, align 8
  %797 = getelementptr inbounds i1, i1* %796, i32 %791
  %798 = load i32, i32* %"1_v", align 4
  %799 = load i32, i32* %"2_v", align 4
  %800 = load i32, i32* %"3_v", align 4
  %801 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %802 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %801, i32 0, i32 0
  %803 = getelementptr %dimension_descriptor, %dimension_descriptor* %802, i32 0, i32 1
  %804 = load i32, i32* %803, align 4
  %805 = sub i32 %798, %804
  %806 = mul i32 1, %805
  %807 = add i32 0, %806
  %808 = getelementptr %dimension_descriptor, %dimension_descriptor* %802, i32 0, i32 3
  %809 = load i32, i32* %808, align 4
  %810 = mul i32 1, %809
  %811 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %801, i32 0, i32 1
  %812 = getelementptr %dimension_descriptor, %dimension_descriptor* %811, i32 0, i32 1
  %813 = load i32, i32* %812, align 4
  %814 = sub i32 %799, %813
  %815 = mul i32 %810, %814
  %816 = add i32 %807, %815
  %817 = getelementptr %dimension_descriptor, %dimension_descriptor* %811, i32 0, i32 3
  %818 = load i32, i32* %817, align 4
  %819 = mul i32 %810, %818
  %820 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %801, i32 0, i32 2
  %821 = getelementptr %dimension_descriptor, %dimension_descriptor* %820, i32 0, i32 1
  %822 = load i32, i32* %821, align 4
  %823 = sub i32 %800, %822
  %824 = mul i32 %819, %823
  %825 = add i32 %816, %824
  %826 = getelementptr %dimension_descriptor, %dimension_descriptor* %820, i32 0, i32 3
  %827 = load i32, i32* %826, align 4
  %828 = mul i32 %819, %827
  %829 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %830 = load i1*, i1** %829, align 8
  %831 = getelementptr inbounds i1, i1* %830, i32 %825
  %832 = load i1, i1* %831, align 1
  %833 = load i32, i32* %"1_v", align 4
  %834 = load i32, i32* %"2_v", align 4
  %835 = load i32, i32* %"3_v", align 4
  %836 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %837 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %836, i32 0, i32 0
  %838 = getelementptr %dimension_descriptor, %dimension_descriptor* %837, i32 0, i32 1
  %839 = load i32, i32* %838, align 4
  %840 = sub i32 %833, %839
  %841 = mul i32 1, %840
  %842 = add i32 0, %841
  %843 = getelementptr %dimension_descriptor, %dimension_descriptor* %837, i32 0, i32 3
  %844 = load i32, i32* %843, align 4
  %845 = mul i32 1, %844
  %846 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %836, i32 0, i32 1
  %847 = getelementptr %dimension_descriptor, %dimension_descriptor* %846, i32 0, i32 1
  %848 = load i32, i32* %847, align 4
  %849 = sub i32 %834, %848
  %850 = mul i32 %845, %849
  %851 = add i32 %842, %850
  %852 = getelementptr %dimension_descriptor, %dimension_descriptor* %846, i32 0, i32 3
  %853 = load i32, i32* %852, align 4
  %854 = mul i32 %845, %853
  %855 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %836, i32 0, i32 2
  %856 = getelementptr %dimension_descriptor, %dimension_descriptor* %855, i32 0, i32 1
  %857 = load i32, i32* %856, align 4
  %858 = sub i32 %835, %857
  %859 = mul i32 %854, %858
  %860 = add i32 %851, %859
  %861 = getelementptr %dimension_descriptor, %dimension_descriptor* %855, i32 0, i32 3
  %862 = load i32, i32* %861, align 4
  %863 = mul i32 %854, %862
  %864 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %865 = load i1*, i1** %864, align 8
  %866 = getelementptr inbounds i1, i1* %865, i32 %860
  %867 = load i1, i1* %866, align 1
  %868 = xor i1 %832, %867
  store i1 %868, i1* %797, align 1
  %869 = load i32, i32* %"3_v", align 4
  %870 = add i32 %869, 1
  store i32 %870, i32* %"3_v", align 4
  br label %loop.head38

loop.end40:                                       ; preds = %loop.head38
  %871 = load i32, i32* %"2_v", align 4
  %872 = add i32 %871, 1
  store i32 %872, i32* %"2_v", align 4
  br label %loop.head36

loop.end41:                                       ; preds = %loop.head36
  %873 = load i32, i32* %"1_v", align 4
  %874 = add i32 %873, 1
  store i32 %874, i32* %"1_v", align 4
  br label %loop.head34

loop.end42:                                       ; preds = %loop.head34
  %875 = alloca %array.1, align 8
  %876 = alloca i32, align 4
  store i32 3, i32* %876, align 4
  call void @verify(%array.1* %c, i32* %876)
  %877 = load %array.1, %array.1* %a, align 8
  %878 = getelementptr %array.1, %array.1* %a, i32 0, i32 3
  %879 = load i1, i1* %878, align 1
  br i1 %879, label %then, label %else

then:                                             ; preds = %loop.end42
  %880 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %881 = load i1*, i1** %880, align 8
  %882 = alloca i8*, align 8
  %883 = bitcast i1* %881 to i8*
  store i8* %883, i8** %882, align 8
  %884 = load i8*, i8** %882, align 8
  call void (i8*, ...) @_lfortran_free(i8* %884)
  %885 = getelementptr %array.1, %array.1* %a, i32 0, i32 3
  store i1 false, i1* %885, align 1
  br label %ifcont

else:                                             ; preds = %loop.end42
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %886 = load %array.1, %array.1* %b, align 8
  %887 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %888 = load i1, i1* %887, align 1
  br i1 %888, label %then43, label %else44

then43:                                           ; preds = %ifcont
  %889 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %890 = load i1*, i1** %889, align 8
  %891 = alloca i8*, align 8
  %892 = bitcast i1* %890 to i8*
  store i8* %892, i8** %891, align 8
  %893 = load i8*, i8** %891, align 8
  call void (i8*, ...) @_lfortran_free(i8* %893)
  %894 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %894, align 1
  br label %ifcont45

else44:                                           ; preds = %ifcont
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %895 = load %array.1, %array.1* %c, align 8
  %896 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  %897 = load i1, i1* %896, align 1
  br i1 %897, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  %898 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %899 = load i1*, i1** %898, align 8
  %900 = alloca i8*, align 8
  %901 = bitcast i1* %899 to i8*
  store i8* %901, i8** %900, align 8
  %902 = load i8*, i8** %900, align 8
  call void (i8*, ...) @_lfortran_free(i8* %902)
  %903 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 false, i1* %903, align 1
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

