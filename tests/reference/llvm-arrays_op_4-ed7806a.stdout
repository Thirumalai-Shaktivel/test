; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, [3 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i1 @modulo2(i32* %x) {
.entry:
  %r = alloca i1, align 1
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %x, align 4
  %2 = udiv i32 %1, 2
  %3 = mul i32 2, %2
  %4 = sub i32 %0, %3
  %5 = icmp eq i32 %4, 1
  store i1 %5, i1* %r, align 1
  br label %return

return:                                           ; preds = %.entry
  %6 = load i1, i1* %r, align 1
  ret i1 %6
}

define void @verify(%array.0* %c, i32* %op_code) {
.entry:
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i1, align 1
  %y = alloca i1, align 1
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end27, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end28

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end27

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont26, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %j, align 4
  %50 = add i32 %48, %49
  %51 = load i32, i32* %k, align 4
  %52 = add i32 %50, %51
  store i32 %52, i32* %call_arg_value, align 4
  %53 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %53, i1* %x, align 1
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %56 = mul i32 %54, %55
  %57 = load i32, i32* %j, align 4
  %58 = load i32, i32* %k, align 4
  %59 = mul i32 %57, %58
  %60 = add i32 %56, %59
  %61 = load i32, i32* %k, align 4
  %62 = load i32, i32* %j, align 4
  %63 = mul i32 %61, %62
  %64 = add i32 %60, %63
  store i32 %64, i32* %call_arg_value5, align 4
  %65 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %65, i1* %y, align 1
  %66 = load i32, i32* %op_code, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %then, label %else7

then:                                             ; preds = %loop.body4
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* %j, align 4
  %70 = load i32, i32* %k, align 4
  %71 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %72 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %71, i32 0, i32 0
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 %68, %74
  %76 = mul i32 1, %75
  %77 = add i32 0, %76
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = mul i32 1, %79
  %81 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %71, i32 0, i32 1
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 %69, %83
  %85 = mul i32 %80, %84
  %86 = add i32 %77, %85
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = mul i32 %80, %88
  %90 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %71, i32 0, i32 2
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %70, %92
  %94 = mul i32 %89, %93
  %95 = add i32 %86, %94
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = mul i32 %89, %97
  %99 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %100 = load i1*, i1** %99, align 8
  %101 = getelementptr inbounds i1, i1* %100, i32 %95
  %102 = load i1, i1* %101, align 1
  %103 = load i1, i1* %x, align 1
  %104 = load i1, i1* %y, align 1
  %105 = and i1 %103, %104
  %106 = xor i1 %102, %105
  br i1 %106, label %then6, label %else

then6:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then6
  br label %ifcont26

else7:                                            ; preds = %loop.body4
  %107 = load i32, i32* %op_code, align 4
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %then8, label %else12

then8:                                            ; preds = %else7
  %109 = load i32, i32* %i, align 4
  %110 = load i32, i32* %j, align 4
  %111 = load i32, i32* %k, align 4
  %112 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %113 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %112, i32 0, i32 0
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = sub i32 %109, %115
  %117 = mul i32 1, %116
  %118 = add i32 0, %117
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = mul i32 1, %120
  %122 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %112, i32 0, i32 1
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %110, %124
  %126 = mul i32 %121, %125
  %127 = add i32 %118, %126
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = mul i32 %121, %129
  %131 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %112, i32 0, i32 2
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %111, %133
  %135 = mul i32 %130, %134
  %136 = add i32 %127, %135
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 3
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 %130, %138
  %140 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %141 = load i1*, i1** %140, align 8
  %142 = getelementptr inbounds i1, i1* %141, i32 %136
  %143 = load i1, i1* %142, align 1
  %144 = load i1, i1* %x, align 1
  %145 = load i1, i1* %y, align 1
  %146 = or i1 %144, %145
  %147 = xor i1 %143, %146
  br i1 %147, label %then9, label %else10

then9:                                            ; preds = %then8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %then8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br label %ifcont25

else12:                                           ; preds = %else7
  %148 = load i32, i32* %op_code, align 4
  %149 = icmp eq i32 %148, 2
  br i1 %149, label %then13, label %else17

then13:                                           ; preds = %else12
  %150 = load i32, i32* %i, align 4
  %151 = load i32, i32* %j, align 4
  %152 = load i32, i32* %k, align 4
  %153 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %154 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %153, i32 0, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 %150, %156
  %158 = mul i32 1, %157
  %159 = add i32 0, %158
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = mul i32 1, %161
  %163 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %153, i32 0, i32 1
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 %151, %165
  %167 = mul i32 %162, %166
  %168 = add i32 %159, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 %162, %170
  %172 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %153, i32 0, i32 2
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = sub i32 %152, %174
  %176 = mul i32 %171, %175
  %177 = add i32 %168, %176
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %171, %179
  %181 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %182 = load i1*, i1** %181, align 8
  %183 = getelementptr inbounds i1, i1* %182, i32 %177
  %184 = load i1, i1* %183, align 1
  %185 = load i1, i1* %x, align 1
  %186 = load i1, i1* %y, align 1
  %187 = xor i1 %185, %186
  %188 = xor i1 %187, true
  %189 = xor i1 %184, %188
  br i1 %189, label %then14, label %else15

then14:                                           ; preds = %then13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %then13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  br label %ifcont24

else17:                                           ; preds = %else12
  %190 = load i32, i32* %op_code, align 4
  %191 = icmp eq i32 %190, 3
  br i1 %191, label %then18, label %else22

then18:                                           ; preds = %else17
  %192 = load i32, i32* %i, align 4
  %193 = load i32, i32* %j, align 4
  %194 = load i32, i32* %k, align 4
  %195 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %196 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %195, i32 0, i32 0
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 %192, %198
  %200 = mul i32 1, %199
  %201 = add i32 0, %200
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = mul i32 1, %203
  %205 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %195, i32 0, i32 1
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %193, %207
  %209 = mul i32 %204, %208
  %210 = add i32 %201, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 %204, %212
  %214 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %195, i32 0, i32 2
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sub i32 %194, %216
  %218 = mul i32 %213, %217
  %219 = add i32 %210, %218
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = mul i32 %213, %221
  %223 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %224 = load i1*, i1** %223, align 8
  %225 = getelementptr inbounds i1, i1* %224, i32 %219
  %226 = load i1, i1* %225, align 1
  %227 = load i1, i1* %x, align 1
  %228 = load i1, i1* %y, align 1
  %229 = xor i1 %227, %228
  %230 = xor i1 %226, %229
  br i1 %230, label %then19, label %else20

then19:                                           ; preds = %then18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %then18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  br label %ifcont23

else22:                                           ; preds = %else17
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %ifcont23, %ifcont16
  br label %ifcont25

ifcont25:                                         ; preds = %ifcont24, %ifcont11
  br label %ifcont26

ifcont26:                                         ; preds = %ifcont25, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end27:                                       ; preds = %loop.head1
  br label %loop.head

loop.end28:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end28
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %call_arg_value47 = alloca i32, align 4
  %call_arg_value37 = alloca i32, align 4
  %call_arg_value27 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %b = alloca %array.0, align 8
  %c = alloca %array.0, align 8
  %dim1 = alloca i32, align 4
  store i32 10, i32* %dim1, align 4
  %dim2 = alloca i32, align 4
  store i32 100, i32* %dim2, align 4
  %dim3 = alloca i32, align 4
  store i32 1, i32* %dim3, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = load i32, i32* %dim1, align 4
  %1 = load i32, i32* %dim2, align 4
  %2 = load i32, i32* %dim3, align 4
  %3 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %4, align 1
  %5 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %6 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 %0, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  %15 = mul i32 1, %14
  store i32 %14, i32* %10, align 4
  %16 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 1
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 3
  store i32 1, i32* %17, align 4
  store i32 1, i32* %18, align 4
  store i32 %1, i32* %19, align 4
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %18, align 4
  %23 = sub i32 %21, %22
  %24 = add i32 %23, 1
  %25 = mul i32 %15, %24
  store i32 %24, i32* %20, align 4
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %5, i32 0, i32 2
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 3
  store i32 1, i32* %27, align 4
  store i32 1, i32* %28, align 4
  store i32 %2, i32* %29, align 4
  %31 = load i32, i32* %29, align 4
  %32 = load i32, i32* %28, align 4
  %33 = sub i32 %31, %32
  %34 = add i32 %33, 1
  %35 = mul i32 %25, %34
  store i32 %34, i32* %30, align 4
  %36 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %37 = alloca i32, align 4
  %38 = mul i32 %35, 1
  store i32 %38, i32* %37, align 4
  %39 = load i32, i32* %37, align 4
  %40 = call i8* (i32, ...) @_lfortran_malloc(i32 %39)
  %41 = bitcast i8* %40 to i1*
  store i1* %41, i1** %36, align 8
  %42 = load i32, i32* %dim1, align 4
  %43 = load i32, i32* %dim2, align 4
  %44 = load i32, i32* %dim3, align 4
  %45 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %45, align 4
  %46 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %46, align 1
  %47 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %48 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %47, i32 0, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 3
  store i32 1, i32* %49, align 4
  store i32 1, i32* %50, align 4
  store i32 %42, i32* %51, align 4
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %50, align 4
  %55 = sub i32 %53, %54
  %56 = add i32 %55, 1
  %57 = mul i32 1, %56
  store i32 %56, i32* %52, align 4
  %58 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %47, i32 0, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  store i32 1, i32* %59, align 4
  store i32 1, i32* %60, align 4
  store i32 %43, i32* %61, align 4
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %60, align 4
  %65 = sub i32 %63, %64
  %66 = add i32 %65, 1
  %67 = mul i32 %57, %66
  store i32 %66, i32* %62, align 4
  %68 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %47, i32 0, i32 2
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 1, i32* %70, align 4
  store i32 %44, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  %77 = mul i32 %67, %76
  store i32 %76, i32* %72, align 4
  %78 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %79 = alloca i32, align 4
  %80 = mul i32 %77, 1
  store i32 %80, i32* %79, align 4
  %81 = load i32, i32* %79, align 4
  %82 = call i8* (i32, ...) @_lfortran_malloc(i32 %81)
  %83 = bitcast i8* %82 to i1*
  store i1* %83, i1** %78, align 8
  %84 = load i32, i32* %dim1, align 4
  %85 = load i32, i32* %dim2, align 4
  %86 = load i32, i32* %dim3, align 4
  %87 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %87, align 4
  %88 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %88, align 1
  %89 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %90 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 2
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 3
  store i32 1, i32* %91, align 4
  store i32 1, i32* %92, align 4
  store i32 %84, i32* %93, align 4
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %92, align 4
  %97 = sub i32 %95, %96
  %98 = add i32 %97, 1
  %99 = mul i32 1, %98
  store i32 %98, i32* %94, align 4
  %100 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 1
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 1
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 2
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 3
  store i32 1, i32* %101, align 4
  store i32 1, i32* %102, align 4
  store i32 %85, i32* %103, align 4
  %105 = load i32, i32* %103, align 4
  %106 = load i32, i32* %102, align 4
  %107 = sub i32 %105, %106
  %108 = add i32 %107, 1
  %109 = mul i32 %99, %108
  store i32 %108, i32* %104, align 4
  %110 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %89, i32 0, i32 2
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 2
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  store i32 1, i32* %111, align 4
  store i32 1, i32* %112, align 4
  store i32 %86, i32* %113, align 4
  %115 = load i32, i32* %113, align 4
  %116 = load i32, i32* %112, align 4
  %117 = sub i32 %115, %116
  %118 = add i32 %117, 1
  %119 = mul i32 %109, %118
  store i32 %118, i32* %114, align 4
  %120 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %121 = alloca i32, align 4
  %122 = mul i32 %119, 1
  store i32 %122, i32* %121, align 4
  %123 = load i32, i32* %121, align 4
  %124 = call i8* (i32, ...) @_lfortran_malloc(i32 %123)
  %125 = bitcast i8* %124 to i1*
  store i1* %125, i1** %120, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end6, %.entry
  %126 = load i32, i32* %i, align 4
  %127 = add i32 %126, 1
  %128 = load i32, i32* %dim1, align 4
  %129 = icmp sle i32 %127, %128
  br i1 %129, label %loop.body, label %loop.end7

loop.body:                                        ; preds = %loop.head
  %130 = load i32, i32* %i, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %132 = load i32, i32* %j, align 4
  %133 = add i32 %132, 1
  %134 = load i32, i32* %dim2, align 4
  %135 = icmp sle i32 %133, %134
  br i1 %135, label %loop.body2, label %loop.end6

loop.body2:                                       ; preds = %loop.head1
  %136 = load i32, i32* %j, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %138 = load i32, i32* %k, align 4
  %139 = add i32 %138, 1
  %140 = load i32, i32* %dim3, align 4
  %141 = icmp sle i32 %139, %140
  br i1 %141, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %142 = load i32, i32* %k, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %k, align 4
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %j, align 4
  %146 = load i32, i32* %k, align 4
  %147 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %148 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 %144, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %147, i32 0, i32 1
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %145, %159
  %161 = mul i32 %156, %160
  %162 = add i32 %153, %161
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 %156, %164
  %166 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %147, i32 0, i32 2
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %146, %168
  %170 = mul i32 %165, %169
  %171 = add i32 %162, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %165, %173
  %175 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %176 = load i1*, i1** %175, align 8
  %177 = getelementptr inbounds i1, i1* %176, i32 %171
  %178 = load i32, i32* %i, align 4
  %179 = load i32, i32* %j, align 4
  %180 = add i32 %178, %179
  %181 = load i32, i32* %k, align 4
  %182 = add i32 %180, %181
  store i32 %182, i32* %call_arg_value, align 4
  %183 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %183, i1* %177, align 1
  %184 = load i32, i32* %i, align 4
  %185 = load i32, i32* %j, align 4
  %186 = load i32, i32* %k, align 4
  %187 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %188 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %187, i32 0, i32 0
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 %184, %190
  %192 = mul i32 1, %191
  %193 = add i32 0, %192
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = mul i32 1, %195
  %197 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %187, i32 0, i32 1
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = sub i32 %185, %199
  %201 = mul i32 %196, %200
  %202 = add i32 %193, %201
  %203 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 3
  %204 = load i32, i32* %203, align 4
  %205 = mul i32 %196, %204
  %206 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %187, i32 0, i32 2
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sub i32 %186, %208
  %210 = mul i32 %205, %209
  %211 = add i32 %202, %210
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 3
  %213 = load i32, i32* %212, align 4
  %214 = mul i32 %205, %213
  %215 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %216 = load i1*, i1** %215, align 8
  %217 = getelementptr inbounds i1, i1* %216, i32 %211
  %218 = load i32, i32* %i, align 4
  %219 = load i32, i32* %j, align 4
  %220 = mul i32 %218, %219
  %221 = load i32, i32* %j, align 4
  %222 = load i32, i32* %k, align 4
  %223 = mul i32 %221, %222
  %224 = add i32 %220, %223
  %225 = load i32, i32* %k, align 4
  %226 = load i32, i32* %j, align 4
  %227 = mul i32 %225, %226
  %228 = add i32 %224, %227
  store i32 %228, i32* %call_arg_value5, align 4
  %229 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %229, i1* %217, align 1
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end6:                                        ; preds = %loop.head1
  br label %loop.head

loop.end7:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %230 = alloca %dimension_descriptor*, align 8
  %231 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %232 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %231, i32 0, i32 0
  store %dimension_descriptor* %232, %dimension_descriptor** %230, align 8
  %233 = alloca i32, align 4
  store i32 1, i32* %233, align 4
  %234 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %230, i32* %233)
  %235 = sub i32 %234, 1
  store i32 %235, i32* %"1_t", align 4
  br label %loop.head8

loop.head8:                                       ; preds = %loop.end15, %loop.end7
  %236 = load i32, i32* %"1_t", align 4
  %237 = add i32 %236, 1
  %238 = alloca %dimension_descriptor*, align 8
  %239 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %240 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %239, i32 0, i32 0
  store %dimension_descriptor* %240, %dimension_descriptor** %238, align 8
  %241 = alloca i32, align 4
  store i32 1, i32* %241, align 4
  %242 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %238, i32* %241)
  %243 = icmp sle i32 %237, %242
  br i1 %243, label %loop.body9, label %loop.end16

loop.body9:                                       ; preds = %loop.head8
  %244 = load i32, i32* %"1_t", align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %246 = alloca %dimension_descriptor*, align 8
  %247 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %248 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %247, i32 0, i32 0
  store %dimension_descriptor* %248, %dimension_descriptor** %246, align 8
  %249 = alloca i32, align 4
  store i32 2, i32* %249, align 4
  %250 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %246, i32* %249)
  %251 = sub i32 %250, 1
  store i32 %251, i32* %"2_t", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.body9
  %252 = load i32, i32* %"2_t", align 4
  %253 = add i32 %252, 1
  %254 = alloca %dimension_descriptor*, align 8
  %255 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %256 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %255, i32 0, i32 0
  store %dimension_descriptor* %256, %dimension_descriptor** %254, align 8
  %257 = alloca i32, align 4
  store i32 2, i32* %257, align 4
  %258 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %254, i32* %257)
  %259 = icmp sle i32 %253, %258
  br i1 %259, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %260 = load i32, i32* %"2_t", align 4
  %261 = add i32 %260, 1
  store i32 %261, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %262 = alloca %dimension_descriptor*, align 8
  %263 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %264 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %263, i32 0, i32 0
  store %dimension_descriptor* %264, %dimension_descriptor** %262, align 8
  %265 = alloca i32, align 4
  store i32 3, i32* %265, align 4
  %266 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %262, i32* %265)
  %267 = sub i32 %266, 1
  store i32 %267, i32* %"3_t", align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %268 = load i32, i32* %"3_t", align 4
  %269 = add i32 %268, 1
  %270 = alloca %dimension_descriptor*, align 8
  %271 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %272 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %271, i32 0, i32 0
  store %dimension_descriptor* %272, %dimension_descriptor** %270, align 8
  %273 = alloca i32, align 4
  store i32 3, i32* %273, align 4
  %274 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %270, i32* %273)
  %275 = icmp sle i32 %269, %274
  br i1 %275, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %276 = load i32, i32* %"3_t", align 4
  %277 = add i32 %276, 1
  store i32 %277, i32* %"3_t", align 4
  %278 = load i32, i32* %"1_t", align 4
  %279 = load i32, i32* %"2_t", align 4
  %280 = load i32, i32* %"3_t", align 4
  %281 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %282 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %281, i32 0, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sub i32 %278, %284
  %286 = mul i32 1, %285
  %287 = add i32 0, %286
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 3
  %289 = load i32, i32* %288, align 4
  %290 = mul i32 1, %289
  %291 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %281, i32 0, i32 1
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 %279, %293
  %295 = mul i32 %290, %294
  %296 = add i32 %287, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 %290, %298
  %300 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %281, i32 0, i32 2
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 %280, %302
  %304 = mul i32 %299, %303
  %305 = add i32 %296, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 %299, %307
  %309 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %310 = load i1*, i1** %309, align 8
  %311 = getelementptr inbounds i1, i1* %310, i32 %305
  %312 = load i32, i32* %"1_v", align 4
  %313 = load i32, i32* %"2_v", align 4
  %314 = load i32, i32* %"3_v", align 4
  %315 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %316 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %315, i32 0, i32 0
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = sub i32 %312, %318
  %320 = mul i32 1, %319
  %321 = add i32 0, %320
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 3
  %323 = load i32, i32* %322, align 4
  %324 = mul i32 1, %323
  %325 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %315, i32 0, i32 1
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = sub i32 %313, %327
  %329 = mul i32 %324, %328
  %330 = add i32 %321, %329
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 3
  %332 = load i32, i32* %331, align 4
  %333 = mul i32 %324, %332
  %334 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %315, i32 0, i32 2
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = sub i32 %314, %336
  %338 = mul i32 %333, %337
  %339 = add i32 %330, %338
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 3
  %341 = load i32, i32* %340, align 4
  %342 = mul i32 %333, %341
  %343 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %344 = load i1*, i1** %343, align 8
  %345 = getelementptr inbounds i1, i1* %344, i32 %339
  %346 = load i1, i1* %345, align 1
  %347 = load i32, i32* %"1_v", align 4
  %348 = load i32, i32* %"2_v", align 4
  %349 = load i32, i32* %"3_v", align 4
  %350 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %351 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %350, i32 0, i32 0
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = sub i32 %347, %353
  %355 = mul i32 1, %354
  %356 = add i32 0, %355
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 3
  %358 = load i32, i32* %357, align 4
  %359 = mul i32 1, %358
  %360 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %350, i32 0, i32 1
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = sub i32 %348, %362
  %364 = mul i32 %359, %363
  %365 = add i32 %356, %364
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = mul i32 %359, %367
  %369 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %350, i32 0, i32 2
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %349, %371
  %373 = mul i32 %368, %372
  %374 = add i32 %365, %373
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 3
  %376 = load i32, i32* %375, align 4
  %377 = mul i32 %368, %376
  %378 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %379 = load i1*, i1** %378, align 8
  %380 = getelementptr inbounds i1, i1* %379, i32 %374
  %381 = load i1, i1* %380, align 1
  %382 = and i1 %346, %381
  store i1 %382, i1* %311, align 1
  %383 = load i32, i32* %"3_v", align 4
  %384 = add i32 %383, 1
  store i32 %384, i32* %"3_v", align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  %385 = load i32, i32* %"2_v", align 4
  %386 = add i32 %385, 1
  store i32 %386, i32* %"2_v", align 4
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %387 = load i32, i32* %"1_v", align 4
  %388 = add i32 %387, 1
  store i32 %388, i32* %"1_v", align 4
  br label %loop.head8

loop.end16:                                       ; preds = %loop.head8
  %389 = alloca %array.0, align 8
  store i32 0, i32* %call_arg_value17, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value17)
  store i32 1, i32* %"1_v", align 4
  %390 = alloca %dimension_descriptor*, align 8
  %391 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %392 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %391, i32 0, i32 0
  store %dimension_descriptor* %392, %dimension_descriptor** %390, align 8
  %393 = alloca i32, align 4
  store i32 1, i32* %393, align 4
  %394 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %390, i32* %393)
  %395 = sub i32 %394, 1
  store i32 %395, i32* %"1_t", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end25, %loop.end16
  %396 = load i32, i32* %"1_t", align 4
  %397 = add i32 %396, 1
  %398 = alloca %dimension_descriptor*, align 8
  %399 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %400 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %399, i32 0, i32 0
  store %dimension_descriptor* %400, %dimension_descriptor** %398, align 8
  %401 = alloca i32, align 4
  store i32 1, i32* %401, align 4
  %402 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %398, i32* %401)
  %403 = icmp sle i32 %397, %402
  br i1 %403, label %loop.body19, label %loop.end26

loop.body19:                                      ; preds = %loop.head18
  %404 = load i32, i32* %"1_t", align 4
  %405 = add i32 %404, 1
  store i32 %405, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %406 = alloca %dimension_descriptor*, align 8
  %407 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %408 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %407, i32 0, i32 0
  store %dimension_descriptor* %408, %dimension_descriptor** %406, align 8
  %409 = alloca i32, align 4
  store i32 2, i32* %409, align 4
  %410 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %406, i32* %409)
  %411 = sub i32 %410, 1
  store i32 %411, i32* %"2_t", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.end24, %loop.body19
  %412 = load i32, i32* %"2_t", align 4
  %413 = add i32 %412, 1
  %414 = alloca %dimension_descriptor*, align 8
  %415 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %416 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %415, i32 0, i32 0
  store %dimension_descriptor* %416, %dimension_descriptor** %414, align 8
  %417 = alloca i32, align 4
  store i32 2, i32* %417, align 4
  %418 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %414, i32* %417)
  %419 = icmp sle i32 %413, %418
  br i1 %419, label %loop.body21, label %loop.end25

loop.body21:                                      ; preds = %loop.head20
  %420 = load i32, i32* %"2_t", align 4
  %421 = add i32 %420, 1
  store i32 %421, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %422 = alloca %dimension_descriptor*, align 8
  %423 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %424 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %423, i32 0, i32 0
  store %dimension_descriptor* %424, %dimension_descriptor** %422, align 8
  %425 = alloca i32, align 4
  store i32 3, i32* %425, align 4
  %426 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %422, i32* %425)
  %427 = sub i32 %426, 1
  store i32 %427, i32* %"3_t", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.body21
  %428 = load i32, i32* %"3_t", align 4
  %429 = add i32 %428, 1
  %430 = alloca %dimension_descriptor*, align 8
  %431 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %432 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %431, i32 0, i32 0
  store %dimension_descriptor* %432, %dimension_descriptor** %430, align 8
  %433 = alloca i32, align 4
  store i32 3, i32* %433, align 4
  %434 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %430, i32* %433)
  %435 = icmp sle i32 %429, %434
  br i1 %435, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %436 = load i32, i32* %"3_t", align 4
  %437 = add i32 %436, 1
  store i32 %437, i32* %"3_t", align 4
  %438 = load i32, i32* %"1_t", align 4
  %439 = load i32, i32* %"2_t", align 4
  %440 = load i32, i32* %"3_t", align 4
  %441 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %442 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %441, i32 0, i32 0
  %443 = getelementptr %dimension_descriptor, %dimension_descriptor* %442, i32 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = sub i32 %438, %444
  %446 = mul i32 1, %445
  %447 = add i32 0, %446
  %448 = getelementptr %dimension_descriptor, %dimension_descriptor* %442, i32 0, i32 3
  %449 = load i32, i32* %448, align 4
  %450 = mul i32 1, %449
  %451 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %441, i32 0, i32 1
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %451, i32 0, i32 1
  %453 = load i32, i32* %452, align 4
  %454 = sub i32 %439, %453
  %455 = mul i32 %450, %454
  %456 = add i32 %447, %455
  %457 = getelementptr %dimension_descriptor, %dimension_descriptor* %451, i32 0, i32 3
  %458 = load i32, i32* %457, align 4
  %459 = mul i32 %450, %458
  %460 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %441, i32 0, i32 2
  %461 = getelementptr %dimension_descriptor, %dimension_descriptor* %460, i32 0, i32 1
  %462 = load i32, i32* %461, align 4
  %463 = sub i32 %440, %462
  %464 = mul i32 %459, %463
  %465 = add i32 %456, %464
  %466 = getelementptr %dimension_descriptor, %dimension_descriptor* %460, i32 0, i32 3
  %467 = load i32, i32* %466, align 4
  %468 = mul i32 %459, %467
  %469 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %470 = load i1*, i1** %469, align 8
  %471 = getelementptr inbounds i1, i1* %470, i32 %465
  %472 = load i32, i32* %"1_v", align 4
  %473 = load i32, i32* %"2_v", align 4
  %474 = load i32, i32* %"3_v", align 4
  %475 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %476 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %475, i32 0, i32 0
  %477 = getelementptr %dimension_descriptor, %dimension_descriptor* %476, i32 0, i32 1
  %478 = load i32, i32* %477, align 4
  %479 = sub i32 %472, %478
  %480 = mul i32 1, %479
  %481 = add i32 0, %480
  %482 = getelementptr %dimension_descriptor, %dimension_descriptor* %476, i32 0, i32 3
  %483 = load i32, i32* %482, align 4
  %484 = mul i32 1, %483
  %485 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %475, i32 0, i32 1
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = sub i32 %473, %487
  %489 = mul i32 %484, %488
  %490 = add i32 %481, %489
  %491 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 3
  %492 = load i32, i32* %491, align 4
  %493 = mul i32 %484, %492
  %494 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %475, i32 0, i32 2
  %495 = getelementptr %dimension_descriptor, %dimension_descriptor* %494, i32 0, i32 1
  %496 = load i32, i32* %495, align 4
  %497 = sub i32 %474, %496
  %498 = mul i32 %493, %497
  %499 = add i32 %490, %498
  %500 = getelementptr %dimension_descriptor, %dimension_descriptor* %494, i32 0, i32 3
  %501 = load i32, i32* %500, align 4
  %502 = mul i32 %493, %501
  %503 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %504 = load i1*, i1** %503, align 8
  %505 = getelementptr inbounds i1, i1* %504, i32 %499
  %506 = load i1, i1* %505, align 1
  %507 = load i32, i32* %"1_v", align 4
  %508 = load i32, i32* %"2_v", align 4
  %509 = load i32, i32* %"3_v", align 4
  %510 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %511 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %510, i32 0, i32 0
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %511, i32 0, i32 1
  %513 = load i32, i32* %512, align 4
  %514 = sub i32 %507, %513
  %515 = mul i32 1, %514
  %516 = add i32 0, %515
  %517 = getelementptr %dimension_descriptor, %dimension_descriptor* %511, i32 0, i32 3
  %518 = load i32, i32* %517, align 4
  %519 = mul i32 1, %518
  %520 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %510, i32 0, i32 1
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 1
  %522 = load i32, i32* %521, align 4
  %523 = sub i32 %508, %522
  %524 = mul i32 %519, %523
  %525 = add i32 %516, %524
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 3
  %527 = load i32, i32* %526, align 4
  %528 = mul i32 %519, %527
  %529 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %510, i32 0, i32 2
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = sub i32 %509, %531
  %533 = mul i32 %528, %532
  %534 = add i32 %525, %533
  %535 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 3
  %536 = load i32, i32* %535, align 4
  %537 = mul i32 %528, %536
  %538 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %539 = load i1*, i1** %538, align 8
  %540 = getelementptr inbounds i1, i1* %539, i32 %534
  %541 = load i1, i1* %540, align 1
  %542 = or i1 %506, %541
  store i1 %542, i1* %471, align 1
  %543 = load i32, i32* %"3_v", align 4
  %544 = add i32 %543, 1
  store i32 %544, i32* %"3_v", align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %545 = load i32, i32* %"2_v", align 4
  %546 = add i32 %545, 1
  store i32 %546, i32* %"2_v", align 4
  br label %loop.head20

loop.end25:                                       ; preds = %loop.head20
  %547 = load i32, i32* %"1_v", align 4
  %548 = add i32 %547, 1
  store i32 %548, i32* %"1_v", align 4
  br label %loop.head18

loop.end26:                                       ; preds = %loop.head18
  %549 = alloca %array.0, align 8
  store i32 1, i32* %call_arg_value27, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value27)
  store i32 1, i32* %"1_v", align 4
  %550 = alloca %dimension_descriptor*, align 8
  %551 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %552 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %551, i32 0, i32 0
  store %dimension_descriptor* %552, %dimension_descriptor** %550, align 8
  %553 = alloca i32, align 4
  store i32 1, i32* %553, align 4
  %554 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %550, i32* %553)
  %555 = sub i32 %554, 1
  store i32 %555, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end35, %loop.end26
  %556 = load i32, i32* %"1_t", align 4
  %557 = add i32 %556, 1
  %558 = alloca %dimension_descriptor*, align 8
  %559 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %560 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %559, i32 0, i32 0
  store %dimension_descriptor* %560, %dimension_descriptor** %558, align 8
  %561 = alloca i32, align 4
  store i32 1, i32* %561, align 4
  %562 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %558, i32* %561)
  %563 = icmp sle i32 %557, %562
  br i1 %563, label %loop.body29, label %loop.end36

loop.body29:                                      ; preds = %loop.head28
  %564 = load i32, i32* %"1_t", align 4
  %565 = add i32 %564, 1
  store i32 %565, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %566 = alloca %dimension_descriptor*, align 8
  %567 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %568 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %567, i32 0, i32 0
  store %dimension_descriptor* %568, %dimension_descriptor** %566, align 8
  %569 = alloca i32, align 4
  store i32 2, i32* %569, align 4
  %570 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %566, i32* %569)
  %571 = sub i32 %570, 1
  store i32 %571, i32* %"2_t", align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end34, %loop.body29
  %572 = load i32, i32* %"2_t", align 4
  %573 = add i32 %572, 1
  %574 = alloca %dimension_descriptor*, align 8
  %575 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %576 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %575, i32 0, i32 0
  store %dimension_descriptor* %576, %dimension_descriptor** %574, align 8
  %577 = alloca i32, align 4
  store i32 2, i32* %577, align 4
  %578 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %574, i32* %577)
  %579 = icmp sle i32 %573, %578
  br i1 %579, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %580 = load i32, i32* %"2_t", align 4
  %581 = add i32 %580, 1
  store i32 %581, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %582 = alloca %dimension_descriptor*, align 8
  %583 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %584 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %583, i32 0, i32 0
  store %dimension_descriptor* %584, %dimension_descriptor** %582, align 8
  %585 = alloca i32, align 4
  store i32 3, i32* %585, align 4
  %586 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %582, i32* %585)
  %587 = sub i32 %586, 1
  store i32 %587, i32* %"3_t", align 4
  br label %loop.head32

loop.head32:                                      ; preds = %loop.body33, %loop.body31
  %588 = load i32, i32* %"3_t", align 4
  %589 = add i32 %588, 1
  %590 = alloca %dimension_descriptor*, align 8
  %591 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %592 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %591, i32 0, i32 0
  store %dimension_descriptor* %592, %dimension_descriptor** %590, align 8
  %593 = alloca i32, align 4
  store i32 3, i32* %593, align 4
  %594 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %590, i32* %593)
  %595 = icmp sle i32 %589, %594
  br i1 %595, label %loop.body33, label %loop.end34

loop.body33:                                      ; preds = %loop.head32
  %596 = load i32, i32* %"3_t", align 4
  %597 = add i32 %596, 1
  store i32 %597, i32* %"3_t", align 4
  %598 = load i32, i32* %"1_t", align 4
  %599 = load i32, i32* %"2_t", align 4
  %600 = load i32, i32* %"3_t", align 4
  %601 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %602 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %601, i32 0, i32 0
  %603 = getelementptr %dimension_descriptor, %dimension_descriptor* %602, i32 0, i32 1
  %604 = load i32, i32* %603, align 4
  %605 = sub i32 %598, %604
  %606 = mul i32 1, %605
  %607 = add i32 0, %606
  %608 = getelementptr %dimension_descriptor, %dimension_descriptor* %602, i32 0, i32 3
  %609 = load i32, i32* %608, align 4
  %610 = mul i32 1, %609
  %611 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %601, i32 0, i32 1
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = sub i32 %599, %613
  %615 = mul i32 %610, %614
  %616 = add i32 %607, %615
  %617 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 3
  %618 = load i32, i32* %617, align 4
  %619 = mul i32 %610, %618
  %620 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %601, i32 0, i32 2
  %621 = getelementptr %dimension_descriptor, %dimension_descriptor* %620, i32 0, i32 1
  %622 = load i32, i32* %621, align 4
  %623 = sub i32 %600, %622
  %624 = mul i32 %619, %623
  %625 = add i32 %616, %624
  %626 = getelementptr %dimension_descriptor, %dimension_descriptor* %620, i32 0, i32 3
  %627 = load i32, i32* %626, align 4
  %628 = mul i32 %619, %627
  %629 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %630 = load i1*, i1** %629, align 8
  %631 = getelementptr inbounds i1, i1* %630, i32 %625
  %632 = load i32, i32* %"1_v", align 4
  %633 = load i32, i32* %"2_v", align 4
  %634 = load i32, i32* %"3_v", align 4
  %635 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %636 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %635, i32 0, i32 0
  %637 = getelementptr %dimension_descriptor, %dimension_descriptor* %636, i32 0, i32 1
  %638 = load i32, i32* %637, align 4
  %639 = sub i32 %632, %638
  %640 = mul i32 1, %639
  %641 = add i32 0, %640
  %642 = getelementptr %dimension_descriptor, %dimension_descriptor* %636, i32 0, i32 3
  %643 = load i32, i32* %642, align 4
  %644 = mul i32 1, %643
  %645 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %635, i32 0, i32 1
  %646 = getelementptr %dimension_descriptor, %dimension_descriptor* %645, i32 0, i32 1
  %647 = load i32, i32* %646, align 4
  %648 = sub i32 %633, %647
  %649 = mul i32 %644, %648
  %650 = add i32 %641, %649
  %651 = getelementptr %dimension_descriptor, %dimension_descriptor* %645, i32 0, i32 3
  %652 = load i32, i32* %651, align 4
  %653 = mul i32 %644, %652
  %654 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %635, i32 0, i32 2
  %655 = getelementptr %dimension_descriptor, %dimension_descriptor* %654, i32 0, i32 1
  %656 = load i32, i32* %655, align 4
  %657 = sub i32 %634, %656
  %658 = mul i32 %653, %657
  %659 = add i32 %650, %658
  %660 = getelementptr %dimension_descriptor, %dimension_descriptor* %654, i32 0, i32 3
  %661 = load i32, i32* %660, align 4
  %662 = mul i32 %653, %661
  %663 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %664 = load i1*, i1** %663, align 8
  %665 = getelementptr inbounds i1, i1* %664, i32 %659
  %666 = load i1, i1* %665, align 1
  %667 = load i32, i32* %"1_v", align 4
  %668 = load i32, i32* %"2_v", align 4
  %669 = load i32, i32* %"3_v", align 4
  %670 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %671 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %670, i32 0, i32 0
  %672 = getelementptr %dimension_descriptor, %dimension_descriptor* %671, i32 0, i32 1
  %673 = load i32, i32* %672, align 4
  %674 = sub i32 %667, %673
  %675 = mul i32 1, %674
  %676 = add i32 0, %675
  %677 = getelementptr %dimension_descriptor, %dimension_descriptor* %671, i32 0, i32 3
  %678 = load i32, i32* %677, align 4
  %679 = mul i32 1, %678
  %680 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %670, i32 0, i32 1
  %681 = getelementptr %dimension_descriptor, %dimension_descriptor* %680, i32 0, i32 1
  %682 = load i32, i32* %681, align 4
  %683 = sub i32 %668, %682
  %684 = mul i32 %679, %683
  %685 = add i32 %676, %684
  %686 = getelementptr %dimension_descriptor, %dimension_descriptor* %680, i32 0, i32 3
  %687 = load i32, i32* %686, align 4
  %688 = mul i32 %679, %687
  %689 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %670, i32 0, i32 2
  %690 = getelementptr %dimension_descriptor, %dimension_descriptor* %689, i32 0, i32 1
  %691 = load i32, i32* %690, align 4
  %692 = sub i32 %669, %691
  %693 = mul i32 %688, %692
  %694 = add i32 %685, %693
  %695 = getelementptr %dimension_descriptor, %dimension_descriptor* %689, i32 0, i32 3
  %696 = load i32, i32* %695, align 4
  %697 = mul i32 %688, %696
  %698 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %699 = load i1*, i1** %698, align 8
  %700 = getelementptr inbounds i1, i1* %699, i32 %694
  %701 = load i1, i1* %700, align 1
  %702 = xor i1 %666, %701
  %703 = xor i1 %702, true
  store i1 %703, i1* %631, align 1
  %704 = load i32, i32* %"3_v", align 4
  %705 = add i32 %704, 1
  store i32 %705, i32* %"3_v", align 4
  br label %loop.head32

loop.end34:                                       ; preds = %loop.head32
  %706 = load i32, i32* %"2_v", align 4
  %707 = add i32 %706, 1
  store i32 %707, i32* %"2_v", align 4
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  %708 = load i32, i32* %"1_v", align 4
  %709 = add i32 %708, 1
  store i32 %709, i32* %"1_v", align 4
  br label %loop.head28

loop.end36:                                       ; preds = %loop.head28
  %710 = alloca %array.0, align 8
  store i32 2, i32* %call_arg_value37, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value37)
  store i32 1, i32* %"1_v", align 4
  %711 = alloca %dimension_descriptor*, align 8
  %712 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %713 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %712, i32 0, i32 0
  store %dimension_descriptor* %713, %dimension_descriptor** %711, align 8
  %714 = alloca i32, align 4
  store i32 1, i32* %714, align 4
  %715 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %711, i32* %714)
  %716 = sub i32 %715, 1
  store i32 %716, i32* %"1_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.end45, %loop.end36
  %717 = load i32, i32* %"1_t", align 4
  %718 = add i32 %717, 1
  %719 = alloca %dimension_descriptor*, align 8
  %720 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %721 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %720, i32 0, i32 0
  store %dimension_descriptor* %721, %dimension_descriptor** %719, align 8
  %722 = alloca i32, align 4
  store i32 1, i32* %722, align 4
  %723 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %719, i32* %722)
  %724 = icmp sle i32 %718, %723
  br i1 %724, label %loop.body39, label %loop.end46

loop.body39:                                      ; preds = %loop.head38
  %725 = load i32, i32* %"1_t", align 4
  %726 = add i32 %725, 1
  store i32 %726, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %727 = alloca %dimension_descriptor*, align 8
  %728 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %729 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %728, i32 0, i32 0
  store %dimension_descriptor* %729, %dimension_descriptor** %727, align 8
  %730 = alloca i32, align 4
  store i32 2, i32* %730, align 4
  %731 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %727, i32* %730)
  %732 = sub i32 %731, 1
  store i32 %732, i32* %"2_t", align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %loop.body39
  %733 = load i32, i32* %"2_t", align 4
  %734 = add i32 %733, 1
  %735 = alloca %dimension_descriptor*, align 8
  %736 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %737 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %736, i32 0, i32 0
  store %dimension_descriptor* %737, %dimension_descriptor** %735, align 8
  %738 = alloca i32, align 4
  store i32 2, i32* %738, align 4
  %739 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %735, i32* %738)
  %740 = icmp sle i32 %734, %739
  br i1 %740, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %741 = load i32, i32* %"2_t", align 4
  %742 = add i32 %741, 1
  store i32 %742, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %743 = alloca %dimension_descriptor*, align 8
  %744 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %745 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %744, i32 0, i32 0
  store %dimension_descriptor* %745, %dimension_descriptor** %743, align 8
  %746 = alloca i32, align 4
  store i32 3, i32* %746, align 4
  %747 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %743, i32* %746)
  %748 = sub i32 %747, 1
  store i32 %748, i32* %"3_t", align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %749 = load i32, i32* %"3_t", align 4
  %750 = add i32 %749, 1
  %751 = alloca %dimension_descriptor*, align 8
  %752 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %753 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %752, i32 0, i32 0
  store %dimension_descriptor* %753, %dimension_descriptor** %751, align 8
  %754 = alloca i32, align 4
  store i32 3, i32* %754, align 4
  %755 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %751, i32* %754)
  %756 = icmp sle i32 %750, %755
  br i1 %756, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %757 = load i32, i32* %"3_t", align 4
  %758 = add i32 %757, 1
  store i32 %758, i32* %"3_t", align 4
  %759 = load i32, i32* %"1_t", align 4
  %760 = load i32, i32* %"2_t", align 4
  %761 = load i32, i32* %"3_t", align 4
  %762 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %763 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %762, i32 0, i32 0
  %764 = getelementptr %dimension_descriptor, %dimension_descriptor* %763, i32 0, i32 1
  %765 = load i32, i32* %764, align 4
  %766 = sub i32 %759, %765
  %767 = mul i32 1, %766
  %768 = add i32 0, %767
  %769 = getelementptr %dimension_descriptor, %dimension_descriptor* %763, i32 0, i32 3
  %770 = load i32, i32* %769, align 4
  %771 = mul i32 1, %770
  %772 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %762, i32 0, i32 1
  %773 = getelementptr %dimension_descriptor, %dimension_descriptor* %772, i32 0, i32 1
  %774 = load i32, i32* %773, align 4
  %775 = sub i32 %760, %774
  %776 = mul i32 %771, %775
  %777 = add i32 %768, %776
  %778 = getelementptr %dimension_descriptor, %dimension_descriptor* %772, i32 0, i32 3
  %779 = load i32, i32* %778, align 4
  %780 = mul i32 %771, %779
  %781 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %762, i32 0, i32 2
  %782 = getelementptr %dimension_descriptor, %dimension_descriptor* %781, i32 0, i32 1
  %783 = load i32, i32* %782, align 4
  %784 = sub i32 %761, %783
  %785 = mul i32 %780, %784
  %786 = add i32 %777, %785
  %787 = getelementptr %dimension_descriptor, %dimension_descriptor* %781, i32 0, i32 3
  %788 = load i32, i32* %787, align 4
  %789 = mul i32 %780, %788
  %790 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %791 = load i1*, i1** %790, align 8
  %792 = getelementptr inbounds i1, i1* %791, i32 %786
  %793 = load i32, i32* %"1_v", align 4
  %794 = load i32, i32* %"2_v", align 4
  %795 = load i32, i32* %"3_v", align 4
  %796 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %797 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %796, i32 0, i32 0
  %798 = getelementptr %dimension_descriptor, %dimension_descriptor* %797, i32 0, i32 1
  %799 = load i32, i32* %798, align 4
  %800 = sub i32 %793, %799
  %801 = mul i32 1, %800
  %802 = add i32 0, %801
  %803 = getelementptr %dimension_descriptor, %dimension_descriptor* %797, i32 0, i32 3
  %804 = load i32, i32* %803, align 4
  %805 = mul i32 1, %804
  %806 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %796, i32 0, i32 1
  %807 = getelementptr %dimension_descriptor, %dimension_descriptor* %806, i32 0, i32 1
  %808 = load i32, i32* %807, align 4
  %809 = sub i32 %794, %808
  %810 = mul i32 %805, %809
  %811 = add i32 %802, %810
  %812 = getelementptr %dimension_descriptor, %dimension_descriptor* %806, i32 0, i32 3
  %813 = load i32, i32* %812, align 4
  %814 = mul i32 %805, %813
  %815 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %796, i32 0, i32 2
  %816 = getelementptr %dimension_descriptor, %dimension_descriptor* %815, i32 0, i32 1
  %817 = load i32, i32* %816, align 4
  %818 = sub i32 %795, %817
  %819 = mul i32 %814, %818
  %820 = add i32 %811, %819
  %821 = getelementptr %dimension_descriptor, %dimension_descriptor* %815, i32 0, i32 3
  %822 = load i32, i32* %821, align 4
  %823 = mul i32 %814, %822
  %824 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %825 = load i1*, i1** %824, align 8
  %826 = getelementptr inbounds i1, i1* %825, i32 %820
  %827 = load i1, i1* %826, align 1
  %828 = load i32, i32* %"1_v", align 4
  %829 = load i32, i32* %"2_v", align 4
  %830 = load i32, i32* %"3_v", align 4
  %831 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %832 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %831, i32 0, i32 0
  %833 = getelementptr %dimension_descriptor, %dimension_descriptor* %832, i32 0, i32 1
  %834 = load i32, i32* %833, align 4
  %835 = sub i32 %828, %834
  %836 = mul i32 1, %835
  %837 = add i32 0, %836
  %838 = getelementptr %dimension_descriptor, %dimension_descriptor* %832, i32 0, i32 3
  %839 = load i32, i32* %838, align 4
  %840 = mul i32 1, %839
  %841 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %831, i32 0, i32 1
  %842 = getelementptr %dimension_descriptor, %dimension_descriptor* %841, i32 0, i32 1
  %843 = load i32, i32* %842, align 4
  %844 = sub i32 %829, %843
  %845 = mul i32 %840, %844
  %846 = add i32 %837, %845
  %847 = getelementptr %dimension_descriptor, %dimension_descriptor* %841, i32 0, i32 3
  %848 = load i32, i32* %847, align 4
  %849 = mul i32 %840, %848
  %850 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %831, i32 0, i32 2
  %851 = getelementptr %dimension_descriptor, %dimension_descriptor* %850, i32 0, i32 1
  %852 = load i32, i32* %851, align 4
  %853 = sub i32 %830, %852
  %854 = mul i32 %849, %853
  %855 = add i32 %846, %854
  %856 = getelementptr %dimension_descriptor, %dimension_descriptor* %850, i32 0, i32 3
  %857 = load i32, i32* %856, align 4
  %858 = mul i32 %849, %857
  %859 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %860 = load i1*, i1** %859, align 8
  %861 = getelementptr inbounds i1, i1* %860, i32 %855
  %862 = load i1, i1* %861, align 1
  %863 = xor i1 %827, %862
  store i1 %863, i1* %792, align 1
  %864 = load i32, i32* %"3_v", align 4
  %865 = add i32 %864, 1
  store i32 %865, i32* %"3_v", align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %866 = load i32, i32* %"2_v", align 4
  %867 = add i32 %866, 1
  store i32 %867, i32* %"2_v", align 4
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %868 = load i32, i32* %"1_v", align 4
  %869 = add i32 %868, 1
  store i32 %869, i32* %"1_v", align 4
  br label %loop.head38

loop.end46:                                       ; preds = %loop.head38
  %870 = alloca %array.0, align 8
  store i32 3, i32* %call_arg_value47, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value47)
  %871 = load %array.0, %array.0* %a, align 8
  %872 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %873 = load i1, i1* %872, align 1
  br i1 %873, label %then, label %else

then:                                             ; preds = %loop.end46
  %874 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %875 = load i1*, i1** %874, align 8
  %876 = alloca i8*, align 8
  %877 = bitcast i1* %875 to i8*
  store i8* %877, i8** %876, align 8
  %878 = load i8*, i8** %876, align 8
  call void (i8*, ...) @_lfortran_free(i8* %878)
  %879 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %879, align 1
  br label %ifcont

else:                                             ; preds = %loop.end46
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %880 = load %array.0, %array.0* %b, align 8
  %881 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %882 = load i1, i1* %881, align 1
  br i1 %882, label %then48, label %else49

then48:                                           ; preds = %ifcont
  %883 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %884 = load i1*, i1** %883, align 8
  %885 = alloca i8*, align 8
  %886 = bitcast i1* %884 to i8*
  store i8* %886, i8** %885, align 8
  %887 = load i8*, i8** %885, align 8
  call void (i8*, ...) @_lfortran_free(i8* %887)
  %888 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %888, align 1
  br label %ifcont50

else49:                                           ; preds = %ifcont
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %889 = load %array.0, %array.0* %c, align 8
  %890 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %891 = load i1, i1* %890, align 1
  br i1 %891, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %892 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %893 = load i1*, i1** %892, align 8
  %894 = alloca i8*, align 8
  %895 = bitcast i1* %893 to i8*
  store i8* %895, i8** %894, align 8
  %896 = load i8*, i8** %894, align 8
  call void (i8*, ...) @_lfortran_free(i8* %896)
  %897 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %897, align 1
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)
