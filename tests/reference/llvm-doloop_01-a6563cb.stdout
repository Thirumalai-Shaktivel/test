; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %0 = load i32, i32* %i, align 4
  %1 = add i32 %0, 1
  %2 = icmp sle i32 %1, 10
  br i1 %2, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %3 = load i32, i32* %i, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %i, align 4
  %5 = load i32, i32* %j, align 4
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %5, %6
  store i32 %7, i32* %j, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %8 = load i32, i32* %j, align 4
  %9 = icmp ne i32 %8, 55
  br i1 %9, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  store i32 0, i32* %j, align 4
  store i32 11, i32* %i, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %ifcont
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, -1
  %12 = icmp sge i32 %11, 1
  br i1 %12, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %j, align 4
  %16 = load i32, i32* %i, align 4
  %17 = add i32 %15, %16
  store i32 %17, i32* %j, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %18 = load i32, i32* %j, align 4
  %19 = icmp ne i32 %18, 55
  br i1 %19, label %then4, label %else5

then4:                                            ; preds = %loop.end3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %loop.end3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 0, i32* %j, align 4
  store i32 -1, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %20 = load i32, i32* %i, align 4
  %21 = add i32 %20, 2
  %22 = icmp sle i32 %21, 9
  br i1 %22, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 2
  store i32 %24, i32* %i, align 4
  %25 = load i32, i32* %j, align 4
  %26 = load i32, i32* %i, align 4
  %27 = add i32 %25, %26
  store i32 %27, i32* %j, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %28 = load i32, i32* %j, align 4
  %29 = icmp ne i32 %28, 25
  br i1 %29, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  store i32 0, i32* %j, align 4
  store i32 11, i32* %i, align 4
  br label %loop.head13

loop.head13:                                      ; preds = %loop.body14, %ifcont12
  %30 = load i32, i32* %i, align 4
  %31 = add i32 %30, -2
  %32 = icmp sge i32 %31, 1
  br i1 %32, label %loop.body14, label %loop.end15

loop.body14:                                      ; preds = %loop.head13
  %33 = load i32, i32* %i, align 4
  %34 = add i32 %33, -2
  store i32 %34, i32* %i, align 4
  %35 = load i32, i32* %j, align 4
  %36 = load i32, i32* %i, align 4
  %37 = add i32 %35, %36
  store i32 %37, i32* %j, align 4
  br label %loop.head13

loop.end15:                                       ; preds = %loop.head13
  %38 = load i32, i32* %j, align 4
  %39 = icmp ne i32 %38, 25
  br i1 %39, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  store i32 0, i32* %j, align 4
  store i32 -1, i32* %i, align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.body20, %ifcont18
  %40 = load i32, i32* %i, align 4
  %41 = add i32 %40, 2
  %42 = icmp sle i32 %41, 10
  br i1 %42, label %loop.body20, label %loop.end21

loop.body20:                                      ; preds = %loop.head19
  %43 = load i32, i32* %i, align 4
  %44 = add i32 %43, 2
  store i32 %44, i32* %i, align 4
  %45 = load i32, i32* %j, align 4
  %46 = load i32, i32* %i, align 4
  %47 = add i32 %45, %46
  store i32 %47, i32* %j, align 4
  br label %loop.head19

loop.end21:                                       ; preds = %loop.head19
  %48 = load i32, i32* %j, align 4
  %49 = icmp ne i32 %48, 25
  br i1 %49, label %then22, label %else23

then22:                                           ; preds = %loop.end21
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %loop.end21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  store i32 0, i32* %j, align 4
  store i32 -2, i32* %i, align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.body26, %ifcont24
  %50 = load i32, i32* %i, align 4
  %51 = add i32 %50, 3
  %52 = icmp sle i32 %51, 10
  br i1 %52, label %loop.body26, label %loop.end27

loop.body26:                                      ; preds = %loop.head25
  %53 = load i32, i32* %i, align 4
  %54 = add i32 %53, 3
  store i32 %54, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %56 = load i32, i32* %i, align 4
  %57 = add i32 %55, %56
  store i32 %57, i32* %j, align 4
  br label %loop.head25

loop.end27:                                       ; preds = %loop.head25
  %58 = load i32, i32* %j, align 4
  %59 = icmp ne i32 %58, 22
  br i1 %59, label %then28, label %else29

then28:                                           ; preds = %loop.end27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %loop.end27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  store i32 0, i32* %j, align 4
  store i32 13, i32* %i, align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %ifcont30
  %60 = load i32, i32* %i, align 4
  %61 = add i32 %60, -3
  %62 = icmp sge i32 %61, 1
  br i1 %62, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %63 = load i32, i32* %i, align 4
  %64 = add i32 %63, -3
  store i32 %64, i32* %i, align 4
  %65 = load i32, i32* %j, align 4
  %66 = load i32, i32* %i, align 4
  %67 = add i32 %65, %66
  store i32 %67, i32* %j, align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  %68 = load i32, i32* %j, align 4
  %69 = icmp ne i32 %68, 22
  br i1 %69, label %then34, label %else35

then34:                                           ; preds = %loop.end33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.end33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head37

loop.head37:                                      ; preds = %loop.body38, %ifcont36
  %70 = load i32, i32* %i, align 4
  %71 = add i32 %70, 1
  %72 = icmp sle i32 %71, 1
  br i1 %72, label %loop.body38, label %loop.end39

loop.body38:                                      ; preds = %loop.head37
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %i, align 4
  %75 = load i32, i32* %j, align 4
  %76 = load i32, i32* %i, align 4
  %77 = add i32 %75, %76
  store i32 %77, i32* %j, align 4
  br label %loop.head37

loop.end39:                                       ; preds = %loop.head37
  %78 = load i32, i32* %j, align 4
  %79 = icmp ne i32 %78, 1
  br i1 %79, label %then40, label %else41

then40:                                           ; preds = %loop.end39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %loop.end39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  store i32 0, i32* %j, align 4
  store i32 2, i32* %i, align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.body44, %ifcont42
  %80 = load i32, i32* %i, align 4
  %81 = add i32 %80, -1
  %82 = icmp sge i32 %81, 1
  br i1 %82, label %loop.body44, label %loop.end45

loop.body44:                                      ; preds = %loop.head43
  %83 = load i32, i32* %i, align 4
  %84 = add i32 %83, -1
  store i32 %84, i32* %i, align 4
  %85 = load i32, i32* %j, align 4
  %86 = load i32, i32* %i, align 4
  %87 = add i32 %85, %86
  store i32 %87, i32* %j, align 4
  br label %loop.head43

loop.end45:                                       ; preds = %loop.head43
  %88 = load i32, i32* %j, align 4
  %89 = icmp ne i32 %88, 1
  br i1 %89, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head49

loop.head49:                                      ; preds = %loop.body50, %ifcont48
  %90 = load i32, i32* %i, align 4
  %91 = add i32 %90, 1
  %92 = icmp sle i32 %91, 0
  br i1 %92, label %loop.body50, label %loop.end51

loop.body50:                                      ; preds = %loop.head49
  %93 = load i32, i32* %i, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %i, align 4
  %95 = load i32, i32* %j, align 4
  %96 = load i32, i32* %i, align 4
  %97 = add i32 %95, %96
  store i32 %97, i32* %j, align 4
  br label %loop.head49

loop.end51:                                       ; preds = %loop.head49
  %98 = load i32, i32* %j, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %then52, label %else53

then52:                                           ; preds = %loop.end51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %loop.end51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  store i32 0, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %loop.head55

loop.head55:                                      ; preds = %loop.body56, %ifcont54
  %100 = load i32, i32* %i, align 4
  %101 = add i32 %100, -1
  %102 = icmp sge i32 %101, 1
  br i1 %102, label %loop.body56, label %loop.end57

loop.body56:                                      ; preds = %loop.head55
  %103 = load i32, i32* %i, align 4
  %104 = add i32 %103, -1
  store i32 %104, i32* %i, align 4
  %105 = load i32, i32* %j, align 4
  %106 = load i32, i32* %i, align 4
  %107 = add i32 %105, %106
  store i32 %107, i32* %j, align 4
  br label %loop.head55

loop.end57:                                       ; preds = %loop.head55
  %108 = load i32, i32* %j, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %then58, label %else59

then58:                                           ; preds = %loop.end57
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont60

else59:                                           ; preds = %loop.end57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
