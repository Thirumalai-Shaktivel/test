; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%array.0 = type { i32*, i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @__module_lfortran_intrinsic_array_abs(%array*)

declare i1 @__module_lfortran_intrinsic_array_allocated(%array*)

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare i32 @__module_lfortran_intrinsic_array_max(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_maxval(%array*)

declare i32 @__module_lfortran_intrinsic_array_min(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_minval(%array*)

declare i32 @__module_lfortran_intrinsic_array_real(%array*, i32*)

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

declare i32 @__module_lfortran_intrinsic_array_sum(%array*)

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @whole_square(%array.0* %a, %array.0* %b, %array.0* %c) {
.entry:
  %"1_k" = alloca i32, align 4
  %a_2 = alloca %array.0, align 8
  %ab = alloca %array.0, align 8
  %abc = alloca %array.0, align 8
  %b_2 = alloca %array.0, align 8
  %bc = alloca %array.0, align 8
  %c_2 = alloca %array.0, align 8
  %ca = alloca %array.0, align 8
  %n = alloca i32, align 4
  %status = alloca i32, align 4
  %"~0_bin_op_res" = alloca %array, align 8
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = alloca %dimension_descriptor*, align 8
  %6 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %7 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %6, i32 0, i32 0
  store %dimension_descriptor* %7, %dimension_descriptor** %5, align 8
  %8 = alloca i32, align 4
  store i32 1, i32* %8, align 4
  %9 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %5, i32* %8)
  %10 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %12 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 3
  store i32 1, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %9, i32* %15, align 4
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %14, align 4
  %19 = sub i32 %17, %18
  %20 = add i32 %19, 1
  store i32 %20, i32* %16, align 4
  %21 = alloca i32, align 4
  %22 = sub i32 %9, %4
  %23 = add i32 %22, 1
  %24 = mul i32 1, %23
  store i32 %24, i32* %21, align 4
  %25 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 0
  %26 = load i32, i32* %21, align 4
  %27 = alloca i32, i32 %26, align 4
  store i32* %27, i32** %25, align 8
  %"~1_bin_op_res" = alloca %array, align 8
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %30 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %29, i32 0, i32 0
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 1, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %28, i32* %31)
  %33 = alloca %dimension_descriptor*, align 8
  %34 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %35 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %34, i32 0, i32 0
  store %dimension_descriptor* %35, %dimension_descriptor** %33, align 8
  %36 = alloca i32, align 4
  store i32 1, i32* %36, align 4
  %37 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %33, i32* %36)
  %38 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %40 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 %32, i32* %42, align 4
  store i32 %37, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  store i32 %48, i32* %44, align 4
  %49 = alloca i32, align 4
  %50 = sub i32 %37, %32
  %51 = add i32 %50, 1
  %52 = mul i32 1, %51
  store i32 %52, i32* %49, align 4
  %53 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 0
  %54 = load i32, i32* %49, align 4
  %55 = alloca i32, i32 %54, align 4
  store i32* %55, i32** %53, align 8
  %"~2_bin_op_res" = alloca %array, align 8
  %56 = alloca %dimension_descriptor*, align 8
  %57 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %58 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %57, i32 0, i32 0
  store %dimension_descriptor* %58, %dimension_descriptor** %56, align 8
  %59 = alloca i32, align 4
  store i32 1, i32* %59, align 4
  %60 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %56, i32* %59)
  %61 = alloca %dimension_descriptor*, align 8
  %62 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %63 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %62, i32 0, i32 0
  store %dimension_descriptor* %63, %dimension_descriptor** %61, align 8
  %64 = alloca i32, align 4
  store i32 1, i32* %64, align 4
  %65 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %61, i32* %64)
  %66 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 1
  store i32 0, i32* %66, align 4
  %67 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %68 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %67, i32 0, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 %60, i32* %70, align 4
  store i32 %65, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  store i32 %76, i32* %72, align 4
  %77 = alloca i32, align 4
  %78 = sub i32 %65, %60
  %79 = add i32 %78, 1
  %80 = mul i32 1, %79
  store i32 %80, i32* %77, align 4
  %81 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 0
  %82 = load i32, i32* %77, align 4
  %83 = alloca i32, i32 %82, align 4
  store i32* %83, i32** %81, align 8
  %"~3_bin_op_res" = alloca %array, align 8
  %84 = alloca %dimension_descriptor*, align 8
  %85 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %86 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %85, i32 0, i32 0
  store %dimension_descriptor* %86, %dimension_descriptor** %84, align 8
  %87 = alloca i32, align 4
  store i32 1, i32* %87, align 4
  %88 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %84, i32* %87)
  %89 = alloca %dimension_descriptor*, align 8
  %90 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %91 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %90, i32 0, i32 0
  store %dimension_descriptor* %91, %dimension_descriptor** %89, align 8
  %92 = alloca i32, align 4
  store i32 1, i32* %92, align 4
  %93 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %89, i32* %92)
  %94 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 1
  store i32 0, i32* %94, align 4
  %95 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %96 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %95, i32 0, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 2
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 3
  store i32 1, i32* %97, align 4
  store i32 %88, i32* %98, align 4
  store i32 %93, i32* %99, align 4
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %98, align 4
  %103 = sub i32 %101, %102
  %104 = add i32 %103, 1
  store i32 %104, i32* %100, align 4
  %105 = alloca i32, align 4
  %106 = sub i32 %93, %88
  %107 = add i32 %106, 1
  %108 = mul i32 1, %107
  store i32 %108, i32* %105, align 4
  %109 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 0
  %110 = load i32, i32* %105, align 4
  %111 = alloca i32, i32 %110, align 4
  store i32* %111, i32** %109, align 8
  %"~4_bin_op_res" = alloca %array, align 8
  %112 = alloca %dimension_descriptor*, align 8
  %113 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %114 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %113, i32 0, i32 0
  store %dimension_descriptor* %114, %dimension_descriptor** %112, align 8
  %115 = alloca i32, align 4
  store i32 1, i32* %115, align 4
  %116 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %112, i32* %115)
  %117 = alloca %dimension_descriptor*, align 8
  %118 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %119 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %118, i32 0, i32 0
  store %dimension_descriptor* %119, %dimension_descriptor** %117, align 8
  %120 = alloca i32, align 4
  store i32 1, i32* %120, align 4
  %121 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %117, i32* %120)
  %122 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 1
  store i32 0, i32* %122, align 4
  %123 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %124 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 2
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  store i32 1, i32* %125, align 4
  store i32 %116, i32* %126, align 4
  store i32 %121, i32* %127, align 4
  %129 = load i32, i32* %127, align 4
  %130 = load i32, i32* %126, align 4
  %131 = sub i32 %129, %130
  %132 = add i32 %131, 1
  store i32 %132, i32* %128, align 4
  %133 = alloca i32, align 4
  %134 = sub i32 %121, %116
  %135 = add i32 %134, 1
  %136 = mul i32 1, %135
  store i32 %136, i32* %133, align 4
  %137 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 0
  %138 = load i32, i32* %133, align 4
  %139 = alloca i32, i32 %138, align 4
  store i32* %139, i32** %137, align 8
  %140 = alloca %size_arg, align 8
  %141 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %142 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %141, i32 0, i32 0
  %143 = getelementptr %size_arg, %size_arg* %140, i32 0, i32 0
  store %dimension_descriptor* %142, %dimension_descriptor** %143, align 8
  %144 = getelementptr %size_arg, %size_arg* %140, i32 0, i32 1
  store i32 1, i32* %144, align 4
  %145 = call i32 @__module_lfortran_intrinsic_array_size(%size_arg* %140)
  store i32 %145, i32* %n, align 4
  %146 = load i32, i32* %n, align 4
  %147 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 1
  store i32 0, i32* %147, align 4
  %148 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 3
  store i1 true, i1* %148, align 1
  %149 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %150 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %149, i32 0, i32 0
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 0
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 1
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 2
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 3
  store i32 1, i32* %151, align 4
  store i32 1, i32* %152, align 4
  store i32 %146, i32* %153, align 4
  %155 = load i32, i32* %153, align 4
  %156 = load i32, i32* %152, align 4
  %157 = sub i32 %155, %156
  %158 = add i32 %157, 1
  %159 = mul i32 1, %158
  store i32 %158, i32* %154, align 4
  %160 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 0
  %161 = alloca i32, align 4
  %162 = mul i32 %159, 4
  store i32 %162, i32* %161, align 4
  %163 = load i32, i32* %161, align 4
  %164 = call i8* (i32, ...) @_lfortran_malloc(i32 %163)
  %165 = bitcast i8* %164 to i32*
  store i32* %165, i32** %160, align 8
  %166 = load i32, i32* %n, align 4
  %167 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 1
  store i32 0, i32* %167, align 4
  %168 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 3
  store i1 true, i1* %168, align 1
  %169 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %170 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %169, i32 0, i32 0
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 0
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 2
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  store i32 1, i32* %171, align 4
  store i32 1, i32* %172, align 4
  store i32 %166, i32* %173, align 4
  %175 = load i32, i32* %173, align 4
  %176 = load i32, i32* %172, align 4
  %177 = sub i32 %175, %176
  %178 = add i32 %177, 1
  %179 = mul i32 1, %178
  store i32 %178, i32* %174, align 4
  %180 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 0
  %181 = alloca i32, align 4
  %182 = mul i32 %179, 4
  store i32 %182, i32* %181, align 4
  %183 = load i32, i32* %181, align 4
  %184 = call i8* (i32, ...) @_lfortran_malloc(i32 %183)
  %185 = bitcast i8* %184 to i32*
  store i32* %185, i32** %180, align 8
  %186 = load i32, i32* %n, align 4
  %187 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 1
  store i32 0, i32* %187, align 4
  %188 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 3
  store i1 true, i1* %188, align 1
  %189 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %190 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %189, i32 0, i32 0
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 1
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 2
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 3
  store i32 1, i32* %191, align 4
  store i32 1, i32* %192, align 4
  store i32 %186, i32* %193, align 4
  %195 = load i32, i32* %193, align 4
  %196 = load i32, i32* %192, align 4
  %197 = sub i32 %195, %196
  %198 = add i32 %197, 1
  %199 = mul i32 1, %198
  store i32 %198, i32* %194, align 4
  %200 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 0
  %201 = alloca i32, align 4
  %202 = mul i32 %199, 4
  store i32 %202, i32* %201, align 4
  %203 = load i32, i32* %201, align 4
  %204 = call i8* (i32, ...) @_lfortran_malloc(i32 %203)
  %205 = bitcast i8* %204 to i32*
  store i32* %205, i32** %200, align 8
  %206 = load i32, i32* %n, align 4
  %207 = getelementptr %array.0, %array.0* %ab, i32 0, i32 1
  store i32 0, i32* %207, align 4
  %208 = getelementptr %array.0, %array.0* %ab, i32 0, i32 3
  store i1 true, i1* %208, align 1
  %209 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %210 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %209, i32 0, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 0
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 1
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 2
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 3
  store i32 1, i32* %211, align 4
  store i32 1, i32* %212, align 4
  store i32 %206, i32* %213, align 4
  %215 = load i32, i32* %213, align 4
  %216 = load i32, i32* %212, align 4
  %217 = sub i32 %215, %216
  %218 = add i32 %217, 1
  %219 = mul i32 1, %218
  store i32 %218, i32* %214, align 4
  %220 = getelementptr %array.0, %array.0* %ab, i32 0, i32 0
  %221 = alloca i32, align 4
  %222 = mul i32 %219, 4
  store i32 %222, i32* %221, align 4
  %223 = load i32, i32* %221, align 4
  %224 = call i8* (i32, ...) @_lfortran_malloc(i32 %223)
  %225 = bitcast i8* %224 to i32*
  store i32* %225, i32** %220, align 8
  %226 = load i32, i32* %n, align 4
  %227 = getelementptr %array.0, %array.0* %bc, i32 0, i32 1
  store i32 0, i32* %227, align 4
  %228 = getelementptr %array.0, %array.0* %bc, i32 0, i32 3
  store i1 true, i1* %228, align 1
  %229 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %230 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %229, i32 0, i32 0
  %231 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 0
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 1
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 2
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 3
  store i32 1, i32* %231, align 4
  store i32 1, i32* %232, align 4
  store i32 %226, i32* %233, align 4
  %235 = load i32, i32* %233, align 4
  %236 = load i32, i32* %232, align 4
  %237 = sub i32 %235, %236
  %238 = add i32 %237, 1
  %239 = mul i32 1, %238
  store i32 %238, i32* %234, align 4
  %240 = getelementptr %array.0, %array.0* %bc, i32 0, i32 0
  %241 = alloca i32, align 4
  %242 = mul i32 %239, 4
  store i32 %242, i32* %241, align 4
  %243 = load i32, i32* %241, align 4
  %244 = call i8* (i32, ...) @_lfortran_malloc(i32 %243)
  %245 = bitcast i8* %244 to i32*
  store i32* %245, i32** %240, align 8
  %246 = load i32, i32* %n, align 4
  %247 = getelementptr %array.0, %array.0* %ca, i32 0, i32 1
  store i32 0, i32* %247, align 4
  %248 = getelementptr %array.0, %array.0* %ca, i32 0, i32 3
  store i1 true, i1* %248, align 1
  %249 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %250 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %249, i32 0, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 0
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 2
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 3
  store i32 1, i32* %251, align 4
  store i32 1, i32* %252, align 4
  store i32 %246, i32* %253, align 4
  %255 = load i32, i32* %253, align 4
  %256 = load i32, i32* %252, align 4
  %257 = sub i32 %255, %256
  %258 = add i32 %257, 1
  %259 = mul i32 1, %258
  store i32 %258, i32* %254, align 4
  %260 = getelementptr %array.0, %array.0* %ca, i32 0, i32 0
  %261 = alloca i32, align 4
  %262 = mul i32 %259, 4
  store i32 %262, i32* %261, align 4
  %263 = load i32, i32* %261, align 4
  %264 = call i8* (i32, ...) @_lfortran_malloc(i32 %263)
  %265 = bitcast i8* %264 to i32*
  store i32* %265, i32** %260, align 8
  %266 = load i32, i32* %n, align 4
  %267 = getelementptr %array.0, %array.0* %abc, i32 0, i32 1
  store i32 0, i32* %267, align 4
  %268 = getelementptr %array.0, %array.0* %abc, i32 0, i32 3
  store i1 true, i1* %268, align 1
  %269 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %270 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %269, i32 0, i32 0
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 0
  %272 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 1
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 2
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 3
  store i32 1, i32* %271, align 4
  store i32 1, i32* %272, align 4
  store i32 %266, i32* %273, align 4
  %275 = load i32, i32* %273, align 4
  %276 = load i32, i32* %272, align 4
  %277 = sub i32 %275, %276
  %278 = add i32 %277, 1
  %279 = mul i32 1, %278
  store i32 %278, i32* %274, align 4
  %280 = getelementptr %array.0, %array.0* %abc, i32 0, i32 0
  %281 = alloca i32, align 4
  %282 = mul i32 %279, 4
  store i32 %282, i32* %281, align 4
  %283 = load i32, i32* %281, align 4
  %284 = call i8* (i32, ...) @_lfortran_malloc(i32 %283)
  %285 = bitcast i8* %284 to i32*
  store i32* %285, i32** %280, align 8
  store i32 0, i32* %status, align 4
  %286 = alloca %dimension_descriptor*, align 8
  %287 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %288 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %287, i32 0, i32 0
  store %dimension_descriptor* %288, %dimension_descriptor** %286, align 8
  %289 = alloca i32, align 4
  store i32 1, i32* %289, align 4
  %290 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %286, i32* %289)
  %291 = sub i32 %290, 1
  store i32 %291, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %292 = load i32, i32* %"1_k", align 4
  %293 = add i32 %292, 1
  %294 = alloca %dimension_descriptor*, align 8
  %295 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %296 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %295, i32 0, i32 0
  store %dimension_descriptor* %296, %dimension_descriptor** %294, align 8
  %297 = alloca i32, align 4
  store i32 1, i32* %297, align 4
  %298 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %294, i32* %297)
  %299 = icmp sle i32 %293, %298
  br i1 %299, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %300 = load i32, i32* %"1_k", align 4
  %301 = add i32 %300, 1
  store i32 %301, i32* %"1_k", align 4
  %302 = load i32, i32* %"1_k", align 4
  %303 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %304 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %303, i32 0, i32 0
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = sub i32 %302, %306
  %308 = mul i32 1, %307
  %309 = add i32 0, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 3
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 1, %311
  %313 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 0
  %314 = load i32*, i32** %313, align 8
  %315 = getelementptr inbounds i32, i32* %314, i32 %309
  %316 = load i32, i32* %"1_k", align 4
  %317 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %318 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %317, i32 0, i32 0
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = sub i32 %316, %320
  %322 = mul i32 1, %321
  %323 = add i32 0, %322
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 3
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 1, %325
  %327 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds i32, i32* %328, i32 %323
  %330 = load i32, i32* %329, align 4
  %331 = load i32, i32* %"1_k", align 4
  %332 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %333 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %332, i32 0, i32 0
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = sub i32 %331, %335
  %337 = mul i32 1, %336
  %338 = add i32 0, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 1, %340
  %342 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = getelementptr inbounds i32, i32* %343, i32 %338
  %345 = load i32, i32* %344, align 4
  %346 = mul i32 %330, %345
  store i32 %346, i32* %315, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %347 = alloca %dimension_descriptor*, align 8
  %348 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %349 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %348, i32 0, i32 0
  store %dimension_descriptor* %349, %dimension_descriptor** %347, align 8
  %350 = alloca i32, align 4
  store i32 1, i32* %350, align 4
  %351 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %347, i32* %350)
  %352 = sub i32 %351, 1
  store i32 %352, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %353 = load i32, i32* %"1_k", align 4
  %354 = add i32 %353, 1
  %355 = alloca %dimension_descriptor*, align 8
  %356 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %357 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %356, i32 0, i32 0
  store %dimension_descriptor* %357, %dimension_descriptor** %355, align 8
  %358 = alloca i32, align 4
  store i32 1, i32* %358, align 4
  %359 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %355, i32* %358)
  %360 = icmp sle i32 %354, %359
  br i1 %360, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %361 = load i32, i32* %"1_k", align 4
  %362 = add i32 %361, 1
  store i32 %362, i32* %"1_k", align 4
  %363 = load i32, i32* %"1_k", align 4
  %364 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %365 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %364, i32 0, i32 0
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = sub i32 %363, %367
  %369 = mul i32 1, %368
  %370 = add i32 0, %369
  %371 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 3
  %372 = load i32, i32* %371, align 4
  %373 = mul i32 1, %372
  %374 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 0
  %375 = load i32*, i32** %374, align 8
  %376 = getelementptr inbounds i32, i32* %375, i32 %370
  %377 = load i32, i32* %"1_k", align 4
  %378 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %379 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %378, i32 0, i32 0
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = sub i32 %377, %381
  %383 = mul i32 1, %382
  %384 = add i32 0, %383
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 3
  %386 = load i32, i32* %385, align 4
  %387 = mul i32 1, %386
  %388 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %389 = load i32*, i32** %388, align 8
  %390 = getelementptr inbounds i32, i32* %389, i32 %384
  %391 = load i32, i32* %390, align 4
  %392 = load i32, i32* %"1_k", align 4
  %393 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %394 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %393, i32 0, i32 0
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = sub i32 %392, %396
  %398 = mul i32 1, %397
  %399 = add i32 0, %398
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 3
  %401 = load i32, i32* %400, align 4
  %402 = mul i32 1, %401
  %403 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %404 = load i32*, i32** %403, align 8
  %405 = getelementptr inbounds i32, i32* %404, i32 %399
  %406 = load i32, i32* %405, align 4
  %407 = mul i32 %391, %406
  store i32 %407, i32* %376, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %408 = alloca %dimension_descriptor*, align 8
  %409 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %410 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %409, i32 0, i32 0
  store %dimension_descriptor* %410, %dimension_descriptor** %408, align 8
  %411 = alloca i32, align 4
  store i32 1, i32* %411, align 4
  %412 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %408, i32* %411)
  %413 = sub i32 %412, 1
  store i32 %413, i32* %"1_k", align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %414 = load i32, i32* %"1_k", align 4
  %415 = add i32 %414, 1
  %416 = alloca %dimension_descriptor*, align 8
  %417 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %418 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %417, i32 0, i32 0
  store %dimension_descriptor* %418, %dimension_descriptor** %416, align 8
  %419 = alloca i32, align 4
  store i32 1, i32* %419, align 4
  %420 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %416, i32* %419)
  %421 = icmp sle i32 %415, %420
  br i1 %421, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %422 = load i32, i32* %"1_k", align 4
  %423 = add i32 %422, 1
  store i32 %423, i32* %"1_k", align 4
  %424 = load i32, i32* %"1_k", align 4
  %425 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %426 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %425, i32 0, i32 0
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = sub i32 %424, %428
  %430 = mul i32 1, %429
  %431 = add i32 0, %430
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 3
  %433 = load i32, i32* %432, align 4
  %434 = mul i32 1, %433
  %435 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 0
  %436 = load i32*, i32** %435, align 8
  %437 = getelementptr inbounds i32, i32* %436, i32 %431
  %438 = load i32, i32* %"1_k", align 4
  %439 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %440 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %439, i32 0, i32 0
  %441 = getelementptr %dimension_descriptor, %dimension_descriptor* %440, i32 0, i32 1
  %442 = load i32, i32* %441, align 4
  %443 = sub i32 %438, %442
  %444 = mul i32 1, %443
  %445 = add i32 0, %444
  %446 = getelementptr %dimension_descriptor, %dimension_descriptor* %440, i32 0, i32 3
  %447 = load i32, i32* %446, align 4
  %448 = mul i32 1, %447
  %449 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %450 = load i32*, i32** %449, align 8
  %451 = getelementptr inbounds i32, i32* %450, i32 %445
  %452 = load i32, i32* %451, align 4
  %453 = load i32, i32* %"1_k", align 4
  %454 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %455 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %454, i32 0, i32 0
  %456 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = sub i32 %453, %457
  %459 = mul i32 1, %458
  %460 = add i32 0, %459
  %461 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 3
  %462 = load i32, i32* %461, align 4
  %463 = mul i32 1, %462
  %464 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %465 = load i32*, i32** %464, align 8
  %466 = getelementptr inbounds i32, i32* %465, i32 %460
  %467 = load i32, i32* %466, align 4
  %468 = mul i32 %452, %467
  store i32 %468, i32* %437, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %469 = alloca %dimension_descriptor*, align 8
  %470 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %471 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %470, i32 0, i32 0
  store %dimension_descriptor* %471, %dimension_descriptor** %469, align 8
  %472 = alloca i32, align 4
  store i32 1, i32* %472, align 4
  %473 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %469, i32* %472)
  %474 = sub i32 %473, 1
  store i32 %474, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.end6
  %475 = load i32, i32* %"1_k", align 4
  %476 = add i32 %475, 1
  %477 = alloca %dimension_descriptor*, align 8
  %478 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %479 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %478, i32 0, i32 0
  store %dimension_descriptor* %479, %dimension_descriptor** %477, align 8
  %480 = alloca i32, align 4
  store i32 1, i32* %480, align 4
  %481 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %477, i32* %480)
  %482 = icmp sle i32 %476, %481
  br i1 %482, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %483 = load i32, i32* %"1_k", align 4
  %484 = add i32 %483, 1
  store i32 %484, i32* %"1_k", align 4
  %485 = load i32, i32* %"1_k", align 4
  %486 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %487 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %486, i32 0, i32 0
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %487, i32 0, i32 1
  %489 = load i32, i32* %488, align 4
  %490 = sub i32 %485, %489
  %491 = mul i32 1, %490
  %492 = add i32 0, %491
  %493 = getelementptr %dimension_descriptor, %dimension_descriptor* %487, i32 0, i32 3
  %494 = load i32, i32* %493, align 4
  %495 = mul i32 1, %494
  %496 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 0
  %497 = load i32*, i32** %496, align 8
  %498 = getelementptr inbounds i32, i32* %497, i32 %492
  %499 = load i32, i32* %"1_k", align 4
  %500 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %501 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %500, i32 0, i32 0
  %502 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 1
  %503 = load i32, i32* %502, align 4
  %504 = sub i32 %499, %503
  %505 = mul i32 1, %504
  %506 = add i32 0, %505
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 3
  %508 = load i32, i32* %507, align 4
  %509 = mul i32 1, %508
  %510 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %511 = load i32*, i32** %510, align 8
  %512 = getelementptr inbounds i32, i32* %511, i32 %506
  %513 = load i32, i32* %512, align 4
  %514 = mul i32 %513, 2
  store i32 %514, i32* %498, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %515 = alloca %dimension_descriptor*, align 8
  %516 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %517 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %516, i32 0, i32 0
  store %dimension_descriptor* %517, %dimension_descriptor** %515, align 8
  %518 = alloca i32, align 4
  store i32 1, i32* %518, align 4
  %519 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %515, i32* %518)
  %520 = sub i32 %519, 1
  store i32 %520, i32* %"1_k", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.body11, %loop.end9
  %521 = load i32, i32* %"1_k", align 4
  %522 = add i32 %521, 1
  %523 = alloca %dimension_descriptor*, align 8
  %524 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %525 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %524, i32 0, i32 0
  store %dimension_descriptor* %525, %dimension_descriptor** %523, align 8
  %526 = alloca i32, align 4
  store i32 1, i32* %526, align 4
  %527 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %523, i32* %526)
  %528 = icmp sle i32 %522, %527
  br i1 %528, label %loop.body11, label %loop.end12

loop.body11:                                      ; preds = %loop.head10
  %529 = load i32, i32* %"1_k", align 4
  %530 = add i32 %529, 1
  store i32 %530, i32* %"1_k", align 4
  %531 = load i32, i32* %"1_k", align 4
  %532 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %533 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %532, i32 0, i32 0
  %534 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = sub i32 %531, %535
  %537 = mul i32 1, %536
  %538 = add i32 0, %537
  %539 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 3
  %540 = load i32, i32* %539, align 4
  %541 = mul i32 1, %540
  %542 = getelementptr %array.0, %array.0* %ab, i32 0, i32 0
  %543 = load i32*, i32** %542, align 8
  %544 = getelementptr inbounds i32, i32* %543, i32 %538
  %545 = load i32, i32* %"1_k", align 4
  %546 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %547 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %546, i32 0, i32 0
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %547, i32 0, i32 1
  %549 = load i32, i32* %548, align 4
  %550 = sub i32 %545, %549
  %551 = mul i32 1, %550
  %552 = add i32 0, %551
  %553 = getelementptr %dimension_descriptor, %dimension_descriptor* %547, i32 0, i32 3
  %554 = load i32, i32* %553, align 4
  %555 = mul i32 1, %554
  %556 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 0
  %557 = load i32*, i32** %556, align 8
  %558 = getelementptr inbounds i32, i32* %557, i32 %552
  %559 = load i32, i32* %558, align 4
  %560 = load i32, i32* %"1_k", align 4
  %561 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %562 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %561, i32 0, i32 0
  %563 = getelementptr %dimension_descriptor, %dimension_descriptor* %562, i32 0, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = sub i32 %560, %564
  %566 = mul i32 1, %565
  %567 = add i32 0, %566
  %568 = getelementptr %dimension_descriptor, %dimension_descriptor* %562, i32 0, i32 3
  %569 = load i32, i32* %568, align 4
  %570 = mul i32 1, %569
  %571 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = getelementptr inbounds i32, i32* %572, i32 %567
  %574 = load i32, i32* %573, align 4
  %575 = mul i32 %559, %574
  store i32 %575, i32* %544, align 4
  br label %loop.head10

loop.end12:                                       ; preds = %loop.head10
  %576 = alloca %dimension_descriptor*, align 8
  %577 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %578 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %577, i32 0, i32 0
  store %dimension_descriptor* %578, %dimension_descriptor** %576, align 8
  %579 = alloca i32, align 4
  store i32 1, i32* %579, align 4
  %580 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %576, i32* %579)
  %581 = sub i32 %580, 1
  store i32 %581, i32* %"1_k", align 4
  br label %loop.head13

loop.head13:                                      ; preds = %loop.body14, %loop.end12
  %582 = load i32, i32* %"1_k", align 4
  %583 = add i32 %582, 1
  %584 = alloca %dimension_descriptor*, align 8
  %585 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %586 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %585, i32 0, i32 0
  store %dimension_descriptor* %586, %dimension_descriptor** %584, align 8
  %587 = alloca i32, align 4
  store i32 1, i32* %587, align 4
  %588 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %584, i32* %587)
  %589 = icmp sle i32 %583, %588
  br i1 %589, label %loop.body14, label %loop.end15

loop.body14:                                      ; preds = %loop.head13
  %590 = load i32, i32* %"1_k", align 4
  %591 = add i32 %590, 1
  store i32 %591, i32* %"1_k", align 4
  %592 = load i32, i32* %"1_k", align 4
  %593 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %594 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %593, i32 0, i32 0
  %595 = getelementptr %dimension_descriptor, %dimension_descriptor* %594, i32 0, i32 1
  %596 = load i32, i32* %595, align 4
  %597 = sub i32 %592, %596
  %598 = mul i32 1, %597
  %599 = add i32 0, %598
  %600 = getelementptr %dimension_descriptor, %dimension_descriptor* %594, i32 0, i32 3
  %601 = load i32, i32* %600, align 4
  %602 = mul i32 1, %601
  %603 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 0
  %604 = load i32*, i32** %603, align 8
  %605 = getelementptr inbounds i32, i32* %604, i32 %599
  %606 = load i32, i32* %"1_k", align 4
  %607 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %608 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %607, i32 0, i32 0
  %609 = getelementptr %dimension_descriptor, %dimension_descriptor* %608, i32 0, i32 1
  %610 = load i32, i32* %609, align 4
  %611 = sub i32 %606, %610
  %612 = mul i32 1, %611
  %613 = add i32 0, %612
  %614 = getelementptr %dimension_descriptor, %dimension_descriptor* %608, i32 0, i32 3
  %615 = load i32, i32* %614, align 4
  %616 = mul i32 1, %615
  %617 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %618 = load i32*, i32** %617, align 8
  %619 = getelementptr inbounds i32, i32* %618, i32 %613
  %620 = load i32, i32* %619, align 4
  %621 = mul i32 %620, 2
  store i32 %621, i32* %605, align 4
  br label %loop.head13

loop.end15:                                       ; preds = %loop.head13
  %622 = alloca %dimension_descriptor*, align 8
  %623 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %624 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %623, i32 0, i32 0
  store %dimension_descriptor* %624, %dimension_descriptor** %622, align 8
  %625 = alloca i32, align 4
  store i32 1, i32* %625, align 4
  %626 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %622, i32* %625)
  %627 = sub i32 %626, 1
  store i32 %627, i32* %"1_k", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.body17, %loop.end15
  %628 = load i32, i32* %"1_k", align 4
  %629 = add i32 %628, 1
  %630 = alloca %dimension_descriptor*, align 8
  %631 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %632 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %631, i32 0, i32 0
  store %dimension_descriptor* %632, %dimension_descriptor** %630, align 8
  %633 = alloca i32, align 4
  store i32 1, i32* %633, align 4
  %634 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %630, i32* %633)
  %635 = icmp sle i32 %629, %634
  br i1 %635, label %loop.body17, label %loop.end18

loop.body17:                                      ; preds = %loop.head16
  %636 = load i32, i32* %"1_k", align 4
  %637 = add i32 %636, 1
  store i32 %637, i32* %"1_k", align 4
  %638 = load i32, i32* %"1_k", align 4
  %639 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %640 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %639, i32 0, i32 0
  %641 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 1
  %642 = load i32, i32* %641, align 4
  %643 = sub i32 %638, %642
  %644 = mul i32 1, %643
  %645 = add i32 0, %644
  %646 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 3
  %647 = load i32, i32* %646, align 4
  %648 = mul i32 1, %647
  %649 = getelementptr %array.0, %array.0* %bc, i32 0, i32 0
  %650 = load i32*, i32** %649, align 8
  %651 = getelementptr inbounds i32, i32* %650, i32 %645
  %652 = load i32, i32* %"1_k", align 4
  %653 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %654 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %653, i32 0, i32 0
  %655 = getelementptr %dimension_descriptor, %dimension_descriptor* %654, i32 0, i32 1
  %656 = load i32, i32* %655, align 4
  %657 = sub i32 %652, %656
  %658 = mul i32 1, %657
  %659 = add i32 0, %658
  %660 = getelementptr %dimension_descriptor, %dimension_descriptor* %654, i32 0, i32 3
  %661 = load i32, i32* %660, align 4
  %662 = mul i32 1, %661
  %663 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 0
  %664 = load i32*, i32** %663, align 8
  %665 = getelementptr inbounds i32, i32* %664, i32 %659
  %666 = load i32, i32* %665, align 4
  %667 = load i32, i32* %"1_k", align 4
  %668 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %669 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %668, i32 0, i32 0
  %670 = getelementptr %dimension_descriptor, %dimension_descriptor* %669, i32 0, i32 1
  %671 = load i32, i32* %670, align 4
  %672 = sub i32 %667, %671
  %673 = mul i32 1, %672
  %674 = add i32 0, %673
  %675 = getelementptr %dimension_descriptor, %dimension_descriptor* %669, i32 0, i32 3
  %676 = load i32, i32* %675, align 4
  %677 = mul i32 1, %676
  %678 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %679 = load i32*, i32** %678, align 8
  %680 = getelementptr inbounds i32, i32* %679, i32 %674
  %681 = load i32, i32* %680, align 4
  %682 = mul i32 %666, %681
  store i32 %682, i32* %651, align 4
  br label %loop.head16

loop.end18:                                       ; preds = %loop.head16
  %683 = alloca %dimension_descriptor*, align 8
  %684 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %685 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %684, i32 0, i32 0
  store %dimension_descriptor* %685, %dimension_descriptor** %683, align 8
  %686 = alloca i32, align 4
  store i32 1, i32* %686, align 4
  %687 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %683, i32* %686)
  %688 = sub i32 %687, 1
  store i32 %688, i32* %"1_k", align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.body20, %loop.end18
  %689 = load i32, i32* %"1_k", align 4
  %690 = add i32 %689, 1
  %691 = alloca %dimension_descriptor*, align 8
  %692 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %693 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %692, i32 0, i32 0
  store %dimension_descriptor* %693, %dimension_descriptor** %691, align 8
  %694 = alloca i32, align 4
  store i32 1, i32* %694, align 4
  %695 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %691, i32* %694)
  %696 = icmp sle i32 %690, %695
  br i1 %696, label %loop.body20, label %loop.end21

loop.body20:                                      ; preds = %loop.head19
  %697 = load i32, i32* %"1_k", align 4
  %698 = add i32 %697, 1
  store i32 %698, i32* %"1_k", align 4
  %699 = load i32, i32* %"1_k", align 4
  %700 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %701 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %700, i32 0, i32 0
  %702 = getelementptr %dimension_descriptor, %dimension_descriptor* %701, i32 0, i32 1
  %703 = load i32, i32* %702, align 4
  %704 = sub i32 %699, %703
  %705 = mul i32 1, %704
  %706 = add i32 0, %705
  %707 = getelementptr %dimension_descriptor, %dimension_descriptor* %701, i32 0, i32 3
  %708 = load i32, i32* %707, align 4
  %709 = mul i32 1, %708
  %710 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 0
  %711 = load i32*, i32** %710, align 8
  %712 = getelementptr inbounds i32, i32* %711, i32 %706
  %713 = load i32, i32* %"1_k", align 4
  %714 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %715 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %714, i32 0, i32 0
  %716 = getelementptr %dimension_descriptor, %dimension_descriptor* %715, i32 0, i32 1
  %717 = load i32, i32* %716, align 4
  %718 = sub i32 %713, %717
  %719 = mul i32 1, %718
  %720 = add i32 0, %719
  %721 = getelementptr %dimension_descriptor, %dimension_descriptor* %715, i32 0, i32 3
  %722 = load i32, i32* %721, align 4
  %723 = mul i32 1, %722
  %724 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %725 = load i32*, i32** %724, align 8
  %726 = getelementptr inbounds i32, i32* %725, i32 %720
  %727 = load i32, i32* %726, align 4
  %728 = mul i32 %727, 2
  store i32 %728, i32* %712, align 4
  br label %loop.head19

loop.end21:                                       ; preds = %loop.head19
  %729 = alloca %dimension_descriptor*, align 8
  %730 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %731 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %730, i32 0, i32 0
  store %dimension_descriptor* %731, %dimension_descriptor** %729, align 8
  %732 = alloca i32, align 4
  store i32 1, i32* %732, align 4
  %733 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %729, i32* %732)
  %734 = sub i32 %733, 1
  store i32 %734, i32* %"1_k", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.end21
  %735 = load i32, i32* %"1_k", align 4
  %736 = add i32 %735, 1
  %737 = alloca %dimension_descriptor*, align 8
  %738 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %739 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %738, i32 0, i32 0
  store %dimension_descriptor* %739, %dimension_descriptor** %737, align 8
  %740 = alloca i32, align 4
  store i32 1, i32* %740, align 4
  %741 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %737, i32* %740)
  %742 = icmp sle i32 %736, %741
  br i1 %742, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %743 = load i32, i32* %"1_k", align 4
  %744 = add i32 %743, 1
  store i32 %744, i32* %"1_k", align 4
  %745 = load i32, i32* %"1_k", align 4
  %746 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %747 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %746, i32 0, i32 0
  %748 = getelementptr %dimension_descriptor, %dimension_descriptor* %747, i32 0, i32 1
  %749 = load i32, i32* %748, align 4
  %750 = sub i32 %745, %749
  %751 = mul i32 1, %750
  %752 = add i32 0, %751
  %753 = getelementptr %dimension_descriptor, %dimension_descriptor* %747, i32 0, i32 3
  %754 = load i32, i32* %753, align 4
  %755 = mul i32 1, %754
  %756 = getelementptr %array.0, %array.0* %ca, i32 0, i32 0
  %757 = load i32*, i32** %756, align 8
  %758 = getelementptr inbounds i32, i32* %757, i32 %752
  %759 = load i32, i32* %"1_k", align 4
  %760 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %761 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %760, i32 0, i32 0
  %762 = getelementptr %dimension_descriptor, %dimension_descriptor* %761, i32 0, i32 1
  %763 = load i32, i32* %762, align 4
  %764 = sub i32 %759, %763
  %765 = mul i32 1, %764
  %766 = add i32 0, %765
  %767 = getelementptr %dimension_descriptor, %dimension_descriptor* %761, i32 0, i32 3
  %768 = load i32, i32* %767, align 4
  %769 = mul i32 1, %768
  %770 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 0
  %771 = load i32*, i32** %770, align 8
  %772 = getelementptr inbounds i32, i32* %771, i32 %766
  %773 = load i32, i32* %772, align 4
  %774 = load i32, i32* %"1_k", align 4
  %775 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %776 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %775, i32 0, i32 0
  %777 = getelementptr %dimension_descriptor, %dimension_descriptor* %776, i32 0, i32 1
  %778 = load i32, i32* %777, align 4
  %779 = sub i32 %774, %778
  %780 = mul i32 1, %779
  %781 = add i32 0, %780
  %782 = getelementptr %dimension_descriptor, %dimension_descriptor* %776, i32 0, i32 3
  %783 = load i32, i32* %782, align 4
  %784 = mul i32 1, %783
  %785 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %786 = load i32*, i32** %785, align 8
  %787 = getelementptr inbounds i32, i32* %786, i32 %781
  %788 = load i32, i32* %787, align 4
  %789 = mul i32 %773, %788
  store i32 %789, i32* %758, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %790 = alloca %dimension_descriptor*, align 8
  %791 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %792 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %791, i32 0, i32 0
  store %dimension_descriptor* %792, %dimension_descriptor** %790, align 8
  %793 = alloca i32, align 4
  store i32 1, i32* %793, align 4
  %794 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %790, i32* %793)
  %795 = sub i32 %794, 1
  store i32 %795, i32* %"1_k", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.body26, %loop.end24
  %796 = load i32, i32* %"1_k", align 4
  %797 = add i32 %796, 1
  %798 = alloca %dimension_descriptor*, align 8
  %799 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %800 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %799, i32 0, i32 0
  store %dimension_descriptor* %800, %dimension_descriptor** %798, align 8
  %801 = alloca i32, align 4
  store i32 1, i32* %801, align 4
  %802 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %798, i32* %801)
  %803 = icmp sle i32 %797, %802
  br i1 %803, label %loop.body26, label %loop.end27

loop.body26:                                      ; preds = %loop.head25
  %804 = load i32, i32* %"1_k", align 4
  %805 = add i32 %804, 1
  store i32 %805, i32* %"1_k", align 4
  %806 = load i32, i32* %"1_k", align 4
  %807 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %808 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %807, i32 0, i32 0
  %809 = getelementptr %dimension_descriptor, %dimension_descriptor* %808, i32 0, i32 1
  %810 = load i32, i32* %809, align 4
  %811 = sub i32 %806, %810
  %812 = mul i32 1, %811
  %813 = add i32 0, %812
  %814 = getelementptr %dimension_descriptor, %dimension_descriptor* %808, i32 0, i32 3
  %815 = load i32, i32* %814, align 4
  %816 = mul i32 1, %815
  %817 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 0
  %818 = load i32*, i32** %817, align 8
  %819 = getelementptr inbounds i32, i32* %818, i32 %813
  %820 = load i32, i32* %"1_k", align 4
  %821 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %822 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %821, i32 0, i32 0
  %823 = getelementptr %dimension_descriptor, %dimension_descriptor* %822, i32 0, i32 1
  %824 = load i32, i32* %823, align 4
  %825 = sub i32 %820, %824
  %826 = mul i32 1, %825
  %827 = add i32 0, %826
  %828 = getelementptr %dimension_descriptor, %dimension_descriptor* %822, i32 0, i32 3
  %829 = load i32, i32* %828, align 4
  %830 = mul i32 1, %829
  %831 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %832 = load i32*, i32** %831, align 8
  %833 = getelementptr inbounds i32, i32* %832, i32 %827
  %834 = load i32, i32* %833, align 4
  %835 = mul i32 %834, 2
  store i32 %835, i32* %819, align 4
  br label %loop.head25

loop.end27:                                       ; preds = %loop.head25
  %836 = alloca %dimension_descriptor*, align 8
  %837 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %838 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %837, i32 0, i32 0
  store %dimension_descriptor* %838, %dimension_descriptor** %836, align 8
  %839 = alloca i32, align 4
  store i32 1, i32* %839, align 4
  %840 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %836, i32* %839)
  %841 = sub i32 %840, 1
  store i32 %841, i32* %"1_k", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %loop.end27
  %842 = load i32, i32* %"1_k", align 4
  %843 = add i32 %842, 1
  %844 = alloca %dimension_descriptor*, align 8
  %845 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %846 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %845, i32 0, i32 0
  store %dimension_descriptor* %846, %dimension_descriptor** %844, align 8
  %847 = alloca i32, align 4
  store i32 1, i32* %847, align 4
  %848 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %844, i32* %847)
  %849 = icmp sle i32 %843, %848
  br i1 %849, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %850 = load i32, i32* %"1_k", align 4
  %851 = add i32 %850, 1
  store i32 %851, i32* %"1_k", align 4
  %852 = load i32, i32* %"1_k", align 4
  %853 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %854 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %853, i32 0, i32 0
  %855 = getelementptr %dimension_descriptor, %dimension_descriptor* %854, i32 0, i32 1
  %856 = load i32, i32* %855, align 4
  %857 = sub i32 %852, %856
  %858 = mul i32 1, %857
  %859 = add i32 0, %858
  %860 = getelementptr %dimension_descriptor, %dimension_descriptor* %854, i32 0, i32 3
  %861 = load i32, i32* %860, align 4
  %862 = mul i32 1, %861
  %863 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 0
  %864 = load i32*, i32** %863, align 8
  %865 = getelementptr inbounds i32, i32* %864, i32 %859
  %866 = load i32, i32* %"1_k", align 4
  %867 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %868 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %867, i32 0, i32 0
  %869 = getelementptr %dimension_descriptor, %dimension_descriptor* %868, i32 0, i32 1
  %870 = load i32, i32* %869, align 4
  %871 = sub i32 %866, %870
  %872 = mul i32 1, %871
  %873 = add i32 0, %872
  %874 = getelementptr %dimension_descriptor, %dimension_descriptor* %868, i32 0, i32 3
  %875 = load i32, i32* %874, align 4
  %876 = mul i32 1, %875
  %877 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 0
  %878 = load i32*, i32** %877, align 8
  %879 = getelementptr inbounds i32, i32* %878, i32 %873
  %880 = load i32, i32* %879, align 4
  %881 = load i32, i32* %"1_k", align 4
  %882 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %883 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %882, i32 0, i32 0
  %884 = getelementptr %dimension_descriptor, %dimension_descriptor* %883, i32 0, i32 1
  %885 = load i32, i32* %884, align 4
  %886 = sub i32 %881, %885
  %887 = mul i32 1, %886
  %888 = add i32 0, %887
  %889 = getelementptr %dimension_descriptor, %dimension_descriptor* %883, i32 0, i32 3
  %890 = load i32, i32* %889, align 4
  %891 = mul i32 1, %890
  %892 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %893 = load i32*, i32** %892, align 8
  %894 = getelementptr inbounds i32, i32* %893, i32 %888
  %895 = load i32, i32* %894, align 4
  %896 = mul i32 %880, %895
  store i32 %896, i32* %865, align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %897 = alloca %dimension_descriptor*, align 8
  %898 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %899 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %898, i32 0, i32 0
  store %dimension_descriptor* %899, %dimension_descriptor** %897, align 8
  %900 = alloca i32, align 4
  store i32 1, i32* %900, align 4
  %901 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %897, i32* %900)
  %902 = sub i32 %901, 1
  store i32 %902, i32* %"1_k", align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %loop.end30
  %903 = load i32, i32* %"1_k", align 4
  %904 = add i32 %903, 1
  %905 = alloca %dimension_descriptor*, align 8
  %906 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %907 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %906, i32 0, i32 0
  store %dimension_descriptor* %907, %dimension_descriptor** %905, align 8
  %908 = alloca i32, align 4
  store i32 1, i32* %908, align 4
  %909 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %905, i32* %908)
  %910 = icmp sle i32 %904, %909
  br i1 %910, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %911 = load i32, i32* %"1_k", align 4
  %912 = add i32 %911, 1
  store i32 %912, i32* %"1_k", align 4
  %913 = load i32, i32* %"1_k", align 4
  %914 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %915 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %914, i32 0, i32 0
  %916 = getelementptr %dimension_descriptor, %dimension_descriptor* %915, i32 0, i32 1
  %917 = load i32, i32* %916, align 4
  %918 = sub i32 %913, %917
  %919 = mul i32 1, %918
  %920 = add i32 0, %919
  %921 = getelementptr %dimension_descriptor, %dimension_descriptor* %915, i32 0, i32 3
  %922 = load i32, i32* %921, align 4
  %923 = mul i32 1, %922
  %924 = getelementptr %array.0, %array.0* %abc, i32 0, i32 0
  %925 = load i32*, i32** %924, align 8
  %926 = getelementptr inbounds i32, i32* %925, i32 %920
  %927 = load i32, i32* %"1_k", align 4
  %928 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %929 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %928, i32 0, i32 0
  %930 = getelementptr %dimension_descriptor, %dimension_descriptor* %929, i32 0, i32 1
  %931 = load i32, i32* %930, align 4
  %932 = sub i32 %927, %931
  %933 = mul i32 1, %932
  %934 = add i32 0, %933
  %935 = getelementptr %dimension_descriptor, %dimension_descriptor* %929, i32 0, i32 3
  %936 = load i32, i32* %935, align 4
  %937 = mul i32 1, %936
  %938 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 0
  %939 = load i32*, i32** %938, align 8
  %940 = getelementptr inbounds i32, i32* %939, i32 %934
  %941 = load i32, i32* %940, align 4
  %942 = load i32, i32* %"1_k", align 4
  %943 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %944 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %943, i32 0, i32 0
  %945 = getelementptr %dimension_descriptor, %dimension_descriptor* %944, i32 0, i32 1
  %946 = load i32, i32* %945, align 4
  %947 = sub i32 %942, %946
  %948 = mul i32 1, %947
  %949 = add i32 0, %948
  %950 = getelementptr %dimension_descriptor, %dimension_descriptor* %944, i32 0, i32 3
  %951 = load i32, i32* %950, align 4
  %952 = mul i32 1, %951
  %953 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %954 = load i32*, i32** %953, align 8
  %955 = getelementptr inbounds i32, i32* %954, i32 %949
  %956 = load i32, i32* %955, align 4
  %957 = mul i32 %941, %956
  store i32 %957, i32* %926, align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  store i32 1, i32* %status, align 4
  %958 = load %array.0, %array.0* %a_2, align 8
  %959 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 3
  %960 = load i1, i1* %959, align 1
  br i1 %960, label %then, label %else

then:                                             ; preds = %loop.end33
  %961 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 0
  %962 = load i32*, i32** %961, align 8
  %963 = alloca i8*, align 8
  %964 = bitcast i32* %962 to i8*
  store i8* %964, i8** %963, align 8
  %965 = load i8*, i8** %963, align 8
  call void (i8*, ...) @_lfortran_free(i8* %965)
  %966 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 3
  store i1 false, i1* %966, align 1
  br label %ifcont

else:                                             ; preds = %loop.end33
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %967 = load %array.0, %array.0* %ab, align 8
  %968 = getelementptr %array.0, %array.0* %ab, i32 0, i32 3
  %969 = load i1, i1* %968, align 1
  br i1 %969, label %then34, label %else35

then34:                                           ; preds = %ifcont
  %970 = getelementptr %array.0, %array.0* %ab, i32 0, i32 0
  %971 = load i32*, i32** %970, align 8
  %972 = alloca i8*, align 8
  %973 = bitcast i32* %971 to i8*
  store i8* %973, i8** %972, align 8
  %974 = load i8*, i8** %972, align 8
  call void (i8*, ...) @_lfortran_free(i8* %974)
  %975 = getelementptr %array.0, %array.0* %ab, i32 0, i32 3
  store i1 false, i1* %975, align 1
  br label %ifcont36

else35:                                           ; preds = %ifcont
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %iftmp37 = phi i32 [ 1, %then34 ], [ 2, %else35 ]
  %976 = load %array.0, %array.0* %abc, align 8
  %977 = getelementptr %array.0, %array.0* %abc, i32 0, i32 3
  %978 = load i1, i1* %977, align 1
  br i1 %978, label %then38, label %else39

then38:                                           ; preds = %ifcont36
  %979 = getelementptr %array.0, %array.0* %abc, i32 0, i32 0
  %980 = load i32*, i32** %979, align 8
  %981 = alloca i8*, align 8
  %982 = bitcast i32* %980 to i8*
  store i8* %982, i8** %981, align 8
  %983 = load i8*, i8** %981, align 8
  call void (i8*, ...) @_lfortran_free(i8* %983)
  %984 = getelementptr %array.0, %array.0* %abc, i32 0, i32 3
  store i1 false, i1* %984, align 1
  br label %ifcont40

else39:                                           ; preds = %ifcont36
  br label %ifcont40

ifcont40:                                         ; preds = %else39, %then38
  %iftmp41 = phi i32 [ 1, %then38 ], [ 2, %else39 ]
  %985 = load %array.0, %array.0* %b_2, align 8
  %986 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 3
  %987 = load i1, i1* %986, align 1
  br i1 %987, label %then42, label %else43

then42:                                           ; preds = %ifcont40
  %988 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 0
  %989 = load i32*, i32** %988, align 8
  %990 = alloca i8*, align 8
  %991 = bitcast i32* %989 to i8*
  store i8* %991, i8** %990, align 8
  %992 = load i8*, i8** %990, align 8
  call void (i8*, ...) @_lfortran_free(i8* %992)
  %993 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 3
  store i1 false, i1* %993, align 1
  br label %ifcont44

else43:                                           ; preds = %ifcont40
  br label %ifcont44

ifcont44:                                         ; preds = %else43, %then42
  %iftmp45 = phi i32 [ 1, %then42 ], [ 2, %else43 ]
  %994 = load %array.0, %array.0* %bc, align 8
  %995 = getelementptr %array.0, %array.0* %bc, i32 0, i32 3
  %996 = load i1, i1* %995, align 1
  br i1 %996, label %then46, label %else47

then46:                                           ; preds = %ifcont44
  %997 = getelementptr %array.0, %array.0* %bc, i32 0, i32 0
  %998 = load i32*, i32** %997, align 8
  %999 = alloca i8*, align 8
  %1000 = bitcast i32* %998 to i8*
  store i8* %1000, i8** %999, align 8
  %1001 = load i8*, i8** %999, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1001)
  %1002 = getelementptr %array.0, %array.0* %bc, i32 0, i32 3
  store i1 false, i1* %1002, align 1
  br label %ifcont48

else47:                                           ; preds = %ifcont44
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %iftmp49 = phi i32 [ 1, %then46 ], [ 2, %else47 ]
  %1003 = load %array.0, %array.0* %c_2, align 8
  %1004 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 3
  %1005 = load i1, i1* %1004, align 1
  br i1 %1005, label %then50, label %else51

then50:                                           ; preds = %ifcont48
  %1006 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 0
  %1007 = load i32*, i32** %1006, align 8
  %1008 = alloca i8*, align 8
  %1009 = bitcast i32* %1007 to i8*
  store i8* %1009, i8** %1008, align 8
  %1010 = load i8*, i8** %1008, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1010)
  %1011 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 3
  store i1 false, i1* %1011, align 1
  br label %ifcont52

else51:                                           ; preds = %ifcont48
  br label %ifcont52

ifcont52:                                         ; preds = %else51, %then50
  %iftmp53 = phi i32 [ 1, %then50 ], [ 2, %else51 ]
  %1012 = load %array.0, %array.0* %ca, align 8
  %1013 = getelementptr %array.0, %array.0* %ca, i32 0, i32 3
  %1014 = load i1, i1* %1013, align 1
  br i1 %1014, label %then54, label %else55

then54:                                           ; preds = %ifcont52
  %1015 = getelementptr %array.0, %array.0* %ca, i32 0, i32 0
  %1016 = load i32*, i32** %1015, align 8
  %1017 = alloca i8*, align 8
  %1018 = bitcast i32* %1016 to i8*
  store i8* %1018, i8** %1017, align 8
  %1019 = load i8*, i8** %1017, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1019)
  %1020 = getelementptr %array.0, %array.0* %ca, i32 0, i32 3
  store i1 false, i1* %1020, align 1
  br label %ifcont56

else55:                                           ; preds = %ifcont52
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %iftmp57 = phi i32 [ 1, %then54 ], [ 2, %else55 ]
  %1021 = load i32, i32* %status, align 4
  ret i32 %1021
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %b = alloca %array.0, align 8
  %c = alloca %array.0, align 8
  %ierr = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 10, i32* %n, align 4
  %0 = load i32, i32* %n, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %1, align 4
  %2 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %2, align 1
  %3 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %4 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %3, i32 0, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 0
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 1
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 2
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 3
  store i32 1, i32* %5, align 4
  store i32 1, i32* %6, align 4
  store i32 %0, i32* %7, align 4
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %6, align 4
  %11 = sub i32 %9, %10
  %12 = add i32 %11, 1
  %13 = mul i32 1, %12
  store i32 %12, i32* %8, align 4
  %14 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %15 = alloca i32, align 4
  %16 = mul i32 %13, 4
  store i32 %16, i32* %15, align 4
  %17 = load i32, i32* %15, align 4
  %18 = call i8* (i32, ...) @_lfortran_malloc(i32 %17)
  %19 = bitcast i8* %18 to i32*
  store i32* %19, i32** %14, align 8
  %20 = load i32, i32* %n, align 4
  %21 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %22, align 1
  %23 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %24 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 %20, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  %33 = mul i32 1, %32
  store i32 %32, i32* %28, align 4
  %34 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %35 = alloca i32, align 4
  %36 = mul i32 %33, 4
  store i32 %36, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = call i8* (i32, ...) @_lfortran_malloc(i32 %37)
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %34, align 8
  %40 = load i32, i32* %n, align 4
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %42, align 1
  %43 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %44 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 %40, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  %53 = mul i32 1, %52
  store i32 %52, i32* %48, align 4
  %54 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %55 = alloca i32, align 4
  %56 = mul i32 %53, 4
  store i32 %56, i32* %55, align 4
  %57 = load i32, i32* %55, align 4
  %58 = call i8* (i32, ...) @_lfortran_malloc(i32 %57)
  %59 = bitcast i8* %58 to i32*
  store i32* %59, i32** %54, align 8
  %60 = alloca %dimension_descriptor*, align 8
  %61 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %62 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %61, i32 0, i32 0
  store %dimension_descriptor* %62, %dimension_descriptor** %60, align 8
  %63 = alloca i32, align 4
  store i32 1, i32* %63, align 4
  %64 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %60, i32* %63)
  %65 = sub i32 %64, 1
  store i32 %65, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %66 = load i32, i32* %"1_k", align 4
  %67 = add i32 %66, 1
  %68 = alloca %dimension_descriptor*, align 8
  %69 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %70 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %69, i32 0, i32 0
  store %dimension_descriptor* %70, %dimension_descriptor** %68, align 8
  %71 = alloca i32, align 4
  store i32 1, i32* %71, align 4
  %72 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %68, i32* %71)
  %73 = icmp sle i32 %67, %72
  br i1 %73, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %74 = load i32, i32* %"1_k", align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %"1_k", align 4
  %76 = load i32, i32* %"1_k", align 4
  %77 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %78 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %77, i32 0, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 %76, %80
  %82 = mul i32 1, %81
  %83 = add i32 0, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 1, %85
  %87 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds i32, i32* %88, i32 %83
  store i32 1, i32* %89, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %90 = alloca %dimension_descriptor*, align 8
  %91 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %92 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %91, i32 0, i32 0
  store %dimension_descriptor* %92, %dimension_descriptor** %90, align 8
  %93 = alloca i32, align 4
  store i32 1, i32* %93, align 4
  %94 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %90, i32* %93)
  %95 = sub i32 %94, 1
  store i32 %95, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %96 = load i32, i32* %"1_k", align 4
  %97 = add i32 %96, 1
  %98 = alloca %dimension_descriptor*, align 8
  %99 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %100 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %99, i32 0, i32 0
  store %dimension_descriptor* %100, %dimension_descriptor** %98, align 8
  %101 = alloca i32, align 4
  store i32 1, i32* %101, align 4
  %102 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %98, i32* %101)
  %103 = icmp sle i32 %97, %102
  br i1 %103, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %104 = load i32, i32* %"1_k", align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %"1_k", align 4
  %106 = load i32, i32* %"1_k", align 4
  %107 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %108 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %107, i32 0, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sub i32 %106, %110
  %112 = mul i32 1, %111
  %113 = add i32 0, %112
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = mul i32 1, %115
  %117 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 %113
  store i32 2, i32* %119, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %120 = alloca %dimension_descriptor*, align 8
  %121 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %122 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %121, i32 0, i32 0
  store %dimension_descriptor* %122, %dimension_descriptor** %120, align 8
  %123 = alloca i32, align 4
  store i32 1, i32* %123, align 4
  %124 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %120, i32* %123)
  %125 = sub i32 %124, 1
  store i32 %125, i32* %"1_k", align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %126 = load i32, i32* %"1_k", align 4
  %127 = add i32 %126, 1
  %128 = alloca %dimension_descriptor*, align 8
  %129 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %130 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %129, i32 0, i32 0
  store %dimension_descriptor* %130, %dimension_descriptor** %128, align 8
  %131 = alloca i32, align 4
  store i32 1, i32* %131, align 4
  %132 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %128, i32* %131)
  %133 = icmp sle i32 %127, %132
  br i1 %133, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %134 = load i32, i32* %"1_k", align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %"1_k", align 4
  %136 = load i32, i32* %"1_k", align 4
  %137 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %138 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %137, i32 0, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 %136, %140
  %142 = mul i32 1, %141
  %143 = add i32 0, %142
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = mul i32 1, %145
  %147 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i32 %143
  store i32 3, i32* %149, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %150 = alloca %array.0, align 8
  %151 = alloca %array.0, align 8
  %152 = alloca %array.0, align 8
  %153 = call i32 @whole_square(%array.0* %a, %array.0* %b, %array.0* %c)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %153)
  %154 = load %array.0, %array.0* %a, align 8
  %155 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %156 = load i1, i1* %155, align 1
  br i1 %156, label %then, label %else

then:                                             ; preds = %loop.end6
  %157 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = alloca i8*, align 8
  %160 = bitcast i32* %158 to i8*
  store i8* %160, i8** %159, align 8
  %161 = load i8*, i8** %159, align 8
  call void (i8*, ...) @_lfortran_free(i8* %161)
  %162 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %162, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %163 = load %array.0, %array.0* %b, align 8
  %164 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %165 = load i1, i1* %164, align 1
  br i1 %165, label %then7, label %else8

then7:                                            ; preds = %ifcont
  %166 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = alloca i8*, align 8
  %169 = bitcast i32* %167 to i8*
  store i8* %169, i8** %168, align 8
  %170 = load i8*, i8** %168, align 8
  call void (i8*, ...) @_lfortran_free(i8* %170)
  %171 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %171, align 1
  br label %ifcont9

else8:                                            ; preds = %ifcont
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %iftmp10 = phi i32 [ 1, %then7 ], [ 2, %else8 ]
  %172 = load %array.0, %array.0* %c, align 8
  %173 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %174 = load i1, i1* %173, align 1
  br i1 %174, label %then11, label %else12

then11:                                           ; preds = %ifcont9
  %175 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = alloca i8*, align 8
  %178 = bitcast i32* %176 to i8*
  store i8* %178, i8** %177, align 8
  %179 = load i8*, i8** %177, align 8
  call void (i8*, ...) @_lfortran_free(i8* %179)
  %180 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %180, align 1
  br label %ifcont13

else12:                                           ; preds = %ifcont9
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %then11
  %iftmp14 = phi i32 [ 1, %then11 ], [ 2, %else12 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

