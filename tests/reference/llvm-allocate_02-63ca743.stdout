; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [1 x %dimension_descriptor] }
%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%array.0 = type { i32*, i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @__module_lfortran_intrinsic_array_abs(%array*)

declare i1 @__module_lfortran_intrinsic_array_allocated(%array*)

define i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare i32 @__module_lfortran_intrinsic_array_max(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_maxval(%array*)

declare i32 @__module_lfortran_intrinsic_array_min(i32*, i32*)

declare i32 @__module_lfortran_intrinsic_array_minval(%array*)

declare i32 @__module_lfortran_intrinsic_array_real(%array*, i32*)

define i32 @__module_lfortran_intrinsic_array_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

declare i32 @__module_lfortran_intrinsic_array_sum(%array*)

declare i32 @__module_lfortran_intrinsic_array_tiny(%array*)

define i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @whole_square(%array.0* %a, %array.0* %b, %array.0* %c) {
.entry:
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %a_2 = alloca %array.0, align 8
  %ab = alloca %array.0, align 8
  %abc = alloca %array.0, align 8
  %b_2 = alloca %array.0, align 8
  %bc = alloca %array.0, align 8
  %c_2 = alloca %array.0, align 8
  %ca = alloca %array.0, align 8
  %n = alloca i32, align 4
  %status = alloca i32, align 4
  %"~0_bin_op_res" = alloca %array, align 8
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = alloca %dimension_descriptor*, align 8
  %6 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %7 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %6, i32 0, i32 0
  store %dimension_descriptor* %7, %dimension_descriptor** %5, align 8
  %8 = alloca i32, align 4
  store i32 1, i32* %8, align 4
  %9 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %5, i32* %8)
  %10 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %12 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 3
  store i32 1, i32* %13, align 4
  store i32 %4, i32* %14, align 4
  store i32 %9, i32* %15, align 4
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %14, align 4
  %19 = sub i32 %17, %18
  %20 = add i32 %19, 1
  store i32 %20, i32* %16, align 4
  %21 = alloca i32, align 4
  %22 = sub i32 %9, %4
  %23 = add i32 %22, 1
  %24 = mul i32 1, %23
  store i32 %24, i32* %21, align 4
  %25 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 0
  %26 = load i32, i32* %21, align 4
  %27 = alloca i32, i32 %26, align 4
  store i32* %27, i32** %25, align 8
  %"~1_bin_op_res" = alloca %array, align 8
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %30 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %29, i32 0, i32 0
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 1, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %28, i32* %31)
  %33 = alloca %dimension_descriptor*, align 8
  %34 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %35 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %34, i32 0, i32 0
  store %dimension_descriptor* %35, %dimension_descriptor** %33, align 8
  %36 = alloca i32, align 4
  store i32 1, i32* %36, align 4
  %37 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %33, i32* %36)
  %38 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %40 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  store i32 1, i32* %41, align 4
  store i32 %32, i32* %42, align 4
  store i32 %37, i32* %43, align 4
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %42, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  store i32 %48, i32* %44, align 4
  %49 = alloca i32, align 4
  %50 = sub i32 %37, %32
  %51 = add i32 %50, 1
  %52 = mul i32 1, %51
  store i32 %52, i32* %49, align 4
  %53 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 0
  %54 = load i32, i32* %49, align 4
  %55 = alloca i32, i32 %54, align 4
  store i32* %55, i32** %53, align 8
  %"~2_bin_op_res" = alloca %array, align 8
  %56 = alloca %dimension_descriptor*, align 8
  %57 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %58 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %57, i32 0, i32 0
  store %dimension_descriptor* %58, %dimension_descriptor** %56, align 8
  %59 = alloca i32, align 4
  store i32 1, i32* %59, align 4
  %60 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %56, i32* %59)
  %61 = alloca %dimension_descriptor*, align 8
  %62 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %63 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %62, i32 0, i32 0
  store %dimension_descriptor* %63, %dimension_descriptor** %61, align 8
  %64 = alloca i32, align 4
  store i32 1, i32* %64, align 4
  %65 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %61, i32* %64)
  %66 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 1
  store i32 0, i32* %66, align 4
  %67 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %68 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %67, i32 0, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 %60, i32* %70, align 4
  store i32 %65, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  store i32 %76, i32* %72, align 4
  %77 = alloca i32, align 4
  %78 = sub i32 %65, %60
  %79 = add i32 %78, 1
  %80 = mul i32 1, %79
  store i32 %80, i32* %77, align 4
  %81 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 0
  %82 = load i32, i32* %77, align 4
  %83 = alloca i32, i32 %82, align 4
  store i32* %83, i32** %81, align 8
  %"~3_bin_op_res" = alloca %array, align 8
  %84 = alloca %dimension_descriptor*, align 8
  %85 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %86 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %85, i32 0, i32 0
  store %dimension_descriptor* %86, %dimension_descriptor** %84, align 8
  %87 = alloca i32, align 4
  store i32 1, i32* %87, align 4
  %88 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %84, i32* %87)
  %89 = alloca %dimension_descriptor*, align 8
  %90 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %91 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %90, i32 0, i32 0
  store %dimension_descriptor* %91, %dimension_descriptor** %89, align 8
  %92 = alloca i32, align 4
  store i32 1, i32* %92, align 4
  %93 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %89, i32* %92)
  %94 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 1
  store i32 0, i32* %94, align 4
  %95 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %96 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %95, i32 0, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 2
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 3
  store i32 1, i32* %97, align 4
  store i32 %88, i32* %98, align 4
  store i32 %93, i32* %99, align 4
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %98, align 4
  %103 = sub i32 %101, %102
  %104 = add i32 %103, 1
  store i32 %104, i32* %100, align 4
  %105 = alloca i32, align 4
  %106 = sub i32 %93, %88
  %107 = add i32 %106, 1
  %108 = mul i32 1, %107
  store i32 %108, i32* %105, align 4
  %109 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 0
  %110 = load i32, i32* %105, align 4
  %111 = alloca i32, i32 %110, align 4
  store i32* %111, i32** %109, align 8
  %"~4_bin_op_res" = alloca %array, align 8
  %112 = alloca %dimension_descriptor*, align 8
  %113 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %114 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %113, i32 0, i32 0
  store %dimension_descriptor* %114, %dimension_descriptor** %112, align 8
  %115 = alloca i32, align 4
  store i32 1, i32* %115, align 4
  %116 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %112, i32* %115)
  %117 = alloca %dimension_descriptor*, align 8
  %118 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %119 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %118, i32 0, i32 0
  store %dimension_descriptor* %119, %dimension_descriptor** %117, align 8
  %120 = alloca i32, align 4
  store i32 1, i32* %120, align 4
  %121 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %117, i32* %120)
  %122 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 1
  store i32 0, i32* %122, align 4
  %123 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %124 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 2
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  store i32 1, i32* %125, align 4
  store i32 %116, i32* %126, align 4
  store i32 %121, i32* %127, align 4
  %129 = load i32, i32* %127, align 4
  %130 = load i32, i32* %126, align 4
  %131 = sub i32 %129, %130
  %132 = add i32 %131, 1
  store i32 %132, i32* %128, align 4
  %133 = alloca i32, align 4
  %134 = sub i32 %121, %116
  %135 = add i32 %134, 1
  %136 = mul i32 1, %135
  store i32 %136, i32* %133, align 4
  %137 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 0
  %138 = load i32, i32* %133, align 4
  %139 = alloca i32, i32 %138, align 4
  store i32* %139, i32** %137, align 8
  %140 = alloca %size_arg, align 8
  %141 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %142 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %141, i32 0, i32 0
  %143 = getelementptr %size_arg, %size_arg* %140, i32 0, i32 0
  store %dimension_descriptor* %142, %dimension_descriptor** %143, align 8
  %144 = getelementptr %size_arg, %size_arg* %140, i32 0, i32 1
  store i32 1, i32* %144, align 4
  %145 = call i32 @__module_lfortran_intrinsic_array_size(%size_arg* %140)
  store i32 %145, i32* %n, align 4
  %146 = load i32, i32* %n, align 4
  %147 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 1
  store i32 0, i32* %147, align 4
  %148 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 3
  store i1 true, i1* %148, align 1
  %149 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %150 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %149, i32 0, i32 0
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 0
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 1
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 2
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %150, i32 0, i32 3
  store i32 1, i32* %151, align 4
  store i32 1, i32* %152, align 4
  store i32 %146, i32* %153, align 4
  %155 = load i32, i32* %153, align 4
  %156 = load i32, i32* %152, align 4
  %157 = sub i32 %155, %156
  %158 = add i32 %157, 1
  %159 = mul i32 1, %158
  store i32 %158, i32* %154, align 4
  %160 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 0
  %161 = alloca i32, align 4
  %162 = mul i32 %159, 4
  store i32 %162, i32* %161, align 4
  %163 = load i32, i32* %161, align 4
  %164 = call i8* (i32, ...) @_lfortran_malloc(i32 %163)
  %165 = bitcast i8* %164 to i32*
  store i32* %165, i32** %160, align 8
  %166 = load i32, i32* %n, align 4
  %167 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 1
  store i32 0, i32* %167, align 4
  %168 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 3
  store i1 true, i1* %168, align 1
  %169 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %170 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %169, i32 0, i32 0
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 0
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 2
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  store i32 1, i32* %171, align 4
  store i32 1, i32* %172, align 4
  store i32 %166, i32* %173, align 4
  %175 = load i32, i32* %173, align 4
  %176 = load i32, i32* %172, align 4
  %177 = sub i32 %175, %176
  %178 = add i32 %177, 1
  %179 = mul i32 1, %178
  store i32 %178, i32* %174, align 4
  %180 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 0
  %181 = alloca i32, align 4
  %182 = mul i32 %179, 4
  store i32 %182, i32* %181, align 4
  %183 = load i32, i32* %181, align 4
  %184 = call i8* (i32, ...) @_lfortran_malloc(i32 %183)
  %185 = bitcast i8* %184 to i32*
  store i32* %185, i32** %180, align 8
  %186 = load i32, i32* %n, align 4
  %187 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 1
  store i32 0, i32* %187, align 4
  %188 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 3
  store i1 true, i1* %188, align 1
  %189 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %190 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %189, i32 0, i32 0
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 1
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 2
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 3
  store i32 1, i32* %191, align 4
  store i32 1, i32* %192, align 4
  store i32 %186, i32* %193, align 4
  %195 = load i32, i32* %193, align 4
  %196 = load i32, i32* %192, align 4
  %197 = sub i32 %195, %196
  %198 = add i32 %197, 1
  %199 = mul i32 1, %198
  store i32 %198, i32* %194, align 4
  %200 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 0
  %201 = alloca i32, align 4
  %202 = mul i32 %199, 4
  store i32 %202, i32* %201, align 4
  %203 = load i32, i32* %201, align 4
  %204 = call i8* (i32, ...) @_lfortran_malloc(i32 %203)
  %205 = bitcast i8* %204 to i32*
  store i32* %205, i32** %200, align 8
  %206 = load i32, i32* %n, align 4
  %207 = getelementptr %array.0, %array.0* %ab, i32 0, i32 1
  store i32 0, i32* %207, align 4
  %208 = getelementptr %array.0, %array.0* %ab, i32 0, i32 3
  store i1 true, i1* %208, align 1
  %209 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %210 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %209, i32 0, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 0
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 1
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 2
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 3
  store i32 1, i32* %211, align 4
  store i32 1, i32* %212, align 4
  store i32 %206, i32* %213, align 4
  %215 = load i32, i32* %213, align 4
  %216 = load i32, i32* %212, align 4
  %217 = sub i32 %215, %216
  %218 = add i32 %217, 1
  %219 = mul i32 1, %218
  store i32 %218, i32* %214, align 4
  %220 = getelementptr %array.0, %array.0* %ab, i32 0, i32 0
  %221 = alloca i32, align 4
  %222 = mul i32 %219, 4
  store i32 %222, i32* %221, align 4
  %223 = load i32, i32* %221, align 4
  %224 = call i8* (i32, ...) @_lfortran_malloc(i32 %223)
  %225 = bitcast i8* %224 to i32*
  store i32* %225, i32** %220, align 8
  %226 = load i32, i32* %n, align 4
  %227 = getelementptr %array.0, %array.0* %bc, i32 0, i32 1
  store i32 0, i32* %227, align 4
  %228 = getelementptr %array.0, %array.0* %bc, i32 0, i32 3
  store i1 true, i1* %228, align 1
  %229 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %230 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %229, i32 0, i32 0
  %231 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 0
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 1
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 2
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 3
  store i32 1, i32* %231, align 4
  store i32 1, i32* %232, align 4
  store i32 %226, i32* %233, align 4
  %235 = load i32, i32* %233, align 4
  %236 = load i32, i32* %232, align 4
  %237 = sub i32 %235, %236
  %238 = add i32 %237, 1
  %239 = mul i32 1, %238
  store i32 %238, i32* %234, align 4
  %240 = getelementptr %array.0, %array.0* %bc, i32 0, i32 0
  %241 = alloca i32, align 4
  %242 = mul i32 %239, 4
  store i32 %242, i32* %241, align 4
  %243 = load i32, i32* %241, align 4
  %244 = call i8* (i32, ...) @_lfortran_malloc(i32 %243)
  %245 = bitcast i8* %244 to i32*
  store i32* %245, i32** %240, align 8
  %246 = load i32, i32* %n, align 4
  %247 = getelementptr %array.0, %array.0* %ca, i32 0, i32 1
  store i32 0, i32* %247, align 4
  %248 = getelementptr %array.0, %array.0* %ca, i32 0, i32 3
  store i1 true, i1* %248, align 1
  %249 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %250 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %249, i32 0, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 0
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 2
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 3
  store i32 1, i32* %251, align 4
  store i32 1, i32* %252, align 4
  store i32 %246, i32* %253, align 4
  %255 = load i32, i32* %253, align 4
  %256 = load i32, i32* %252, align 4
  %257 = sub i32 %255, %256
  %258 = add i32 %257, 1
  %259 = mul i32 1, %258
  store i32 %258, i32* %254, align 4
  %260 = getelementptr %array.0, %array.0* %ca, i32 0, i32 0
  %261 = alloca i32, align 4
  %262 = mul i32 %259, 4
  store i32 %262, i32* %261, align 4
  %263 = load i32, i32* %261, align 4
  %264 = call i8* (i32, ...) @_lfortran_malloc(i32 %263)
  %265 = bitcast i8* %264 to i32*
  store i32* %265, i32** %260, align 8
  %266 = load i32, i32* %n, align 4
  %267 = getelementptr %array.0, %array.0* %abc, i32 0, i32 1
  store i32 0, i32* %267, align 4
  %268 = getelementptr %array.0, %array.0* %abc, i32 0, i32 3
  store i1 true, i1* %268, align 1
  %269 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %270 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %269, i32 0, i32 0
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 0
  %272 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 1
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 2
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 3
  store i32 1, i32* %271, align 4
  store i32 1, i32* %272, align 4
  store i32 %266, i32* %273, align 4
  %275 = load i32, i32* %273, align 4
  %276 = load i32, i32* %272, align 4
  %277 = sub i32 %275, %276
  %278 = add i32 %277, 1
  %279 = mul i32 1, %278
  store i32 %278, i32* %274, align 4
  %280 = getelementptr %array.0, %array.0* %abc, i32 0, i32 0
  %281 = alloca i32, align 4
  %282 = mul i32 %279, 4
  store i32 %282, i32* %281, align 4
  %283 = load i32, i32* %281, align 4
  %284 = call i8* (i32, ...) @_lfortran_malloc(i32 %283)
  %285 = bitcast i8* %284 to i32*
  store i32* %285, i32** %280, align 8
  store i32 0, i32* %status, align 4
  store i32 1, i32* %"1_v", align 4
  %286 = alloca %dimension_descriptor*, align 8
  %287 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %288 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %287, i32 0, i32 0
  store %dimension_descriptor* %288, %dimension_descriptor** %286, align 8
  %289 = alloca i32, align 4
  store i32 1, i32* %289, align 4
  %290 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %286, i32* %289)
  %291 = sub i32 %290, 1
  store i32 %291, i32* %"1_t", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %292 = load i32, i32* %"1_t", align 4
  %293 = add i32 %292, 1
  %294 = alloca %dimension_descriptor*, align 8
  %295 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %296 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %295, i32 0, i32 0
  store %dimension_descriptor* %296, %dimension_descriptor** %294, align 8
  %297 = alloca i32, align 4
  store i32 1, i32* %297, align 4
  %298 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %294, i32* %297)
  %299 = icmp sle i32 %293, %298
  br i1 %299, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %300 = load i32, i32* %"1_t", align 4
  %301 = add i32 %300, 1
  store i32 %301, i32* %"1_t", align 4
  %302 = load i32, i32* %"1_t", align 4
  %303 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 2
  %304 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %303, i32 0, i32 0
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = sub i32 %302, %306
  %308 = mul i32 1, %307
  %309 = add i32 0, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 3
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 1, %311
  %313 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 0
  %314 = load i32*, i32** %313, align 8
  %315 = getelementptr inbounds i32, i32* %314, i32 %309
  %316 = load i32, i32* %"1_v", align 4
  %317 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %318 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %317, i32 0, i32 0
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = sub i32 %316, %320
  %322 = mul i32 1, %321
  %323 = add i32 0, %322
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 3
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 1, %325
  %327 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %328 = load i32*, i32** %327, align 8
  %329 = getelementptr inbounds i32, i32* %328, i32 %323
  %330 = load i32, i32* %329, align 4
  %331 = load i32, i32* %"1_v", align 4
  %332 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %333 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %332, i32 0, i32 0
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = sub i32 %331, %335
  %337 = mul i32 1, %336
  %338 = add i32 0, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 1, %340
  %342 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = getelementptr inbounds i32, i32* %343, i32 %338
  %345 = load i32, i32* %344, align 4
  %346 = mul i32 %330, %345
  store i32 %346, i32* %315, align 4
  %347 = load i32, i32* %"1_v", align 4
  %348 = add i32 %347, 1
  store i32 %348, i32* %"1_v", align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %349 = alloca %dimension_descriptor*, align 8
  %350 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %351 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %350, i32 0, i32 0
  store %dimension_descriptor* %351, %dimension_descriptor** %349, align 8
  %352 = alloca i32, align 4
  store i32 1, i32* %352, align 4
  %353 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %349, i32* %352)
  %354 = sub i32 %353, 1
  store i32 %354, i32* %"1_t", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %355 = load i32, i32* %"1_t", align 4
  %356 = add i32 %355, 1
  %357 = alloca %dimension_descriptor*, align 8
  %358 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %359 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %358, i32 0, i32 0
  store %dimension_descriptor* %359, %dimension_descriptor** %357, align 8
  %360 = alloca i32, align 4
  store i32 1, i32* %360, align 4
  %361 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %357, i32* %360)
  %362 = icmp sle i32 %356, %361
  br i1 %362, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %363 = load i32, i32* %"1_t", align 4
  %364 = add i32 %363, 1
  store i32 %364, i32* %"1_t", align 4
  %365 = load i32, i32* %"1_t", align 4
  %366 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 2
  %367 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %366, i32 0, i32 0
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %367, i32 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = sub i32 %365, %369
  %371 = mul i32 1, %370
  %372 = add i32 0, %371
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %367, i32 0, i32 3
  %374 = load i32, i32* %373, align 4
  %375 = mul i32 1, %374
  %376 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 0
  %377 = load i32*, i32** %376, align 8
  %378 = getelementptr inbounds i32, i32* %377, i32 %372
  %379 = load i32, i32* %"1_v", align 4
  %380 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %381 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %380, i32 0, i32 0
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = sub i32 %379, %383
  %385 = mul i32 1, %384
  %386 = add i32 0, %385
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 3
  %388 = load i32, i32* %387, align 4
  %389 = mul i32 1, %388
  %390 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %391 = load i32*, i32** %390, align 8
  %392 = getelementptr inbounds i32, i32* %391, i32 %386
  %393 = load i32, i32* %392, align 4
  %394 = load i32, i32* %"1_v", align 4
  %395 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %396 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %395, i32 0, i32 0
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %396, i32 0, i32 1
  %398 = load i32, i32* %397, align 4
  %399 = sub i32 %394, %398
  %400 = mul i32 1, %399
  %401 = add i32 0, %400
  %402 = getelementptr %dimension_descriptor, %dimension_descriptor* %396, i32 0, i32 3
  %403 = load i32, i32* %402, align 4
  %404 = mul i32 1, %403
  %405 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %406 = load i32*, i32** %405, align 8
  %407 = getelementptr inbounds i32, i32* %406, i32 %401
  %408 = load i32, i32* %407, align 4
  %409 = mul i32 %393, %408
  store i32 %409, i32* %378, align 4
  %410 = load i32, i32* %"1_v", align 4
  %411 = add i32 %410, 1
  store i32 %411, i32* %"1_v", align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  store i32 1, i32* %"1_v", align 4
  %412 = alloca %dimension_descriptor*, align 8
  %413 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %414 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %413, i32 0, i32 0
  store %dimension_descriptor* %414, %dimension_descriptor** %412, align 8
  %415 = alloca i32, align 4
  store i32 1, i32* %415, align 4
  %416 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %412, i32* %415)
  %417 = sub i32 %416, 1
  store i32 %417, i32* %"1_t", align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %418 = load i32, i32* %"1_t", align 4
  %419 = add i32 %418, 1
  %420 = alloca %dimension_descriptor*, align 8
  %421 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %422 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %421, i32 0, i32 0
  store %dimension_descriptor* %422, %dimension_descriptor** %420, align 8
  %423 = alloca i32, align 4
  store i32 1, i32* %423, align 4
  %424 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %420, i32* %423)
  %425 = icmp sle i32 %419, %424
  br i1 %425, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %426 = load i32, i32* %"1_t", align 4
  %427 = add i32 %426, 1
  store i32 %427, i32* %"1_t", align 4
  %428 = load i32, i32* %"1_t", align 4
  %429 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 2
  %430 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %429, i32 0, i32 0
  %431 = getelementptr %dimension_descriptor, %dimension_descriptor* %430, i32 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = sub i32 %428, %432
  %434 = mul i32 1, %433
  %435 = add i32 0, %434
  %436 = getelementptr %dimension_descriptor, %dimension_descriptor* %430, i32 0, i32 3
  %437 = load i32, i32* %436, align 4
  %438 = mul i32 1, %437
  %439 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 0
  %440 = load i32*, i32** %439, align 8
  %441 = getelementptr inbounds i32, i32* %440, i32 %435
  %442 = load i32, i32* %"1_v", align 4
  %443 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %444 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %443, i32 0, i32 0
  %445 = getelementptr %dimension_descriptor, %dimension_descriptor* %444, i32 0, i32 1
  %446 = load i32, i32* %445, align 4
  %447 = sub i32 %442, %446
  %448 = mul i32 1, %447
  %449 = add i32 0, %448
  %450 = getelementptr %dimension_descriptor, %dimension_descriptor* %444, i32 0, i32 3
  %451 = load i32, i32* %450, align 4
  %452 = mul i32 1, %451
  %453 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %454 = load i32*, i32** %453, align 8
  %455 = getelementptr inbounds i32, i32* %454, i32 %449
  %456 = load i32, i32* %455, align 4
  %457 = load i32, i32* %"1_v", align 4
  %458 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %459 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %458, i32 0, i32 0
  %460 = getelementptr %dimension_descriptor, %dimension_descriptor* %459, i32 0, i32 1
  %461 = load i32, i32* %460, align 4
  %462 = sub i32 %457, %461
  %463 = mul i32 1, %462
  %464 = add i32 0, %463
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %459, i32 0, i32 3
  %466 = load i32, i32* %465, align 4
  %467 = mul i32 1, %466
  %468 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %469 = load i32*, i32** %468, align 8
  %470 = getelementptr inbounds i32, i32* %469, i32 %464
  %471 = load i32, i32* %470, align 4
  %472 = mul i32 %456, %471
  store i32 %472, i32* %441, align 4
  %473 = load i32, i32* %"1_v", align 4
  %474 = add i32 %473, 1
  store i32 %474, i32* %"1_v", align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  store i32 1, i32* %"1_v", align 4
  %475 = alloca %dimension_descriptor*, align 8
  %476 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %477 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %476, i32 0, i32 0
  store %dimension_descriptor* %477, %dimension_descriptor** %475, align 8
  %478 = alloca i32, align 4
  store i32 1, i32* %478, align 4
  %479 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %475, i32* %478)
  %480 = sub i32 %479, 1
  store i32 %480, i32* %"1_t", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.end6
  %481 = load i32, i32* %"1_t", align 4
  %482 = add i32 %481, 1
  %483 = alloca %dimension_descriptor*, align 8
  %484 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %485 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %484, i32 0, i32 0
  store %dimension_descriptor* %485, %dimension_descriptor** %483, align 8
  %486 = alloca i32, align 4
  store i32 1, i32* %486, align 4
  %487 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %483, i32* %486)
  %488 = icmp sle i32 %482, %487
  br i1 %488, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %489 = load i32, i32* %"1_t", align 4
  %490 = add i32 %489, 1
  store i32 %490, i32* %"1_t", align 4
  %491 = load i32, i32* %"1_t", align 4
  %492 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %493 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %492, i32 0, i32 0
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = sub i32 %491, %495
  %497 = mul i32 1, %496
  %498 = add i32 0, %497
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 3
  %500 = load i32, i32* %499, align 4
  %501 = mul i32 1, %500
  %502 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 0
  %503 = load i32*, i32** %502, align 8
  %504 = getelementptr inbounds i32, i32* %503, i32 %498
  %505 = load i32, i32* %"1_v", align 4
  %506 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %507 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %506, i32 0, i32 0
  %508 = getelementptr %dimension_descriptor, %dimension_descriptor* %507, i32 0, i32 1
  %509 = load i32, i32* %508, align 4
  %510 = sub i32 %505, %509
  %511 = mul i32 1, %510
  %512 = add i32 0, %511
  %513 = getelementptr %dimension_descriptor, %dimension_descriptor* %507, i32 0, i32 3
  %514 = load i32, i32* %513, align 4
  %515 = mul i32 1, %514
  %516 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %517 = load i32*, i32** %516, align 8
  %518 = getelementptr inbounds i32, i32* %517, i32 %512
  %519 = load i32, i32* %518, align 4
  %520 = mul i32 %519, 2
  store i32 %520, i32* %504, align 4
  %521 = load i32, i32* %"1_v", align 4
  %522 = add i32 %521, 1
  store i32 %522, i32* %"1_v", align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  store i32 1, i32* %"1_v", align 4
  %523 = alloca %dimension_descriptor*, align 8
  %524 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %525 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %524, i32 0, i32 0
  store %dimension_descriptor* %525, %dimension_descriptor** %523, align 8
  %526 = alloca i32, align 4
  store i32 1, i32* %526, align 4
  %527 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %523, i32* %526)
  %528 = sub i32 %527, 1
  store i32 %528, i32* %"1_t", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.body11, %loop.end9
  %529 = load i32, i32* %"1_t", align 4
  %530 = add i32 %529, 1
  %531 = alloca %dimension_descriptor*, align 8
  %532 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %533 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %532, i32 0, i32 0
  store %dimension_descriptor* %533, %dimension_descriptor** %531, align 8
  %534 = alloca i32, align 4
  store i32 1, i32* %534, align 4
  %535 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %531, i32* %534)
  %536 = icmp sle i32 %530, %535
  br i1 %536, label %loop.body11, label %loop.end12

loop.body11:                                      ; preds = %loop.head10
  %537 = load i32, i32* %"1_t", align 4
  %538 = add i32 %537, 1
  store i32 %538, i32* %"1_t", align 4
  %539 = load i32, i32* %"1_t", align 4
  %540 = getelementptr %array.0, %array.0* %ab, i32 0, i32 2
  %541 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %540, i32 0, i32 0
  %542 = getelementptr %dimension_descriptor, %dimension_descriptor* %541, i32 0, i32 1
  %543 = load i32, i32* %542, align 4
  %544 = sub i32 %539, %543
  %545 = mul i32 1, %544
  %546 = add i32 0, %545
  %547 = getelementptr %dimension_descriptor, %dimension_descriptor* %541, i32 0, i32 3
  %548 = load i32, i32* %547, align 4
  %549 = mul i32 1, %548
  %550 = getelementptr %array.0, %array.0* %ab, i32 0, i32 0
  %551 = load i32*, i32** %550, align 8
  %552 = getelementptr inbounds i32, i32* %551, i32 %546
  %553 = load i32, i32* %"1_v", align 4
  %554 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 2
  %555 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %554, i32 0, i32 0
  %556 = getelementptr %dimension_descriptor, %dimension_descriptor* %555, i32 0, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = sub i32 %553, %557
  %559 = mul i32 1, %558
  %560 = add i32 0, %559
  %561 = getelementptr %dimension_descriptor, %dimension_descriptor* %555, i32 0, i32 3
  %562 = load i32, i32* %561, align 4
  %563 = mul i32 1, %562
  %564 = getelementptr %array, %array* %"~0_bin_op_res", i32 0, i32 0
  %565 = load i32*, i32** %564, align 8
  %566 = getelementptr inbounds i32, i32* %565, i32 %560
  %567 = load i32, i32* %566, align 4
  %568 = load i32, i32* %"1_v", align 4
  %569 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %570 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %569, i32 0, i32 0
  %571 = getelementptr %dimension_descriptor, %dimension_descriptor* %570, i32 0, i32 1
  %572 = load i32, i32* %571, align 4
  %573 = sub i32 %568, %572
  %574 = mul i32 1, %573
  %575 = add i32 0, %574
  %576 = getelementptr %dimension_descriptor, %dimension_descriptor* %570, i32 0, i32 3
  %577 = load i32, i32* %576, align 4
  %578 = mul i32 1, %577
  %579 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %580 = load i32*, i32** %579, align 8
  %581 = getelementptr inbounds i32, i32* %580, i32 %575
  %582 = load i32, i32* %581, align 4
  %583 = mul i32 %567, %582
  store i32 %583, i32* %552, align 4
  %584 = load i32, i32* %"1_v", align 4
  %585 = add i32 %584, 1
  store i32 %585, i32* %"1_v", align 4
  br label %loop.head10

loop.end12:                                       ; preds = %loop.head10
  store i32 1, i32* %"1_v", align 4
  %586 = alloca %dimension_descriptor*, align 8
  %587 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %588 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %587, i32 0, i32 0
  store %dimension_descriptor* %588, %dimension_descriptor** %586, align 8
  %589 = alloca i32, align 4
  store i32 1, i32* %589, align 4
  %590 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %586, i32* %589)
  %591 = sub i32 %590, 1
  store i32 %591, i32* %"1_t", align 4
  br label %loop.head13

loop.head13:                                      ; preds = %loop.body14, %loop.end12
  %592 = load i32, i32* %"1_t", align 4
  %593 = add i32 %592, 1
  %594 = alloca %dimension_descriptor*, align 8
  %595 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %596 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %595, i32 0, i32 0
  store %dimension_descriptor* %596, %dimension_descriptor** %594, align 8
  %597 = alloca i32, align 4
  store i32 1, i32* %597, align 4
  %598 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %594, i32* %597)
  %599 = icmp sle i32 %593, %598
  br i1 %599, label %loop.body14, label %loop.end15

loop.body14:                                      ; preds = %loop.head13
  %600 = load i32, i32* %"1_t", align 4
  %601 = add i32 %600, 1
  store i32 %601, i32* %"1_t", align 4
  %602 = load i32, i32* %"1_t", align 4
  %603 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %604 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %603, i32 0, i32 0
  %605 = getelementptr %dimension_descriptor, %dimension_descriptor* %604, i32 0, i32 1
  %606 = load i32, i32* %605, align 4
  %607 = sub i32 %602, %606
  %608 = mul i32 1, %607
  %609 = add i32 0, %608
  %610 = getelementptr %dimension_descriptor, %dimension_descriptor* %604, i32 0, i32 3
  %611 = load i32, i32* %610, align 4
  %612 = mul i32 1, %611
  %613 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 0
  %614 = load i32*, i32** %613, align 8
  %615 = getelementptr inbounds i32, i32* %614, i32 %609
  %616 = load i32, i32* %"1_v", align 4
  %617 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %618 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %617, i32 0, i32 0
  %619 = getelementptr %dimension_descriptor, %dimension_descriptor* %618, i32 0, i32 1
  %620 = load i32, i32* %619, align 4
  %621 = sub i32 %616, %620
  %622 = mul i32 1, %621
  %623 = add i32 0, %622
  %624 = getelementptr %dimension_descriptor, %dimension_descriptor* %618, i32 0, i32 3
  %625 = load i32, i32* %624, align 4
  %626 = mul i32 1, %625
  %627 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %628 = load i32*, i32** %627, align 8
  %629 = getelementptr inbounds i32, i32* %628, i32 %623
  %630 = load i32, i32* %629, align 4
  %631 = mul i32 %630, 2
  store i32 %631, i32* %615, align 4
  %632 = load i32, i32* %"1_v", align 4
  %633 = add i32 %632, 1
  store i32 %633, i32* %"1_v", align 4
  br label %loop.head13

loop.end15:                                       ; preds = %loop.head13
  store i32 1, i32* %"1_v", align 4
  %634 = alloca %dimension_descriptor*, align 8
  %635 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %636 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %635, i32 0, i32 0
  store %dimension_descriptor* %636, %dimension_descriptor** %634, align 8
  %637 = alloca i32, align 4
  store i32 1, i32* %637, align 4
  %638 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %634, i32* %637)
  %639 = sub i32 %638, 1
  store i32 %639, i32* %"1_t", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.body17, %loop.end15
  %640 = load i32, i32* %"1_t", align 4
  %641 = add i32 %640, 1
  %642 = alloca %dimension_descriptor*, align 8
  %643 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %644 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %643, i32 0, i32 0
  store %dimension_descriptor* %644, %dimension_descriptor** %642, align 8
  %645 = alloca i32, align 4
  store i32 1, i32* %645, align 4
  %646 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %642, i32* %645)
  %647 = icmp sle i32 %641, %646
  br i1 %647, label %loop.body17, label %loop.end18

loop.body17:                                      ; preds = %loop.head16
  %648 = load i32, i32* %"1_t", align 4
  %649 = add i32 %648, 1
  store i32 %649, i32* %"1_t", align 4
  %650 = load i32, i32* %"1_t", align 4
  %651 = getelementptr %array.0, %array.0* %bc, i32 0, i32 2
  %652 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %651, i32 0, i32 0
  %653 = getelementptr %dimension_descriptor, %dimension_descriptor* %652, i32 0, i32 1
  %654 = load i32, i32* %653, align 4
  %655 = sub i32 %650, %654
  %656 = mul i32 1, %655
  %657 = add i32 0, %656
  %658 = getelementptr %dimension_descriptor, %dimension_descriptor* %652, i32 0, i32 3
  %659 = load i32, i32* %658, align 4
  %660 = mul i32 1, %659
  %661 = getelementptr %array.0, %array.0* %bc, i32 0, i32 0
  %662 = load i32*, i32** %661, align 8
  %663 = getelementptr inbounds i32, i32* %662, i32 %657
  %664 = load i32, i32* %"1_v", align 4
  %665 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 2
  %666 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %665, i32 0, i32 0
  %667 = getelementptr %dimension_descriptor, %dimension_descriptor* %666, i32 0, i32 1
  %668 = load i32, i32* %667, align 4
  %669 = sub i32 %664, %668
  %670 = mul i32 1, %669
  %671 = add i32 0, %670
  %672 = getelementptr %dimension_descriptor, %dimension_descriptor* %666, i32 0, i32 3
  %673 = load i32, i32* %672, align 4
  %674 = mul i32 1, %673
  %675 = getelementptr %array, %array* %"~1_bin_op_res", i32 0, i32 0
  %676 = load i32*, i32** %675, align 8
  %677 = getelementptr inbounds i32, i32* %676, i32 %671
  %678 = load i32, i32* %677, align 4
  %679 = load i32, i32* %"1_v", align 4
  %680 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %681 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %680, i32 0, i32 0
  %682 = getelementptr %dimension_descriptor, %dimension_descriptor* %681, i32 0, i32 1
  %683 = load i32, i32* %682, align 4
  %684 = sub i32 %679, %683
  %685 = mul i32 1, %684
  %686 = add i32 0, %685
  %687 = getelementptr %dimension_descriptor, %dimension_descriptor* %681, i32 0, i32 3
  %688 = load i32, i32* %687, align 4
  %689 = mul i32 1, %688
  %690 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %691 = load i32*, i32** %690, align 8
  %692 = getelementptr inbounds i32, i32* %691, i32 %686
  %693 = load i32, i32* %692, align 4
  %694 = mul i32 %678, %693
  store i32 %694, i32* %663, align 4
  %695 = load i32, i32* %"1_v", align 4
  %696 = add i32 %695, 1
  store i32 %696, i32* %"1_v", align 4
  br label %loop.head16

loop.end18:                                       ; preds = %loop.head16
  store i32 1, i32* %"1_v", align 4
  %697 = alloca %dimension_descriptor*, align 8
  %698 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %699 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %698, i32 0, i32 0
  store %dimension_descriptor* %699, %dimension_descriptor** %697, align 8
  %700 = alloca i32, align 4
  store i32 1, i32* %700, align 4
  %701 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %697, i32* %700)
  %702 = sub i32 %701, 1
  store i32 %702, i32* %"1_t", align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.body20, %loop.end18
  %703 = load i32, i32* %"1_t", align 4
  %704 = add i32 %703, 1
  %705 = alloca %dimension_descriptor*, align 8
  %706 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %707 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %706, i32 0, i32 0
  store %dimension_descriptor* %707, %dimension_descriptor** %705, align 8
  %708 = alloca i32, align 4
  store i32 1, i32* %708, align 4
  %709 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %705, i32* %708)
  %710 = icmp sle i32 %704, %709
  br i1 %710, label %loop.body20, label %loop.end21

loop.body20:                                      ; preds = %loop.head19
  %711 = load i32, i32* %"1_t", align 4
  %712 = add i32 %711, 1
  store i32 %712, i32* %"1_t", align 4
  %713 = load i32, i32* %"1_t", align 4
  %714 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %715 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %714, i32 0, i32 0
  %716 = getelementptr %dimension_descriptor, %dimension_descriptor* %715, i32 0, i32 1
  %717 = load i32, i32* %716, align 4
  %718 = sub i32 %713, %717
  %719 = mul i32 1, %718
  %720 = add i32 0, %719
  %721 = getelementptr %dimension_descriptor, %dimension_descriptor* %715, i32 0, i32 3
  %722 = load i32, i32* %721, align 4
  %723 = mul i32 1, %722
  %724 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 0
  %725 = load i32*, i32** %724, align 8
  %726 = getelementptr inbounds i32, i32* %725, i32 %720
  %727 = load i32, i32* %"1_v", align 4
  %728 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %729 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %728, i32 0, i32 0
  %730 = getelementptr %dimension_descriptor, %dimension_descriptor* %729, i32 0, i32 1
  %731 = load i32, i32* %730, align 4
  %732 = sub i32 %727, %731
  %733 = mul i32 1, %732
  %734 = add i32 0, %733
  %735 = getelementptr %dimension_descriptor, %dimension_descriptor* %729, i32 0, i32 3
  %736 = load i32, i32* %735, align 4
  %737 = mul i32 1, %736
  %738 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %739 = load i32*, i32** %738, align 8
  %740 = getelementptr inbounds i32, i32* %739, i32 %734
  %741 = load i32, i32* %740, align 4
  %742 = mul i32 %741, 2
  store i32 %742, i32* %726, align 4
  %743 = load i32, i32* %"1_v", align 4
  %744 = add i32 %743, 1
  store i32 %744, i32* %"1_v", align 4
  br label %loop.head19

loop.end21:                                       ; preds = %loop.head19
  store i32 1, i32* %"1_v", align 4
  %745 = alloca %dimension_descriptor*, align 8
  %746 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %747 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %746, i32 0, i32 0
  store %dimension_descriptor* %747, %dimension_descriptor** %745, align 8
  %748 = alloca i32, align 4
  store i32 1, i32* %748, align 4
  %749 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %745, i32* %748)
  %750 = sub i32 %749, 1
  store i32 %750, i32* %"1_t", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.end21
  %751 = load i32, i32* %"1_t", align 4
  %752 = add i32 %751, 1
  %753 = alloca %dimension_descriptor*, align 8
  %754 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %755 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %754, i32 0, i32 0
  store %dimension_descriptor* %755, %dimension_descriptor** %753, align 8
  %756 = alloca i32, align 4
  store i32 1, i32* %756, align 4
  %757 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %753, i32* %756)
  %758 = icmp sle i32 %752, %757
  br i1 %758, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %759 = load i32, i32* %"1_t", align 4
  %760 = add i32 %759, 1
  store i32 %760, i32* %"1_t", align 4
  %761 = load i32, i32* %"1_t", align 4
  %762 = getelementptr %array.0, %array.0* %ca, i32 0, i32 2
  %763 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %762, i32 0, i32 0
  %764 = getelementptr %dimension_descriptor, %dimension_descriptor* %763, i32 0, i32 1
  %765 = load i32, i32* %764, align 4
  %766 = sub i32 %761, %765
  %767 = mul i32 1, %766
  %768 = add i32 0, %767
  %769 = getelementptr %dimension_descriptor, %dimension_descriptor* %763, i32 0, i32 3
  %770 = load i32, i32* %769, align 4
  %771 = mul i32 1, %770
  %772 = getelementptr %array.0, %array.0* %ca, i32 0, i32 0
  %773 = load i32*, i32** %772, align 8
  %774 = getelementptr inbounds i32, i32* %773, i32 %768
  %775 = load i32, i32* %"1_v", align 4
  %776 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 2
  %777 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %776, i32 0, i32 0
  %778 = getelementptr %dimension_descriptor, %dimension_descriptor* %777, i32 0, i32 1
  %779 = load i32, i32* %778, align 4
  %780 = sub i32 %775, %779
  %781 = mul i32 1, %780
  %782 = add i32 0, %781
  %783 = getelementptr %dimension_descriptor, %dimension_descriptor* %777, i32 0, i32 3
  %784 = load i32, i32* %783, align 4
  %785 = mul i32 1, %784
  %786 = getelementptr %array, %array* %"~2_bin_op_res", i32 0, i32 0
  %787 = load i32*, i32** %786, align 8
  %788 = getelementptr inbounds i32, i32* %787, i32 %782
  %789 = load i32, i32* %788, align 4
  %790 = load i32, i32* %"1_v", align 4
  %791 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %792 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %791, i32 0, i32 0
  %793 = getelementptr %dimension_descriptor, %dimension_descriptor* %792, i32 0, i32 1
  %794 = load i32, i32* %793, align 4
  %795 = sub i32 %790, %794
  %796 = mul i32 1, %795
  %797 = add i32 0, %796
  %798 = getelementptr %dimension_descriptor, %dimension_descriptor* %792, i32 0, i32 3
  %799 = load i32, i32* %798, align 4
  %800 = mul i32 1, %799
  %801 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %802 = load i32*, i32** %801, align 8
  %803 = getelementptr inbounds i32, i32* %802, i32 %797
  %804 = load i32, i32* %803, align 4
  %805 = mul i32 %789, %804
  store i32 %805, i32* %774, align 4
  %806 = load i32, i32* %"1_v", align 4
  %807 = add i32 %806, 1
  store i32 %807, i32* %"1_v", align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  store i32 1, i32* %"1_v", align 4
  %808 = alloca %dimension_descriptor*, align 8
  %809 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %810 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %809, i32 0, i32 0
  store %dimension_descriptor* %810, %dimension_descriptor** %808, align 8
  %811 = alloca i32, align 4
  store i32 1, i32* %811, align 4
  %812 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %808, i32* %811)
  %813 = sub i32 %812, 1
  store i32 %813, i32* %"1_t", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.body26, %loop.end24
  %814 = load i32, i32* %"1_t", align 4
  %815 = add i32 %814, 1
  %816 = alloca %dimension_descriptor*, align 8
  %817 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %818 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %817, i32 0, i32 0
  store %dimension_descriptor* %818, %dimension_descriptor** %816, align 8
  %819 = alloca i32, align 4
  store i32 1, i32* %819, align 4
  %820 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %816, i32* %819)
  %821 = icmp sle i32 %815, %820
  br i1 %821, label %loop.body26, label %loop.end27

loop.body26:                                      ; preds = %loop.head25
  %822 = load i32, i32* %"1_t", align 4
  %823 = add i32 %822, 1
  store i32 %823, i32* %"1_t", align 4
  %824 = load i32, i32* %"1_t", align 4
  %825 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %826 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %825, i32 0, i32 0
  %827 = getelementptr %dimension_descriptor, %dimension_descriptor* %826, i32 0, i32 1
  %828 = load i32, i32* %827, align 4
  %829 = sub i32 %824, %828
  %830 = mul i32 1, %829
  %831 = add i32 0, %830
  %832 = getelementptr %dimension_descriptor, %dimension_descriptor* %826, i32 0, i32 3
  %833 = load i32, i32* %832, align 4
  %834 = mul i32 1, %833
  %835 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 0
  %836 = load i32*, i32** %835, align 8
  %837 = getelementptr inbounds i32, i32* %836, i32 %831
  %838 = load i32, i32* %"1_v", align 4
  %839 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %840 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %839, i32 0, i32 0
  %841 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 1
  %842 = load i32, i32* %841, align 4
  %843 = sub i32 %838, %842
  %844 = mul i32 1, %843
  %845 = add i32 0, %844
  %846 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 3
  %847 = load i32, i32* %846, align 4
  %848 = mul i32 1, %847
  %849 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %850 = load i32*, i32** %849, align 8
  %851 = getelementptr inbounds i32, i32* %850, i32 %845
  %852 = load i32, i32* %851, align 4
  %853 = mul i32 %852, 2
  store i32 %853, i32* %837, align 4
  %854 = load i32, i32* %"1_v", align 4
  %855 = add i32 %854, 1
  store i32 %855, i32* %"1_v", align 4
  br label %loop.head25

loop.end27:                                       ; preds = %loop.head25
  store i32 1, i32* %"1_v", align 4
  %856 = alloca %dimension_descriptor*, align 8
  %857 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %858 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %857, i32 0, i32 0
  store %dimension_descriptor* %858, %dimension_descriptor** %856, align 8
  %859 = alloca i32, align 4
  store i32 1, i32* %859, align 4
  %860 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %856, i32* %859)
  %861 = sub i32 %860, 1
  store i32 %861, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %loop.end27
  %862 = load i32, i32* %"1_t", align 4
  %863 = add i32 %862, 1
  %864 = alloca %dimension_descriptor*, align 8
  %865 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %866 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %865, i32 0, i32 0
  store %dimension_descriptor* %866, %dimension_descriptor** %864, align 8
  %867 = alloca i32, align 4
  store i32 1, i32* %867, align 4
  %868 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %864, i32* %867)
  %869 = icmp sle i32 %863, %868
  br i1 %869, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %870 = load i32, i32* %"1_t", align 4
  %871 = add i32 %870, 1
  store i32 %871, i32* %"1_t", align 4
  %872 = load i32, i32* %"1_t", align 4
  %873 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %874 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %873, i32 0, i32 0
  %875 = getelementptr %dimension_descriptor, %dimension_descriptor* %874, i32 0, i32 1
  %876 = load i32, i32* %875, align 4
  %877 = sub i32 %872, %876
  %878 = mul i32 1, %877
  %879 = add i32 0, %878
  %880 = getelementptr %dimension_descriptor, %dimension_descriptor* %874, i32 0, i32 3
  %881 = load i32, i32* %880, align 4
  %882 = mul i32 1, %881
  %883 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 0
  %884 = load i32*, i32** %883, align 8
  %885 = getelementptr inbounds i32, i32* %884, i32 %879
  %886 = load i32, i32* %"1_v", align 4
  %887 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 2
  %888 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %887, i32 0, i32 0
  %889 = getelementptr %dimension_descriptor, %dimension_descriptor* %888, i32 0, i32 1
  %890 = load i32, i32* %889, align 4
  %891 = sub i32 %886, %890
  %892 = mul i32 1, %891
  %893 = add i32 0, %892
  %894 = getelementptr %dimension_descriptor, %dimension_descriptor* %888, i32 0, i32 3
  %895 = load i32, i32* %894, align 4
  %896 = mul i32 1, %895
  %897 = getelementptr %array, %array* %"~3_bin_op_res", i32 0, i32 0
  %898 = load i32*, i32** %897, align 8
  %899 = getelementptr inbounds i32, i32* %898, i32 %893
  %900 = load i32, i32* %899, align 4
  %901 = load i32, i32* %"1_v", align 4
  %902 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %903 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %902, i32 0, i32 0
  %904 = getelementptr %dimension_descriptor, %dimension_descriptor* %903, i32 0, i32 1
  %905 = load i32, i32* %904, align 4
  %906 = sub i32 %901, %905
  %907 = mul i32 1, %906
  %908 = add i32 0, %907
  %909 = getelementptr %dimension_descriptor, %dimension_descriptor* %903, i32 0, i32 3
  %910 = load i32, i32* %909, align 4
  %911 = mul i32 1, %910
  %912 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %913 = load i32*, i32** %912, align 8
  %914 = getelementptr inbounds i32, i32* %913, i32 %908
  %915 = load i32, i32* %914, align 4
  %916 = mul i32 %900, %915
  store i32 %916, i32* %885, align 4
  %917 = load i32, i32* %"1_v", align 4
  %918 = add i32 %917, 1
  store i32 %918, i32* %"1_v", align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  store i32 1, i32* %"1_v", align 4
  %919 = alloca %dimension_descriptor*, align 8
  %920 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %921 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %920, i32 0, i32 0
  store %dimension_descriptor* %921, %dimension_descriptor** %919, align 8
  %922 = alloca i32, align 4
  store i32 1, i32* %922, align 4
  %923 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %919, i32* %922)
  %924 = sub i32 %923, 1
  store i32 %924, i32* %"1_t", align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %loop.end30
  %925 = load i32, i32* %"1_t", align 4
  %926 = add i32 %925, 1
  %927 = alloca %dimension_descriptor*, align 8
  %928 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %929 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %928, i32 0, i32 0
  store %dimension_descriptor* %929, %dimension_descriptor** %927, align 8
  %930 = alloca i32, align 4
  store i32 1, i32* %930, align 4
  %931 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %927, i32* %930)
  %932 = icmp sle i32 %926, %931
  br i1 %932, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %933 = load i32, i32* %"1_t", align 4
  %934 = add i32 %933, 1
  store i32 %934, i32* %"1_t", align 4
  %935 = load i32, i32* %"1_t", align 4
  %936 = getelementptr %array.0, %array.0* %abc, i32 0, i32 2
  %937 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %936, i32 0, i32 0
  %938 = getelementptr %dimension_descriptor, %dimension_descriptor* %937, i32 0, i32 1
  %939 = load i32, i32* %938, align 4
  %940 = sub i32 %935, %939
  %941 = mul i32 1, %940
  %942 = add i32 0, %941
  %943 = getelementptr %dimension_descriptor, %dimension_descriptor* %937, i32 0, i32 3
  %944 = load i32, i32* %943, align 4
  %945 = mul i32 1, %944
  %946 = getelementptr %array.0, %array.0* %abc, i32 0, i32 0
  %947 = load i32*, i32** %946, align 8
  %948 = getelementptr inbounds i32, i32* %947, i32 %942
  %949 = load i32, i32* %"1_v", align 4
  %950 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 2
  %951 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %950, i32 0, i32 0
  %952 = getelementptr %dimension_descriptor, %dimension_descriptor* %951, i32 0, i32 1
  %953 = load i32, i32* %952, align 4
  %954 = sub i32 %949, %953
  %955 = mul i32 1, %954
  %956 = add i32 0, %955
  %957 = getelementptr %dimension_descriptor, %dimension_descriptor* %951, i32 0, i32 3
  %958 = load i32, i32* %957, align 4
  %959 = mul i32 1, %958
  %960 = getelementptr %array, %array* %"~4_bin_op_res", i32 0, i32 0
  %961 = load i32*, i32** %960, align 8
  %962 = getelementptr inbounds i32, i32* %961, i32 %956
  %963 = load i32, i32* %962, align 4
  %964 = load i32, i32* %"1_v", align 4
  %965 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %966 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %965, i32 0, i32 0
  %967 = getelementptr %dimension_descriptor, %dimension_descriptor* %966, i32 0, i32 1
  %968 = load i32, i32* %967, align 4
  %969 = sub i32 %964, %968
  %970 = mul i32 1, %969
  %971 = add i32 0, %970
  %972 = getelementptr %dimension_descriptor, %dimension_descriptor* %966, i32 0, i32 3
  %973 = load i32, i32* %972, align 4
  %974 = mul i32 1, %973
  %975 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %976 = load i32*, i32** %975, align 8
  %977 = getelementptr inbounds i32, i32* %976, i32 %971
  %978 = load i32, i32* %977, align 4
  %979 = mul i32 %963, %978
  store i32 %979, i32* %948, align 4
  %980 = load i32, i32* %"1_v", align 4
  %981 = add i32 %980, 1
  store i32 %981, i32* %"1_v", align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  store i32 1, i32* %status, align 4
  %982 = load %array.0, %array.0* %a_2, align 8
  %983 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 3
  %984 = load i1, i1* %983, align 1
  br i1 %984, label %then, label %else

then:                                             ; preds = %loop.end33
  %985 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 0
  %986 = load i32*, i32** %985, align 8
  %987 = alloca i8*, align 8
  %988 = bitcast i32* %986 to i8*
  store i8* %988, i8** %987, align 8
  %989 = load i8*, i8** %987, align 8
  call void (i8*, ...) @_lfortran_free(i8* %989)
  %990 = getelementptr %array.0, %array.0* %a_2, i32 0, i32 3
  store i1 false, i1* %990, align 1
  br label %ifcont

else:                                             ; preds = %loop.end33
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %991 = load %array.0, %array.0* %ab, align 8
  %992 = getelementptr %array.0, %array.0* %ab, i32 0, i32 3
  %993 = load i1, i1* %992, align 1
  br i1 %993, label %then34, label %else35

then34:                                           ; preds = %ifcont
  %994 = getelementptr %array.0, %array.0* %ab, i32 0, i32 0
  %995 = load i32*, i32** %994, align 8
  %996 = alloca i8*, align 8
  %997 = bitcast i32* %995 to i8*
  store i8* %997, i8** %996, align 8
  %998 = load i8*, i8** %996, align 8
  call void (i8*, ...) @_lfortran_free(i8* %998)
  %999 = getelementptr %array.0, %array.0* %ab, i32 0, i32 3
  store i1 false, i1* %999, align 1
  br label %ifcont36

else35:                                           ; preds = %ifcont
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %iftmp37 = phi i32 [ 1, %then34 ], [ 2, %else35 ]
  %1000 = load %array.0, %array.0* %abc, align 8
  %1001 = getelementptr %array.0, %array.0* %abc, i32 0, i32 3
  %1002 = load i1, i1* %1001, align 1
  br i1 %1002, label %then38, label %else39

then38:                                           ; preds = %ifcont36
  %1003 = getelementptr %array.0, %array.0* %abc, i32 0, i32 0
  %1004 = load i32*, i32** %1003, align 8
  %1005 = alloca i8*, align 8
  %1006 = bitcast i32* %1004 to i8*
  store i8* %1006, i8** %1005, align 8
  %1007 = load i8*, i8** %1005, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1007)
  %1008 = getelementptr %array.0, %array.0* %abc, i32 0, i32 3
  store i1 false, i1* %1008, align 1
  br label %ifcont40

else39:                                           ; preds = %ifcont36
  br label %ifcont40

ifcont40:                                         ; preds = %else39, %then38
  %iftmp41 = phi i32 [ 1, %then38 ], [ 2, %else39 ]
  %1009 = load %array.0, %array.0* %b_2, align 8
  %1010 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 3
  %1011 = load i1, i1* %1010, align 1
  br i1 %1011, label %then42, label %else43

then42:                                           ; preds = %ifcont40
  %1012 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 0
  %1013 = load i32*, i32** %1012, align 8
  %1014 = alloca i8*, align 8
  %1015 = bitcast i32* %1013 to i8*
  store i8* %1015, i8** %1014, align 8
  %1016 = load i8*, i8** %1014, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1016)
  %1017 = getelementptr %array.0, %array.0* %b_2, i32 0, i32 3
  store i1 false, i1* %1017, align 1
  br label %ifcont44

else43:                                           ; preds = %ifcont40
  br label %ifcont44

ifcont44:                                         ; preds = %else43, %then42
  %iftmp45 = phi i32 [ 1, %then42 ], [ 2, %else43 ]
  %1018 = load %array.0, %array.0* %bc, align 8
  %1019 = getelementptr %array.0, %array.0* %bc, i32 0, i32 3
  %1020 = load i1, i1* %1019, align 1
  br i1 %1020, label %then46, label %else47

then46:                                           ; preds = %ifcont44
  %1021 = getelementptr %array.0, %array.0* %bc, i32 0, i32 0
  %1022 = load i32*, i32** %1021, align 8
  %1023 = alloca i8*, align 8
  %1024 = bitcast i32* %1022 to i8*
  store i8* %1024, i8** %1023, align 8
  %1025 = load i8*, i8** %1023, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1025)
  %1026 = getelementptr %array.0, %array.0* %bc, i32 0, i32 3
  store i1 false, i1* %1026, align 1
  br label %ifcont48

else47:                                           ; preds = %ifcont44
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %iftmp49 = phi i32 [ 1, %then46 ], [ 2, %else47 ]
  %1027 = load %array.0, %array.0* %c_2, align 8
  %1028 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 3
  %1029 = load i1, i1* %1028, align 1
  br i1 %1029, label %then50, label %else51

then50:                                           ; preds = %ifcont48
  %1030 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 0
  %1031 = load i32*, i32** %1030, align 8
  %1032 = alloca i8*, align 8
  %1033 = bitcast i32* %1031 to i8*
  store i8* %1033, i8** %1032, align 8
  %1034 = load i8*, i8** %1032, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1034)
  %1035 = getelementptr %array.0, %array.0* %c_2, i32 0, i32 3
  store i1 false, i1* %1035, align 1
  br label %ifcont52

else51:                                           ; preds = %ifcont48
  br label %ifcont52

ifcont52:                                         ; preds = %else51, %then50
  %iftmp53 = phi i32 [ 1, %then50 ], [ 2, %else51 ]
  %1036 = load %array.0, %array.0* %ca, align 8
  %1037 = getelementptr %array.0, %array.0* %ca, i32 0, i32 3
  %1038 = load i1, i1* %1037, align 1
  br i1 %1038, label %then54, label %else55

then54:                                           ; preds = %ifcont52
  %1039 = getelementptr %array.0, %array.0* %ca, i32 0, i32 0
  %1040 = load i32*, i32** %1039, align 8
  %1041 = alloca i8*, align 8
  %1042 = bitcast i32* %1040 to i8*
  store i8* %1042, i8** %1041, align 8
  %1043 = load i8*, i8** %1041, align 8
  call void (i8*, ...) @_lfortran_free(i8* %1043)
  %1044 = getelementptr %array.0, %array.0* %ca, i32 0, i32 3
  store i1 false, i1* %1044, align 1
  br label %ifcont56

else55:                                           ; preds = %ifcont52
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %iftmp57 = phi i32 [ 1, %then54 ], [ 2, %else55 ]
  %1045 = load i32, i32* %status, align 4
  ret i32 %1045
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %b = alloca %array.0, align 8
  %c = alloca %array.0, align 8
  %ierr = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 10, i32* %n, align 4
  %0 = load i32, i32* %n, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %1, align 4
  %2 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %2, align 1
  %3 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %4 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %3, i32 0, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 0
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 1
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 2
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 3
  store i32 1, i32* %5, align 4
  store i32 1, i32* %6, align 4
  store i32 %0, i32* %7, align 4
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %6, align 4
  %11 = sub i32 %9, %10
  %12 = add i32 %11, 1
  %13 = mul i32 1, %12
  store i32 %12, i32* %8, align 4
  %14 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %15 = alloca i32, align 4
  %16 = mul i32 %13, 4
  store i32 %16, i32* %15, align 4
  %17 = load i32, i32* %15, align 4
  %18 = call i8* (i32, ...) @_lfortran_malloc(i32 %17)
  %19 = bitcast i8* %18 to i32*
  store i32* %19, i32** %14, align 8
  %20 = load i32, i32* %n, align 4
  %21 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %22, align 1
  %23 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %24 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 %20, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  %33 = mul i32 1, %32
  store i32 %32, i32* %28, align 4
  %34 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %35 = alloca i32, align 4
  %36 = mul i32 %33, 4
  store i32 %36, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = call i8* (i32, ...) @_lfortran_malloc(i32 %37)
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %34, align 8
  %40 = load i32, i32* %n, align 4
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %41, align 4
  %42 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %42, align 1
  %43 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %44 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 %40, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  %53 = mul i32 1, %52
  store i32 %52, i32* %48, align 4
  %54 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %55 = alloca i32, align 4
  %56 = mul i32 %53, 4
  store i32 %56, i32* %55, align 4
  %57 = load i32, i32* %55, align 4
  %58 = call i8* (i32, ...) @_lfortran_malloc(i32 %57)
  %59 = bitcast i8* %58 to i32*
  store i32* %59, i32** %54, align 8
  %60 = alloca %dimension_descriptor*, align 8
  %61 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %62 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %61, i32 0, i32 0
  store %dimension_descriptor* %62, %dimension_descriptor** %60, align 8
  %63 = alloca i32, align 4
  store i32 1, i32* %63, align 4
  %64 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %60, i32* %63)
  %65 = sub i32 %64, 1
  store i32 %65, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %66 = load i32, i32* %"1_k", align 4
  %67 = add i32 %66, 1
  %68 = alloca %dimension_descriptor*, align 8
  %69 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %70 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %69, i32 0, i32 0
  store %dimension_descriptor* %70, %dimension_descriptor** %68, align 8
  %71 = alloca i32, align 4
  store i32 1, i32* %71, align 4
  %72 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %68, i32* %71)
  %73 = icmp sle i32 %67, %72
  br i1 %73, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %74 = load i32, i32* %"1_k", align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %"1_k", align 4
  %76 = load i32, i32* %"1_k", align 4
  %77 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %78 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %77, i32 0, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 %76, %80
  %82 = mul i32 1, %81
  %83 = add i32 0, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 1, %85
  %87 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds i32, i32* %88, i32 %83
  store i32 1, i32* %89, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %90 = alloca %dimension_descriptor*, align 8
  %91 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %92 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %91, i32 0, i32 0
  store %dimension_descriptor* %92, %dimension_descriptor** %90, align 8
  %93 = alloca i32, align 4
  store i32 1, i32* %93, align 4
  %94 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %90, i32* %93)
  %95 = sub i32 %94, 1
  store i32 %95, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %96 = load i32, i32* %"1_k", align 4
  %97 = add i32 %96, 1
  %98 = alloca %dimension_descriptor*, align 8
  %99 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %100 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %99, i32 0, i32 0
  store %dimension_descriptor* %100, %dimension_descriptor** %98, align 8
  %101 = alloca i32, align 4
  store i32 1, i32* %101, align 4
  %102 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %98, i32* %101)
  %103 = icmp sle i32 %97, %102
  br i1 %103, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %104 = load i32, i32* %"1_k", align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %"1_k", align 4
  %106 = load i32, i32* %"1_k", align 4
  %107 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %108 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %107, i32 0, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sub i32 %106, %110
  %112 = mul i32 1, %111
  %113 = add i32 0, %112
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = mul i32 1, %115
  %117 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 %113
  store i32 2, i32* %119, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %120 = alloca %dimension_descriptor*, align 8
  %121 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %122 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %121, i32 0, i32 0
  store %dimension_descriptor* %122, %dimension_descriptor** %120, align 8
  %123 = alloca i32, align 4
  store i32 1, i32* %123, align 4
  %124 = call i32 @__module_lfortran_intrinsic_array_lbound(%dimension_descriptor** %120, i32* %123)
  %125 = sub i32 %124, 1
  store i32 %125, i32* %"1_k", align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %126 = load i32, i32* %"1_k", align 4
  %127 = add i32 %126, 1
  %128 = alloca %dimension_descriptor*, align 8
  %129 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %130 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %129, i32 0, i32 0
  store %dimension_descriptor* %130, %dimension_descriptor** %128, align 8
  %131 = alloca i32, align 4
  store i32 1, i32* %131, align 4
  %132 = call i32 @__module_lfortran_intrinsic_array_ubound(%dimension_descriptor** %128, i32* %131)
  %133 = icmp sle i32 %127, %132
  br i1 %133, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %134 = load i32, i32* %"1_k", align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %"1_k", align 4
  %136 = load i32, i32* %"1_k", align 4
  %137 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %138 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %137, i32 0, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 %136, %140
  %142 = mul i32 1, %141
  %143 = add i32 0, %142
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = mul i32 1, %145
  %147 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i32 %143
  store i32 3, i32* %149, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %150 = alloca %array.0, align 8
  %151 = alloca %array.0, align 8
  %152 = alloca %array.0, align 8
  %153 = call i32 @whole_square(%array.0* %a, %array.0* %b, %array.0* %c)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %153)
  %154 = load %array.0, %array.0* %a, align 8
  %155 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %156 = load i1, i1* %155, align 1
  br i1 %156, label %then, label %else

then:                                             ; preds = %loop.end6
  %157 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = alloca i8*, align 8
  %160 = bitcast i32* %158 to i8*
  store i8* %160, i8** %159, align 8
  %161 = load i8*, i8** %159, align 8
  call void (i8*, ...) @_lfortran_free(i8* %161)
  %162 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %162, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %163 = load %array.0, %array.0* %b, align 8
  %164 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %165 = load i1, i1* %164, align 1
  br i1 %165, label %then7, label %else8

then7:                                            ; preds = %ifcont
  %166 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = alloca i8*, align 8
  %169 = bitcast i32* %167 to i8*
  store i8* %169, i8** %168, align 8
  %170 = load i8*, i8** %168, align 8
  call void (i8*, ...) @_lfortran_free(i8* %170)
  %171 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %171, align 1
  br label %ifcont9

else8:                                            ; preds = %ifcont
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %iftmp10 = phi i32 [ 1, %then7 ], [ 2, %else8 ]
  %172 = load %array.0, %array.0* %c, align 8
  %173 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %174 = load i1, i1* %173, align 1
  br i1 %174, label %then11, label %else12

then11:                                           ; preds = %ifcont9
  %175 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = alloca i8*, align 8
  %178 = bitcast i32* %176 to i8*
  store i8* %178, i8** %177, align 8
  %179 = load i8*, i8** %177, align 8
  call void (i8*, ...) @_lfortran_free(i8* %179)
  %180 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %180, align 1
  br label %ifcont13

else12:                                           ; preds = %ifcont9
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %then11
  %iftmp14 = phi i32 [ 1, %then11 ], [ 2, %else12 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

