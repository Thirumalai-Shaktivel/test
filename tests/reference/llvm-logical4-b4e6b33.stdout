; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [13 x i8] c"%d%s%d%s%d%s\00", align 1

define i32 @main() {
.entry:
  %a = alloca i1, align 1
  %b = alloca i1, align 1
  %c = alloca i1, align 1
  store i1 true, i1* %a, align 1
  store i1 true, i1* %b, align 1
  store i1 false, i1* %c, align 1
  %0 = load i1, i1* %a, align 1
  %1 = load i1, i1* %b, align 1
  %2 = load i1, i1* %c, align 1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i1 %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i1 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i1 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
