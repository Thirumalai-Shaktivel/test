; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @print_subrout(i32* %x) {
.entry:
  %0 = load i32, i32* %x, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare void @_lfortran_printf(i8*, ...)

define i32 @main() {
.entry:
  %array = alloca %array, align 8
  %0 = getelementptr %array, %array* %array, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %array, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %array, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 4, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 4, i32* %16, align 4
  %17 = getelementptr %array, %array* %array, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca i32, i32 %18, align 4
  store i32* %19, i32** %17, align 8
  %first = alloca i32, align 4
  %i = alloca i32, align 4
  %last = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %20 = load i32, i32* %i, align 4
  %21 = add i32 %20, 1
  %22 = icmp sle i32 %21, 4
  br i1 %22, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %i, align 4
  %25 = load i32, i32* %i, align 4
  %26 = getelementptr %array, %array* %array, i32 0, i32 2
  %27 = load %dimension_descriptor*, %dimension_descriptor** %26, align 8
  %28 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %27, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 %25, %30
  %32 = mul i32 1, %31
  %33 = add i32 0, %32
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = mul i32 1, %35
  %37 = getelementptr %array, %array* %array, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds i32, i32* %38, i32 %33
  %40 = load i32, i32* %i, align 4
  store i32 %40, i32* %39, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  store i32 1, i32* %first, align 4
  store i32 4, i32* %last, align 4
  %41 = load i32, i32* %first, align 4
  %42 = sub i32 %41, 1
  store i32 %42, i32* %i, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %43 = load i32, i32* %i, align 4
  %44 = add i32 %43, 1
  %45 = load i32, i32* %last, align 4
  %46 = icmp sle i32 %44, %45
  br i1 %46, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %47 = load i32, i32* %i, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %i, align 4
  %49 = load i32, i32* %i, align 4
  %50 = getelementptr %array, %array* %array, i32 0, i32 2
  %51 = load %dimension_descriptor*, %dimension_descriptor** %50, align 8
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %51, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %49, %54
  %56 = mul i32 1, %55
  %57 = add i32 0, %56
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 1, %59
  %61 = getelementptr %array, %array* %array, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds i32, i32* %62, i32 %57
  %64 = load i32, i32* %i, align 4
  %65 = getelementptr %array, %array* %array, i32 0, i32 2
  %66 = load %dimension_descriptor*, %dimension_descriptor** %65, align 8
  %67 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %66, i32 0
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %64, %69
  %71 = mul i32 1, %70
  %72 = add i32 0, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 1, %74
  %76 = getelementptr %array, %array* %array, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds i32, i32* %77, i32 %72
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %i, align 4
  %81 = add i32 %79, %80
  store i32 %81, i32* %63, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  store i32 0, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %82 = load i32, i32* %i, align 4
  %83 = add i32 %82, 1
  %84 = icmp sle i32 %83, 4
  br i1 %84, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %85 = load i32, i32* %i, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %i, align 4
  %87 = load i32, i32* %i, align 4
  %88 = getelementptr %array, %array* %array, i32 0, i32 2
  %89 = load %dimension_descriptor*, %dimension_descriptor** %88, align 8
  %90 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %89, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %87, %92
  %94 = mul i32 1, %93
  %95 = add i32 0, %94
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = mul i32 1, %97
  %99 = getelementptr %array, %array* %array, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = getelementptr inbounds i32, i32* %100, i32 %95
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %x, align 4
  call void @print_subrout(i32* %x)
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  store i32 0, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %ifcont, %loop.end6
  %103 = load i32, i32* %i, align 4
  %104 = add i32 %103, 1
  %105 = icmp sle i32 %104, 4
  br i1 %105, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %106 = load i32, i32* %i, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %i, align 4
  %108 = load i32, i32* %i, align 4
  %109 = getelementptr %array, %array* %array, i32 0, i32 2
  %110 = load %dimension_descriptor*, %dimension_descriptor** %109, align 8
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 %108, %113
  %115 = mul i32 1, %114
  %116 = add i32 0, %115
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = mul i32 1, %118
  %120 = getelementptr %array, %array* %array, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i32, i32* %121, i32 %116
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* %x, align 4
  %124 = load i32, i32* %x, align 4
  %125 = load i32, i32* %i, align 4
  %126 = mul i32 2, %125
  %127 = icmp ne i32 %124, %126
  br i1 %127, label %then, label %else

then:                                             ; preds = %loop.body8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body8
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  ret i32 0
}

declare void @exit(i32)
