; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @f(i32* %a, i32* %b) {
.entry:
  %0 = load i32, i32* %a, align 4
  %1 = add i32 %0, 1
  store i32 %1, i32* %b, align 4
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define i32 @main() {
.entry:
  %call_arg_value23 = alloca i32, align 4
  %call_arg_value16 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 1, i32* %i, align 4
  store i32 1, i32* %j, align 4
  %0 = load i32, i32* %j, align 4
  %1 = icmp ne i32 %0, 1
  br i1 %1, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  call void @f(i32* %i, i32* %j)
  %2 = load i32, i32* %i, align 4
  %3 = icmp ne i32 %2, 1
  br i1 %3, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %4 = load i32, i32* %j, align 4
  %5 = icmp ne i32 %4, 2
  br i1 %5, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 1, i32* %j, align 4
  %6 = load i32, i32* %j, align 4
  %7 = icmp ne i32 %6, 1
  br i1 %7, label %then7, label %else8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont9

else8:                                            ; preds = %ifcont6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  store i32 3, i32* %call_arg_value, align 4
  call void @f(i32* %call_arg_value, i32* %j)
  %8 = load i32, i32* %j, align 4
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  store i32 1, i32* %j, align 4
  %10 = load i32, i32* %j, align 4
  %11 = icmp ne i32 %10, 1
  br i1 %11, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  store i32 3, i32* %call_arg_value16, align 4
  call void @f(i32* %call_arg_value16, i32* %j)
  %12 = load i32, i32* %j, align 4
  %13 = icmp ne i32 %12, 4
  br i1 %13, label %then17, label %else18

then17:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont19

else18:                                           ; preds = %ifcont15
  br label %ifcont19

ifcont19:                                         ; preds = %else18, %then17
  store i32 1, i32* %j, align 4
  %14 = load i32, i32* %j, align 4
  %15 = icmp ne i32 %14, 1
  br i1 %15, label %then20, label %else21

then20:                                           ; preds = %ifcont19
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %16 = load i32, i32* %i, align 4
  %17 = add i32 %16, 2
  store i32 %17, i32* %call_arg_value23, align 4
  call void @f(i32* %call_arg_value23, i32* %j)
  %18 = load i32, i32* %j, align 4
  %19 = icmp ne i32 %18, 4
  br i1 %19, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
