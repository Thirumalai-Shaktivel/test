(TranslationUnit (SymbolTable 1 {functions_04: (Program (SymbolTable 4 {int: (Variable 4 int Local (ConstantInteger 4 (Integer 4 [])) () Default (Integer 4 []) Source Public Required .false.), to_negative: (ExternalSymbol 4 to_negative 2 to_negative stdlib_int [] to_negative Public), to_negative@to_negative~genericprocedure: (ExternalSymbol 4 to_negative@to_negative~genericprocedure 2 to_negative~genericprocedure stdlib_int [] to_negative~genericprocedure Private), to_negative~genericprocedure: (ExternalSymbol 4 to_negative~genericprocedure 2 to_negative~genericprocedure stdlib_int [] to_negative~genericprocedure Public)}) functions_04 [stdlib_int] [(If (Compare (FunctionCall 4 to_negative@to_negative~genericprocedure 4 to_negative [((Var 4 int))] (Integer 4 []) () ()) NotEq (UnaryOp USub (ConstantInteger 4 (Integer 4 [])) (Integer 4 []) (ConstantInteger -4 (Integer 4 []))) (Logical 4 []) () ()) [(ErrorStop ())] []) (= (Var 4 int) (UnaryOp USub (ConstantInteger 4 (Integer 4 [])) (Integer 4 []) (ConstantInteger -4 (Integer 4 []))) ()) (If (Compare (FunctionCall 4 to_negative@to_negative~genericprocedure 4 to_negative [((Var 4 int))] (Integer 4 []) () ()) NotEq (UnaryOp USub (ConstantInteger 4 (Integer 4 [])) (Integer 4 []) (ConstantInteger -4 (Integer 4 []))) (Logical 4 []) () ()) [(ErrorStop ())] [])]), stdlib_int: (Module (SymbolTable 2 {to_negative: (GenericProcedure 2 to_negative [2 to_negative~genericprocedure] Public), to_negative~genericprocedure: (Function (SymbolTable 3 {int: (Variable 3 int In () () Default (Integer 4 []) Source Public Required .false.), neg_int: (Variable 3 neg_int ReturnVar () () Default (Integer 4 []) Source Public Required .false.)}) to_negative~genericprocedure [(Var 3 int)] [(If (Compare (Var 3 int) GtE (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) [(= (Var 3 neg_int) (UnaryOp USub (Var 3 int) (Integer 4 []) ()) ())] [])] (Var 3 neg_int) Source Public Implementation ())}) stdlib_int [] .false.)}) [])
