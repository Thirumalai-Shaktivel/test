<<<<<<< HEAD
(TranslationUnit (SymbolTable 1 {iso_c_binding: (IntrinsicModule lfortran_intrinsic_iso_c_binding), iso_fortran_env: (IntrinsicModule lfortran_intrinsic_iso_fortran_env), lfortran_intrinsic_builtin: (IntrinsicModule lfortran_intrinsic_builtin), lfortran_intrinsic_math: (IntrinsicModule lfortran_intrinsic_math), points: (Module (SymbolTable 2 {point: (DerivedType (SymbolTable 3 {x: (Variable 3 x Local () () Default (Real 4 []) Source Public Required .false.), y: (Variable 3 y Local () () Default (Real 4 []) Source Public Required .false.)}) point [x y] Source Public ()), point_dist_func: (Function (SymbolTable 4 {a: (Variable 4 a In () () Default (Derived 2 point []) Source Public Required .false.), b: (Variable 4 b In () () Default (Derived 2 point []) Source Public Required .false.), distance: (Variable 4 distance ReturnVar () () Default (Real 4 []) Source Public Required .false.)}) point_dist_func [(Var 4 a) (Var 4 b)] [] (Var 4 distance) Source Public Interface ()), point_dist_subrout: (Subroutine (SymbolTable 5 {a: (Variable 5 a In () () Default (Derived 2 point []) Source Public Required .false.), b: (Variable 5 b In () () Default (Derived 2 point []) Source Public Required .false.), distance: (Variable 5 distance Out () () Default (Real 4 []) Source Public Required .false.)}) point_dist_subrout [(Var 5 a) (Var 5 b) (Var 5 distance)] [] Source Public Interface () .false. .true.)}) points [] .false.), points_a: (Module (SymbolTable 6 {point: (ExternalSymbol 6 point 2 point points [] point Public), point_dist_func: (Function (SymbolTable 7 {a: (Variable 7 a In () () Default (Derived 6 point []) Source Public Required .false.), b: (Variable 7 b In () () Default (Derived 6 point []) Source Public Required .false.), distance: (Variable 7 distance ReturnVar () () Default (Real 4 []) Source Public Required .false.), sqrt: (ExternalSymbol 7 sqrt 11 sqrt lfortran_intrinsic_math [] sqrt Private), sqrt@ssqrt: (ExternalSymbol 7 sqrt@ssqrt 11 ssqrt lfortran_intrinsic_math [] ssqrt Private)}) point_dist_func [(Var 7 a) (Var 7 b)] [(= (Var 7 distance) (FunctionCall 7 sqrt@ssqrt 7 sqrt [(BinOp (BinOp (BinOp (DerivedRef (Var 7 a) 3 x (Real 4 []) ()) Sub (DerivedRef (Var 7 b) 3 x (Real 4 []) ()) (Real 4 []) () ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) (ConstantReal 2.000000 (Real 4 []))) (Real 4 []) () ()) Add (BinOp (BinOp (DerivedRef (Var 7 a) 3 y (Real 4 []) ()) Sub (DerivedRef (Var 7 b) 3 y (Real 4 []) ()) (Real 4 []) () ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) (ConstantReal 2.000000 (Real 4 []))) (Real 4 []) () ()) (Real 4 []) () ())] [] (Real 4 []) () ()) ())] (Var 7 distance) Source Public Implementation ()), point_dist_subrout: (Subroutine (SymbolTable 8 {a: (Variable 8 a In () () Default (Derived 6 point []) Source Public Required .false.), b: (Variable 8 b In () () Default (Derived 6 point []) Source Public Required .false.), distance: (Variable 8 distance Out () () Default (Real 4 []) Source Public Required .false.), sqrt: (ExternalSymbol 8 sqrt 11 sqrt lfortran_intrinsic_math [] sqrt Private), sqrt@ssqrt: (ExternalSymbol 8 sqrt@ssqrt 11 ssqrt lfortran_intrinsic_math [] ssqrt Private)}) point_dist_subrout [(Var 8 a) (Var 8 b) (Var 8 distance)] [(= (Var 8 distance) (FunctionCall 8 sqrt@ssqrt 8 sqrt [(BinOp (BinOp (BinOp (DerivedRef (Var 8 a) 3 x (Real 4 []) ()) Sub (DerivedRef (Var 8 b) 3 x (Real 4 []) ()) (Real 4 []) () ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) (ConstantReal 2.000000 (Real 4 []))) (Real 4 []) () ()) Add (BinOp (BinOp (DerivedRef (Var 8 a) 3 y (Real 4 []) ()) Sub (DerivedRef (Var 8 b) 3 y (Real 4 []) ()) (Real 4 []) () ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) (ConstantReal 2.000000 (Real 4 []))) (Real 4 []) () ()) (Real 4 []) () ())] [] (Real 4 []) () ()) ())] Source Public Implementation () .false. .true.)}) points_a [lfortran_intrinsic_math] .false.), submodules_02: (Program (SymbolTable 9 {}) submodules_02 [] [])}) [])
=======
(TranslationUnit (SymbolTable 1 {iso_c_binding: (IntrinsicModule lfortran_intrinsic_iso_c_binding), iso_fortran_env: (IntrinsicModule lfortran_intrinsic_iso_fortran_env), lfortran_intrinsic_builtin: (IntrinsicModule lfortran_intrinsic_builtin), lfortran_intrinsic_math: (IntrinsicModule lfortran_intrinsic_math), points: (Module (SymbolTable 5 {point: (DerivedType (SymbolTable 6 {x: (Variable 6 x Local () () Default (Real 4 []) Source Public Required .false.), y: (Variable 6 y Local () () Default (Real 4 []) Source Public Required .false.)}) point [x y] Source Public ()), point_dist: (Function (SymbolTable 7 {a: (Variable 7 a In () () Default (Derived 5 point []) Source Public Required .false.), b: (Variable 7 b In () () Default (Derived 5 point []) Source Public Required .false.), distance: (Variable 7 distance ReturnVar () () Default (Integer 4 []) Source Public Required .false.)}) point_dist [(Var 7 a) (Var 7 b)] [] (Var 7 distance) Source Public Interface ()), rkind: (ExternalSymbol 5 rkind1 4 real32 lfortran_intrinsic_iso_fortran_env [] real32 Public)}) points [stdlib_kinds] .false.), points_a: (Module (SymbolTable 8 {point: (ExternalSymbol 8 point 5 point points [] point Public), point_dist: (Function (SymbolTable 9 {a: (Variable 9 a In () () Default (Derived 8 point []) Source Public Required .false.), b: (Variable 9 b In () () Default (Derived 8 point []) Source Public Required .false.), distance: (Variable 9 distance ReturnVar () () Default (Integer 4 []) Source Public Required .false.), sqrt: (ExternalSymbol 9 sqrt 12 sqrt lfortran_intrinsic_math [] sqrt Private), sqrt@ssqrt: (ExternalSymbol 9 sqrt@ssqrt 12 ssqrt lfortran_intrinsic_math [] ssqrt Private)}) point_dist [(Var 9 a) (Var 9 b)] [(= (Var 9 distance) (ImplicitCast (FunctionCall 9 sqrt@ssqrt 9 sqrt [(BinOp (BinOp (BinOp (DerivedRef (Var 9 a) 6 x (Real 4 []) ()) Sub (DerivedRef (Var 9 b) 6 x (Real 4 []) ()) (Real 4 []) () ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) (ConstantReal 2.000000 (Real 4 []))) (Real 4 []) () ()) Add (BinOp (BinOp (DerivedRef (Var 9 a) 6 y (Real 4 []) ()) Sub (DerivedRef (Var 9 b) 6 y (Real 4 []) ()) (Real 4 []) () ()) Pow (ImplicitCast (ConstantInteger 2 (Integer 4 [])) IntegerToReal (Real 4 []) (ConstantReal 2.000000 (Real 4 []))) (Real 4 []) () ()) (Real 4 []) () ())] [] (Real 4 []) () ()) RealToInteger (Integer 4 []) ()) ())] (Var 9 distance) Source Public Implementation ()), rkind: (ExternalSymbol 8 rkind1 4 real32 lfortran_intrinsic_iso_fortran_env [] real32 Public)}) points_a [lfortran_intrinsic_math] .false.), stdlib_kinds: (Module (SymbolTable 2 {int32: (ExternalSymbol 2 int32 4 int32 lfortran_intrinsic_iso_fortran_env [] int32 Public), rkind1: (ExternalSymbol 2 rkind1 4 real32 lfortran_intrinsic_iso_fortran_env [] real32 Public)}) stdlib_kinds [iso_fortran_env] .false.), submodules_02: (Program (SymbolTable 10 {}) submodules_02 [] [])}) [])
>>>>>>> master
