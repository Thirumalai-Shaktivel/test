; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @copy_from_to(%array* %a, %array* %b) {
.entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body2, %.entry
  %0 = load i32, i32* %i, align 4
  %1 = add i32 %0, 1
  %2 = load %array, %array* %a, align 8
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %8, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body, %loop.head
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %6
  br i1 %10, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head1
  %11 = load i32, i32* %8, align 4
  %12 = load i32, i32* %7, align 4
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %4, i32 %11
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = mul i32 %12, %15
  store i32 %16, i32* %7, align 4
  %17 = add i32 %11, 1
  store i32 %17, i32* %8, align 4
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  %18 = load i32, i32* %7, align 4
  %19 = icmp sle i32 %1, %18
  br i1 %19, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.end
  %20 = load i32, i32* %i, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %i, align 4
  %22 = load i32, i32* %i, align 4
  %23 = getelementptr %array, %array* %b, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %22, %27
  %29 = mul i32 1, %28
  %30 = add i32 0, %29
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = mul i32 1, %32
  %34 = getelementptr %array, %array* %b, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i32 %30
  %37 = load i32, i32* %i, align 4
  %38 = getelementptr %array, %array* %a, i32 0, i32 2
  %39 = load %dimension_descriptor*, %dimension_descriptor** %38, align 8
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %39, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 %37, %42
  %44 = mul i32 1, %43
  %45 = add i32 0, %44
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = mul i32 1, %47
  %49 = getelementptr %array, %array* %a, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds i32, i32* %50, i32 %45
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %36, align 4
  br label %loop.head

loop.end3:                                        ; preds = %loop.end
  br label %return

return:                                           ; preds = %loop.end3
  ret void
}

define i1 @verify(%array* %a, %array* %b) {
.entry:
  %i = alloca i32, align 4
  %r = alloca i1, align 1
  store i1 true, i1* %r, align 1
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body2, %.entry
  %0 = load i32, i32* %i, align 4
  %1 = add i32 %0, 1
  %2 = load %array, %array* %a, align 8
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %8, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body, %loop.head
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %6
  br i1 %10, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head1
  %11 = load i32, i32* %8, align 4
  %12 = load i32, i32* %7, align 4
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %4, i32 %11
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = mul i32 %12, %15
  store i32 %16, i32* %7, align 4
  %17 = add i32 %11, 1
  store i32 %17, i32* %8, align 4
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  %18 = load i32, i32* %7, align 4
  %19 = icmp sle i32 %1, %18
  br i1 %19, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.end
  %20 = load i32, i32* %i, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %i, align 4
  %22 = load i1, i1* %r, align 1
  %23 = load i32, i32* %i, align 4
  %24 = getelementptr %array, %array* %a, i32 0, i32 2
  %25 = load %dimension_descriptor*, %dimension_descriptor** %24, align 8
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 %23, %28
  %30 = mul i32 1, %29
  %31 = add i32 0, %30
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = mul i32 1, %33
  %35 = getelementptr %array, %array* %a, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i32 %31
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %i, align 4
  %40 = getelementptr %array, %array* %b, i32 0, i32 2
  %41 = load %dimension_descriptor*, %dimension_descriptor** %40, align 8
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %39, %44
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 1, %49
  %51 = getelementptr %array, %array* %b, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds i32, i32* %52, i32 %47
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %38, %54
  %56 = and i1 %22, %55
  store i1 %56, i1* %r, align 1
  br label %loop.head

loop.end3:                                        ; preds = %loop.end
  br label %return

return:                                           ; preds = %loop.end3
  %57 = load i1, i1* %r, align 1
  ret i1 %57
}

define i32 @main() {
.entry:
  %i = alloca i32, align 4
  %r = alloca i1, align 1
  %x = alloca %array, align 8
  %0 = getelementptr %array, %array* %x, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %x, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %x, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 10, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 10, i32* %16, align 4
  %17 = getelementptr %array, %array* %x, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca i32, i32 %18, align 4
  store i32* %19, i32** %17, align 8
  %y = alloca %array, align 8
  %20 = getelementptr %array, %array* %y, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %y, i32 0, i32 2
  %22 = alloca i32, align 4
  store i32 1, i32* %22, align 4
  %23 = load i32, i32* %22, align 4
  %24 = alloca %dimension_descriptor, i32 %23, align 8
  %25 = getelementptr %array, %array* %y, i32 0, i32 4
  store i32 1, i32* %25, align 4
  store %dimension_descriptor* %24, %dimension_descriptor** %21, align 8
  %26 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 3
  store i32 1, i32* %28, align 4
  store i32 1, i32* %29, align 4
  store i32 10, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %29, align 4
  %34 = sub i32 %32, %33
  %35 = add i32 %34, 1
  store i32 %35, i32* %31, align 4
  %36 = alloca i32, align 4
  store i32 10, i32* %36, align 4
  %37 = getelementptr %array, %array* %y, i32 0, i32 0
  %38 = load i32, i32* %36, align 4
  %39 = alloca i32, i32 %38, align 4
  store i32* %39, i32** %37, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body2, %.entry
  %40 = load i32, i32* %i, align 4
  %41 = add i32 %40, 1
  %42 = load %array, %array* %x, align 8
  %43 = getelementptr %array, %array* %x, i32 0, i32 2
  %44 = load %dimension_descriptor*, %dimension_descriptor** %43, align 8
  %45 = getelementptr %array, %array* %x, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = alloca i32, align 4
  store i32 1, i32* %47, align 4
  %48 = alloca i32, align 4
  store i32 0, i32* %48, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body, %loop.head
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, %46
  br i1 %50, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head1
  %51 = load i32, i32* %48, align 4
  %52 = load i32, i32* %47, align 4
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %44, i32 %51
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = mul i32 %52, %55
  store i32 %56, i32* %47, align 4
  %57 = add i32 %51, 1
  store i32 %57, i32* %48, align 4
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  %58 = load i32, i32* %47, align 4
  %59 = icmp sle i32 %41, %58
  br i1 %59, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.end
  %60 = load i32, i32* %i, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %i, align 4
  %62 = load i32, i32* %i, align 4
  %63 = getelementptr %array, %array* %x, i32 0, i32 2
  %64 = load %dimension_descriptor*, %dimension_descriptor** %63, align 8
  %65 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %64, i32 0
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %65, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = sub i32 %62, %67
  %69 = mul i32 1, %68
  %70 = add i32 0, %69
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %65, i32 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = mul i32 1, %72
  %74 = getelementptr %array, %array* %x, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds i32, i32* %75, i32 %70
  %77 = load i32, i32* %i, align 4
  store i32 %77, i32* %76, align 4
  br label %loop.head

loop.end3:                                        ; preds = %loop.end
  %78 = alloca %array, align 8
  %79 = alloca %array, align 8
  call void @copy_from_to(%array* %x, %array* %y)
  %80 = alloca %array, align 8
  %81 = alloca %array, align 8
  %82 = call i1 @verify(%array* %x, %array* %y)
  store i1 %82, i1* %r, align 1
  %83 = load i1, i1* %r, align 1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i1 %83)
  %84 = load i1, i1* %r, align 1
  %85 = xor i1 %84, true
  br i1 %85, label %then, label %else

then:                                             ; preds = %loop.end3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end3
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
