; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define void @f(%array* %x, %array* %y) {
.entry:
  %"1_k" = alloca i32, align 4
  %0 = load %array, %array* %y, align 8
  %1 = getelementptr %array, %array* %y, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %5, 1
  store i32 %6, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %7 = load i32, i32* %"1_k", align 4
  %8 = add i32 %7, 1
  %9 = load %array, %array* %y, align 8
  %10 = getelementptr %array, %array* %y, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sle i32 %8, %14
  br i1 %15, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %16 = load i32, i32* %"1_k", align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %"1_k", align 4
  %18 = load i32, i32* %"1_k", align 4
  %19 = getelementptr %array, %array* %y, i32 0, i32 2
  %20 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %21 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 %18, %23
  %25 = mul i32 1, %24
  %26 = add i32 0, %25
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = mul i32 1, %28
  %30 = getelementptr %array, %array* %y, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i32 %26
  %33 = load i32, i32* %"1_k", align 4
  %34 = getelementptr %array, %array* %x, i32 0, i32 2
  %35 = load %dimension_descriptor*, %dimension_descriptor** %34, align 8
  %36 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 %33, %38
  %40 = mul i32 1, %39
  %41 = add i32 0, %40
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 1, %43
  %45 = getelementptr %array, %array* %x, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i32 %41
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %32, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  ret void
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %x = alloca %array, align 8
  %0 = getelementptr %array, %array* %x, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %x, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %x, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array, %array* %x, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca i32, i32 %18, align 4
  store i32* %19, i32** %17, align 8
  %y = alloca %array, align 8
  %20 = getelementptr %array, %array* %y, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %y, i32 0, i32 2
  %22 = alloca i32, align 4
  store i32 1, i32* %22, align 4
  %23 = load i32, i32* %22, align 4
  %24 = alloca %dimension_descriptor, i32 %23, align 8
  %25 = getelementptr %array, %array* %y, i32 0, i32 4
  store i32 1, i32* %25, align 4
  store %dimension_descriptor* %24, %dimension_descriptor** %21, align 8
  %26 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 3
  store i32 1, i32* %28, align 4
  store i32 1, i32* %29, align 4
  store i32 3, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %29, align 4
  %34 = sub i32 %32, %33
  %35 = add i32 %34, 1
  store i32 %35, i32* %31, align 4
  %36 = alloca i32, align 4
  store i32 3, i32* %36, align 4
  %37 = getelementptr %array, %array* %y, i32 0, i32 0
  %38 = load i32, i32* %36, align 4
  %39 = alloca i32, i32 %38, align 4
  store i32* %39, i32** %37, align 8
  %40 = load %array, %array* %x, align 8
  %41 = getelementptr %array, %array* %x, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 %45, 1
  store i32 %46, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %47 = load i32, i32* %"1_k", align 4
  %48 = add i32 %47, 1
  %49 = load %array, %array* %x, align 8
  %50 = getelementptr %array, %array* %x, i32 0, i32 2
  %51 = load %dimension_descriptor*, %dimension_descriptor** %50, align 8
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %51, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp sle i32 %48, %54
  br i1 %55, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %56 = load i32, i32* %"1_k", align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %"1_k", align 4
  %58 = load i32, i32* %"1_k", align 4
  %59 = getelementptr %array, %array* %x, i32 0, i32 2
  %60 = load %dimension_descriptor*, %dimension_descriptor** %59, align 8
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %58, %63
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 1, %68
  %70 = getelementptr %array, %array* %x, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i32 %66
  store i32 3, i32* %72, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %73 = alloca %array, align 8
  %74 = alloca %array, align 8
  call void @f(%array* %x, %array* %y)
  %75 = load %array, %array* %y, align 8
  %76 = getelementptr %array, %array* %y, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 %80, 1
  store i32 %81, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %82 = load i32, i32* %"1_k", align 4
  %83 = add i32 %82, 1
  %84 = load %array, %array* %y, align 8
  %85 = getelementptr %array, %array* %y, i32 0, i32 2
  %86 = load %dimension_descriptor*, %dimension_descriptor** %85, align 8
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %86, i32 0
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp sle i32 %83, %89
  br i1 %90, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %91 = load i32, i32* %"1_k", align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %"1_k", align 4
  %93 = load i32, i32* %"1_k", align 4
  %94 = getelementptr %array, %array* %y, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 %93, %98
  %100 = mul i32 1, %99
  %101 = add i32 0, %100
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = mul i32 1, %103
  %105 = getelementptr %array, %array* %y, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds i32, i32* %106, i32 %101
  %108 = load i32, i32* %107, align 4
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %108)
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  call void (i8*, ...) @_lcompilers_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lcompilers_printf(i8*, ...)
