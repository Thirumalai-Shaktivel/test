; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define void @f(%array* %x, %array* %y) {
.entry:
  %"1_k" = alloca i32, align 4
  %0 = getelementptr %array, %array* %y, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %6 = load i32, i32* %"1_k", align 4
  %7 = add i32 %6, 1
  %8 = getelementptr %array, %array* %y, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %"1_k", align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %"1_k", align 4
  %16 = load i32, i32* %"1_k", align 4
  %17 = getelementptr %array, %array* %y, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %18, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 %16, %21
  %23 = mul i32 1, %22
  %24 = add i32 0, %23
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = mul i32 1, %26
  %28 = getelementptr %array, %array* %y, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i32 %24
  %31 = load i32, i32* %"1_k", align 4
  %32 = getelementptr %array, %array* %x, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %31, %36
  %38 = mul i32 1, %37
  %39 = add i32 0, %38
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = mul i32 1, %41
  %43 = getelementptr %array, %array* %x, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds i32, i32* %44, i32 %39
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %30, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  ret void
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %x = alloca %array, align 8
  %0 = getelementptr %array, %array* %x, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %x, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %x, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array, %array* %x, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca i32, i32 %18, align 4
  store i32* %19, i32** %17, align 8
  %y = alloca %array, align 8
  %20 = getelementptr %array, %array* %y, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %y, i32 0, i32 2
  %22 = alloca i32, align 4
  store i32 1, i32* %22, align 4
  %23 = load i32, i32* %22, align 4
  %24 = alloca %dimension_descriptor, i32 %23, align 8
  %25 = getelementptr %array, %array* %y, i32 0, i32 4
  store i32 1, i32* %25, align 4
  store %dimension_descriptor* %24, %dimension_descriptor** %21, align 8
  %26 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 3
  store i32 1, i32* %28, align 4
  store i32 1, i32* %29, align 4
  store i32 3, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %29, align 4
  %34 = sub i32 %32, %33
  %35 = add i32 %34, 1
  store i32 %35, i32* %31, align 4
  %36 = alloca i32, align 4
  store i32 3, i32* %36, align 4
  %37 = getelementptr %array, %array* %y, i32 0, i32 0
  %38 = load i32, i32* %36, align 4
  %39 = alloca i32, i32 %38, align 4
  store i32* %39, i32** %37, align 8
  %40 = getelementptr %array, %array* %x, i32 0, i32 2
  %41 = load %dimension_descriptor*, %dimension_descriptor** %40, align 8
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %44, 1
  store i32 %45, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %46 = load i32, i32* %"1_k", align 4
  %47 = add i32 %46, 1
  %48 = getelementptr %array, %array* %x, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp sle i32 %47, %52
  br i1 %53, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %54 = load i32, i32* %"1_k", align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %"1_k", align 4
  %56 = load i32, i32* %"1_k", align 4
  %57 = getelementptr %array, %array* %x, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %56, %61
  %63 = mul i32 1, %62
  %64 = add i32 0, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 1, %66
  %68 = getelementptr %array, %array* %x, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i32 %64
  store i32 3, i32* %70, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %71 = alloca %array, align 8
  %72 = alloca %array, align 8
  call void @f(%array* %x, %array* %y)
  %73 = getelementptr %array, %array* %y, i32 0, i32 2
  %74 = load %dimension_descriptor*, %dimension_descriptor** %73, align 8
  %75 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %74, i32 0
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %77, 1
  store i32 %78, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %79 = load i32, i32* %"1_k", align 4
  %80 = add i32 %79, 1
  %81 = getelementptr %array, %array* %y, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp sle i32 %80, %85
  br i1 %86, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %87 = load i32, i32* %"1_k", align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %"1_k", align 4
  %89 = load i32, i32* %"1_k", align 4
  %90 = getelementptr %array, %array* %y, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  %92 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %91, i32 0
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 %89, %94
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 1, %99
  %101 = getelementptr %array, %array* %y, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = getelementptr inbounds i32, i32* %102, i32 %97
  %104 = load i32, i32* %103, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %104)
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
