; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i64 @main() {
.entry:
  %x = alloca i64, align 8
  store i64 25, i64* %x, align 4
  %0 = load i64, i64* %x, align 4
  %1 = icmp eq i64 %0, 25
  br i1 %1, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i64 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i64 [ 1, %then ], [ 2, %else ]
  ret i64 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i64)

