; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i1*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { i1*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = sub i32 3, %11
  %13 = add i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = alloca i32, align 4
  store i32 3, i32* %14, align 4
  %15 = getelementptr %array, %array* %a, i32 0, i32 0
  %16 = load i32, i32* %14, align 4
  %17 = alloca i1, i32 %16, align 1
  store i1* %17, i1** %15, align 8
  %b = alloca %array, align 8
  %18 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %18, align 4
  %19 = getelementptr %array, %array* %b, i32 0, i32 2
  %20 = alloca i32, align 4
  store i32 1, i32* %20, align 4
  %21 = load i32, i32* %20, align 4
  %22 = alloca %dimension_descriptor, i32 %21, align 8
  %23 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %23, align 4
  store %dimension_descriptor* %22, %dimension_descriptor** %19, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = sub i32 4, %29
  %31 = add i32 %30, 1
  store i32 %31, i32* %28, align 4
  %32 = alloca i32, align 4
  store i32 4, i32* %32, align 4
  %33 = getelementptr %array, %array* %b, i32 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = alloca i1, i32 %34, align 1
  store i1* %35, i1** %33, align 8
  %c = alloca %array.0, align 8
  %36 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = alloca i32, align 4
  store i32 2, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = alloca %dimension_descriptor, i32 %39, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 2, i32* %41, align 4
  store %dimension_descriptor* %40, %dimension_descriptor** %37, align 8
  %42 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  %47 = load i32, i32* %45, align 4
  %48 = sub i32 2, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %46, align 4
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  store i32 1, i32* %51, align 4
  store i32 1, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = sub i32 2, %54
  %56 = add i32 %55, 1
  store i32 %56, i32* %53, align 4
  %57 = alloca i32, align 4
  store i32 4, i32* %57, align 4
  %58 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %59 = load i32, i32* %57, align 4
  %60 = alloca i1, i32 %59, align 1
  store i1* %60, i1** %58, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %61 = getelementptr %array, %array* %a, i32 0, i32 2
  %62 = load %dimension_descriptor*, %dimension_descriptor** %61, align 8
  %63 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %62, i32 0
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = sub i32 1, %65
  %67 = mul i32 1, %66
  %68 = add i32 0, %67
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = mul i32 1, %70
  %72 = getelementptr %array, %array* %a, i32 0, i32 0
  %73 = load i1*, i1** %72, align 8
  %74 = getelementptr inbounds i1, i1* %73, i32 %68
  store i1 true, i1* %74, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %75 = load i32, i32* %i, align 4
  %76 = add i32 %75, 1
  %77 = icmp sle i32 %76, 3
  br i1 %77, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %78 = load i32, i32* %i, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %i, align 4
  %80 = load i32, i32* %i, align 4
  %81 = getelementptr %array, %array* %a, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sub i32 %80, %85
  %87 = mul i32 1, %86
  %88 = add i32 0, %87
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 1, %90
  %92 = getelementptr %array, %array* %a, i32 0, i32 0
  %93 = load i1*, i1** %92, align 8
  %94 = getelementptr inbounds i1, i1* %93, i32 %88
  %95 = load i32, i32* %i, align 4
  %96 = sub i32 %95, 1
  %97 = getelementptr %array, %array* %a, i32 0, i32 2
  %98 = load %dimension_descriptor*, %dimension_descriptor** %97, align 8
  %99 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %98, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 %96, %101
  %103 = mul i32 1, %102
  %104 = add i32 0, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 1, %106
  %108 = getelementptr %array, %array* %a, i32 0, i32 0
  %109 = load i1*, i1** %108, align 8
  %110 = getelementptr inbounds i1, i1* %109, i32 %104
  %111 = load i1, i1* %110, align 1
  %112 = xor i1 %111, true
  store i1 %112, i1* %94, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %113 = getelementptr %array, %array* %a, i32 0, i32 2
  %114 = load %dimension_descriptor*, %dimension_descriptor** %113, align 8
  %115 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 0
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sub i32 1, %117
  %119 = mul i32 1, %118
  %120 = add i32 0, %119
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = mul i32 1, %122
  %124 = getelementptr %array, %array* %a, i32 0, i32 0
  %125 = load i1*, i1** %124, align 8
  %126 = getelementptr inbounds i1, i1* %125, i32 %120
  %127 = load i1, i1* %126, align 1
  %128 = xor i1 %127, true
  br i1 %128, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %129 = getelementptr %array, %array* %a, i32 0, i32 2
  %130 = load %dimension_descriptor*, %dimension_descriptor** %129, align 8
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %130, i32 0
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 2, %133
  %135 = mul i32 1, %134
  %136 = add i32 0, %135
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 1, %138
  %140 = getelementptr %array, %array* %a, i32 0, i32 0
  %141 = load i1*, i1** %140, align 8
  %142 = getelementptr inbounds i1, i1* %141, i32 %136
  %143 = load i1, i1* %142, align 1
  br i1 %143, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %144 = getelementptr %array, %array* %a, i32 0, i32 2
  %145 = load %dimension_descriptor*, %dimension_descriptor** %144, align 8
  %146 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %145, i32 0
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 3, %148
  %150 = mul i32 1, %149
  %151 = add i32 0, %150
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = mul i32 1, %153
  %155 = getelementptr %array, %array* %a, i32 0, i32 0
  %156 = load i1*, i1** %155, align 8
  %157 = getelementptr inbounds i1, i1* %156, i32 %151
  %158 = load i1, i1* %157, align 1
  %159 = xor i1 %158, true
  br i1 %159, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %160 = getelementptr %array, %array* %b, i32 0, i32 2
  %161 = load %dimension_descriptor*, %dimension_descriptor** %160, align 8
  %162 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %161, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 1, %164
  %166 = mul i32 1, %165
  %167 = add i32 0, %166
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 1, %169
  %171 = getelementptr %array, %array* %b, i32 0, i32 0
  %172 = load i1*, i1** %171, align 8
  %173 = getelementptr inbounds i1, i1* %172, i32 %167
  store i1 false, i1* %173, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %174 = load i32, i32* %i, align 4
  %175 = add i32 %174, 1
  %176 = icmp sle i32 %175, 14
  br i1 %176, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %177 = load i32, i32* %i, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %i, align 4
  %179 = load i32, i32* %i, align 4
  %180 = sub i32 %179, 10
  %181 = getelementptr %array, %array* %b, i32 0, i32 2
  %182 = load %dimension_descriptor*, %dimension_descriptor** %181, align 8
  %183 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %182, i32 0
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %183, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = sub i32 %180, %185
  %187 = mul i32 1, %186
  %188 = add i32 0, %187
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %183, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = mul i32 1, %190
  %192 = getelementptr %array, %array* %b, i32 0, i32 0
  %193 = load i1*, i1** %192, align 8
  %194 = getelementptr inbounds i1, i1* %193, i32 %188
  %195 = load i32, i32* %i, align 4
  %196 = sub i32 %195, 10
  %197 = sub i32 %196, 1
  %198 = getelementptr %array, %array* %b, i32 0, i32 2
  %199 = load %dimension_descriptor*, %dimension_descriptor** %198, align 8
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %197, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr %array, %array* %b, i32 0, i32 0
  %210 = load i1*, i1** %209, align 8
  %211 = getelementptr inbounds i1, i1* %210, i32 %205
  %212 = load i1, i1* %211, align 1
  %213 = xor i1 %212, true
  store i1 %213, i1* %194, align 1
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %214 = getelementptr %array, %array* %b, i32 0, i32 2
  %215 = load %dimension_descriptor*, %dimension_descriptor** %214, align 8
  %216 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %215, i32 0
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = sub i32 1, %218
  %220 = mul i32 1, %219
  %221 = add i32 0, %220
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = mul i32 1, %223
  %225 = getelementptr %array, %array* %b, i32 0, i32 0
  %226 = load i1*, i1** %225, align 8
  %227 = getelementptr inbounds i1, i1* %226, i32 %221
  %228 = load i1, i1* %227, align 1
  br i1 %228, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %229 = getelementptr %array, %array* %b, i32 0, i32 2
  %230 = load %dimension_descriptor*, %dimension_descriptor** %229, align 8
  %231 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %230, i32 0
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %231, i32 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = sub i32 2, %233
  %235 = mul i32 1, %234
  %236 = add i32 0, %235
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %231, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  %239 = mul i32 1, %238
  %240 = getelementptr %array, %array* %b, i32 0, i32 0
  %241 = load i1*, i1** %240, align 8
  %242 = getelementptr inbounds i1, i1* %241, i32 %236
  %243 = load i1, i1* %242, align 1
  %244 = xor i1 %243, true
  br i1 %244, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %245 = getelementptr %array, %array* %b, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 0
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 3, %249
  %251 = mul i32 1, %250
  %252 = add i32 0, %251
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = mul i32 1, %254
  %256 = getelementptr %array, %array* %b, i32 0, i32 0
  %257 = load i1*, i1** %256, align 8
  %258 = getelementptr inbounds i1, i1* %257, i32 %252
  %259 = load i1, i1* %258, align 1
  br i1 %259, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %260 = getelementptr %array, %array* %b, i32 0, i32 2
  %261 = load %dimension_descriptor*, %dimension_descriptor** %260, align 8
  %262 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %261, i32 0
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = sub i32 4, %264
  %266 = mul i32 1, %265
  %267 = add i32 0, %266
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = mul i32 1, %269
  %271 = getelementptr %array, %array* %b, i32 0, i32 0
  %272 = load i1*, i1** %271, align 8
  %273 = getelementptr inbounds i1, i1* %272, i32 %267
  %274 = load i1, i1* %273, align 1
  %275 = xor i1 %274, true
  br i1 %275, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %276 = load i32, i32* %i, align 4
  %277 = add i32 %276, 1
  %278 = icmp sle i32 %277, 3
  br i1 %278, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %279 = load i32, i32* %i, align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %i, align 4
  %281 = load i32, i32* %i, align 4
  %282 = getelementptr %array, %array* %b, i32 0, i32 2
  %283 = load %dimension_descriptor*, %dimension_descriptor** %282, align 8
  %284 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %283, i32 0
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = sub i32 %281, %286
  %288 = mul i32 1, %287
  %289 = add i32 0, %288
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 2
  %291 = load i32, i32* %290, align 4
  %292 = mul i32 1, %291
  %293 = getelementptr %array, %array* %b, i32 0, i32 0
  %294 = load i1*, i1** %293, align 8
  %295 = getelementptr inbounds i1, i1* %294, i32 %289
  %296 = load i32, i32* %i, align 4
  %297 = getelementptr %array, %array* %a, i32 0, i32 2
  %298 = load %dimension_descriptor*, %dimension_descriptor** %297, align 8
  %299 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %298, i32 0
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = sub i32 %296, %301
  %303 = mul i32 1, %302
  %304 = add i32 0, %303
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 2
  %306 = load i32, i32* %305, align 4
  %307 = mul i32 1, %306
  %308 = getelementptr %array, %array* %a, i32 0, i32 0
  %309 = load i1*, i1** %308, align 8
  %310 = getelementptr inbounds i1, i1* %309, i32 %304
  %311 = load i1, i1* %310, align 1
  %312 = and i1 %311, false
  store i1 %312, i1* %295, align 1
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %313 = getelementptr %array, %array* %b, i32 0, i32 2
  %314 = load %dimension_descriptor*, %dimension_descriptor** %313, align 8
  %315 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %314, i32 0
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 1, %317
  %319 = mul i32 1, %318
  %320 = add i32 0, %319
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 1, %322
  %324 = getelementptr %array, %array* %b, i32 0, i32 0
  %325 = load i1*, i1** %324, align 8
  %326 = getelementptr inbounds i1, i1* %325, i32 %320
  %327 = load i1, i1* %326, align 1
  br i1 %327, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %328 = getelementptr %array, %array* %b, i32 0, i32 2
  %329 = load %dimension_descriptor*, %dimension_descriptor** %328, align 8
  %330 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 0
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sub i32 2, %332
  %334 = mul i32 1, %333
  %335 = add i32 0, %334
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = mul i32 1, %337
  %339 = getelementptr %array, %array* %b, i32 0, i32 0
  %340 = load i1*, i1** %339, align 8
  %341 = getelementptr inbounds i1, i1* %340, i32 %335
  %342 = load i1, i1* %341, align 1
  br i1 %342, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %343 = getelementptr %array, %array* %b, i32 0, i32 2
  %344 = load %dimension_descriptor*, %dimension_descriptor** %343, align 8
  %345 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %344, i32 0
  %346 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = sub i32 3, %347
  %349 = mul i32 1, %348
  %350 = add i32 0, %349
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = mul i32 1, %352
  %354 = getelementptr %array, %array* %b, i32 0, i32 0
  %355 = load i1*, i1** %354, align 8
  %356 = getelementptr inbounds i1, i1* %355, i32 %350
  %357 = load i1, i1* %356, align 1
  br i1 %357, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %358 = getelementptr %array, %array* %b, i32 0, i32 2
  %359 = load %dimension_descriptor*, %dimension_descriptor** %358, align 8
  %360 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %359, i32 0
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = sub i32 4, %362
  %364 = mul i32 1, %363
  %365 = add i32 0, %364
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 2
  %367 = load i32, i32* %366, align 4
  %368 = mul i32 1, %367
  %369 = getelementptr %array, %array* %b, i32 0, i32 0
  %370 = load i1*, i1** %369, align 8
  %371 = getelementptr inbounds i1, i1* %370, i32 %365
  %372 = getelementptr %array, %array* %b, i32 0, i32 2
  %373 = load %dimension_descriptor*, %dimension_descriptor** %372, align 8
  %374 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %373, i32 0
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = sub i32 1, %376
  %378 = mul i32 1, %377
  %379 = add i32 0, %378
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 2
  %381 = load i32, i32* %380, align 4
  %382 = mul i32 1, %381
  %383 = getelementptr %array, %array* %b, i32 0, i32 0
  %384 = load i1*, i1** %383, align 8
  %385 = getelementptr inbounds i1, i1* %384, i32 %379
  %386 = load i1, i1* %385, align 1
  %387 = getelementptr %array, %array* %b, i32 0, i32 2
  %388 = load %dimension_descriptor*, %dimension_descriptor** %387, align 8
  %389 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %388, i32 0
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = sub i32 2, %391
  %393 = mul i32 1, %392
  %394 = add i32 0, %393
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 2
  %396 = load i32, i32* %395, align 4
  %397 = mul i32 1, %396
  %398 = getelementptr %array, %array* %b, i32 0, i32 0
  %399 = load i1*, i1** %398, align 8
  %400 = getelementptr inbounds i1, i1* %399, i32 %394
  %401 = load i1, i1* %400, align 1
  %402 = or i1 %386, %401
  %403 = getelementptr %array, %array* %b, i32 0, i32 2
  %404 = load %dimension_descriptor*, %dimension_descriptor** %403, align 8
  %405 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %404, i32 0
  %406 = getelementptr %dimension_descriptor, %dimension_descriptor* %405, i32 0, i32 1
  %407 = load i32, i32* %406, align 4
  %408 = sub i32 3, %407
  %409 = mul i32 1, %408
  %410 = add i32 0, %409
  %411 = getelementptr %dimension_descriptor, %dimension_descriptor* %405, i32 0, i32 2
  %412 = load i32, i32* %411, align 4
  %413 = mul i32 1, %412
  %414 = getelementptr %array, %array* %b, i32 0, i32 0
  %415 = load i1*, i1** %414, align 8
  %416 = getelementptr inbounds i1, i1* %415, i32 %410
  %417 = load i1, i1* %416, align 1
  %418 = or i1 %402, %417
  %419 = getelementptr %array, %array* %a, i32 0, i32 2
  %420 = load %dimension_descriptor*, %dimension_descriptor** %419, align 8
  %421 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %420, i32 0
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = sub i32 1, %423
  %425 = mul i32 1, %424
  %426 = add i32 0, %425
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 2
  %428 = load i32, i32* %427, align 4
  %429 = mul i32 1, %428
  %430 = getelementptr %array, %array* %a, i32 0, i32 0
  %431 = load i1*, i1** %430, align 8
  %432 = getelementptr inbounds i1, i1* %431, i32 %426
  %433 = load i1, i1* %432, align 1
  %434 = or i1 %418, %433
  store i1 %434, i1* %371, align 1
  %435 = getelementptr %array, %array* %b, i32 0, i32 2
  %436 = load %dimension_descriptor*, %dimension_descriptor** %435, align 8
  %437 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %436, i32 0
  %438 = getelementptr %dimension_descriptor, %dimension_descriptor* %437, i32 0, i32 1
  %439 = load i32, i32* %438, align 4
  %440 = sub i32 4, %439
  %441 = mul i32 1, %440
  %442 = add i32 0, %441
  %443 = getelementptr %dimension_descriptor, %dimension_descriptor* %437, i32 0, i32 2
  %444 = load i32, i32* %443, align 4
  %445 = mul i32 1, %444
  %446 = getelementptr %array, %array* %b, i32 0, i32 0
  %447 = load i1*, i1** %446, align 8
  %448 = getelementptr inbounds i1, i1* %447, i32 %442
  %449 = load i1, i1* %448, align 1
  %450 = xor i1 %449, true
  br i1 %450, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %451 = getelementptr %array, %array* %b, i32 0, i32 2
  %452 = load %dimension_descriptor*, %dimension_descriptor** %451, align 8
  %453 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %452, i32 0
  %454 = getelementptr %dimension_descriptor, %dimension_descriptor* %453, i32 0, i32 1
  %455 = load i32, i32* %454, align 4
  %456 = sub i32 4, %455
  %457 = mul i32 1, %456
  %458 = add i32 0, %457
  %459 = getelementptr %dimension_descriptor, %dimension_descriptor* %453, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = mul i32 1, %460
  %462 = getelementptr %array, %array* %b, i32 0, i32 0
  %463 = load i1*, i1** %462, align 8
  %464 = getelementptr inbounds i1, i1* %463, i32 %458
  %465 = getelementptr %array, %array* %a, i32 0, i32 2
  %466 = load %dimension_descriptor*, %dimension_descriptor** %465, align 8
  %467 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %466, i32 0
  %468 = getelementptr %dimension_descriptor, %dimension_descriptor* %467, i32 0, i32 1
  %469 = load i32, i32* %468, align 4
  %470 = sub i32 1, %469
  %471 = mul i32 1, %470
  %472 = add i32 0, %471
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %467, i32 0, i32 2
  %474 = load i32, i32* %473, align 4
  %475 = mul i32 1, %474
  %476 = getelementptr %array, %array* %a, i32 0, i32 0
  %477 = load i1*, i1** %476, align 8
  %478 = getelementptr inbounds i1, i1* %477, i32 %472
  %479 = load i1, i1* %478, align 1
  store i1 %479, i1* %464, align 1
  %480 = getelementptr %array, %array* %b, i32 0, i32 2
  %481 = load %dimension_descriptor*, %dimension_descriptor** %480, align 8
  %482 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %481, i32 0
  %483 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = sub i32 4, %484
  %486 = mul i32 1, %485
  %487 = add i32 0, %486
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 2
  %489 = load i32, i32* %488, align 4
  %490 = mul i32 1, %489
  %491 = getelementptr %array, %array* %b, i32 0, i32 0
  %492 = load i1*, i1** %491, align 8
  %493 = getelementptr inbounds i1, i1* %492, i32 %487
  %494 = load i1, i1* %493, align 1
  %495 = xor i1 %494, true
  br i1 %495, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end47, %ifcont39
  %496 = load i32, i32* %i, align 4
  %497 = add i32 %496, 1
  %498 = icmp sle i32 %497, 2
  br i1 %498, label %loop.body41, label %loop.end48

loop.body41:                                      ; preds = %loop.head40
  %499 = load i32, i32* %i, align 4
  %500 = add i32 %499, 1
  store i32 %500, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %ifcont46, %loop.body41
  %501 = load i32, i32* %j, align 4
  %502 = add i32 %501, 1
  %503 = icmp sle i32 %502, 2
  br i1 %503, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  %504 = load i32, i32* %j, align 4
  %505 = add i32 %504, 1
  store i32 %505, i32* %j, align 4
  %506 = load i32, i32* %i, align 4
  %507 = load i32, i32* %j, align 4
  %508 = add i32 %506, %507
  %509 = load i32, i32* %i, align 4
  %510 = load i32, i32* %j, align 4
  %511 = add i32 %509, %510
  %512 = udiv i32 %511, 2
  %513 = mul i32 2, %512
  %514 = sub i32 %508, %513
  %515 = icmp eq i32 %514, 1
  br i1 %515, label %then44, label %else45

then44:                                           ; preds = %loop.body43
  %516 = load i32, i32* %i, align 4
  %517 = load i32, i32* %j, align 4
  %518 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %519 = load %dimension_descriptor*, %dimension_descriptor** %518, align 8
  %520 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %519, i32 0
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 1
  %522 = load i32, i32* %521, align 4
  %523 = sub i32 %516, %522
  %524 = mul i32 1, %523
  %525 = add i32 0, %524
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 2
  %527 = load i32, i32* %526, align 4
  %528 = mul i32 1, %527
  %529 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %519, i32 1
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = sub i32 %517, %531
  %533 = mul i32 %528, %532
  %534 = add i32 %525, %533
  %535 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 2
  %536 = load i32, i32* %535, align 4
  %537 = mul i32 %528, %536
  %538 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %539 = load i1*, i1** %538, align 8
  %540 = getelementptr inbounds i1, i1* %539, i32 %534
  store i1 true, i1* %540, align 1
  br label %ifcont46

else45:                                           ; preds = %loop.body43
  %541 = load i32, i32* %i, align 4
  %542 = load i32, i32* %j, align 4
  %543 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %544 = load %dimension_descriptor*, %dimension_descriptor** %543, align 8
  %545 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %544, i32 0
  %546 = getelementptr %dimension_descriptor, %dimension_descriptor* %545, i32 0, i32 1
  %547 = load i32, i32* %546, align 4
  %548 = sub i32 %541, %547
  %549 = mul i32 1, %548
  %550 = add i32 0, %549
  %551 = getelementptr %dimension_descriptor, %dimension_descriptor* %545, i32 0, i32 2
  %552 = load i32, i32* %551, align 4
  %553 = mul i32 1, %552
  %554 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %544, i32 1
  %555 = getelementptr %dimension_descriptor, %dimension_descriptor* %554, i32 0, i32 1
  %556 = load i32, i32* %555, align 4
  %557 = sub i32 %542, %556
  %558 = mul i32 %553, %557
  %559 = add i32 %550, %558
  %560 = getelementptr %dimension_descriptor, %dimension_descriptor* %554, i32 0, i32 2
  %561 = load i32, i32* %560, align 4
  %562 = mul i32 %553, %561
  %563 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %564 = load i1*, i1** %563, align 8
  %565 = getelementptr inbounds i1, i1* %564, i32 %559
  store i1 false, i1* %565, align 1
  br label %ifcont46

ifcont46:                                         ; preds = %else45, %then44
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end48:                                       ; preds = %loop.head40
  %566 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %567 = load %dimension_descriptor*, %dimension_descriptor** %566, align 8
  %568 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %567, i32 0
  %569 = getelementptr %dimension_descriptor, %dimension_descriptor* %568, i32 0, i32 1
  %570 = load i32, i32* %569, align 4
  %571 = sub i32 1, %570
  %572 = mul i32 1, %571
  %573 = add i32 0, %572
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %568, i32 0, i32 2
  %575 = load i32, i32* %574, align 4
  %576 = mul i32 1, %575
  %577 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %567, i32 1
  %578 = getelementptr %dimension_descriptor, %dimension_descriptor* %577, i32 0, i32 1
  %579 = load i32, i32* %578, align 4
  %580 = sub i32 1, %579
  %581 = mul i32 %576, %580
  %582 = add i32 %573, %581
  %583 = getelementptr %dimension_descriptor, %dimension_descriptor* %577, i32 0, i32 2
  %584 = load i32, i32* %583, align 4
  %585 = mul i32 %576, %584
  %586 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %587 = load i1*, i1** %586, align 8
  %588 = getelementptr inbounds i1, i1* %587, i32 %582
  %589 = load i1, i1* %588, align 1
  br i1 %589, label %then49, label %else50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.end48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %590 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %591 = load %dimension_descriptor*, %dimension_descriptor** %590, align 8
  %592 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %591, i32 0
  %593 = getelementptr %dimension_descriptor, %dimension_descriptor* %592, i32 0, i32 1
  %594 = load i32, i32* %593, align 4
  %595 = sub i32 1, %594
  %596 = mul i32 1, %595
  %597 = add i32 0, %596
  %598 = getelementptr %dimension_descriptor, %dimension_descriptor* %592, i32 0, i32 2
  %599 = load i32, i32* %598, align 4
  %600 = mul i32 1, %599
  %601 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %591, i32 1
  %602 = getelementptr %dimension_descriptor, %dimension_descriptor* %601, i32 0, i32 1
  %603 = load i32, i32* %602, align 4
  %604 = sub i32 2, %603
  %605 = mul i32 %600, %604
  %606 = add i32 %597, %605
  %607 = getelementptr %dimension_descriptor, %dimension_descriptor* %601, i32 0, i32 2
  %608 = load i32, i32* %607, align 4
  %609 = mul i32 %600, %608
  %610 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %611 = load i1*, i1** %610, align 8
  %612 = getelementptr inbounds i1, i1* %611, i32 %606
  %613 = load i1, i1* %612, align 1
  %614 = xor i1 %613, true
  br i1 %614, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %615 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %616 = load %dimension_descriptor*, %dimension_descriptor** %615, align 8
  %617 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %616, i32 0
  %618 = getelementptr %dimension_descriptor, %dimension_descriptor* %617, i32 0, i32 1
  %619 = load i32, i32* %618, align 4
  %620 = sub i32 2, %619
  %621 = mul i32 1, %620
  %622 = add i32 0, %621
  %623 = getelementptr %dimension_descriptor, %dimension_descriptor* %617, i32 0, i32 2
  %624 = load i32, i32* %623, align 4
  %625 = mul i32 1, %624
  %626 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %616, i32 1
  %627 = getelementptr %dimension_descriptor, %dimension_descriptor* %626, i32 0, i32 1
  %628 = load i32, i32* %627, align 4
  %629 = sub i32 1, %628
  %630 = mul i32 %625, %629
  %631 = add i32 %622, %630
  %632 = getelementptr %dimension_descriptor, %dimension_descriptor* %626, i32 0, i32 2
  %633 = load i32, i32* %632, align 4
  %634 = mul i32 %625, %633
  %635 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %636 = load i1*, i1** %635, align 8
  %637 = getelementptr inbounds i1, i1* %636, i32 %631
  %638 = load i1, i1* %637, align 1
  %639 = xor i1 %638, true
  br i1 %639, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %640 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %641 = load %dimension_descriptor*, %dimension_descriptor** %640, align 8
  %642 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %641, i32 0
  %643 = getelementptr %dimension_descriptor, %dimension_descriptor* %642, i32 0, i32 1
  %644 = load i32, i32* %643, align 4
  %645 = sub i32 2, %644
  %646 = mul i32 1, %645
  %647 = add i32 0, %646
  %648 = getelementptr %dimension_descriptor, %dimension_descriptor* %642, i32 0, i32 2
  %649 = load i32, i32* %648, align 4
  %650 = mul i32 1, %649
  %651 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %641, i32 1
  %652 = getelementptr %dimension_descriptor, %dimension_descriptor* %651, i32 0, i32 1
  %653 = load i32, i32* %652, align 4
  %654 = sub i32 2, %653
  %655 = mul i32 %650, %654
  %656 = add i32 %647, %655
  %657 = getelementptr %dimension_descriptor, %dimension_descriptor* %651, i32 0, i32 2
  %658 = load i32, i32* %657, align 4
  %659 = mul i32 %650, %658
  %660 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %661 = load i1*, i1** %660, align 8
  %662 = getelementptr inbounds i1, i1* %661, i32 %656
  %663 = load i1, i1* %662, align 1
  br i1 %663, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
