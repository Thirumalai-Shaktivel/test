; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i1 @modulo2(i32* %x) {
.entry:
  %r = alloca i1, align 1
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %x, align 4
  %2 = udiv i32 %1, 2
  %3 = mul i32 2, %2
  %4 = sub i32 %0, %3
  %5 = icmp eq i32 %4, 1
  store i1 %5, i1* %r, align 1
  br label %return

return:                                           ; preds = %.entry
  %6 = load i1, i1* %r, align 1
  ret i1 %6
}

define void @verify(%array.0* %c, i32* %op_code) {
.entry:
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i1, align 1
  %y = alloca i1, align 1
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end27, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = load %dimension_descriptor*, %dimension_descriptor** %9, align 8
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end28

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end27

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont26, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %j, align 4
  %50 = add i32 %48, %49
  %51 = load i32, i32* %k, align 4
  %52 = add i32 %50, %51
  store i32 %52, i32* %call_arg_value, align 4
  %53 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %53, i1* %x, align 1
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %56 = mul i32 %54, %55
  %57 = load i32, i32* %j, align 4
  %58 = load i32, i32* %k, align 4
  %59 = mul i32 %57, %58
  %60 = add i32 %56, %59
  %61 = load i32, i32* %k, align 4
  %62 = load i32, i32* %j, align 4
  %63 = mul i32 %61, %62
  %64 = add i32 %60, %63
  store i32 %64, i32* %call_arg_value5, align 4
  %65 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %65, i1* %y, align 1
  %66 = load i32, i32* %op_code, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %then, label %else7

then:                                             ; preds = %loop.body4
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* %j, align 4
  %70 = load i32, i32* %k, align 4
  %71 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 0
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 %68, %75
  %77 = mul i32 1, %76
  %78 = add i32 0, %77
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = mul i32 1, %80
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 %69, %84
  %86 = mul i32 %81, %85
  %87 = add i32 %78, %86
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = mul i32 %81, %89
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 2
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 %70, %93
  %95 = mul i32 %90, %94
  %96 = add i32 %87, %95
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 %90, %98
  %100 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %101 = load i1*, i1** %100, align 8
  %102 = getelementptr inbounds i1, i1* %101, i32 %96
  %103 = load i1, i1* %102, align 1
  %104 = load i1, i1* %x, align 1
  %105 = load i1, i1* %y, align 1
  %106 = and i1 %104, %105
  %107 = xor i1 %103, %106
  br i1 %107, label %then6, label %else

then6:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then6
  br label %ifcont26

else7:                                            ; preds = %loop.body4
  %108 = load i32, i32* %op_code, align 4
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %then8, label %else12

then8:                                            ; preds = %else7
  %110 = load i32, i32* %i, align 4
  %111 = load i32, i32* %j, align 4
  %112 = load i32, i32* %k, align 4
  %113 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %114 = load %dimension_descriptor*, %dimension_descriptor** %113, align 8
  %115 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 0
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sub i32 %110, %117
  %119 = mul i32 1, %118
  %120 = add i32 0, %119
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = mul i32 1, %122
  %124 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 1
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sub i32 %111, %126
  %128 = mul i32 %123, %127
  %129 = add i32 %120, %128
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 %123, %131
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 2
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %112, %135
  %137 = mul i32 %132, %136
  %138 = add i32 %129, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 %132, %140
  %142 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %143 = load i1*, i1** %142, align 8
  %144 = getelementptr inbounds i1, i1* %143, i32 %138
  %145 = load i1, i1* %144, align 1
  %146 = load i1, i1* %x, align 1
  %147 = load i1, i1* %y, align 1
  %148 = or i1 %146, %147
  %149 = xor i1 %145, %148
  br i1 %149, label %then9, label %else10

then9:                                            ; preds = %then8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %then8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br label %ifcont25

else12:                                           ; preds = %else7
  %150 = load i32, i32* %op_code, align 4
  %151 = icmp eq i32 %150, 2
  br i1 %151, label %then13, label %else17

then13:                                           ; preds = %else12
  %152 = load i32, i32* %i, align 4
  %153 = load i32, i32* %j, align 4
  %154 = load i32, i32* %k, align 4
  %155 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %152, %159
  %161 = mul i32 1, %160
  %162 = add i32 0, %161
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 1, %164
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 1
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %153, %168
  %170 = mul i32 %165, %169
  %171 = add i32 %162, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %165, %173
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 2
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub i32 %154, %177
  %179 = mul i32 %174, %178
  %180 = add i32 %171, %179
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = mul i32 %174, %182
  %184 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %185 = load i1*, i1** %184, align 8
  %186 = getelementptr inbounds i1, i1* %185, i32 %180
  %187 = load i1, i1* %186, align 1
  %188 = load i1, i1* %x, align 1
  %189 = load i1, i1* %y, align 1
  %190 = xor i1 %188, %189
  %191 = xor i1 %190, true
  %192 = xor i1 %187, %191
  br i1 %192, label %then14, label %else15

then14:                                           ; preds = %then13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %then13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  br label %ifcont24

else17:                                           ; preds = %else12
  %193 = load i32, i32* %op_code, align 4
  %194 = icmp eq i32 %193, 3
  br i1 %194, label %then18, label %else22

then18:                                           ; preds = %else17
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %j, align 4
  %197 = load i32, i32* %k, align 4
  %198 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %199 = load %dimension_descriptor*, %dimension_descriptor** %198, align 8
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %195, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 1
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %196, %211
  %213 = mul i32 %208, %212
  %214 = add i32 %205, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %208, %216
  %218 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 2
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %197, %220
  %222 = mul i32 %217, %221
  %223 = add i32 %214, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 %217, %225
  %227 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %228 = load i1*, i1** %227, align 8
  %229 = getelementptr inbounds i1, i1* %228, i32 %223
  %230 = load i1, i1* %229, align 1
  %231 = load i1, i1* %x, align 1
  %232 = load i1, i1* %y, align 1
  %233 = xor i1 %231, %232
  %234 = xor i1 %230, %233
  br i1 %234, label %then19, label %else20

then19:                                           ; preds = %then18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %then18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  br label %ifcont23

else22:                                           ; preds = %else17
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %ifcont23, %ifcont16
  br label %ifcont25

ifcont25:                                         ; preds = %ifcont24, %ifcont11
  br label %ifcont26

ifcont26:                                         ; preds = %ifcont25, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end27:                                       ; preds = %loop.head1
  br label %loop.head

loop.end28:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end28
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %call_arg_value47 = alloca i32, align 4
  %call_arg_value37 = alloca i32, align 4
  %call_arg_value27 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.0, align 8
  %6 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 3, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  store i32 3, i32* %10, align 4
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array.0, align 8
  %12 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %dim1 = alloca i32, align 4
  store i32 10, i32* %dim1, align 4
  %dim2 = alloca i32, align 4
  store i32 100, i32* %dim2, align 4
  %dim3 = alloca i32, align 4
  store i32 1, i32* %dim3, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %18 = load i32, i32* %dim1, align 4
  %19 = load i32, i32* %dim2, align 4
  %20 = load i32, i32* %dim3, align 4
  %21 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %22, align 1
  %23 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %24 = alloca i32, align 4
  store i32 3, i32* %24, align 4
  %25 = load i32, i32* %24, align 4
  %26 = alloca %dimension_descriptor, i32 %25, align 8
  store %dimension_descriptor* %26, %dimension_descriptor** %23, align 8
  %27 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  store i32 3, i32* %27, align 4
  %28 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 3
  store i32 1, i32* %30, align 4
  store i32 1, i32* %31, align 4
  store i32 %18, i32* %32, align 4
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %31, align 4
  %36 = sub i32 %34, %35
  %37 = add i32 %36, 1
  %38 = mul i32 1, %37
  store i32 %37, i32* %33, align 4
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 1
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 3
  store i32 1, i32* %40, align 4
  store i32 1, i32* %41, align 4
  store i32 %19, i32* %42, align 4
  %44 = load i32, i32* %42, align 4
  %45 = load i32, i32* %41, align 4
  %46 = sub i32 %44, %45
  %47 = add i32 %46, 1
  %48 = mul i32 %38, %47
  store i32 %47, i32* %43, align 4
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 2
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  store i32 1, i32* %50, align 4
  store i32 1, i32* %51, align 4
  store i32 %20, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = load i32, i32* %51, align 4
  %56 = sub i32 %54, %55
  %57 = add i32 %56, 1
  %58 = mul i32 %48, %57
  store i32 %57, i32* %53, align 4
  %59 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %60 = alloca i32, align 4
  %61 = mul i32 %58, 1
  store i32 %61, i32* %60, align 4
  %62 = load i32, i32* %60, align 4
  %63 = call i8* (i32, ...) @_lfortran_malloc(i32 %62)
  %64 = bitcast i8* %63 to i1*
  store i1* %64, i1** %59, align 8
  %65 = load i32, i32* %dim1, align 4
  %66 = load i32, i32* %dim2, align 4
  %67 = load i32, i32* %dim3, align 4
  %68 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %68, align 4
  %69 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %69, align 1
  %70 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %71 = alloca i32, align 4
  store i32 3, i32* %71, align 4
  %72 = load i32, i32* %71, align 4
  %73 = alloca %dimension_descriptor, i32 %72, align 8
  store %dimension_descriptor* %73, %dimension_descriptor** %70, align 8
  %74 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  store i32 3, i32* %74, align 4
  %75 = load %dimension_descriptor*, %dimension_descriptor** %70, align 8
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 0
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 2
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 3
  store i32 1, i32* %77, align 4
  store i32 1, i32* %78, align 4
  store i32 %65, i32* %79, align 4
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %78, align 4
  %83 = sub i32 %81, %82
  %84 = add i32 %83, 1
  %85 = mul i32 1, %84
  store i32 %84, i32* %80, align 4
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 1
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 0
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 2
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 3
  store i32 1, i32* %87, align 4
  store i32 1, i32* %88, align 4
  store i32 %66, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = load i32, i32* %88, align 4
  %93 = sub i32 %91, %92
  %94 = add i32 %93, 1
  %95 = mul i32 %85, %94
  store i32 %94, i32* %90, align 4
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 2
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 2
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 3
  store i32 1, i32* %97, align 4
  store i32 1, i32* %98, align 4
  store i32 %67, i32* %99, align 4
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %98, align 4
  %103 = sub i32 %101, %102
  %104 = add i32 %103, 1
  %105 = mul i32 %95, %104
  store i32 %104, i32* %100, align 4
  %106 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %107 = alloca i32, align 4
  %108 = mul i32 %105, 1
  store i32 %108, i32* %107, align 4
  %109 = load i32, i32* %107, align 4
  %110 = call i8* (i32, ...) @_lfortran_malloc(i32 %109)
  %111 = bitcast i8* %110 to i1*
  store i1* %111, i1** %106, align 8
  %112 = load i32, i32* %dim1, align 4
  %113 = load i32, i32* %dim2, align 4
  %114 = load i32, i32* %dim3, align 4
  %115 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %115, align 4
  %116 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %116, align 1
  %117 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %118 = alloca i32, align 4
  store i32 3, i32* %118, align 4
  %119 = load i32, i32* %118, align 4
  %120 = alloca %dimension_descriptor, i32 %119, align 8
  store %dimension_descriptor* %120, %dimension_descriptor** %117, align 8
  %121 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %121, align 4
  %122 = load %dimension_descriptor*, %dimension_descriptor** %117, align 8
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 2
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 3
  store i32 1, i32* %124, align 4
  store i32 1, i32* %125, align 4
  store i32 %112, i32* %126, align 4
  %128 = load i32, i32* %126, align 4
  %129 = load i32, i32* %125, align 4
  %130 = sub i32 %128, %129
  %131 = add i32 %130, 1
  %132 = mul i32 1, %131
  store i32 %131, i32* %127, align 4
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 1
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 0
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 2
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  store i32 1, i32* %134, align 4
  store i32 1, i32* %135, align 4
  store i32 %113, i32* %136, align 4
  %138 = load i32, i32* %136, align 4
  %139 = load i32, i32* %135, align 4
  %140 = sub i32 %138, %139
  %141 = add i32 %140, 1
  %142 = mul i32 %132, %141
  store i32 %141, i32* %137, align 4
  %143 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 2
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 0
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 2
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 3
  store i32 1, i32* %144, align 4
  store i32 1, i32* %145, align 4
  store i32 %114, i32* %146, align 4
  %148 = load i32, i32* %146, align 4
  %149 = load i32, i32* %145, align 4
  %150 = sub i32 %148, %149
  %151 = add i32 %150, 1
  %152 = mul i32 %142, %151
  store i32 %151, i32* %147, align 4
  %153 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %154 = alloca i32, align 4
  %155 = mul i32 %152, 1
  store i32 %155, i32* %154, align 4
  %156 = load i32, i32* %154, align 4
  %157 = call i8* (i32, ...) @_lfortran_malloc(i32 %156)
  %158 = bitcast i8* %157 to i1*
  store i1* %158, i1** %153, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end6, %.entry
  %159 = load i32, i32* %i, align 4
  %160 = add i32 %159, 1
  %161 = load i32, i32* %dim1, align 4
  %162 = icmp sle i32 %160, %161
  br i1 %162, label %loop.body, label %loop.end7

loop.body:                                        ; preds = %loop.head
  %163 = load i32, i32* %i, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %165 = load i32, i32* %j, align 4
  %166 = add i32 %165, 1
  %167 = load i32, i32* %dim2, align 4
  %168 = icmp sle i32 %166, %167
  br i1 %168, label %loop.body2, label %loop.end6

loop.body2:                                       ; preds = %loop.head1
  %169 = load i32, i32* %j, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %171 = load i32, i32* %k, align 4
  %172 = add i32 %171, 1
  %173 = load i32, i32* %dim3, align 4
  %174 = icmp sle i32 %172, %173
  br i1 %174, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %175 = load i32, i32* %k, align 4
  %176 = add i32 %175, 1
  store i32 %176, i32* %k, align 4
  %177 = load i32, i32* %i, align 4
  %178 = load i32, i32* %j, align 4
  %179 = load i32, i32* %k, align 4
  %180 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %181 = load %dimension_descriptor*, %dimension_descriptor** %180, align 8
  %182 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %181, i32 0
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = sub i32 %177, %184
  %186 = mul i32 1, %185
  %187 = add i32 0, %186
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = mul i32 1, %189
  %191 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %181, i32 1
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 %178, %193
  %195 = mul i32 %190, %194
  %196 = add i32 %187, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 %190, %198
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %181, i32 2
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %179, %202
  %204 = mul i32 %199, %203
  %205 = add i32 %196, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 %199, %207
  %209 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %210 = load i1*, i1** %209, align 8
  %211 = getelementptr inbounds i1, i1* %210, i32 %205
  %212 = load i32, i32* %i, align 4
  %213 = load i32, i32* %j, align 4
  %214 = add i32 %212, %213
  %215 = load i32, i32* %k, align 4
  %216 = add i32 %214, %215
  store i32 %216, i32* %call_arg_value, align 4
  %217 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %217, i1* %211, align 1
  %218 = load i32, i32* %i, align 4
  %219 = load i32, i32* %j, align 4
  %220 = load i32, i32* %k, align 4
  %221 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %222 = load %dimension_descriptor*, %dimension_descriptor** %221, align 8
  %223 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %222, i32 0
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 %218, %225
  %227 = mul i32 1, %226
  %228 = add i32 0, %227
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = mul i32 1, %230
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %222, i32 1
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = sub i32 %219, %234
  %236 = mul i32 %231, %235
  %237 = add i32 %228, %236
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 3
  %239 = load i32, i32* %238, align 4
  %240 = mul i32 %231, %239
  %241 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %222, i32 2
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %241, i32 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = sub i32 %220, %243
  %245 = mul i32 %240, %244
  %246 = add i32 %237, %245
  %247 = getelementptr %dimension_descriptor, %dimension_descriptor* %241, i32 0, i32 3
  %248 = load i32, i32* %247, align 4
  %249 = mul i32 %240, %248
  %250 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %251 = load i1*, i1** %250, align 8
  %252 = getelementptr inbounds i1, i1* %251, i32 %246
  %253 = load i32, i32* %i, align 4
  %254 = load i32, i32* %j, align 4
  %255 = mul i32 %253, %254
  %256 = load i32, i32* %j, align 4
  %257 = load i32, i32* %k, align 4
  %258 = mul i32 %256, %257
  %259 = add i32 %255, %258
  %260 = load i32, i32* %k, align 4
  %261 = load i32, i32* %j, align 4
  %262 = mul i32 %260, %261
  %263 = add i32 %259, %262
  store i32 %263, i32* %call_arg_value5, align 4
  %264 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %264, i1* %252, align 1
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end6:                                        ; preds = %loop.head1
  br label %loop.head

loop.end7:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %265 = alloca %dimension_descriptor*, align 8
  %266 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %267 = load %dimension_descriptor*, %dimension_descriptor** %266, align 8
  store %dimension_descriptor* %267, %dimension_descriptor** %265, align 8
  %268 = alloca i32, align 4
  store i32 1, i32* %268, align 4
  %269 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %265, i32* %268)
  %270 = sub i32 %269, 1
  store i32 %270, i32* %"1_t", align 4
  br label %loop.head8

loop.head8:                                       ; preds = %loop.end15, %loop.end7
  %271 = load i32, i32* %"1_t", align 4
  %272 = add i32 %271, 1
  %273 = alloca %dimension_descriptor*, align 8
  %274 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %275 = load %dimension_descriptor*, %dimension_descriptor** %274, align 8
  store %dimension_descriptor* %275, %dimension_descriptor** %273, align 8
  %276 = alloca i32, align 4
  store i32 1, i32* %276, align 4
  %277 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %273, i32* %276)
  %278 = icmp sle i32 %272, %277
  br i1 %278, label %loop.body9, label %loop.end16

loop.body9:                                       ; preds = %loop.head8
  %279 = load i32, i32* %"1_t", align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %281 = alloca %dimension_descriptor*, align 8
  %282 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %283 = load %dimension_descriptor*, %dimension_descriptor** %282, align 8
  store %dimension_descriptor* %283, %dimension_descriptor** %281, align 8
  %284 = alloca i32, align 4
  store i32 2, i32* %284, align 4
  %285 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %281, i32* %284)
  %286 = sub i32 %285, 1
  store i32 %286, i32* %"2_t", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.body9
  %287 = load i32, i32* %"2_t", align 4
  %288 = add i32 %287, 1
  %289 = alloca %dimension_descriptor*, align 8
  %290 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %291 = load %dimension_descriptor*, %dimension_descriptor** %290, align 8
  store %dimension_descriptor* %291, %dimension_descriptor** %289, align 8
  %292 = alloca i32, align 4
  store i32 2, i32* %292, align 4
  %293 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %289, i32* %292)
  %294 = icmp sle i32 %288, %293
  br i1 %294, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %295 = load i32, i32* %"2_t", align 4
  %296 = add i32 %295, 1
  store i32 %296, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %297 = alloca %dimension_descriptor*, align 8
  %298 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %299 = load %dimension_descriptor*, %dimension_descriptor** %298, align 8
  store %dimension_descriptor* %299, %dimension_descriptor** %297, align 8
  %300 = alloca i32, align 4
  store i32 3, i32* %300, align 4
  %301 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %297, i32* %300)
  %302 = sub i32 %301, 1
  store i32 %302, i32* %"3_t", align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %303 = load i32, i32* %"3_t", align 4
  %304 = add i32 %303, 1
  %305 = alloca %dimension_descriptor*, align 8
  %306 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %307 = load %dimension_descriptor*, %dimension_descriptor** %306, align 8
  store %dimension_descriptor* %307, %dimension_descriptor** %305, align 8
  %308 = alloca i32, align 4
  store i32 3, i32* %308, align 4
  %309 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %305, i32* %308)
  %310 = icmp sle i32 %304, %309
  br i1 %310, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %311 = load i32, i32* %"3_t", align 4
  %312 = add i32 %311, 1
  store i32 %312, i32* %"3_t", align 4
  %313 = load i32, i32* %"1_t", align 4
  %314 = load i32, i32* %"2_t", align 4
  %315 = load i32, i32* %"3_t", align 4
  %316 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %317 = load %dimension_descriptor*, %dimension_descriptor** %316, align 8
  %318 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %317, i32 0
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = sub i32 %313, %320
  %322 = mul i32 1, %321
  %323 = add i32 0, %322
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %318, i32 0, i32 3
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 1, %325
  %327 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %317, i32 1
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 %314, %329
  %331 = mul i32 %326, %330
  %332 = add i32 %323, %331
  %333 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 3
  %334 = load i32, i32* %333, align 4
  %335 = mul i32 %326, %334
  %336 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %317, i32 2
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 %315, %338
  %340 = mul i32 %335, %339
  %341 = add i32 %332, %340
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = mul i32 %335, %343
  %345 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %346 = load i1*, i1** %345, align 8
  %347 = getelementptr inbounds i1, i1* %346, i32 %341
  %348 = load i32, i32* %"1_v", align 4
  %349 = load i32, i32* %"2_v", align 4
  %350 = load i32, i32* %"3_v", align 4
  %351 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %352 = load %dimension_descriptor*, %dimension_descriptor** %351, align 8
  %353 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %352, i32 0
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %353, i32 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = sub i32 %348, %355
  %357 = mul i32 1, %356
  %358 = add i32 0, %357
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %353, i32 0, i32 3
  %360 = load i32, i32* %359, align 4
  %361 = mul i32 1, %360
  %362 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %352, i32 1
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sub i32 %349, %364
  %366 = mul i32 %361, %365
  %367 = add i32 %358, %366
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 3
  %369 = load i32, i32* %368, align 4
  %370 = mul i32 %361, %369
  %371 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %352, i32 2
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 1
  %373 = load i32, i32* %372, align 4
  %374 = sub i32 %350, %373
  %375 = mul i32 %370, %374
  %376 = add i32 %367, %375
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 3
  %378 = load i32, i32* %377, align 4
  %379 = mul i32 %370, %378
  %380 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %381 = load i1*, i1** %380, align 8
  %382 = getelementptr inbounds i1, i1* %381, i32 %376
  %383 = load i1, i1* %382, align 1
  %384 = load i32, i32* %"1_v", align 4
  %385 = load i32, i32* %"2_v", align 4
  %386 = load i32, i32* %"3_v", align 4
  %387 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %388 = load %dimension_descriptor*, %dimension_descriptor** %387, align 8
  %389 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %388, i32 0
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = sub i32 %384, %391
  %393 = mul i32 1, %392
  %394 = add i32 0, %393
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 3
  %396 = load i32, i32* %395, align 4
  %397 = mul i32 1, %396
  %398 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %388, i32 1
  %399 = getelementptr %dimension_descriptor, %dimension_descriptor* %398, i32 0, i32 1
  %400 = load i32, i32* %399, align 4
  %401 = sub i32 %385, %400
  %402 = mul i32 %397, %401
  %403 = add i32 %394, %402
  %404 = getelementptr %dimension_descriptor, %dimension_descriptor* %398, i32 0, i32 3
  %405 = load i32, i32* %404, align 4
  %406 = mul i32 %397, %405
  %407 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %388, i32 2
  %408 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = sub i32 %386, %409
  %411 = mul i32 %406, %410
  %412 = add i32 %403, %411
  %413 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 3
  %414 = load i32, i32* %413, align 4
  %415 = mul i32 %406, %414
  %416 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %417 = load i1*, i1** %416, align 8
  %418 = getelementptr inbounds i1, i1* %417, i32 %412
  %419 = load i1, i1* %418, align 1
  %420 = and i1 %383, %419
  store i1 %420, i1* %347, align 1
  %421 = load i32, i32* %"3_v", align 4
  %422 = add i32 %421, 1
  store i32 %422, i32* %"3_v", align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  %423 = load i32, i32* %"2_v", align 4
  %424 = add i32 %423, 1
  store i32 %424, i32* %"2_v", align 4
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %425 = load i32, i32* %"1_v", align 4
  %426 = add i32 %425, 1
  store i32 %426, i32* %"1_v", align 4
  br label %loop.head8

loop.end16:                                       ; preds = %loop.head8
  %427 = alloca %array.0, align 8
  store i32 0, i32* %call_arg_value17, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value17)
  store i32 1, i32* %"1_v", align 4
  %428 = alloca %dimension_descriptor*, align 8
  %429 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %430 = load %dimension_descriptor*, %dimension_descriptor** %429, align 8
  store %dimension_descriptor* %430, %dimension_descriptor** %428, align 8
  %431 = alloca i32, align 4
  store i32 1, i32* %431, align 4
  %432 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %428, i32* %431)
  %433 = sub i32 %432, 1
  store i32 %433, i32* %"1_t", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end25, %loop.end16
  %434 = load i32, i32* %"1_t", align 4
  %435 = add i32 %434, 1
  %436 = alloca %dimension_descriptor*, align 8
  %437 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %438 = load %dimension_descriptor*, %dimension_descriptor** %437, align 8
  store %dimension_descriptor* %438, %dimension_descriptor** %436, align 8
  %439 = alloca i32, align 4
  store i32 1, i32* %439, align 4
  %440 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %436, i32* %439)
  %441 = icmp sle i32 %435, %440
  br i1 %441, label %loop.body19, label %loop.end26

loop.body19:                                      ; preds = %loop.head18
  %442 = load i32, i32* %"1_t", align 4
  %443 = add i32 %442, 1
  store i32 %443, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %444 = alloca %dimension_descriptor*, align 8
  %445 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %446 = load %dimension_descriptor*, %dimension_descriptor** %445, align 8
  store %dimension_descriptor* %446, %dimension_descriptor** %444, align 8
  %447 = alloca i32, align 4
  store i32 2, i32* %447, align 4
  %448 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %444, i32* %447)
  %449 = sub i32 %448, 1
  store i32 %449, i32* %"2_t", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.end24, %loop.body19
  %450 = load i32, i32* %"2_t", align 4
  %451 = add i32 %450, 1
  %452 = alloca %dimension_descriptor*, align 8
  %453 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %454 = load %dimension_descriptor*, %dimension_descriptor** %453, align 8
  store %dimension_descriptor* %454, %dimension_descriptor** %452, align 8
  %455 = alloca i32, align 4
  store i32 2, i32* %455, align 4
  %456 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %452, i32* %455)
  %457 = icmp sle i32 %451, %456
  br i1 %457, label %loop.body21, label %loop.end25

loop.body21:                                      ; preds = %loop.head20
  %458 = load i32, i32* %"2_t", align 4
  %459 = add i32 %458, 1
  store i32 %459, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %460 = alloca %dimension_descriptor*, align 8
  %461 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %462 = load %dimension_descriptor*, %dimension_descriptor** %461, align 8
  store %dimension_descriptor* %462, %dimension_descriptor** %460, align 8
  %463 = alloca i32, align 4
  store i32 3, i32* %463, align 4
  %464 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %460, i32* %463)
  %465 = sub i32 %464, 1
  store i32 %465, i32* %"3_t", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.body21
  %466 = load i32, i32* %"3_t", align 4
  %467 = add i32 %466, 1
  %468 = alloca %dimension_descriptor*, align 8
  %469 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %470 = load %dimension_descriptor*, %dimension_descriptor** %469, align 8
  store %dimension_descriptor* %470, %dimension_descriptor** %468, align 8
  %471 = alloca i32, align 4
  store i32 3, i32* %471, align 4
  %472 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %468, i32* %471)
  %473 = icmp sle i32 %467, %472
  br i1 %473, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %474 = load i32, i32* %"3_t", align 4
  %475 = add i32 %474, 1
  store i32 %475, i32* %"3_t", align 4
  %476 = load i32, i32* %"1_t", align 4
  %477 = load i32, i32* %"2_t", align 4
  %478 = load i32, i32* %"3_t", align 4
  %479 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %480 = load %dimension_descriptor*, %dimension_descriptor** %479, align 8
  %481 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %480, i32 0
  %482 = getelementptr %dimension_descriptor, %dimension_descriptor* %481, i32 0, i32 1
  %483 = load i32, i32* %482, align 4
  %484 = sub i32 %476, %483
  %485 = mul i32 1, %484
  %486 = add i32 0, %485
  %487 = getelementptr %dimension_descriptor, %dimension_descriptor* %481, i32 0, i32 3
  %488 = load i32, i32* %487, align 4
  %489 = mul i32 1, %488
  %490 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %480, i32 1
  %491 = getelementptr %dimension_descriptor, %dimension_descriptor* %490, i32 0, i32 1
  %492 = load i32, i32* %491, align 4
  %493 = sub i32 %477, %492
  %494 = mul i32 %489, %493
  %495 = add i32 %486, %494
  %496 = getelementptr %dimension_descriptor, %dimension_descriptor* %490, i32 0, i32 3
  %497 = load i32, i32* %496, align 4
  %498 = mul i32 %489, %497
  %499 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %480, i32 2
  %500 = getelementptr %dimension_descriptor, %dimension_descriptor* %499, i32 0, i32 1
  %501 = load i32, i32* %500, align 4
  %502 = sub i32 %478, %501
  %503 = mul i32 %498, %502
  %504 = add i32 %495, %503
  %505 = getelementptr %dimension_descriptor, %dimension_descriptor* %499, i32 0, i32 3
  %506 = load i32, i32* %505, align 4
  %507 = mul i32 %498, %506
  %508 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %509 = load i1*, i1** %508, align 8
  %510 = getelementptr inbounds i1, i1* %509, i32 %504
  %511 = load i32, i32* %"1_v", align 4
  %512 = load i32, i32* %"2_v", align 4
  %513 = load i32, i32* %"3_v", align 4
  %514 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %515 = load %dimension_descriptor*, %dimension_descriptor** %514, align 8
  %516 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %515, i32 0
  %517 = getelementptr %dimension_descriptor, %dimension_descriptor* %516, i32 0, i32 1
  %518 = load i32, i32* %517, align 4
  %519 = sub i32 %511, %518
  %520 = mul i32 1, %519
  %521 = add i32 0, %520
  %522 = getelementptr %dimension_descriptor, %dimension_descriptor* %516, i32 0, i32 3
  %523 = load i32, i32* %522, align 4
  %524 = mul i32 1, %523
  %525 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %515, i32 1
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 1
  %527 = load i32, i32* %526, align 4
  %528 = sub i32 %512, %527
  %529 = mul i32 %524, %528
  %530 = add i32 %521, %529
  %531 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 3
  %532 = load i32, i32* %531, align 4
  %533 = mul i32 %524, %532
  %534 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %515, i32 2
  %535 = getelementptr %dimension_descriptor, %dimension_descriptor* %534, i32 0, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = sub i32 %513, %536
  %538 = mul i32 %533, %537
  %539 = add i32 %530, %538
  %540 = getelementptr %dimension_descriptor, %dimension_descriptor* %534, i32 0, i32 3
  %541 = load i32, i32* %540, align 4
  %542 = mul i32 %533, %541
  %543 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %544 = load i1*, i1** %543, align 8
  %545 = getelementptr inbounds i1, i1* %544, i32 %539
  %546 = load i1, i1* %545, align 1
  %547 = load i32, i32* %"1_v", align 4
  %548 = load i32, i32* %"2_v", align 4
  %549 = load i32, i32* %"3_v", align 4
  %550 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %551 = load %dimension_descriptor*, %dimension_descriptor** %550, align 8
  %552 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %551, i32 0
  %553 = getelementptr %dimension_descriptor, %dimension_descriptor* %552, i32 0, i32 1
  %554 = load i32, i32* %553, align 4
  %555 = sub i32 %547, %554
  %556 = mul i32 1, %555
  %557 = add i32 0, %556
  %558 = getelementptr %dimension_descriptor, %dimension_descriptor* %552, i32 0, i32 3
  %559 = load i32, i32* %558, align 4
  %560 = mul i32 1, %559
  %561 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %551, i32 1
  %562 = getelementptr %dimension_descriptor, %dimension_descriptor* %561, i32 0, i32 1
  %563 = load i32, i32* %562, align 4
  %564 = sub i32 %548, %563
  %565 = mul i32 %560, %564
  %566 = add i32 %557, %565
  %567 = getelementptr %dimension_descriptor, %dimension_descriptor* %561, i32 0, i32 3
  %568 = load i32, i32* %567, align 4
  %569 = mul i32 %560, %568
  %570 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %551, i32 2
  %571 = getelementptr %dimension_descriptor, %dimension_descriptor* %570, i32 0, i32 1
  %572 = load i32, i32* %571, align 4
  %573 = sub i32 %549, %572
  %574 = mul i32 %569, %573
  %575 = add i32 %566, %574
  %576 = getelementptr %dimension_descriptor, %dimension_descriptor* %570, i32 0, i32 3
  %577 = load i32, i32* %576, align 4
  %578 = mul i32 %569, %577
  %579 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %580 = load i1*, i1** %579, align 8
  %581 = getelementptr inbounds i1, i1* %580, i32 %575
  %582 = load i1, i1* %581, align 1
  %583 = or i1 %546, %582
  store i1 %583, i1* %510, align 1
  %584 = load i32, i32* %"3_v", align 4
  %585 = add i32 %584, 1
  store i32 %585, i32* %"3_v", align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %586 = load i32, i32* %"2_v", align 4
  %587 = add i32 %586, 1
  store i32 %587, i32* %"2_v", align 4
  br label %loop.head20

loop.end25:                                       ; preds = %loop.head20
  %588 = load i32, i32* %"1_v", align 4
  %589 = add i32 %588, 1
  store i32 %589, i32* %"1_v", align 4
  br label %loop.head18

loop.end26:                                       ; preds = %loop.head18
  %590 = alloca %array.0, align 8
  store i32 1, i32* %call_arg_value27, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value27)
  store i32 1, i32* %"1_v", align 4
  %591 = alloca %dimension_descriptor*, align 8
  %592 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %593 = load %dimension_descriptor*, %dimension_descriptor** %592, align 8
  store %dimension_descriptor* %593, %dimension_descriptor** %591, align 8
  %594 = alloca i32, align 4
  store i32 1, i32* %594, align 4
  %595 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %591, i32* %594)
  %596 = sub i32 %595, 1
  store i32 %596, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end35, %loop.end26
  %597 = load i32, i32* %"1_t", align 4
  %598 = add i32 %597, 1
  %599 = alloca %dimension_descriptor*, align 8
  %600 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %601 = load %dimension_descriptor*, %dimension_descriptor** %600, align 8
  store %dimension_descriptor* %601, %dimension_descriptor** %599, align 8
  %602 = alloca i32, align 4
  store i32 1, i32* %602, align 4
  %603 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %599, i32* %602)
  %604 = icmp sle i32 %598, %603
  br i1 %604, label %loop.body29, label %loop.end36

loop.body29:                                      ; preds = %loop.head28
  %605 = load i32, i32* %"1_t", align 4
  %606 = add i32 %605, 1
  store i32 %606, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %607 = alloca %dimension_descriptor*, align 8
  %608 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %609 = load %dimension_descriptor*, %dimension_descriptor** %608, align 8
  store %dimension_descriptor* %609, %dimension_descriptor** %607, align 8
  %610 = alloca i32, align 4
  store i32 2, i32* %610, align 4
  %611 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %607, i32* %610)
  %612 = sub i32 %611, 1
  store i32 %612, i32* %"2_t", align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end34, %loop.body29
  %613 = load i32, i32* %"2_t", align 4
  %614 = add i32 %613, 1
  %615 = alloca %dimension_descriptor*, align 8
  %616 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %617 = load %dimension_descriptor*, %dimension_descriptor** %616, align 8
  store %dimension_descriptor* %617, %dimension_descriptor** %615, align 8
  %618 = alloca i32, align 4
  store i32 2, i32* %618, align 4
  %619 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %615, i32* %618)
  %620 = icmp sle i32 %614, %619
  br i1 %620, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %621 = load i32, i32* %"2_t", align 4
  %622 = add i32 %621, 1
  store i32 %622, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %623 = alloca %dimension_descriptor*, align 8
  %624 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %625 = load %dimension_descriptor*, %dimension_descriptor** %624, align 8
  store %dimension_descriptor* %625, %dimension_descriptor** %623, align 8
  %626 = alloca i32, align 4
  store i32 3, i32* %626, align 4
  %627 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %623, i32* %626)
  %628 = sub i32 %627, 1
  store i32 %628, i32* %"3_t", align 4
  br label %loop.head32

loop.head32:                                      ; preds = %loop.body33, %loop.body31
  %629 = load i32, i32* %"3_t", align 4
  %630 = add i32 %629, 1
  %631 = alloca %dimension_descriptor*, align 8
  %632 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %633 = load %dimension_descriptor*, %dimension_descriptor** %632, align 8
  store %dimension_descriptor* %633, %dimension_descriptor** %631, align 8
  %634 = alloca i32, align 4
  store i32 3, i32* %634, align 4
  %635 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %631, i32* %634)
  %636 = icmp sle i32 %630, %635
  br i1 %636, label %loop.body33, label %loop.end34

loop.body33:                                      ; preds = %loop.head32
  %637 = load i32, i32* %"3_t", align 4
  %638 = add i32 %637, 1
  store i32 %638, i32* %"3_t", align 4
  %639 = load i32, i32* %"1_t", align 4
  %640 = load i32, i32* %"2_t", align 4
  %641 = load i32, i32* %"3_t", align 4
  %642 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %643 = load %dimension_descriptor*, %dimension_descriptor** %642, align 8
  %644 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %643, i32 0
  %645 = getelementptr %dimension_descriptor, %dimension_descriptor* %644, i32 0, i32 1
  %646 = load i32, i32* %645, align 4
  %647 = sub i32 %639, %646
  %648 = mul i32 1, %647
  %649 = add i32 0, %648
  %650 = getelementptr %dimension_descriptor, %dimension_descriptor* %644, i32 0, i32 3
  %651 = load i32, i32* %650, align 4
  %652 = mul i32 1, %651
  %653 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %643, i32 1
  %654 = getelementptr %dimension_descriptor, %dimension_descriptor* %653, i32 0, i32 1
  %655 = load i32, i32* %654, align 4
  %656 = sub i32 %640, %655
  %657 = mul i32 %652, %656
  %658 = add i32 %649, %657
  %659 = getelementptr %dimension_descriptor, %dimension_descriptor* %653, i32 0, i32 3
  %660 = load i32, i32* %659, align 4
  %661 = mul i32 %652, %660
  %662 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %643, i32 2
  %663 = getelementptr %dimension_descriptor, %dimension_descriptor* %662, i32 0, i32 1
  %664 = load i32, i32* %663, align 4
  %665 = sub i32 %641, %664
  %666 = mul i32 %661, %665
  %667 = add i32 %658, %666
  %668 = getelementptr %dimension_descriptor, %dimension_descriptor* %662, i32 0, i32 3
  %669 = load i32, i32* %668, align 4
  %670 = mul i32 %661, %669
  %671 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %672 = load i1*, i1** %671, align 8
  %673 = getelementptr inbounds i1, i1* %672, i32 %667
  %674 = load i32, i32* %"1_v", align 4
  %675 = load i32, i32* %"2_v", align 4
  %676 = load i32, i32* %"3_v", align 4
  %677 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %678 = load %dimension_descriptor*, %dimension_descriptor** %677, align 8
  %679 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %678, i32 0
  %680 = getelementptr %dimension_descriptor, %dimension_descriptor* %679, i32 0, i32 1
  %681 = load i32, i32* %680, align 4
  %682 = sub i32 %674, %681
  %683 = mul i32 1, %682
  %684 = add i32 0, %683
  %685 = getelementptr %dimension_descriptor, %dimension_descriptor* %679, i32 0, i32 3
  %686 = load i32, i32* %685, align 4
  %687 = mul i32 1, %686
  %688 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %678, i32 1
  %689 = getelementptr %dimension_descriptor, %dimension_descriptor* %688, i32 0, i32 1
  %690 = load i32, i32* %689, align 4
  %691 = sub i32 %675, %690
  %692 = mul i32 %687, %691
  %693 = add i32 %684, %692
  %694 = getelementptr %dimension_descriptor, %dimension_descriptor* %688, i32 0, i32 3
  %695 = load i32, i32* %694, align 4
  %696 = mul i32 %687, %695
  %697 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %678, i32 2
  %698 = getelementptr %dimension_descriptor, %dimension_descriptor* %697, i32 0, i32 1
  %699 = load i32, i32* %698, align 4
  %700 = sub i32 %676, %699
  %701 = mul i32 %696, %700
  %702 = add i32 %693, %701
  %703 = getelementptr %dimension_descriptor, %dimension_descriptor* %697, i32 0, i32 3
  %704 = load i32, i32* %703, align 4
  %705 = mul i32 %696, %704
  %706 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %707 = load i1*, i1** %706, align 8
  %708 = getelementptr inbounds i1, i1* %707, i32 %702
  %709 = load i1, i1* %708, align 1
  %710 = load i32, i32* %"1_v", align 4
  %711 = load i32, i32* %"2_v", align 4
  %712 = load i32, i32* %"3_v", align 4
  %713 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %714 = load %dimension_descriptor*, %dimension_descriptor** %713, align 8
  %715 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %714, i32 0
  %716 = getelementptr %dimension_descriptor, %dimension_descriptor* %715, i32 0, i32 1
  %717 = load i32, i32* %716, align 4
  %718 = sub i32 %710, %717
  %719 = mul i32 1, %718
  %720 = add i32 0, %719
  %721 = getelementptr %dimension_descriptor, %dimension_descriptor* %715, i32 0, i32 3
  %722 = load i32, i32* %721, align 4
  %723 = mul i32 1, %722
  %724 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %714, i32 1
  %725 = getelementptr %dimension_descriptor, %dimension_descriptor* %724, i32 0, i32 1
  %726 = load i32, i32* %725, align 4
  %727 = sub i32 %711, %726
  %728 = mul i32 %723, %727
  %729 = add i32 %720, %728
  %730 = getelementptr %dimension_descriptor, %dimension_descriptor* %724, i32 0, i32 3
  %731 = load i32, i32* %730, align 4
  %732 = mul i32 %723, %731
  %733 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %714, i32 2
  %734 = getelementptr %dimension_descriptor, %dimension_descriptor* %733, i32 0, i32 1
  %735 = load i32, i32* %734, align 4
  %736 = sub i32 %712, %735
  %737 = mul i32 %732, %736
  %738 = add i32 %729, %737
  %739 = getelementptr %dimension_descriptor, %dimension_descriptor* %733, i32 0, i32 3
  %740 = load i32, i32* %739, align 4
  %741 = mul i32 %732, %740
  %742 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %743 = load i1*, i1** %742, align 8
  %744 = getelementptr inbounds i1, i1* %743, i32 %738
  %745 = load i1, i1* %744, align 1
  %746 = xor i1 %709, %745
  %747 = xor i1 %746, true
  store i1 %747, i1* %673, align 1
  %748 = load i32, i32* %"3_v", align 4
  %749 = add i32 %748, 1
  store i32 %749, i32* %"3_v", align 4
  br label %loop.head32

loop.end34:                                       ; preds = %loop.head32
  %750 = load i32, i32* %"2_v", align 4
  %751 = add i32 %750, 1
  store i32 %751, i32* %"2_v", align 4
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  %752 = load i32, i32* %"1_v", align 4
  %753 = add i32 %752, 1
  store i32 %753, i32* %"1_v", align 4
  br label %loop.head28

loop.end36:                                       ; preds = %loop.head28
  %754 = alloca %array.0, align 8
  store i32 2, i32* %call_arg_value37, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value37)
  store i32 1, i32* %"1_v", align 4
  %755 = alloca %dimension_descriptor*, align 8
  %756 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %757 = load %dimension_descriptor*, %dimension_descriptor** %756, align 8
  store %dimension_descriptor* %757, %dimension_descriptor** %755, align 8
  %758 = alloca i32, align 4
  store i32 1, i32* %758, align 4
  %759 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %755, i32* %758)
  %760 = sub i32 %759, 1
  store i32 %760, i32* %"1_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.end45, %loop.end36
  %761 = load i32, i32* %"1_t", align 4
  %762 = add i32 %761, 1
  %763 = alloca %dimension_descriptor*, align 8
  %764 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %765 = load %dimension_descriptor*, %dimension_descriptor** %764, align 8
  store %dimension_descriptor* %765, %dimension_descriptor** %763, align 8
  %766 = alloca i32, align 4
  store i32 1, i32* %766, align 4
  %767 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %763, i32* %766)
  %768 = icmp sle i32 %762, %767
  br i1 %768, label %loop.body39, label %loop.end46

loop.body39:                                      ; preds = %loop.head38
  %769 = load i32, i32* %"1_t", align 4
  %770 = add i32 %769, 1
  store i32 %770, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %771 = alloca %dimension_descriptor*, align 8
  %772 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %773 = load %dimension_descriptor*, %dimension_descriptor** %772, align 8
  store %dimension_descriptor* %773, %dimension_descriptor** %771, align 8
  %774 = alloca i32, align 4
  store i32 2, i32* %774, align 4
  %775 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %771, i32* %774)
  %776 = sub i32 %775, 1
  store i32 %776, i32* %"2_t", align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %loop.body39
  %777 = load i32, i32* %"2_t", align 4
  %778 = add i32 %777, 1
  %779 = alloca %dimension_descriptor*, align 8
  %780 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %781 = load %dimension_descriptor*, %dimension_descriptor** %780, align 8
  store %dimension_descriptor* %781, %dimension_descriptor** %779, align 8
  %782 = alloca i32, align 4
  store i32 2, i32* %782, align 4
  %783 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %779, i32* %782)
  %784 = icmp sle i32 %778, %783
  br i1 %784, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %785 = load i32, i32* %"2_t", align 4
  %786 = add i32 %785, 1
  store i32 %786, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %787 = alloca %dimension_descriptor*, align 8
  %788 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %789 = load %dimension_descriptor*, %dimension_descriptor** %788, align 8
  store %dimension_descriptor* %789, %dimension_descriptor** %787, align 8
  %790 = alloca i32, align 4
  store i32 3, i32* %790, align 4
  %791 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %787, i32* %790)
  %792 = sub i32 %791, 1
  store i32 %792, i32* %"3_t", align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %793 = load i32, i32* %"3_t", align 4
  %794 = add i32 %793, 1
  %795 = alloca %dimension_descriptor*, align 8
  %796 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %797 = load %dimension_descriptor*, %dimension_descriptor** %796, align 8
  store %dimension_descriptor* %797, %dimension_descriptor** %795, align 8
  %798 = alloca i32, align 4
  store i32 3, i32* %798, align 4
  %799 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %795, i32* %798)
  %800 = icmp sle i32 %794, %799
  br i1 %800, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %801 = load i32, i32* %"3_t", align 4
  %802 = add i32 %801, 1
  store i32 %802, i32* %"3_t", align 4
  %803 = load i32, i32* %"1_t", align 4
  %804 = load i32, i32* %"2_t", align 4
  %805 = load i32, i32* %"3_t", align 4
  %806 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %807 = load %dimension_descriptor*, %dimension_descriptor** %806, align 8
  %808 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %807, i32 0
  %809 = getelementptr %dimension_descriptor, %dimension_descriptor* %808, i32 0, i32 1
  %810 = load i32, i32* %809, align 4
  %811 = sub i32 %803, %810
  %812 = mul i32 1, %811
  %813 = add i32 0, %812
  %814 = getelementptr %dimension_descriptor, %dimension_descriptor* %808, i32 0, i32 3
  %815 = load i32, i32* %814, align 4
  %816 = mul i32 1, %815
  %817 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %807, i32 1
  %818 = getelementptr %dimension_descriptor, %dimension_descriptor* %817, i32 0, i32 1
  %819 = load i32, i32* %818, align 4
  %820 = sub i32 %804, %819
  %821 = mul i32 %816, %820
  %822 = add i32 %813, %821
  %823 = getelementptr %dimension_descriptor, %dimension_descriptor* %817, i32 0, i32 3
  %824 = load i32, i32* %823, align 4
  %825 = mul i32 %816, %824
  %826 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %807, i32 2
  %827 = getelementptr %dimension_descriptor, %dimension_descriptor* %826, i32 0, i32 1
  %828 = load i32, i32* %827, align 4
  %829 = sub i32 %805, %828
  %830 = mul i32 %825, %829
  %831 = add i32 %822, %830
  %832 = getelementptr %dimension_descriptor, %dimension_descriptor* %826, i32 0, i32 3
  %833 = load i32, i32* %832, align 4
  %834 = mul i32 %825, %833
  %835 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %836 = load i1*, i1** %835, align 8
  %837 = getelementptr inbounds i1, i1* %836, i32 %831
  %838 = load i32, i32* %"1_v", align 4
  %839 = load i32, i32* %"2_v", align 4
  %840 = load i32, i32* %"3_v", align 4
  %841 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %842 = load %dimension_descriptor*, %dimension_descriptor** %841, align 8
  %843 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %842, i32 0
  %844 = getelementptr %dimension_descriptor, %dimension_descriptor* %843, i32 0, i32 1
  %845 = load i32, i32* %844, align 4
  %846 = sub i32 %838, %845
  %847 = mul i32 1, %846
  %848 = add i32 0, %847
  %849 = getelementptr %dimension_descriptor, %dimension_descriptor* %843, i32 0, i32 3
  %850 = load i32, i32* %849, align 4
  %851 = mul i32 1, %850
  %852 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %842, i32 1
  %853 = getelementptr %dimension_descriptor, %dimension_descriptor* %852, i32 0, i32 1
  %854 = load i32, i32* %853, align 4
  %855 = sub i32 %839, %854
  %856 = mul i32 %851, %855
  %857 = add i32 %848, %856
  %858 = getelementptr %dimension_descriptor, %dimension_descriptor* %852, i32 0, i32 3
  %859 = load i32, i32* %858, align 4
  %860 = mul i32 %851, %859
  %861 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %842, i32 2
  %862 = getelementptr %dimension_descriptor, %dimension_descriptor* %861, i32 0, i32 1
  %863 = load i32, i32* %862, align 4
  %864 = sub i32 %840, %863
  %865 = mul i32 %860, %864
  %866 = add i32 %857, %865
  %867 = getelementptr %dimension_descriptor, %dimension_descriptor* %861, i32 0, i32 3
  %868 = load i32, i32* %867, align 4
  %869 = mul i32 %860, %868
  %870 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %871 = load i1*, i1** %870, align 8
  %872 = getelementptr inbounds i1, i1* %871, i32 %866
  %873 = load i1, i1* %872, align 1
  %874 = load i32, i32* %"1_v", align 4
  %875 = load i32, i32* %"2_v", align 4
  %876 = load i32, i32* %"3_v", align 4
  %877 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %878 = load %dimension_descriptor*, %dimension_descriptor** %877, align 8
  %879 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %878, i32 0
  %880 = getelementptr %dimension_descriptor, %dimension_descriptor* %879, i32 0, i32 1
  %881 = load i32, i32* %880, align 4
  %882 = sub i32 %874, %881
  %883 = mul i32 1, %882
  %884 = add i32 0, %883
  %885 = getelementptr %dimension_descriptor, %dimension_descriptor* %879, i32 0, i32 3
  %886 = load i32, i32* %885, align 4
  %887 = mul i32 1, %886
  %888 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %878, i32 1
  %889 = getelementptr %dimension_descriptor, %dimension_descriptor* %888, i32 0, i32 1
  %890 = load i32, i32* %889, align 4
  %891 = sub i32 %875, %890
  %892 = mul i32 %887, %891
  %893 = add i32 %884, %892
  %894 = getelementptr %dimension_descriptor, %dimension_descriptor* %888, i32 0, i32 3
  %895 = load i32, i32* %894, align 4
  %896 = mul i32 %887, %895
  %897 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %878, i32 2
  %898 = getelementptr %dimension_descriptor, %dimension_descriptor* %897, i32 0, i32 1
  %899 = load i32, i32* %898, align 4
  %900 = sub i32 %876, %899
  %901 = mul i32 %896, %900
  %902 = add i32 %893, %901
  %903 = getelementptr %dimension_descriptor, %dimension_descriptor* %897, i32 0, i32 3
  %904 = load i32, i32* %903, align 4
  %905 = mul i32 %896, %904
  %906 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %907 = load i1*, i1** %906, align 8
  %908 = getelementptr inbounds i1, i1* %907, i32 %902
  %909 = load i1, i1* %908, align 1
  %910 = xor i1 %873, %909
  store i1 %910, i1* %837, align 1
  %911 = load i32, i32* %"3_v", align 4
  %912 = add i32 %911, 1
  store i32 %912, i32* %"3_v", align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %913 = load i32, i32* %"2_v", align 4
  %914 = add i32 %913, 1
  store i32 %914, i32* %"2_v", align 4
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %915 = load i32, i32* %"1_v", align 4
  %916 = add i32 %915, 1
  store i32 %916, i32* %"1_v", align 4
  br label %loop.head38

loop.end46:                                       ; preds = %loop.head38
  %917 = alloca %array.0, align 8
  store i32 3, i32* %call_arg_value47, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value47)
  %918 = load %array.0, %array.0* %a, align 8
  %919 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %920 = load i1, i1* %919, align 1
  br i1 %920, label %then, label %else

then:                                             ; preds = %loop.end46
  %921 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %922 = load i1*, i1** %921, align 8
  %923 = alloca i8*, align 8
  %924 = bitcast i1* %922 to i8*
  store i8* %924, i8** %923, align 8
  %925 = load i8*, i8** %923, align 8
  call void (i8*, ...) @_lfortran_free(i8* %925)
  %926 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %926, align 1
  br label %ifcont

else:                                             ; preds = %loop.end46
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %927 = load %array.0, %array.0* %b, align 8
  %928 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %929 = load i1, i1* %928, align 1
  br i1 %929, label %then48, label %else49

then48:                                           ; preds = %ifcont
  %930 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %931 = load i1*, i1** %930, align 8
  %932 = alloca i8*, align 8
  %933 = bitcast i1* %931 to i8*
  store i8* %933, i8** %932, align 8
  %934 = load i8*, i8** %932, align 8
  call void (i8*, ...) @_lfortran_free(i8* %934)
  %935 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %935, align 1
  br label %ifcont50

else49:                                           ; preds = %ifcont
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %936 = load %array.0, %array.0* %c, align 8
  %937 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %938 = load i1, i1* %937, align 1
  br i1 %938, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %939 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %940 = load i1*, i1** %939, align 8
  %941 = alloca i8*, align 8
  %942 = bitcast i1* %940 to i8*
  store i8* %942, i8** %941, align 8
  %943 = load i8*, i8** %941, align 8
  call void (i8*, ...) @_lfortran_free(i8* %943)
  %944 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %944, align 1
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)
