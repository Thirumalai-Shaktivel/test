; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i1 @modulo2(i32* %x) {
.entry:
  %r = alloca i1, align 1
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %x, align 4
  %2 = udiv i32 %1, 2
  %3 = mul i32 2, %2
  %4 = sub i32 %0, %3
  %5 = icmp eq i32 %4, 1
  store i1 %5, i1* %r, align 1
  br label %return

return:                                           ; preds = %.entry
  %6 = load i1, i1* %r, align 1
  ret i1 %6
}

define void @verify(%array.0* %c, i32* %op_code) {
.entry:
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i1, align 1
  %y = alloca i1, align 1
  %0 = load %array.0, %array.0* %c, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %5, 1
  store i32 %6, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end27, %.entry
  %7 = load i32, i32* %i, align 4
  %8 = add i32 %7, 1
  %9 = load %array.0, %array.0* %c, align 8
  %10 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sle i32 %8, %14
  br i1 %15, label %loop.body, label %loop.end28

loop.body:                                        ; preds = %loop.head
  %16 = load i32, i32* %i, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %i, align 4
  %18 = load %array.0, %array.0* %c, align 8
  %19 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %20 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %21 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 1
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 %23, 1
  store i32 %24, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %25 = load i32, i32* %j, align 4
  %26 = add i32 %25, 1
  %27 = load %array.0, %array.0* %c, align 8
  %28 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %29 = load %dimension_descriptor*, %dimension_descriptor** %28, align 8
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %29, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp sle i32 %26, %32
  br i1 %33, label %loop.body2, label %loop.end27

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %j, align 4
  %36 = load %array.0, %array.0* %c, align 8
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 2
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %41, 1
  store i32 %42, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont26, %loop.body2
  %43 = load i32, i32* %k, align 4
  %44 = add i32 %43, 1
  %45 = load %array.0, %array.0* %c, align 8
  %46 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %47 = load %dimension_descriptor*, %dimension_descriptor** %46, align 8
  %48 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 2
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp sle i32 %44, %50
  br i1 %51, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %52 = load i32, i32* %k, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %k, align 4
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %56 = add i32 %54, %55
  %57 = load i32, i32* %k, align 4
  %58 = add i32 %56, %57
  store i32 %58, i32* %call_arg_value, align 4
  %59 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %59, i1* %x, align 1
  %60 = load i32, i32* %i, align 4
  %61 = load i32, i32* %j, align 4
  %62 = mul i32 %60, %61
  %63 = load i32, i32* %j, align 4
  %64 = load i32, i32* %k, align 4
  %65 = mul i32 %63, %64
  %66 = add i32 %62, %65
  %67 = load i32, i32* %k, align 4
  %68 = load i32, i32* %j, align 4
  %69 = mul i32 %67, %68
  %70 = add i32 %66, %69
  store i32 %70, i32* %call_arg_value5, align 4
  %71 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %71, i1* %y, align 1
  %72 = load i32, i32* %op_code, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %then, label %else7

then:                                             ; preds = %loop.body4
  %74 = load i32, i32* %i, align 4
  %75 = load i32, i32* %j, align 4
  %76 = load i32, i32* %k, align 4
  %77 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %74, %81
  %83 = mul i32 1, %82
  %84 = add i32 0, %83
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = mul i32 1, %86
  %88 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 1
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub i32 %75, %90
  %92 = mul i32 %87, %91
  %93 = add i32 %84, %92
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %87, %95
  %97 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 2
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = sub i32 %76, %99
  %101 = mul i32 %96, %100
  %102 = add i32 %93, %101
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = mul i32 %96, %104
  %106 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %107 = load i1*, i1** %106, align 8
  %108 = getelementptr inbounds i1, i1* %107, i32 %102
  %109 = load i1, i1* %108, align 1
  %110 = load i1, i1* %x, align 1
  %111 = load i1, i1* %y, align 1
  %112 = and i1 %110, %111
  %113 = xor i1 %109, %112
  br i1 %113, label %then6, label %else

then6:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then6
  br label %ifcont26

else7:                                            ; preds = %loop.body4
  %114 = load i32, i32* %op_code, align 4
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %then8, label %else12

then8:                                            ; preds = %else7
  %116 = load i32, i32* %i, align 4
  %117 = load i32, i32* %j, align 4
  %118 = load i32, i32* %k, align 4
  %119 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %120 = load %dimension_descriptor*, %dimension_descriptor** %119, align 8
  %121 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %120, i32 0
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = sub i32 %116, %123
  %125 = mul i32 1, %124
  %126 = add i32 0, %125
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = mul i32 1, %128
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %120, i32 1
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 %117, %132
  %134 = mul i32 %129, %133
  %135 = add i32 %126, %134
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = mul i32 %129, %137
  %139 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %120, i32 2
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = sub i32 %118, %141
  %143 = mul i32 %138, %142
  %144 = add i32 %135, %143
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 3
  %146 = load i32, i32* %145, align 4
  %147 = mul i32 %138, %146
  %148 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %149 = load i1*, i1** %148, align 8
  %150 = getelementptr inbounds i1, i1* %149, i32 %144
  %151 = load i1, i1* %150, align 1
  %152 = load i1, i1* %x, align 1
  %153 = load i1, i1* %y, align 1
  %154 = or i1 %152, %153
  %155 = xor i1 %151, %154
  br i1 %155, label %then9, label %else10

then9:                                            ; preds = %then8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %then8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br label %ifcont25

else12:                                           ; preds = %else7
  %156 = load i32, i32* %op_code, align 4
  %157 = icmp eq i32 %156, 2
  br i1 %157, label %then13, label %else17

then13:                                           ; preds = %else12
  %158 = load i32, i32* %i, align 4
  %159 = load i32, i32* %j, align 4
  %160 = load i32, i32* %k, align 4
  %161 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %162 = load %dimension_descriptor*, %dimension_descriptor** %161, align 8
  %163 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %162, i32 0
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 %158, %165
  %167 = mul i32 1, %166
  %168 = add i32 0, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 1, %170
  %172 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %162, i32 1
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = sub i32 %159, %174
  %176 = mul i32 %171, %175
  %177 = add i32 %168, %176
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %171, %179
  %181 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %162, i32 2
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = sub i32 %160, %183
  %185 = mul i32 %180, %184
  %186 = add i32 %177, %185
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 3
  %188 = load i32, i32* %187, align 4
  %189 = mul i32 %180, %188
  %190 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %191 = load i1*, i1** %190, align 8
  %192 = getelementptr inbounds i1, i1* %191, i32 %186
  %193 = load i1, i1* %192, align 1
  %194 = load i1, i1* %x, align 1
  %195 = load i1, i1* %y, align 1
  %196 = xor i1 %194, %195
  %197 = xor i1 %196, true
  %198 = xor i1 %193, %197
  br i1 %198, label %then14, label %else15

then14:                                           ; preds = %then13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %then13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  br label %ifcont24

else17:                                           ; preds = %else12
  %199 = load i32, i32* %op_code, align 4
  %200 = icmp eq i32 %199, 3
  br i1 %200, label %then18, label %else22

then18:                                           ; preds = %else17
  %201 = load i32, i32* %i, align 4
  %202 = load i32, i32* %j, align 4
  %203 = load i32, i32* %k, align 4
  %204 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %205 = load %dimension_descriptor*, %dimension_descriptor** %204, align 8
  %206 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %205, i32 0
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sub i32 %201, %208
  %210 = mul i32 1, %209
  %211 = add i32 0, %210
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 3
  %213 = load i32, i32* %212, align 4
  %214 = mul i32 1, %213
  %215 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %205, i32 1
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = sub i32 %202, %217
  %219 = mul i32 %214, %218
  %220 = add i32 %211, %219
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 3
  %222 = load i32, i32* %221, align 4
  %223 = mul i32 %214, %222
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %205, i32 2
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %203, %226
  %228 = mul i32 %223, %227
  %229 = add i32 %220, %228
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 %223, %231
  %233 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %234 = load i1*, i1** %233, align 8
  %235 = getelementptr inbounds i1, i1* %234, i32 %229
  %236 = load i1, i1* %235, align 1
  %237 = load i1, i1* %x, align 1
  %238 = load i1, i1* %y, align 1
  %239 = xor i1 %237, %238
  %240 = xor i1 %236, %239
  br i1 %240, label %then19, label %else20

then19:                                           ; preds = %then18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %then18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  br label %ifcont23

else22:                                           ; preds = %else17
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %ifcont23, %ifcont16
  br label %ifcont25

ifcont25:                                         ; preds = %ifcont24, %ifcont11
  br label %ifcont26

ifcont26:                                         ; preds = %ifcont25, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end27:                                       ; preds = %loop.head1
  br label %loop.head

loop.end28:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end28
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %call_arg_value47 = alloca i32, align 4
  %call_arg_value37 = alloca i32, align 4
  %call_arg_value27 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.0, align 8
  %6 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 3, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  store i32 3, i32* %10, align 4
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array.0, align 8
  %12 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %dim1 = alloca i32, align 4
  store i32 10, i32* %dim1, align 4
  %dim2 = alloca i32, align 4
  store i32 100, i32* %dim2, align 4
  %dim3 = alloca i32, align 4
  store i32 1, i32* %dim3, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %18 = load i32, i32* %dim1, align 4
  %19 = load i32, i32* %dim2, align 4
  %20 = load i32, i32* %dim3, align 4
  %21 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %22, align 1
  %23 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 3
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 %18, i32* %28, align 4
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %27, align 4
  %32 = sub i32 %30, %31
  %33 = add i32 %32, 1
  %34 = mul i32 1, %33
  store i32 %33, i32* %29, align 4
  %35 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 1
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 2
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 3
  store i32 1, i32* %36, align 4
  store i32 1, i32* %37, align 4
  store i32 %19, i32* %38, align 4
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %37, align 4
  %42 = sub i32 %40, %41
  %43 = add i32 %42, 1
  %44 = mul i32 %34, %43
  store i32 %43, i32* %39, align 4
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 2
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 2
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 3
  store i32 1, i32* %46, align 4
  store i32 1, i32* %47, align 4
  store i32 %20, i32* %48, align 4
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %47, align 4
  %52 = sub i32 %50, %51
  %53 = add i32 %52, 1
  %54 = mul i32 %44, %53
  store i32 %53, i32* %49, align 4
  %55 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %56 = alloca i32, align 4
  %57 = mul i32 %54, 1
  store i32 %57, i32* %56, align 4
  %58 = load i32, i32* %56, align 4
  %59 = call i8* (i32, ...) @_lfortran_malloc(i32 %58)
  %60 = bitcast i8* %59 to i1*
  store i1* %60, i1** %55, align 8
  %61 = load i32, i32* %dim1, align 4
  %62 = load i32, i32* %dim2, align 4
  %63 = load i32, i32* %dim3, align 4
  %64 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %64, align 4
  %65 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %65, align 1
  %66 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %67 = load %dimension_descriptor*, %dimension_descriptor** %66, align 8
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 1, i32* %70, align 4
  store i32 %61, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  %77 = mul i32 1, %76
  store i32 %76, i32* %72, align 4
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 %62, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  %87 = mul i32 %77, %86
  store i32 %86, i32* %82, align 4
  %88 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 2
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 2
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 3
  store i32 1, i32* %89, align 4
  store i32 1, i32* %90, align 4
  store i32 %63, i32* %91, align 4
  %93 = load i32, i32* %91, align 4
  %94 = load i32, i32* %90, align 4
  %95 = sub i32 %93, %94
  %96 = add i32 %95, 1
  %97 = mul i32 %87, %96
  store i32 %96, i32* %92, align 4
  %98 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %99 = alloca i32, align 4
  %100 = mul i32 %97, 1
  store i32 %100, i32* %99, align 4
  %101 = load i32, i32* %99, align 4
  %102 = call i8* (i32, ...) @_lfortran_malloc(i32 %101)
  %103 = bitcast i8* %102 to i1*
  store i1* %103, i1** %98, align 8
  %104 = load i32, i32* %dim1, align 4
  %105 = load i32, i32* %dim2, align 4
  %106 = load i32, i32* %dim3, align 4
  %107 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %107, align 4
  %108 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %108, align 1
  %109 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %110 = load %dimension_descriptor*, %dimension_descriptor** %109, align 8
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 2
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 3
  store i32 1, i32* %112, align 4
  store i32 1, i32* %113, align 4
  store i32 %104, i32* %114, align 4
  %116 = load i32, i32* %114, align 4
  %117 = load i32, i32* %113, align 4
  %118 = sub i32 %116, %117
  %119 = add i32 %118, 1
  %120 = mul i32 1, %119
  store i32 %119, i32* %115, align 4
  %121 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 1
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 1
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 2
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 3
  store i32 1, i32* %122, align 4
  store i32 1, i32* %123, align 4
  store i32 %105, i32* %124, align 4
  %126 = load i32, i32* %124, align 4
  %127 = load i32, i32* %123, align 4
  %128 = sub i32 %126, %127
  %129 = add i32 %128, 1
  %130 = mul i32 %120, %129
  store i32 %129, i32* %125, align 4
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 2
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 2
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 3
  store i32 1, i32* %132, align 4
  store i32 1, i32* %133, align 4
  store i32 %106, i32* %134, align 4
  %136 = load i32, i32* %134, align 4
  %137 = load i32, i32* %133, align 4
  %138 = sub i32 %136, %137
  %139 = add i32 %138, 1
  %140 = mul i32 %130, %139
  store i32 %139, i32* %135, align 4
  %141 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %142 = alloca i32, align 4
  %143 = mul i32 %140, 1
  store i32 %143, i32* %142, align 4
  %144 = load i32, i32* %142, align 4
  %145 = call i8* (i32, ...) @_lfortran_malloc(i32 %144)
  %146 = bitcast i8* %145 to i1*
  store i1* %146, i1** %141, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end6, %.entry
  %147 = load i32, i32* %i, align 4
  %148 = add i32 %147, 1
  %149 = load i32, i32* %dim1, align 4
  %150 = icmp sle i32 %148, %149
  br i1 %150, label %loop.body, label %loop.end7

loop.body:                                        ; preds = %loop.head
  %151 = load i32, i32* %i, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %153 = load i32, i32* %j, align 4
  %154 = add i32 %153, 1
  %155 = load i32, i32* %dim2, align 4
  %156 = icmp sle i32 %154, %155
  br i1 %156, label %loop.body2, label %loop.end6

loop.body2:                                       ; preds = %loop.head1
  %157 = load i32, i32* %j, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %159 = load i32, i32* %k, align 4
  %160 = add i32 %159, 1
  %161 = load i32, i32* %dim3, align 4
  %162 = icmp sle i32 %160, %161
  br i1 %162, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %163 = load i32, i32* %k, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %k, align 4
  %165 = load i32, i32* %i, align 4
  %166 = load i32, i32* %j, align 4
  %167 = load i32, i32* %k, align 4
  %168 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %169 = load %dimension_descriptor*, %dimension_descriptor** %168, align 8
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 0
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %165, %172
  %174 = mul i32 1, %173
  %175 = add i32 0, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 1, %177
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 1
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 %166, %181
  %183 = mul i32 %178, %182
  %184 = add i32 %175, %183
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 3
  %186 = load i32, i32* %185, align 4
  %187 = mul i32 %178, %186
  %188 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 2
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 %167, %190
  %192 = mul i32 %187, %191
  %193 = add i32 %184, %192
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = mul i32 %187, %195
  %197 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %198 = load i1*, i1** %197, align 8
  %199 = getelementptr inbounds i1, i1* %198, i32 %193
  %200 = load i32, i32* %i, align 4
  %201 = load i32, i32* %j, align 4
  %202 = add i32 %200, %201
  %203 = load i32, i32* %k, align 4
  %204 = add i32 %202, %203
  store i32 %204, i32* %call_arg_value, align 4
  %205 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %205, i1* %199, align 1
  %206 = load i32, i32* %i, align 4
  %207 = load i32, i32* %j, align 4
  %208 = load i32, i32* %k, align 4
  %209 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %210 = load %dimension_descriptor*, %dimension_descriptor** %209, align 8
  %211 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %210, i32 0
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 %206, %213
  %215 = mul i32 1, %214
  %216 = add i32 0, %215
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 3
  %218 = load i32, i32* %217, align 4
  %219 = mul i32 1, %218
  %220 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %210, i32 1
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = sub i32 %207, %222
  %224 = mul i32 %219, %223
  %225 = add i32 %216, %224
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = mul i32 %219, %227
  %229 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %210, i32 2
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = sub i32 %208, %231
  %233 = mul i32 %228, %232
  %234 = add i32 %225, %233
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 3
  %236 = load i32, i32* %235, align 4
  %237 = mul i32 %228, %236
  %238 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %239 = load i1*, i1** %238, align 8
  %240 = getelementptr inbounds i1, i1* %239, i32 %234
  %241 = load i32, i32* %i, align 4
  %242 = load i32, i32* %j, align 4
  %243 = mul i32 %241, %242
  %244 = load i32, i32* %j, align 4
  %245 = load i32, i32* %k, align 4
  %246 = mul i32 %244, %245
  %247 = add i32 %243, %246
  %248 = load i32, i32* %k, align 4
  %249 = load i32, i32* %j, align 4
  %250 = mul i32 %248, %249
  %251 = add i32 %247, %250
  store i32 %251, i32* %call_arg_value5, align 4
  %252 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %252, i1* %240, align 1
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end6:                                        ; preds = %loop.head1
  br label %loop.head

loop.end7:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %253 = alloca %dimension_descriptor*, align 8
  %254 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %255 = load %dimension_descriptor*, %dimension_descriptor** %254, align 8
  store %dimension_descriptor* %255, %dimension_descriptor** %253, align 8
  %256 = alloca i32, align 4
  store i32 1, i32* %256, align 4
  %257 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %253, i32* %256)
  %258 = sub i32 %257, 1
  store i32 %258, i32* %"1_t", align 4
  br label %loop.head8

loop.head8:                                       ; preds = %loop.end15, %loop.end7
  %259 = load i32, i32* %"1_t", align 4
  %260 = add i32 %259, 1
  %261 = alloca %dimension_descriptor*, align 8
  %262 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %263 = load %dimension_descriptor*, %dimension_descriptor** %262, align 8
  store %dimension_descriptor* %263, %dimension_descriptor** %261, align 8
  %264 = alloca i32, align 4
  store i32 1, i32* %264, align 4
  %265 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %261, i32* %264)
  %266 = icmp sle i32 %260, %265
  br i1 %266, label %loop.body9, label %loop.end16

loop.body9:                                       ; preds = %loop.head8
  %267 = load i32, i32* %"1_t", align 4
  %268 = add i32 %267, 1
  store i32 %268, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %269 = alloca %dimension_descriptor*, align 8
  %270 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %271 = load %dimension_descriptor*, %dimension_descriptor** %270, align 8
  store %dimension_descriptor* %271, %dimension_descriptor** %269, align 8
  %272 = alloca i32, align 4
  store i32 2, i32* %272, align 4
  %273 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %269, i32* %272)
  %274 = sub i32 %273, 1
  store i32 %274, i32* %"2_t", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.body9
  %275 = load i32, i32* %"2_t", align 4
  %276 = add i32 %275, 1
  %277 = alloca %dimension_descriptor*, align 8
  %278 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %279 = load %dimension_descriptor*, %dimension_descriptor** %278, align 8
  store %dimension_descriptor* %279, %dimension_descriptor** %277, align 8
  %280 = alloca i32, align 4
  store i32 2, i32* %280, align 4
  %281 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %277, i32* %280)
  %282 = icmp sle i32 %276, %281
  br i1 %282, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %283 = load i32, i32* %"2_t", align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %285 = alloca %dimension_descriptor*, align 8
  %286 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %287 = load %dimension_descriptor*, %dimension_descriptor** %286, align 8
  store %dimension_descriptor* %287, %dimension_descriptor** %285, align 8
  %288 = alloca i32, align 4
  store i32 3, i32* %288, align 4
  %289 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %285, i32* %288)
  %290 = sub i32 %289, 1
  store i32 %290, i32* %"3_t", align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %291 = load i32, i32* %"3_t", align 4
  %292 = add i32 %291, 1
  %293 = alloca %dimension_descriptor*, align 8
  %294 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %295 = load %dimension_descriptor*, %dimension_descriptor** %294, align 8
  store %dimension_descriptor* %295, %dimension_descriptor** %293, align 8
  %296 = alloca i32, align 4
  store i32 3, i32* %296, align 4
  %297 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %293, i32* %296)
  %298 = icmp sle i32 %292, %297
  br i1 %298, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %299 = load i32, i32* %"3_t", align 4
  %300 = add i32 %299, 1
  store i32 %300, i32* %"3_t", align 4
  %301 = load i32, i32* %"1_t", align 4
  %302 = load i32, i32* %"2_t", align 4
  %303 = load i32, i32* %"3_t", align 4
  %304 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %305 = load %dimension_descriptor*, %dimension_descriptor** %304, align 8
  %306 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 0
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 %301, %308
  %310 = mul i32 1, %309
  %311 = add i32 0, %310
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 3
  %313 = load i32, i32* %312, align 4
  %314 = mul i32 1, %313
  %315 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 1
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 %302, %317
  %319 = mul i32 %314, %318
  %320 = add i32 %311, %319
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 %314, %322
  %324 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 2
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = sub i32 %303, %326
  %328 = mul i32 %323, %327
  %329 = add i32 %320, %328
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 3
  %331 = load i32, i32* %330, align 4
  %332 = mul i32 %323, %331
  %333 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %334 = load i1*, i1** %333, align 8
  %335 = getelementptr inbounds i1, i1* %334, i32 %329
  %336 = load i32, i32* %"1_v", align 4
  %337 = load i32, i32* %"2_v", align 4
  %338 = load i32, i32* %"3_v", align 4
  %339 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %340 = load %dimension_descriptor*, %dimension_descriptor** %339, align 8
  %341 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 0
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = sub i32 %336, %343
  %345 = mul i32 1, %344
  %346 = add i32 0, %345
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 3
  %348 = load i32, i32* %347, align 4
  %349 = mul i32 1, %348
  %350 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 1
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 %337, %352
  %354 = mul i32 %349, %353
  %355 = add i32 %346, %354
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = mul i32 %349, %357
  %359 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 2
  %360 = getelementptr %dimension_descriptor, %dimension_descriptor* %359, i32 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = sub i32 %338, %361
  %363 = mul i32 %358, %362
  %364 = add i32 %355, %363
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %359, i32 0, i32 3
  %366 = load i32, i32* %365, align 4
  %367 = mul i32 %358, %366
  %368 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %369 = load i1*, i1** %368, align 8
  %370 = getelementptr inbounds i1, i1* %369, i32 %364
  %371 = load i1, i1* %370, align 1
  %372 = load i32, i32* %"1_v", align 4
  %373 = load i32, i32* %"2_v", align 4
  %374 = load i32, i32* %"3_v", align 4
  %375 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %376 = load %dimension_descriptor*, %dimension_descriptor** %375, align 8
  %377 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %376, i32 0
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %377, i32 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = sub i32 %372, %379
  %381 = mul i32 1, %380
  %382 = add i32 0, %381
  %383 = getelementptr %dimension_descriptor, %dimension_descriptor* %377, i32 0, i32 3
  %384 = load i32, i32* %383, align 4
  %385 = mul i32 1, %384
  %386 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %376, i32 1
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %386, i32 0, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = sub i32 %373, %388
  %390 = mul i32 %385, %389
  %391 = add i32 %382, %390
  %392 = getelementptr %dimension_descriptor, %dimension_descriptor* %386, i32 0, i32 3
  %393 = load i32, i32* %392, align 4
  %394 = mul i32 %385, %393
  %395 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %376, i32 2
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = sub i32 %374, %397
  %399 = mul i32 %394, %398
  %400 = add i32 %391, %399
  %401 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 3
  %402 = load i32, i32* %401, align 4
  %403 = mul i32 %394, %402
  %404 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %405 = load i1*, i1** %404, align 8
  %406 = getelementptr inbounds i1, i1* %405, i32 %400
  %407 = load i1, i1* %406, align 1
  %408 = and i1 %371, %407
  store i1 %408, i1* %335, align 1
  %409 = load i32, i32* %"3_v", align 4
  %410 = add i32 %409, 1
  store i32 %410, i32* %"3_v", align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  %411 = load i32, i32* %"2_v", align 4
  %412 = add i32 %411, 1
  store i32 %412, i32* %"2_v", align 4
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %413 = load i32, i32* %"1_v", align 4
  %414 = add i32 %413, 1
  store i32 %414, i32* %"1_v", align 4
  br label %loop.head8

loop.end16:                                       ; preds = %loop.head8
  %415 = alloca %array.0, align 8
  store i32 0, i32* %call_arg_value17, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value17)
  store i32 1, i32* %"1_v", align 4
  %416 = alloca %dimension_descriptor*, align 8
  %417 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %418 = load %dimension_descriptor*, %dimension_descriptor** %417, align 8
  store %dimension_descriptor* %418, %dimension_descriptor** %416, align 8
  %419 = alloca i32, align 4
  store i32 1, i32* %419, align 4
  %420 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %416, i32* %419)
  %421 = sub i32 %420, 1
  store i32 %421, i32* %"1_t", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end25, %loop.end16
  %422 = load i32, i32* %"1_t", align 4
  %423 = add i32 %422, 1
  %424 = alloca %dimension_descriptor*, align 8
  %425 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %426 = load %dimension_descriptor*, %dimension_descriptor** %425, align 8
  store %dimension_descriptor* %426, %dimension_descriptor** %424, align 8
  %427 = alloca i32, align 4
  store i32 1, i32* %427, align 4
  %428 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %424, i32* %427)
  %429 = icmp sle i32 %423, %428
  br i1 %429, label %loop.body19, label %loop.end26

loop.body19:                                      ; preds = %loop.head18
  %430 = load i32, i32* %"1_t", align 4
  %431 = add i32 %430, 1
  store i32 %431, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %432 = alloca %dimension_descriptor*, align 8
  %433 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %434 = load %dimension_descriptor*, %dimension_descriptor** %433, align 8
  store %dimension_descriptor* %434, %dimension_descriptor** %432, align 8
  %435 = alloca i32, align 4
  store i32 2, i32* %435, align 4
  %436 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %432, i32* %435)
  %437 = sub i32 %436, 1
  store i32 %437, i32* %"2_t", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.end24, %loop.body19
  %438 = load i32, i32* %"2_t", align 4
  %439 = add i32 %438, 1
  %440 = alloca %dimension_descriptor*, align 8
  %441 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %442 = load %dimension_descriptor*, %dimension_descriptor** %441, align 8
  store %dimension_descriptor* %442, %dimension_descriptor** %440, align 8
  %443 = alloca i32, align 4
  store i32 2, i32* %443, align 4
  %444 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %440, i32* %443)
  %445 = icmp sle i32 %439, %444
  br i1 %445, label %loop.body21, label %loop.end25

loop.body21:                                      ; preds = %loop.head20
  %446 = load i32, i32* %"2_t", align 4
  %447 = add i32 %446, 1
  store i32 %447, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %448 = alloca %dimension_descriptor*, align 8
  %449 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %450 = load %dimension_descriptor*, %dimension_descriptor** %449, align 8
  store %dimension_descriptor* %450, %dimension_descriptor** %448, align 8
  %451 = alloca i32, align 4
  store i32 3, i32* %451, align 4
  %452 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %448, i32* %451)
  %453 = sub i32 %452, 1
  store i32 %453, i32* %"3_t", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.body21
  %454 = load i32, i32* %"3_t", align 4
  %455 = add i32 %454, 1
  %456 = alloca %dimension_descriptor*, align 8
  %457 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %458 = load %dimension_descriptor*, %dimension_descriptor** %457, align 8
  store %dimension_descriptor* %458, %dimension_descriptor** %456, align 8
  %459 = alloca i32, align 4
  store i32 3, i32* %459, align 4
  %460 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %456, i32* %459)
  %461 = icmp sle i32 %455, %460
  br i1 %461, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %462 = load i32, i32* %"3_t", align 4
  %463 = add i32 %462, 1
  store i32 %463, i32* %"3_t", align 4
  %464 = load i32, i32* %"1_t", align 4
  %465 = load i32, i32* %"2_t", align 4
  %466 = load i32, i32* %"3_t", align 4
  %467 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %468 = load %dimension_descriptor*, %dimension_descriptor** %467, align 8
  %469 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %468, i32 0
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %469, i32 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = sub i32 %464, %471
  %473 = mul i32 1, %472
  %474 = add i32 0, %473
  %475 = getelementptr %dimension_descriptor, %dimension_descriptor* %469, i32 0, i32 3
  %476 = load i32, i32* %475, align 4
  %477 = mul i32 1, %476
  %478 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %468, i32 1
  %479 = getelementptr %dimension_descriptor, %dimension_descriptor* %478, i32 0, i32 1
  %480 = load i32, i32* %479, align 4
  %481 = sub i32 %465, %480
  %482 = mul i32 %477, %481
  %483 = add i32 %474, %482
  %484 = getelementptr %dimension_descriptor, %dimension_descriptor* %478, i32 0, i32 3
  %485 = load i32, i32* %484, align 4
  %486 = mul i32 %477, %485
  %487 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %468, i32 2
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %487, i32 0, i32 1
  %489 = load i32, i32* %488, align 4
  %490 = sub i32 %466, %489
  %491 = mul i32 %486, %490
  %492 = add i32 %483, %491
  %493 = getelementptr %dimension_descriptor, %dimension_descriptor* %487, i32 0, i32 3
  %494 = load i32, i32* %493, align 4
  %495 = mul i32 %486, %494
  %496 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %497 = load i1*, i1** %496, align 8
  %498 = getelementptr inbounds i1, i1* %497, i32 %492
  %499 = load i32, i32* %"1_v", align 4
  %500 = load i32, i32* %"2_v", align 4
  %501 = load i32, i32* %"3_v", align 4
  %502 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %503 = load %dimension_descriptor*, %dimension_descriptor** %502, align 8
  %504 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %503, i32 0
  %505 = getelementptr %dimension_descriptor, %dimension_descriptor* %504, i32 0, i32 1
  %506 = load i32, i32* %505, align 4
  %507 = sub i32 %499, %506
  %508 = mul i32 1, %507
  %509 = add i32 0, %508
  %510 = getelementptr %dimension_descriptor, %dimension_descriptor* %504, i32 0, i32 3
  %511 = load i32, i32* %510, align 4
  %512 = mul i32 1, %511
  %513 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %503, i32 1
  %514 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = sub i32 %500, %515
  %517 = mul i32 %512, %516
  %518 = add i32 %509, %517
  %519 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 3
  %520 = load i32, i32* %519, align 4
  %521 = mul i32 %512, %520
  %522 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %503, i32 2
  %523 = getelementptr %dimension_descriptor, %dimension_descriptor* %522, i32 0, i32 1
  %524 = load i32, i32* %523, align 4
  %525 = sub i32 %501, %524
  %526 = mul i32 %521, %525
  %527 = add i32 %518, %526
  %528 = getelementptr %dimension_descriptor, %dimension_descriptor* %522, i32 0, i32 3
  %529 = load i32, i32* %528, align 4
  %530 = mul i32 %521, %529
  %531 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %532 = load i1*, i1** %531, align 8
  %533 = getelementptr inbounds i1, i1* %532, i32 %527
  %534 = load i1, i1* %533, align 1
  %535 = load i32, i32* %"1_v", align 4
  %536 = load i32, i32* %"2_v", align 4
  %537 = load i32, i32* %"3_v", align 4
  %538 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %539 = load %dimension_descriptor*, %dimension_descriptor** %538, align 8
  %540 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %539, i32 0
  %541 = getelementptr %dimension_descriptor, %dimension_descriptor* %540, i32 0, i32 1
  %542 = load i32, i32* %541, align 4
  %543 = sub i32 %535, %542
  %544 = mul i32 1, %543
  %545 = add i32 0, %544
  %546 = getelementptr %dimension_descriptor, %dimension_descriptor* %540, i32 0, i32 3
  %547 = load i32, i32* %546, align 4
  %548 = mul i32 1, %547
  %549 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %539, i32 1
  %550 = getelementptr %dimension_descriptor, %dimension_descriptor* %549, i32 0, i32 1
  %551 = load i32, i32* %550, align 4
  %552 = sub i32 %536, %551
  %553 = mul i32 %548, %552
  %554 = add i32 %545, %553
  %555 = getelementptr %dimension_descriptor, %dimension_descriptor* %549, i32 0, i32 3
  %556 = load i32, i32* %555, align 4
  %557 = mul i32 %548, %556
  %558 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %539, i32 2
  %559 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = sub i32 %537, %560
  %562 = mul i32 %557, %561
  %563 = add i32 %554, %562
  %564 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 3
  %565 = load i32, i32* %564, align 4
  %566 = mul i32 %557, %565
  %567 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %568 = load i1*, i1** %567, align 8
  %569 = getelementptr inbounds i1, i1* %568, i32 %563
  %570 = load i1, i1* %569, align 1
  %571 = or i1 %534, %570
  store i1 %571, i1* %498, align 1
  %572 = load i32, i32* %"3_v", align 4
  %573 = add i32 %572, 1
  store i32 %573, i32* %"3_v", align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %574 = load i32, i32* %"2_v", align 4
  %575 = add i32 %574, 1
  store i32 %575, i32* %"2_v", align 4
  br label %loop.head20

loop.end25:                                       ; preds = %loop.head20
  %576 = load i32, i32* %"1_v", align 4
  %577 = add i32 %576, 1
  store i32 %577, i32* %"1_v", align 4
  br label %loop.head18

loop.end26:                                       ; preds = %loop.head18
  %578 = alloca %array.0, align 8
  store i32 1, i32* %call_arg_value27, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value27)
  store i32 1, i32* %"1_v", align 4
  %579 = alloca %dimension_descriptor*, align 8
  %580 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %581 = load %dimension_descriptor*, %dimension_descriptor** %580, align 8
  store %dimension_descriptor* %581, %dimension_descriptor** %579, align 8
  %582 = alloca i32, align 4
  store i32 1, i32* %582, align 4
  %583 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %579, i32* %582)
  %584 = sub i32 %583, 1
  store i32 %584, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end35, %loop.end26
  %585 = load i32, i32* %"1_t", align 4
  %586 = add i32 %585, 1
  %587 = alloca %dimension_descriptor*, align 8
  %588 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %589 = load %dimension_descriptor*, %dimension_descriptor** %588, align 8
  store %dimension_descriptor* %589, %dimension_descriptor** %587, align 8
  %590 = alloca i32, align 4
  store i32 1, i32* %590, align 4
  %591 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %587, i32* %590)
  %592 = icmp sle i32 %586, %591
  br i1 %592, label %loop.body29, label %loop.end36

loop.body29:                                      ; preds = %loop.head28
  %593 = load i32, i32* %"1_t", align 4
  %594 = add i32 %593, 1
  store i32 %594, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %595 = alloca %dimension_descriptor*, align 8
  %596 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %597 = load %dimension_descriptor*, %dimension_descriptor** %596, align 8
  store %dimension_descriptor* %597, %dimension_descriptor** %595, align 8
  %598 = alloca i32, align 4
  store i32 2, i32* %598, align 4
  %599 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %595, i32* %598)
  %600 = sub i32 %599, 1
  store i32 %600, i32* %"2_t", align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end34, %loop.body29
  %601 = load i32, i32* %"2_t", align 4
  %602 = add i32 %601, 1
  %603 = alloca %dimension_descriptor*, align 8
  %604 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %605 = load %dimension_descriptor*, %dimension_descriptor** %604, align 8
  store %dimension_descriptor* %605, %dimension_descriptor** %603, align 8
  %606 = alloca i32, align 4
  store i32 2, i32* %606, align 4
  %607 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %603, i32* %606)
  %608 = icmp sle i32 %602, %607
  br i1 %608, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %609 = load i32, i32* %"2_t", align 4
  %610 = add i32 %609, 1
  store i32 %610, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %611 = alloca %dimension_descriptor*, align 8
  %612 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %613 = load %dimension_descriptor*, %dimension_descriptor** %612, align 8
  store %dimension_descriptor* %613, %dimension_descriptor** %611, align 8
  %614 = alloca i32, align 4
  store i32 3, i32* %614, align 4
  %615 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %611, i32* %614)
  %616 = sub i32 %615, 1
  store i32 %616, i32* %"3_t", align 4
  br label %loop.head32

loop.head32:                                      ; preds = %loop.body33, %loop.body31
  %617 = load i32, i32* %"3_t", align 4
  %618 = add i32 %617, 1
  %619 = alloca %dimension_descriptor*, align 8
  %620 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %621 = load %dimension_descriptor*, %dimension_descriptor** %620, align 8
  store %dimension_descriptor* %621, %dimension_descriptor** %619, align 8
  %622 = alloca i32, align 4
  store i32 3, i32* %622, align 4
  %623 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %619, i32* %622)
  %624 = icmp sle i32 %618, %623
  br i1 %624, label %loop.body33, label %loop.end34

loop.body33:                                      ; preds = %loop.head32
  %625 = load i32, i32* %"3_t", align 4
  %626 = add i32 %625, 1
  store i32 %626, i32* %"3_t", align 4
  %627 = load i32, i32* %"1_t", align 4
  %628 = load i32, i32* %"2_t", align 4
  %629 = load i32, i32* %"3_t", align 4
  %630 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %631 = load %dimension_descriptor*, %dimension_descriptor** %630, align 8
  %632 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %631, i32 0
  %633 = getelementptr %dimension_descriptor, %dimension_descriptor* %632, i32 0, i32 1
  %634 = load i32, i32* %633, align 4
  %635 = sub i32 %627, %634
  %636 = mul i32 1, %635
  %637 = add i32 0, %636
  %638 = getelementptr %dimension_descriptor, %dimension_descriptor* %632, i32 0, i32 3
  %639 = load i32, i32* %638, align 4
  %640 = mul i32 1, %639
  %641 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %631, i32 1
  %642 = getelementptr %dimension_descriptor, %dimension_descriptor* %641, i32 0, i32 1
  %643 = load i32, i32* %642, align 4
  %644 = sub i32 %628, %643
  %645 = mul i32 %640, %644
  %646 = add i32 %637, %645
  %647 = getelementptr %dimension_descriptor, %dimension_descriptor* %641, i32 0, i32 3
  %648 = load i32, i32* %647, align 4
  %649 = mul i32 %640, %648
  %650 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %631, i32 2
  %651 = getelementptr %dimension_descriptor, %dimension_descriptor* %650, i32 0, i32 1
  %652 = load i32, i32* %651, align 4
  %653 = sub i32 %629, %652
  %654 = mul i32 %649, %653
  %655 = add i32 %646, %654
  %656 = getelementptr %dimension_descriptor, %dimension_descriptor* %650, i32 0, i32 3
  %657 = load i32, i32* %656, align 4
  %658 = mul i32 %649, %657
  %659 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %660 = load i1*, i1** %659, align 8
  %661 = getelementptr inbounds i1, i1* %660, i32 %655
  %662 = load i32, i32* %"1_v", align 4
  %663 = load i32, i32* %"2_v", align 4
  %664 = load i32, i32* %"3_v", align 4
  %665 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %666 = load %dimension_descriptor*, %dimension_descriptor** %665, align 8
  %667 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %666, i32 0
  %668 = getelementptr %dimension_descriptor, %dimension_descriptor* %667, i32 0, i32 1
  %669 = load i32, i32* %668, align 4
  %670 = sub i32 %662, %669
  %671 = mul i32 1, %670
  %672 = add i32 0, %671
  %673 = getelementptr %dimension_descriptor, %dimension_descriptor* %667, i32 0, i32 3
  %674 = load i32, i32* %673, align 4
  %675 = mul i32 1, %674
  %676 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %666, i32 1
  %677 = getelementptr %dimension_descriptor, %dimension_descriptor* %676, i32 0, i32 1
  %678 = load i32, i32* %677, align 4
  %679 = sub i32 %663, %678
  %680 = mul i32 %675, %679
  %681 = add i32 %672, %680
  %682 = getelementptr %dimension_descriptor, %dimension_descriptor* %676, i32 0, i32 3
  %683 = load i32, i32* %682, align 4
  %684 = mul i32 %675, %683
  %685 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %666, i32 2
  %686 = getelementptr %dimension_descriptor, %dimension_descriptor* %685, i32 0, i32 1
  %687 = load i32, i32* %686, align 4
  %688 = sub i32 %664, %687
  %689 = mul i32 %684, %688
  %690 = add i32 %681, %689
  %691 = getelementptr %dimension_descriptor, %dimension_descriptor* %685, i32 0, i32 3
  %692 = load i32, i32* %691, align 4
  %693 = mul i32 %684, %692
  %694 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %695 = load i1*, i1** %694, align 8
  %696 = getelementptr inbounds i1, i1* %695, i32 %690
  %697 = load i1, i1* %696, align 1
  %698 = load i32, i32* %"1_v", align 4
  %699 = load i32, i32* %"2_v", align 4
  %700 = load i32, i32* %"3_v", align 4
  %701 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %702 = load %dimension_descriptor*, %dimension_descriptor** %701, align 8
  %703 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %702, i32 0
  %704 = getelementptr %dimension_descriptor, %dimension_descriptor* %703, i32 0, i32 1
  %705 = load i32, i32* %704, align 4
  %706 = sub i32 %698, %705
  %707 = mul i32 1, %706
  %708 = add i32 0, %707
  %709 = getelementptr %dimension_descriptor, %dimension_descriptor* %703, i32 0, i32 3
  %710 = load i32, i32* %709, align 4
  %711 = mul i32 1, %710
  %712 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %702, i32 1
  %713 = getelementptr %dimension_descriptor, %dimension_descriptor* %712, i32 0, i32 1
  %714 = load i32, i32* %713, align 4
  %715 = sub i32 %699, %714
  %716 = mul i32 %711, %715
  %717 = add i32 %708, %716
  %718 = getelementptr %dimension_descriptor, %dimension_descriptor* %712, i32 0, i32 3
  %719 = load i32, i32* %718, align 4
  %720 = mul i32 %711, %719
  %721 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %702, i32 2
  %722 = getelementptr %dimension_descriptor, %dimension_descriptor* %721, i32 0, i32 1
  %723 = load i32, i32* %722, align 4
  %724 = sub i32 %700, %723
  %725 = mul i32 %720, %724
  %726 = add i32 %717, %725
  %727 = getelementptr %dimension_descriptor, %dimension_descriptor* %721, i32 0, i32 3
  %728 = load i32, i32* %727, align 4
  %729 = mul i32 %720, %728
  %730 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %731 = load i1*, i1** %730, align 8
  %732 = getelementptr inbounds i1, i1* %731, i32 %726
  %733 = load i1, i1* %732, align 1
  %734 = xor i1 %697, %733
  %735 = xor i1 %734, true
  store i1 %735, i1* %661, align 1
  %736 = load i32, i32* %"3_v", align 4
  %737 = add i32 %736, 1
  store i32 %737, i32* %"3_v", align 4
  br label %loop.head32

loop.end34:                                       ; preds = %loop.head32
  %738 = load i32, i32* %"2_v", align 4
  %739 = add i32 %738, 1
  store i32 %739, i32* %"2_v", align 4
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  %740 = load i32, i32* %"1_v", align 4
  %741 = add i32 %740, 1
  store i32 %741, i32* %"1_v", align 4
  br label %loop.head28

loop.end36:                                       ; preds = %loop.head28
  %742 = alloca %array.0, align 8
  store i32 2, i32* %call_arg_value37, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value37)
  store i32 1, i32* %"1_v", align 4
  %743 = alloca %dimension_descriptor*, align 8
  %744 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %745 = load %dimension_descriptor*, %dimension_descriptor** %744, align 8
  store %dimension_descriptor* %745, %dimension_descriptor** %743, align 8
  %746 = alloca i32, align 4
  store i32 1, i32* %746, align 4
  %747 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %743, i32* %746)
  %748 = sub i32 %747, 1
  store i32 %748, i32* %"1_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.end45, %loop.end36
  %749 = load i32, i32* %"1_t", align 4
  %750 = add i32 %749, 1
  %751 = alloca %dimension_descriptor*, align 8
  %752 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %753 = load %dimension_descriptor*, %dimension_descriptor** %752, align 8
  store %dimension_descriptor* %753, %dimension_descriptor** %751, align 8
  %754 = alloca i32, align 4
  store i32 1, i32* %754, align 4
  %755 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %751, i32* %754)
  %756 = icmp sle i32 %750, %755
  br i1 %756, label %loop.body39, label %loop.end46

loop.body39:                                      ; preds = %loop.head38
  %757 = load i32, i32* %"1_t", align 4
  %758 = add i32 %757, 1
  store i32 %758, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %759 = alloca %dimension_descriptor*, align 8
  %760 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %761 = load %dimension_descriptor*, %dimension_descriptor** %760, align 8
  store %dimension_descriptor* %761, %dimension_descriptor** %759, align 8
  %762 = alloca i32, align 4
  store i32 2, i32* %762, align 4
  %763 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %759, i32* %762)
  %764 = sub i32 %763, 1
  store i32 %764, i32* %"2_t", align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %loop.body39
  %765 = load i32, i32* %"2_t", align 4
  %766 = add i32 %765, 1
  %767 = alloca %dimension_descriptor*, align 8
  %768 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %769 = load %dimension_descriptor*, %dimension_descriptor** %768, align 8
  store %dimension_descriptor* %769, %dimension_descriptor** %767, align 8
  %770 = alloca i32, align 4
  store i32 2, i32* %770, align 4
  %771 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %767, i32* %770)
  %772 = icmp sle i32 %766, %771
  br i1 %772, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %773 = load i32, i32* %"2_t", align 4
  %774 = add i32 %773, 1
  store i32 %774, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %775 = alloca %dimension_descriptor*, align 8
  %776 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %777 = load %dimension_descriptor*, %dimension_descriptor** %776, align 8
  store %dimension_descriptor* %777, %dimension_descriptor** %775, align 8
  %778 = alloca i32, align 4
  store i32 3, i32* %778, align 4
  %779 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %775, i32* %778)
  %780 = sub i32 %779, 1
  store i32 %780, i32* %"3_t", align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %781 = load i32, i32* %"3_t", align 4
  %782 = add i32 %781, 1
  %783 = alloca %dimension_descriptor*, align 8
  %784 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %785 = load %dimension_descriptor*, %dimension_descriptor** %784, align 8
  store %dimension_descriptor* %785, %dimension_descriptor** %783, align 8
  %786 = alloca i32, align 4
  store i32 3, i32* %786, align 4
  %787 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %783, i32* %786)
  %788 = icmp sle i32 %782, %787
  br i1 %788, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %789 = load i32, i32* %"3_t", align 4
  %790 = add i32 %789, 1
  store i32 %790, i32* %"3_t", align 4
  %791 = load i32, i32* %"1_t", align 4
  %792 = load i32, i32* %"2_t", align 4
  %793 = load i32, i32* %"3_t", align 4
  %794 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %795 = load %dimension_descriptor*, %dimension_descriptor** %794, align 8
  %796 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %795, i32 0
  %797 = getelementptr %dimension_descriptor, %dimension_descriptor* %796, i32 0, i32 1
  %798 = load i32, i32* %797, align 4
  %799 = sub i32 %791, %798
  %800 = mul i32 1, %799
  %801 = add i32 0, %800
  %802 = getelementptr %dimension_descriptor, %dimension_descriptor* %796, i32 0, i32 3
  %803 = load i32, i32* %802, align 4
  %804 = mul i32 1, %803
  %805 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %795, i32 1
  %806 = getelementptr %dimension_descriptor, %dimension_descriptor* %805, i32 0, i32 1
  %807 = load i32, i32* %806, align 4
  %808 = sub i32 %792, %807
  %809 = mul i32 %804, %808
  %810 = add i32 %801, %809
  %811 = getelementptr %dimension_descriptor, %dimension_descriptor* %805, i32 0, i32 3
  %812 = load i32, i32* %811, align 4
  %813 = mul i32 %804, %812
  %814 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %795, i32 2
  %815 = getelementptr %dimension_descriptor, %dimension_descriptor* %814, i32 0, i32 1
  %816 = load i32, i32* %815, align 4
  %817 = sub i32 %793, %816
  %818 = mul i32 %813, %817
  %819 = add i32 %810, %818
  %820 = getelementptr %dimension_descriptor, %dimension_descriptor* %814, i32 0, i32 3
  %821 = load i32, i32* %820, align 4
  %822 = mul i32 %813, %821
  %823 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %824 = load i1*, i1** %823, align 8
  %825 = getelementptr inbounds i1, i1* %824, i32 %819
  %826 = load i32, i32* %"1_v", align 4
  %827 = load i32, i32* %"2_v", align 4
  %828 = load i32, i32* %"3_v", align 4
  %829 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %830 = load %dimension_descriptor*, %dimension_descriptor** %829, align 8
  %831 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %830, i32 0
  %832 = getelementptr %dimension_descriptor, %dimension_descriptor* %831, i32 0, i32 1
  %833 = load i32, i32* %832, align 4
  %834 = sub i32 %826, %833
  %835 = mul i32 1, %834
  %836 = add i32 0, %835
  %837 = getelementptr %dimension_descriptor, %dimension_descriptor* %831, i32 0, i32 3
  %838 = load i32, i32* %837, align 4
  %839 = mul i32 1, %838
  %840 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %830, i32 1
  %841 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 1
  %842 = load i32, i32* %841, align 4
  %843 = sub i32 %827, %842
  %844 = mul i32 %839, %843
  %845 = add i32 %836, %844
  %846 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 3
  %847 = load i32, i32* %846, align 4
  %848 = mul i32 %839, %847
  %849 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %830, i32 2
  %850 = getelementptr %dimension_descriptor, %dimension_descriptor* %849, i32 0, i32 1
  %851 = load i32, i32* %850, align 4
  %852 = sub i32 %828, %851
  %853 = mul i32 %848, %852
  %854 = add i32 %845, %853
  %855 = getelementptr %dimension_descriptor, %dimension_descriptor* %849, i32 0, i32 3
  %856 = load i32, i32* %855, align 4
  %857 = mul i32 %848, %856
  %858 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %859 = load i1*, i1** %858, align 8
  %860 = getelementptr inbounds i1, i1* %859, i32 %854
  %861 = load i1, i1* %860, align 1
  %862 = load i32, i32* %"1_v", align 4
  %863 = load i32, i32* %"2_v", align 4
  %864 = load i32, i32* %"3_v", align 4
  %865 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %866 = load %dimension_descriptor*, %dimension_descriptor** %865, align 8
  %867 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %866, i32 0
  %868 = getelementptr %dimension_descriptor, %dimension_descriptor* %867, i32 0, i32 1
  %869 = load i32, i32* %868, align 4
  %870 = sub i32 %862, %869
  %871 = mul i32 1, %870
  %872 = add i32 0, %871
  %873 = getelementptr %dimension_descriptor, %dimension_descriptor* %867, i32 0, i32 3
  %874 = load i32, i32* %873, align 4
  %875 = mul i32 1, %874
  %876 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %866, i32 1
  %877 = getelementptr %dimension_descriptor, %dimension_descriptor* %876, i32 0, i32 1
  %878 = load i32, i32* %877, align 4
  %879 = sub i32 %863, %878
  %880 = mul i32 %875, %879
  %881 = add i32 %872, %880
  %882 = getelementptr %dimension_descriptor, %dimension_descriptor* %876, i32 0, i32 3
  %883 = load i32, i32* %882, align 4
  %884 = mul i32 %875, %883
  %885 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %866, i32 2
  %886 = getelementptr %dimension_descriptor, %dimension_descriptor* %885, i32 0, i32 1
  %887 = load i32, i32* %886, align 4
  %888 = sub i32 %864, %887
  %889 = mul i32 %884, %888
  %890 = add i32 %881, %889
  %891 = getelementptr %dimension_descriptor, %dimension_descriptor* %885, i32 0, i32 3
  %892 = load i32, i32* %891, align 4
  %893 = mul i32 %884, %892
  %894 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %895 = load i1*, i1** %894, align 8
  %896 = getelementptr inbounds i1, i1* %895, i32 %890
  %897 = load i1, i1* %896, align 1
  %898 = xor i1 %861, %897
  store i1 %898, i1* %825, align 1
  %899 = load i32, i32* %"3_v", align 4
  %900 = add i32 %899, 1
  store i32 %900, i32* %"3_v", align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %901 = load i32, i32* %"2_v", align 4
  %902 = add i32 %901, 1
  store i32 %902, i32* %"2_v", align 4
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %903 = load i32, i32* %"1_v", align 4
  %904 = add i32 %903, 1
  store i32 %904, i32* %"1_v", align 4
  br label %loop.head38

loop.end46:                                       ; preds = %loop.head38
  %905 = alloca %array.0, align 8
  store i32 3, i32* %call_arg_value47, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value47)
  %906 = load %array.0, %array.0* %a, align 8
  %907 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %908 = load i1, i1* %907, align 1
  br i1 %908, label %then, label %else

then:                                             ; preds = %loop.end46
  %909 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %910 = load i1*, i1** %909, align 8
  %911 = alloca i8*, align 8
  %912 = bitcast i1* %910 to i8*
  store i8* %912, i8** %911, align 8
  %913 = load i8*, i8** %911, align 8
  call void (i8*, ...) @_lfortran_free(i8* %913)
  %914 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %914, align 1
  br label %ifcont

else:                                             ; preds = %loop.end46
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %915 = load %array.0, %array.0* %b, align 8
  %916 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %917 = load i1, i1* %916, align 1
  br i1 %917, label %then48, label %else49

then48:                                           ; preds = %ifcont
  %918 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %919 = load i1*, i1** %918, align 8
  %920 = alloca i8*, align 8
  %921 = bitcast i1* %919 to i8*
  store i8* %921, i8** %920, align 8
  %922 = load i8*, i8** %920, align 8
  call void (i8*, ...) @_lfortran_free(i8* %922)
  %923 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %923, align 1
  br label %ifcont50

else49:                                           ; preds = %ifcont
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %924 = load %array.0, %array.0* %c, align 8
  %925 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %926 = load i1, i1* %925, align 1
  br i1 %926, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %927 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %928 = load i1*, i1** %927, align 8
  %929 = alloca i8*, align 8
  %930 = bitcast i1* %928 to i8*
  store i8* %930, i8** %929, align 8
  %931 = load i8*, i8** %929, align 8
  call void (i8*, ...) @_lfortran_free(i8* %931)
  %932 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %932, align 1
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)
