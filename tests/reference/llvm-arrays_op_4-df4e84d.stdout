; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, [3 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i1 @modulo2(i32* %x) {
.entry:
  %r = alloca i1, align 1
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %x, align 4
  %2 = udiv i32 %1, 2
  %3 = mul i32 2, %2
  %4 = sub i32 %0, %3
  %5 = icmp eq i32 %4, 1
  store i1 %5, i1* %r, align 1
  br label %return

return:                                           ; preds = %.entry
  %6 = load i1, i1* %r, align 1
  ret i1 %6
}

define void @verify(%array.0* %c, i32* %op_code) {
.entry:
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i1, align 1
  %y = alloca i1, align 1
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end27, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end28

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end27

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont26, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %j, align 4
  %50 = add i32 %48, %49
  %51 = load i32, i32* %k, align 4
  %52 = add i32 %50, %51
  store i32 %52, i32* %call_arg_value, align 4
  %53 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %53, i1* %x, align 1
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %56 = mul i32 %54, %55
  %57 = load i32, i32* %j, align 4
  %58 = load i32, i32* %k, align 4
  %59 = mul i32 %57, %58
  %60 = add i32 %56, %59
  %61 = load i32, i32* %k, align 4
  %62 = load i32, i32* %j, align 4
  %63 = mul i32 %61, %62
  %64 = add i32 %60, %63
  store i32 %64, i32* %call_arg_value5, align 4
  %65 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %65, i1* %y, align 1
  %66 = load i32, i32* %op_code, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %then, label %else7

then:                                             ; preds = %loop.body4
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* %j, align 4
  %70 = load i32, i32* %k, align 4
  %71 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %72 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %71, i32 0, i32 0
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 %68, %74
  %76 = mul i32 1, %75
  %77 = add i32 0, %76
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = mul i32 1, %79
  %81 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %71, i32 0, i32 1
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 %69, %83
  %85 = mul i32 %80, %84
  %86 = add i32 %77, %85
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = mul i32 %80, %88
  %90 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %71, i32 0, i32 2
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %70, %92
  %94 = mul i32 %89, %93
  %95 = add i32 %86, %94
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = mul i32 %89, %97
  %99 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %100 = load i1*, i1** %99, align 8
  %101 = getelementptr inbounds i1, i1* %100, i32 %95
  %102 = load i1, i1* %101, align 1
  %103 = load i1, i1* %x, align 1
  %104 = load i1, i1* %y, align 1
  %105 = and i1 %103, %104
  %106 = xor i1 %102, %105
  br i1 %106, label %then6, label %else

then6:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then6
  br label %ifcont26

else7:                                            ; preds = %loop.body4
  %107 = load i32, i32* %op_code, align 4
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %then8, label %else12

then8:                                            ; preds = %else7
  %109 = load i32, i32* %i, align 4
  %110 = load i32, i32* %j, align 4
  %111 = load i32, i32* %k, align 4
  %112 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %113 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %112, i32 0, i32 0
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = sub i32 %109, %115
  %117 = mul i32 1, %116
  %118 = add i32 0, %117
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = mul i32 1, %120
  %122 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %112, i32 0, i32 1
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %110, %124
  %126 = mul i32 %121, %125
  %127 = add i32 %118, %126
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = mul i32 %121, %129
  %131 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %112, i32 0, i32 2
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %111, %133
  %135 = mul i32 %130, %134
  %136 = add i32 %127, %135
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 3
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 %130, %138
  %140 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %141 = load i1*, i1** %140, align 8
  %142 = getelementptr inbounds i1, i1* %141, i32 %136
  %143 = load i1, i1* %142, align 1
  %144 = load i1, i1* %x, align 1
  %145 = load i1, i1* %y, align 1
  %146 = or i1 %144, %145
  %147 = xor i1 %143, %146
  br i1 %147, label %then9, label %else10

then9:                                            ; preds = %then8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %then8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br label %ifcont25

else12:                                           ; preds = %else7
  %148 = load i32, i32* %op_code, align 4
  %149 = icmp eq i32 %148, 2
  br i1 %149, label %then13, label %else17

then13:                                           ; preds = %else12
  %150 = load i32, i32* %i, align 4
  %151 = load i32, i32* %j, align 4
  %152 = load i32, i32* %k, align 4
  %153 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %154 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %153, i32 0, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 %150, %156
  %158 = mul i32 1, %157
  %159 = add i32 0, %158
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = mul i32 1, %161
  %163 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %153, i32 0, i32 1
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 %151, %165
  %167 = mul i32 %162, %166
  %168 = add i32 %159, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 %162, %170
  %172 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %153, i32 0, i32 2
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = sub i32 %152, %174
  %176 = mul i32 %171, %175
  %177 = add i32 %168, %176
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %171, %179
  %181 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %182 = load i1*, i1** %181, align 8
  %183 = getelementptr inbounds i1, i1* %182, i32 %177
  %184 = load i1, i1* %183, align 1
  %185 = load i1, i1* %x, align 1
  %186 = load i1, i1* %y, align 1
  %187 = xor i1 %185, %186
  %188 = xor i1 %187, true
  %189 = xor i1 %184, %188
  br i1 %189, label %then14, label %else15

then14:                                           ; preds = %then13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %then13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  br label %ifcont24

else17:                                           ; preds = %else12
  %190 = load i32, i32* %op_code, align 4
  %191 = icmp eq i32 %190, 3
  br i1 %191, label %then18, label %else22

then18:                                           ; preds = %else17
  %192 = load i32, i32* %i, align 4
  %193 = load i32, i32* %j, align 4
  %194 = load i32, i32* %k, align 4
  %195 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %196 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %195, i32 0, i32 0
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 %192, %198
  %200 = mul i32 1, %199
  %201 = add i32 0, %200
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = mul i32 1, %203
  %205 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %195, i32 0, i32 1
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %193, %207
  %209 = mul i32 %204, %208
  %210 = add i32 %201, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 %204, %212
  %214 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %195, i32 0, i32 2
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sub i32 %194, %216
  %218 = mul i32 %213, %217
  %219 = add i32 %210, %218
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = mul i32 %213, %221
  %223 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %224 = load i1*, i1** %223, align 8
  %225 = getelementptr inbounds i1, i1* %224, i32 %219
  %226 = load i1, i1* %225, align 1
  %227 = load i1, i1* %x, align 1
  %228 = load i1, i1* %y, align 1
  %229 = xor i1 %227, %228
  %230 = xor i1 %226, %229
  br i1 %230, label %then19, label %else20

then19:                                           ; preds = %then18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %then18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  br label %ifcont23

else22:                                           ; preds = %else17
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %ifcont23, %ifcont16
  br label %ifcont25

ifcont25:                                         ; preds = %ifcont24, %ifcont11
  br label %ifcont26

ifcont26:                                         ; preds = %ifcont25, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end27:                                       ; preds = %loop.head1
  br label %loop.head

loop.end28:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end28
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %call_arg_value47 = alloca i32, align 4
  %call_arg_value37 = alloca i32, align 4
  %call_arg_value27 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %b = alloca %array.0, align 8
  %1 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %1, align 1
  %c = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %2, align 1
  %dim1 = alloca i32, align 4
  store i32 10, i32* %dim1, align 4
  %dim2 = alloca i32, align 4
  store i32 100, i32* %dim2, align 4
  %dim3 = alloca i32, align 4
  store i32 1, i32* %dim3, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %3 = load i32, i32* %dim1, align 4
  %4 = load i32, i32* %dim2, align 4
  %5 = load i32, i32* %dim3, align 4
  %6 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %7, align 1
  %8 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %9 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %8, i32 0, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %11, align 4
  %16 = sub i32 %14, %15
  %17 = add i32 %16, 1
  %18 = mul i32 1, %17
  store i32 %17, i32* %13, align 4
  %19 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %8, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 2
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 3
  store i32 1, i32* %20, align 4
  store i32 1, i32* %21, align 4
  store i32 %4, i32* %22, align 4
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %21, align 4
  %26 = sub i32 %24, %25
  %27 = add i32 %26, 1
  %28 = mul i32 %18, %27
  store i32 %27, i32* %23, align 4
  %29 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %8, i32 0, i32 2
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 3
  store i32 1, i32* %30, align 4
  store i32 1, i32* %31, align 4
  store i32 %5, i32* %32, align 4
  %34 = load i32, i32* %32, align 4
  %35 = load i32, i32* %31, align 4
  %36 = sub i32 %34, %35
  %37 = add i32 %36, 1
  %38 = mul i32 %28, %37
  store i32 %37, i32* %33, align 4
  %39 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %40 = alloca i32, align 4
  %41 = mul i32 %38, 1
  store i32 %41, i32* %40, align 4
  %42 = load i32, i32* %40, align 4
  %43 = call i8* (i32, ...) @_lfortran_malloc(i32 %42)
  %44 = bitcast i8* %43 to i1*
  store i1* %44, i1** %39, align 8
  %45 = load i32, i32* %dim1, align 4
  %46 = load i32, i32* %dim2, align 4
  %47 = load i32, i32* %dim3, align 4
  %48 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %48, align 4
  %49 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %49, align 1
  %50 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %51 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 3
  store i32 1, i32* %52, align 4
  store i32 1, i32* %53, align 4
  store i32 %45, i32* %54, align 4
  %56 = load i32, i32* %54, align 4
  %57 = load i32, i32* %53, align 4
  %58 = sub i32 %56, %57
  %59 = add i32 %58, 1
  %60 = mul i32 1, %59
  store i32 %59, i32* %55, align 4
  %61 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %50, i32 0, i32 1
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 0
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 2
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  store i32 1, i32* %62, align 4
  store i32 1, i32* %63, align 4
  store i32 %46, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = load i32, i32* %63, align 4
  %68 = sub i32 %66, %67
  %69 = add i32 %68, 1
  %70 = mul i32 %60, %69
  store i32 %69, i32* %65, align 4
  %71 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %50, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 0
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 2
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 3
  store i32 1, i32* %72, align 4
  store i32 1, i32* %73, align 4
  store i32 %47, i32* %74, align 4
  %76 = load i32, i32* %74, align 4
  %77 = load i32, i32* %73, align 4
  %78 = sub i32 %76, %77
  %79 = add i32 %78, 1
  %80 = mul i32 %70, %79
  store i32 %79, i32* %75, align 4
  %81 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %82 = alloca i32, align 4
  %83 = mul i32 %80, 1
  store i32 %83, i32* %82, align 4
  %84 = load i32, i32* %82, align 4
  %85 = call i8* (i32, ...) @_lfortran_malloc(i32 %84)
  %86 = bitcast i8* %85 to i1*
  store i1* %86, i1** %81, align 8
  %87 = load i32, i32* %dim1, align 4
  %88 = load i32, i32* %dim2, align 4
  %89 = load i32, i32* %dim3, align 4
  %90 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %90, align 4
  %91 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %91, align 1
  %92 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %93 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %92, i32 0, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 0
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 2
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 3
  store i32 1, i32* %94, align 4
  store i32 1, i32* %95, align 4
  store i32 %87, i32* %96, align 4
  %98 = load i32, i32* %96, align 4
  %99 = load i32, i32* %95, align 4
  %100 = sub i32 %98, %99
  %101 = add i32 %100, 1
  %102 = mul i32 1, %101
  store i32 %101, i32* %97, align 4
  %103 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %92, i32 0, i32 1
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 1
  %106 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 2
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 3
  store i32 1, i32* %104, align 4
  store i32 1, i32* %105, align 4
  store i32 %88, i32* %106, align 4
  %108 = load i32, i32* %106, align 4
  %109 = load i32, i32* %105, align 4
  %110 = sub i32 %108, %109
  %111 = add i32 %110, 1
  %112 = mul i32 %102, %111
  store i32 %111, i32* %107, align 4
  %113 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %92, i32 0, i32 2
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 2
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 3
  store i32 1, i32* %114, align 4
  store i32 1, i32* %115, align 4
  store i32 %89, i32* %116, align 4
  %118 = load i32, i32* %116, align 4
  %119 = load i32, i32* %115, align 4
  %120 = sub i32 %118, %119
  %121 = add i32 %120, 1
  %122 = mul i32 %112, %121
  store i32 %121, i32* %117, align 4
  %123 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %124 = alloca i32, align 4
  %125 = mul i32 %122, 1
  store i32 %125, i32* %124, align 4
  %126 = load i32, i32* %124, align 4
  %127 = call i8* (i32, ...) @_lfortran_malloc(i32 %126)
  %128 = bitcast i8* %127 to i1*
  store i1* %128, i1** %123, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end6, %.entry
  %129 = load i32, i32* %i, align 4
  %130 = add i32 %129, 1
  %131 = load i32, i32* %dim1, align 4
  %132 = icmp sle i32 %130, %131
  br i1 %132, label %loop.body, label %loop.end7

loop.body:                                        ; preds = %loop.head
  %133 = load i32, i32* %i, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %135 = load i32, i32* %j, align 4
  %136 = add i32 %135, 1
  %137 = load i32, i32* %dim2, align 4
  %138 = icmp sle i32 %136, %137
  br i1 %138, label %loop.body2, label %loop.end6

loop.body2:                                       ; preds = %loop.head1
  %139 = load i32, i32* %j, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %141 = load i32, i32* %k, align 4
  %142 = add i32 %141, 1
  %143 = load i32, i32* %dim3, align 4
  %144 = icmp sle i32 %142, %143
  br i1 %144, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %145 = load i32, i32* %k, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %k, align 4
  %147 = load i32, i32* %i, align 4
  %148 = load i32, i32* %j, align 4
  %149 = load i32, i32* %k, align 4
  %150 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %151 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %150, i32 0, i32 0
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = sub i32 %147, %153
  %155 = mul i32 1, %154
  %156 = add i32 0, %155
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = mul i32 1, %158
  %160 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %150, i32 0, i32 1
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = sub i32 %148, %162
  %164 = mul i32 %159, %163
  %165 = add i32 %156, %164
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = mul i32 %159, %167
  %169 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %150, i32 0, i32 2
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 %149, %171
  %173 = mul i32 %168, %172
  %174 = add i32 %165, %173
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %169, i32 0, i32 3
  %176 = load i32, i32* %175, align 4
  %177 = mul i32 %168, %176
  %178 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %179 = load i1*, i1** %178, align 8
  %180 = getelementptr inbounds i1, i1* %179, i32 %174
  %181 = load i32, i32* %i, align 4
  %182 = load i32, i32* %j, align 4
  %183 = add i32 %181, %182
  %184 = load i32, i32* %k, align 4
  %185 = add i32 %183, %184
  store i32 %185, i32* %call_arg_value, align 4
  %186 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %186, i1* %180, align 1
  %187 = load i32, i32* %i, align 4
  %188 = load i32, i32* %j, align 4
  %189 = load i32, i32* %k, align 4
  %190 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %191 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %190, i32 0, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 %187, %193
  %195 = mul i32 1, %194
  %196 = add i32 0, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 1, %198
  %200 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %190, i32 0, i32 1
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %188, %202
  %204 = mul i32 %199, %203
  %205 = add i32 %196, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 %199, %207
  %209 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %190, i32 0, i32 2
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %189, %211
  %213 = mul i32 %208, %212
  %214 = add i32 %205, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %208, %216
  %218 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %219 = load i1*, i1** %218, align 8
  %220 = getelementptr inbounds i1, i1* %219, i32 %214
  %221 = load i32, i32* %i, align 4
  %222 = load i32, i32* %j, align 4
  %223 = mul i32 %221, %222
  %224 = load i32, i32* %j, align 4
  %225 = load i32, i32* %k, align 4
  %226 = mul i32 %224, %225
  %227 = add i32 %223, %226
  %228 = load i32, i32* %k, align 4
  %229 = load i32, i32* %j, align 4
  %230 = mul i32 %228, %229
  %231 = add i32 %227, %230
  store i32 %231, i32* %call_arg_value5, align 4
  %232 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %232, i1* %220, align 1
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end6:                                        ; preds = %loop.head1
  br label %loop.head

loop.end7:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %233 = alloca %dimension_descriptor*, align 8
  %234 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %235 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %234, i32 0, i32 0
  store %dimension_descriptor* %235, %dimension_descriptor** %233, align 8
  %236 = alloca i32, align 4
  store i32 1, i32* %236, align 4
  %237 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %233, i32* %236)
  %238 = sub i32 %237, 1
  store i32 %238, i32* %"1_t", align 4
  br label %loop.head8

loop.head8:                                       ; preds = %loop.end15, %loop.end7
  %239 = load i32, i32* %"1_t", align 4
  %240 = add i32 %239, 1
  %241 = alloca %dimension_descriptor*, align 8
  %242 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %243 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %242, i32 0, i32 0
  store %dimension_descriptor* %243, %dimension_descriptor** %241, align 8
  %244 = alloca i32, align 4
  store i32 1, i32* %244, align 4
  %245 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %241, i32* %244)
  %246 = icmp sle i32 %240, %245
  br i1 %246, label %loop.body9, label %loop.end16

loop.body9:                                       ; preds = %loop.head8
  %247 = load i32, i32* %"1_t", align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %249 = alloca %dimension_descriptor*, align 8
  %250 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %251 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %250, i32 0, i32 0
  store %dimension_descriptor* %251, %dimension_descriptor** %249, align 8
  %252 = alloca i32, align 4
  store i32 2, i32* %252, align 4
  %253 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %249, i32* %252)
  %254 = sub i32 %253, 1
  store i32 %254, i32* %"2_t", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.body9
  %255 = load i32, i32* %"2_t", align 4
  %256 = add i32 %255, 1
  %257 = alloca %dimension_descriptor*, align 8
  %258 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %259 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %258, i32 0, i32 0
  store %dimension_descriptor* %259, %dimension_descriptor** %257, align 8
  %260 = alloca i32, align 4
  store i32 2, i32* %260, align 4
  %261 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %257, i32* %260)
  %262 = icmp sle i32 %256, %261
  br i1 %262, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %263 = load i32, i32* %"2_t", align 4
  %264 = add i32 %263, 1
  store i32 %264, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %265 = alloca %dimension_descriptor*, align 8
  %266 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %267 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %266, i32 0, i32 0
  store %dimension_descriptor* %267, %dimension_descriptor** %265, align 8
  %268 = alloca i32, align 4
  store i32 3, i32* %268, align 4
  %269 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %265, i32* %268)
  %270 = sub i32 %269, 1
  store i32 %270, i32* %"3_t", align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %271 = load i32, i32* %"3_t", align 4
  %272 = add i32 %271, 1
  %273 = alloca %dimension_descriptor*, align 8
  %274 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %275 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %274, i32 0, i32 0
  store %dimension_descriptor* %275, %dimension_descriptor** %273, align 8
  %276 = alloca i32, align 4
  store i32 3, i32* %276, align 4
  %277 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %273, i32* %276)
  %278 = icmp sle i32 %272, %277
  br i1 %278, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %279 = load i32, i32* %"3_t", align 4
  %280 = add i32 %279, 1
  store i32 %280, i32* %"3_t", align 4
  %281 = load i32, i32* %"1_t", align 4
  %282 = load i32, i32* %"2_t", align 4
  %283 = load i32, i32* %"3_t", align 4
  %284 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %285 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %284, i32 0, i32 0
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 %281, %287
  %289 = mul i32 1, %288
  %290 = add i32 0, %289
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 3
  %292 = load i32, i32* %291, align 4
  %293 = mul i32 1, %292
  %294 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %284, i32 0, i32 1
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 %282, %296
  %298 = mul i32 %293, %297
  %299 = add i32 %290, %298
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 3
  %301 = load i32, i32* %300, align 4
  %302 = mul i32 %293, %301
  %303 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %284, i32 0, i32 2
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 %283, %305
  %307 = mul i32 %302, %306
  %308 = add i32 %299, %307
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = mul i32 %302, %310
  %312 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %313 = load i1*, i1** %312, align 8
  %314 = getelementptr inbounds i1, i1* %313, i32 %308
  %315 = load i32, i32* %"1_v", align 4
  %316 = load i32, i32* %"2_v", align 4
  %317 = load i32, i32* %"3_v", align 4
  %318 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %319 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %318, i32 0, i32 0
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = sub i32 %315, %321
  %323 = mul i32 1, %322
  %324 = add i32 0, %323
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 3
  %326 = load i32, i32* %325, align 4
  %327 = mul i32 1, %326
  %328 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %318, i32 0, i32 1
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = sub i32 %316, %330
  %332 = mul i32 %327, %331
  %333 = add i32 %324, %332
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 3
  %335 = load i32, i32* %334, align 4
  %336 = mul i32 %327, %335
  %337 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %318, i32 0, i32 2
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sub i32 %317, %339
  %341 = mul i32 %336, %340
  %342 = add i32 %333, %341
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 3
  %344 = load i32, i32* %343, align 4
  %345 = mul i32 %336, %344
  %346 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %347 = load i1*, i1** %346, align 8
  %348 = getelementptr inbounds i1, i1* %347, i32 %342
  %349 = load i1, i1* %348, align 1
  %350 = load i32, i32* %"1_v", align 4
  %351 = load i32, i32* %"2_v", align 4
  %352 = load i32, i32* %"3_v", align 4
  %353 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %354 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %353, i32 0, i32 0
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = sub i32 %350, %356
  %358 = mul i32 1, %357
  %359 = add i32 0, %358
  %360 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 3
  %361 = load i32, i32* %360, align 4
  %362 = mul i32 1, %361
  %363 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %353, i32 0, i32 1
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = sub i32 %351, %365
  %367 = mul i32 %362, %366
  %368 = add i32 %359, %367
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 3
  %370 = load i32, i32* %369, align 4
  %371 = mul i32 %362, %370
  %372 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %353, i32 0, i32 2
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sub i32 %352, %374
  %376 = mul i32 %371, %375
  %377 = add i32 %368, %376
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = mul i32 %371, %379
  %381 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %382 = load i1*, i1** %381, align 8
  %383 = getelementptr inbounds i1, i1* %382, i32 %377
  %384 = load i1, i1* %383, align 1
  %385 = and i1 %349, %384
  store i1 %385, i1* %314, align 1
  %386 = load i32, i32* %"3_v", align 4
  %387 = add i32 %386, 1
  store i32 %387, i32* %"3_v", align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  %388 = load i32, i32* %"2_v", align 4
  %389 = add i32 %388, 1
  store i32 %389, i32* %"2_v", align 4
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %390 = load i32, i32* %"1_v", align 4
  %391 = add i32 %390, 1
  store i32 %391, i32* %"1_v", align 4
  br label %loop.head8

loop.end16:                                       ; preds = %loop.head8
  %392 = alloca %array.0, align 8
  store i32 0, i32* %call_arg_value17, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value17)
  store i32 1, i32* %"1_v", align 4
  %393 = alloca %dimension_descriptor*, align 8
  %394 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %395 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %394, i32 0, i32 0
  store %dimension_descriptor* %395, %dimension_descriptor** %393, align 8
  %396 = alloca i32, align 4
  store i32 1, i32* %396, align 4
  %397 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %393, i32* %396)
  %398 = sub i32 %397, 1
  store i32 %398, i32* %"1_t", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end25, %loop.end16
  %399 = load i32, i32* %"1_t", align 4
  %400 = add i32 %399, 1
  %401 = alloca %dimension_descriptor*, align 8
  %402 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %403 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %402, i32 0, i32 0
  store %dimension_descriptor* %403, %dimension_descriptor** %401, align 8
  %404 = alloca i32, align 4
  store i32 1, i32* %404, align 4
  %405 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %401, i32* %404)
  %406 = icmp sle i32 %400, %405
  br i1 %406, label %loop.body19, label %loop.end26

loop.body19:                                      ; preds = %loop.head18
  %407 = load i32, i32* %"1_t", align 4
  %408 = add i32 %407, 1
  store i32 %408, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %409 = alloca %dimension_descriptor*, align 8
  %410 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %411 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %410, i32 0, i32 0
  store %dimension_descriptor* %411, %dimension_descriptor** %409, align 8
  %412 = alloca i32, align 4
  store i32 2, i32* %412, align 4
  %413 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %409, i32* %412)
  %414 = sub i32 %413, 1
  store i32 %414, i32* %"2_t", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.end24, %loop.body19
  %415 = load i32, i32* %"2_t", align 4
  %416 = add i32 %415, 1
  %417 = alloca %dimension_descriptor*, align 8
  %418 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %419 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %418, i32 0, i32 0
  store %dimension_descriptor* %419, %dimension_descriptor** %417, align 8
  %420 = alloca i32, align 4
  store i32 2, i32* %420, align 4
  %421 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %417, i32* %420)
  %422 = icmp sle i32 %416, %421
  br i1 %422, label %loop.body21, label %loop.end25

loop.body21:                                      ; preds = %loop.head20
  %423 = load i32, i32* %"2_t", align 4
  %424 = add i32 %423, 1
  store i32 %424, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %425 = alloca %dimension_descriptor*, align 8
  %426 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %427 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %426, i32 0, i32 0
  store %dimension_descriptor* %427, %dimension_descriptor** %425, align 8
  %428 = alloca i32, align 4
  store i32 3, i32* %428, align 4
  %429 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %425, i32* %428)
  %430 = sub i32 %429, 1
  store i32 %430, i32* %"3_t", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.body21
  %431 = load i32, i32* %"3_t", align 4
  %432 = add i32 %431, 1
  %433 = alloca %dimension_descriptor*, align 8
  %434 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %435 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %434, i32 0, i32 0
  store %dimension_descriptor* %435, %dimension_descriptor** %433, align 8
  %436 = alloca i32, align 4
  store i32 3, i32* %436, align 4
  %437 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %433, i32* %436)
  %438 = icmp sle i32 %432, %437
  br i1 %438, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %439 = load i32, i32* %"3_t", align 4
  %440 = add i32 %439, 1
  store i32 %440, i32* %"3_t", align 4
  %441 = load i32, i32* %"1_t", align 4
  %442 = load i32, i32* %"2_t", align 4
  %443 = load i32, i32* %"3_t", align 4
  %444 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %445 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %444, i32 0, i32 0
  %446 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = sub i32 %441, %447
  %449 = mul i32 1, %448
  %450 = add i32 0, %449
  %451 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 3
  %452 = load i32, i32* %451, align 4
  %453 = mul i32 1, %452
  %454 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %444, i32 0, i32 1
  %455 = getelementptr %dimension_descriptor, %dimension_descriptor* %454, i32 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = sub i32 %442, %456
  %458 = mul i32 %453, %457
  %459 = add i32 %450, %458
  %460 = getelementptr %dimension_descriptor, %dimension_descriptor* %454, i32 0, i32 3
  %461 = load i32, i32* %460, align 4
  %462 = mul i32 %453, %461
  %463 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %444, i32 0, i32 2
  %464 = getelementptr %dimension_descriptor, %dimension_descriptor* %463, i32 0, i32 1
  %465 = load i32, i32* %464, align 4
  %466 = sub i32 %443, %465
  %467 = mul i32 %462, %466
  %468 = add i32 %459, %467
  %469 = getelementptr %dimension_descriptor, %dimension_descriptor* %463, i32 0, i32 3
  %470 = load i32, i32* %469, align 4
  %471 = mul i32 %462, %470
  %472 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %473 = load i1*, i1** %472, align 8
  %474 = getelementptr inbounds i1, i1* %473, i32 %468
  %475 = load i32, i32* %"1_v", align 4
  %476 = load i32, i32* %"2_v", align 4
  %477 = load i32, i32* %"3_v", align 4
  %478 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %479 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %478, i32 0, i32 0
  %480 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 1
  %481 = load i32, i32* %480, align 4
  %482 = sub i32 %475, %481
  %483 = mul i32 1, %482
  %484 = add i32 0, %483
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 3
  %486 = load i32, i32* %485, align 4
  %487 = mul i32 1, %486
  %488 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %478, i32 0, i32 1
  %489 = getelementptr %dimension_descriptor, %dimension_descriptor* %488, i32 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = sub i32 %476, %490
  %492 = mul i32 %487, %491
  %493 = add i32 %484, %492
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %488, i32 0, i32 3
  %495 = load i32, i32* %494, align 4
  %496 = mul i32 %487, %495
  %497 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %478, i32 0, i32 2
  %498 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = sub i32 %477, %499
  %501 = mul i32 %496, %500
  %502 = add i32 %493, %501
  %503 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 3
  %504 = load i32, i32* %503, align 4
  %505 = mul i32 %496, %504
  %506 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %507 = load i1*, i1** %506, align 8
  %508 = getelementptr inbounds i1, i1* %507, i32 %502
  %509 = load i1, i1* %508, align 1
  %510 = load i32, i32* %"1_v", align 4
  %511 = load i32, i32* %"2_v", align 4
  %512 = load i32, i32* %"3_v", align 4
  %513 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %514 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %513, i32 0, i32 0
  %515 = getelementptr %dimension_descriptor, %dimension_descriptor* %514, i32 0, i32 1
  %516 = load i32, i32* %515, align 4
  %517 = sub i32 %510, %516
  %518 = mul i32 1, %517
  %519 = add i32 0, %518
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %514, i32 0, i32 3
  %521 = load i32, i32* %520, align 4
  %522 = mul i32 1, %521
  %523 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %513, i32 0, i32 1
  %524 = getelementptr %dimension_descriptor, %dimension_descriptor* %523, i32 0, i32 1
  %525 = load i32, i32* %524, align 4
  %526 = sub i32 %511, %525
  %527 = mul i32 %522, %526
  %528 = add i32 %519, %527
  %529 = getelementptr %dimension_descriptor, %dimension_descriptor* %523, i32 0, i32 3
  %530 = load i32, i32* %529, align 4
  %531 = mul i32 %522, %530
  %532 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %513, i32 0, i32 2
  %533 = getelementptr %dimension_descriptor, %dimension_descriptor* %532, i32 0, i32 1
  %534 = load i32, i32* %533, align 4
  %535 = sub i32 %512, %534
  %536 = mul i32 %531, %535
  %537 = add i32 %528, %536
  %538 = getelementptr %dimension_descriptor, %dimension_descriptor* %532, i32 0, i32 3
  %539 = load i32, i32* %538, align 4
  %540 = mul i32 %531, %539
  %541 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %542 = load i1*, i1** %541, align 8
  %543 = getelementptr inbounds i1, i1* %542, i32 %537
  %544 = load i1, i1* %543, align 1
  %545 = or i1 %509, %544
  store i1 %545, i1* %474, align 1
  %546 = load i32, i32* %"3_v", align 4
  %547 = add i32 %546, 1
  store i32 %547, i32* %"3_v", align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %548 = load i32, i32* %"2_v", align 4
  %549 = add i32 %548, 1
  store i32 %549, i32* %"2_v", align 4
  br label %loop.head20

loop.end25:                                       ; preds = %loop.head20
  %550 = load i32, i32* %"1_v", align 4
  %551 = add i32 %550, 1
  store i32 %551, i32* %"1_v", align 4
  br label %loop.head18

loop.end26:                                       ; preds = %loop.head18
  %552 = alloca %array.0, align 8
  store i32 1, i32* %call_arg_value27, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value27)
  store i32 1, i32* %"1_v", align 4
  %553 = alloca %dimension_descriptor*, align 8
  %554 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %555 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %554, i32 0, i32 0
  store %dimension_descriptor* %555, %dimension_descriptor** %553, align 8
  %556 = alloca i32, align 4
  store i32 1, i32* %556, align 4
  %557 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %553, i32* %556)
  %558 = sub i32 %557, 1
  store i32 %558, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end35, %loop.end26
  %559 = load i32, i32* %"1_t", align 4
  %560 = add i32 %559, 1
  %561 = alloca %dimension_descriptor*, align 8
  %562 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %563 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %562, i32 0, i32 0
  store %dimension_descriptor* %563, %dimension_descriptor** %561, align 8
  %564 = alloca i32, align 4
  store i32 1, i32* %564, align 4
  %565 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %561, i32* %564)
  %566 = icmp sle i32 %560, %565
  br i1 %566, label %loop.body29, label %loop.end36

loop.body29:                                      ; preds = %loop.head28
  %567 = load i32, i32* %"1_t", align 4
  %568 = add i32 %567, 1
  store i32 %568, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %569 = alloca %dimension_descriptor*, align 8
  %570 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %571 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %570, i32 0, i32 0
  store %dimension_descriptor* %571, %dimension_descriptor** %569, align 8
  %572 = alloca i32, align 4
  store i32 2, i32* %572, align 4
  %573 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %569, i32* %572)
  %574 = sub i32 %573, 1
  store i32 %574, i32* %"2_t", align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end34, %loop.body29
  %575 = load i32, i32* %"2_t", align 4
  %576 = add i32 %575, 1
  %577 = alloca %dimension_descriptor*, align 8
  %578 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %579 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %578, i32 0, i32 0
  store %dimension_descriptor* %579, %dimension_descriptor** %577, align 8
  %580 = alloca i32, align 4
  store i32 2, i32* %580, align 4
  %581 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %577, i32* %580)
  %582 = icmp sle i32 %576, %581
  br i1 %582, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %583 = load i32, i32* %"2_t", align 4
  %584 = add i32 %583, 1
  store i32 %584, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %585 = alloca %dimension_descriptor*, align 8
  %586 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %587 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %586, i32 0, i32 0
  store %dimension_descriptor* %587, %dimension_descriptor** %585, align 8
  %588 = alloca i32, align 4
  store i32 3, i32* %588, align 4
  %589 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %585, i32* %588)
  %590 = sub i32 %589, 1
  store i32 %590, i32* %"3_t", align 4
  br label %loop.head32

loop.head32:                                      ; preds = %loop.body33, %loop.body31
  %591 = load i32, i32* %"3_t", align 4
  %592 = add i32 %591, 1
  %593 = alloca %dimension_descriptor*, align 8
  %594 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %595 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %594, i32 0, i32 0
  store %dimension_descriptor* %595, %dimension_descriptor** %593, align 8
  %596 = alloca i32, align 4
  store i32 3, i32* %596, align 4
  %597 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %593, i32* %596)
  %598 = icmp sle i32 %592, %597
  br i1 %598, label %loop.body33, label %loop.end34

loop.body33:                                      ; preds = %loop.head32
  %599 = load i32, i32* %"3_t", align 4
  %600 = add i32 %599, 1
  store i32 %600, i32* %"3_t", align 4
  %601 = load i32, i32* %"1_t", align 4
  %602 = load i32, i32* %"2_t", align 4
  %603 = load i32, i32* %"3_t", align 4
  %604 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %605 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %604, i32 0, i32 0
  %606 = getelementptr %dimension_descriptor, %dimension_descriptor* %605, i32 0, i32 1
  %607 = load i32, i32* %606, align 4
  %608 = sub i32 %601, %607
  %609 = mul i32 1, %608
  %610 = add i32 0, %609
  %611 = getelementptr %dimension_descriptor, %dimension_descriptor* %605, i32 0, i32 3
  %612 = load i32, i32* %611, align 4
  %613 = mul i32 1, %612
  %614 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %604, i32 0, i32 1
  %615 = getelementptr %dimension_descriptor, %dimension_descriptor* %614, i32 0, i32 1
  %616 = load i32, i32* %615, align 4
  %617 = sub i32 %602, %616
  %618 = mul i32 %613, %617
  %619 = add i32 %610, %618
  %620 = getelementptr %dimension_descriptor, %dimension_descriptor* %614, i32 0, i32 3
  %621 = load i32, i32* %620, align 4
  %622 = mul i32 %613, %621
  %623 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %604, i32 0, i32 2
  %624 = getelementptr %dimension_descriptor, %dimension_descriptor* %623, i32 0, i32 1
  %625 = load i32, i32* %624, align 4
  %626 = sub i32 %603, %625
  %627 = mul i32 %622, %626
  %628 = add i32 %619, %627
  %629 = getelementptr %dimension_descriptor, %dimension_descriptor* %623, i32 0, i32 3
  %630 = load i32, i32* %629, align 4
  %631 = mul i32 %622, %630
  %632 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %633 = load i1*, i1** %632, align 8
  %634 = getelementptr inbounds i1, i1* %633, i32 %628
  %635 = load i32, i32* %"1_v", align 4
  %636 = load i32, i32* %"2_v", align 4
  %637 = load i32, i32* %"3_v", align 4
  %638 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %639 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %638, i32 0, i32 0
  %640 = getelementptr %dimension_descriptor, %dimension_descriptor* %639, i32 0, i32 1
  %641 = load i32, i32* %640, align 4
  %642 = sub i32 %635, %641
  %643 = mul i32 1, %642
  %644 = add i32 0, %643
  %645 = getelementptr %dimension_descriptor, %dimension_descriptor* %639, i32 0, i32 3
  %646 = load i32, i32* %645, align 4
  %647 = mul i32 1, %646
  %648 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %638, i32 0, i32 1
  %649 = getelementptr %dimension_descriptor, %dimension_descriptor* %648, i32 0, i32 1
  %650 = load i32, i32* %649, align 4
  %651 = sub i32 %636, %650
  %652 = mul i32 %647, %651
  %653 = add i32 %644, %652
  %654 = getelementptr %dimension_descriptor, %dimension_descriptor* %648, i32 0, i32 3
  %655 = load i32, i32* %654, align 4
  %656 = mul i32 %647, %655
  %657 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %638, i32 0, i32 2
  %658 = getelementptr %dimension_descriptor, %dimension_descriptor* %657, i32 0, i32 1
  %659 = load i32, i32* %658, align 4
  %660 = sub i32 %637, %659
  %661 = mul i32 %656, %660
  %662 = add i32 %653, %661
  %663 = getelementptr %dimension_descriptor, %dimension_descriptor* %657, i32 0, i32 3
  %664 = load i32, i32* %663, align 4
  %665 = mul i32 %656, %664
  %666 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %667 = load i1*, i1** %666, align 8
  %668 = getelementptr inbounds i1, i1* %667, i32 %662
  %669 = load i1, i1* %668, align 1
  %670 = load i32, i32* %"1_v", align 4
  %671 = load i32, i32* %"2_v", align 4
  %672 = load i32, i32* %"3_v", align 4
  %673 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %674 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %673, i32 0, i32 0
  %675 = getelementptr %dimension_descriptor, %dimension_descriptor* %674, i32 0, i32 1
  %676 = load i32, i32* %675, align 4
  %677 = sub i32 %670, %676
  %678 = mul i32 1, %677
  %679 = add i32 0, %678
  %680 = getelementptr %dimension_descriptor, %dimension_descriptor* %674, i32 0, i32 3
  %681 = load i32, i32* %680, align 4
  %682 = mul i32 1, %681
  %683 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %673, i32 0, i32 1
  %684 = getelementptr %dimension_descriptor, %dimension_descriptor* %683, i32 0, i32 1
  %685 = load i32, i32* %684, align 4
  %686 = sub i32 %671, %685
  %687 = mul i32 %682, %686
  %688 = add i32 %679, %687
  %689 = getelementptr %dimension_descriptor, %dimension_descriptor* %683, i32 0, i32 3
  %690 = load i32, i32* %689, align 4
  %691 = mul i32 %682, %690
  %692 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %673, i32 0, i32 2
  %693 = getelementptr %dimension_descriptor, %dimension_descriptor* %692, i32 0, i32 1
  %694 = load i32, i32* %693, align 4
  %695 = sub i32 %672, %694
  %696 = mul i32 %691, %695
  %697 = add i32 %688, %696
  %698 = getelementptr %dimension_descriptor, %dimension_descriptor* %692, i32 0, i32 3
  %699 = load i32, i32* %698, align 4
  %700 = mul i32 %691, %699
  %701 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %702 = load i1*, i1** %701, align 8
  %703 = getelementptr inbounds i1, i1* %702, i32 %697
  %704 = load i1, i1* %703, align 1
  %705 = xor i1 %669, %704
  %706 = xor i1 %705, true
  store i1 %706, i1* %634, align 1
  %707 = load i32, i32* %"3_v", align 4
  %708 = add i32 %707, 1
  store i32 %708, i32* %"3_v", align 4
  br label %loop.head32

loop.end34:                                       ; preds = %loop.head32
  %709 = load i32, i32* %"2_v", align 4
  %710 = add i32 %709, 1
  store i32 %710, i32* %"2_v", align 4
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  %711 = load i32, i32* %"1_v", align 4
  %712 = add i32 %711, 1
  store i32 %712, i32* %"1_v", align 4
  br label %loop.head28

loop.end36:                                       ; preds = %loop.head28
  %713 = alloca %array.0, align 8
  store i32 2, i32* %call_arg_value37, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value37)
  store i32 1, i32* %"1_v", align 4
  %714 = alloca %dimension_descriptor*, align 8
  %715 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %716 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %715, i32 0, i32 0
  store %dimension_descriptor* %716, %dimension_descriptor** %714, align 8
  %717 = alloca i32, align 4
  store i32 1, i32* %717, align 4
  %718 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %714, i32* %717)
  %719 = sub i32 %718, 1
  store i32 %719, i32* %"1_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.end45, %loop.end36
  %720 = load i32, i32* %"1_t", align 4
  %721 = add i32 %720, 1
  %722 = alloca %dimension_descriptor*, align 8
  %723 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %724 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %723, i32 0, i32 0
  store %dimension_descriptor* %724, %dimension_descriptor** %722, align 8
  %725 = alloca i32, align 4
  store i32 1, i32* %725, align 4
  %726 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %722, i32* %725)
  %727 = icmp sle i32 %721, %726
  br i1 %727, label %loop.body39, label %loop.end46

loop.body39:                                      ; preds = %loop.head38
  %728 = load i32, i32* %"1_t", align 4
  %729 = add i32 %728, 1
  store i32 %729, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %730 = alloca %dimension_descriptor*, align 8
  %731 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %732 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %731, i32 0, i32 0
  store %dimension_descriptor* %732, %dimension_descriptor** %730, align 8
  %733 = alloca i32, align 4
  store i32 2, i32* %733, align 4
  %734 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %730, i32* %733)
  %735 = sub i32 %734, 1
  store i32 %735, i32* %"2_t", align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %loop.body39
  %736 = load i32, i32* %"2_t", align 4
  %737 = add i32 %736, 1
  %738 = alloca %dimension_descriptor*, align 8
  %739 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %740 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %739, i32 0, i32 0
  store %dimension_descriptor* %740, %dimension_descriptor** %738, align 8
  %741 = alloca i32, align 4
  store i32 2, i32* %741, align 4
  %742 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %738, i32* %741)
  %743 = icmp sle i32 %737, %742
  br i1 %743, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %744 = load i32, i32* %"2_t", align 4
  %745 = add i32 %744, 1
  store i32 %745, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %746 = alloca %dimension_descriptor*, align 8
  %747 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %748 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %747, i32 0, i32 0
  store %dimension_descriptor* %748, %dimension_descriptor** %746, align 8
  %749 = alloca i32, align 4
  store i32 3, i32* %749, align 4
  %750 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %746, i32* %749)
  %751 = sub i32 %750, 1
  store i32 %751, i32* %"3_t", align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %752 = load i32, i32* %"3_t", align 4
  %753 = add i32 %752, 1
  %754 = alloca %dimension_descriptor*, align 8
  %755 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %756 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %755, i32 0, i32 0
  store %dimension_descriptor* %756, %dimension_descriptor** %754, align 8
  %757 = alloca i32, align 4
  store i32 3, i32* %757, align 4
  %758 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %754, i32* %757)
  %759 = icmp sle i32 %753, %758
  br i1 %759, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %760 = load i32, i32* %"3_t", align 4
  %761 = add i32 %760, 1
  store i32 %761, i32* %"3_t", align 4
  %762 = load i32, i32* %"1_t", align 4
  %763 = load i32, i32* %"2_t", align 4
  %764 = load i32, i32* %"3_t", align 4
  %765 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %766 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %765, i32 0, i32 0
  %767 = getelementptr %dimension_descriptor, %dimension_descriptor* %766, i32 0, i32 1
  %768 = load i32, i32* %767, align 4
  %769 = sub i32 %762, %768
  %770 = mul i32 1, %769
  %771 = add i32 0, %770
  %772 = getelementptr %dimension_descriptor, %dimension_descriptor* %766, i32 0, i32 3
  %773 = load i32, i32* %772, align 4
  %774 = mul i32 1, %773
  %775 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %765, i32 0, i32 1
  %776 = getelementptr %dimension_descriptor, %dimension_descriptor* %775, i32 0, i32 1
  %777 = load i32, i32* %776, align 4
  %778 = sub i32 %763, %777
  %779 = mul i32 %774, %778
  %780 = add i32 %771, %779
  %781 = getelementptr %dimension_descriptor, %dimension_descriptor* %775, i32 0, i32 3
  %782 = load i32, i32* %781, align 4
  %783 = mul i32 %774, %782
  %784 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %765, i32 0, i32 2
  %785 = getelementptr %dimension_descriptor, %dimension_descriptor* %784, i32 0, i32 1
  %786 = load i32, i32* %785, align 4
  %787 = sub i32 %764, %786
  %788 = mul i32 %783, %787
  %789 = add i32 %780, %788
  %790 = getelementptr %dimension_descriptor, %dimension_descriptor* %784, i32 0, i32 3
  %791 = load i32, i32* %790, align 4
  %792 = mul i32 %783, %791
  %793 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %794 = load i1*, i1** %793, align 8
  %795 = getelementptr inbounds i1, i1* %794, i32 %789
  %796 = load i32, i32* %"1_v", align 4
  %797 = load i32, i32* %"2_v", align 4
  %798 = load i32, i32* %"3_v", align 4
  %799 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %800 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %799, i32 0, i32 0
  %801 = getelementptr %dimension_descriptor, %dimension_descriptor* %800, i32 0, i32 1
  %802 = load i32, i32* %801, align 4
  %803 = sub i32 %796, %802
  %804 = mul i32 1, %803
  %805 = add i32 0, %804
  %806 = getelementptr %dimension_descriptor, %dimension_descriptor* %800, i32 0, i32 3
  %807 = load i32, i32* %806, align 4
  %808 = mul i32 1, %807
  %809 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %799, i32 0, i32 1
  %810 = getelementptr %dimension_descriptor, %dimension_descriptor* %809, i32 0, i32 1
  %811 = load i32, i32* %810, align 4
  %812 = sub i32 %797, %811
  %813 = mul i32 %808, %812
  %814 = add i32 %805, %813
  %815 = getelementptr %dimension_descriptor, %dimension_descriptor* %809, i32 0, i32 3
  %816 = load i32, i32* %815, align 4
  %817 = mul i32 %808, %816
  %818 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %799, i32 0, i32 2
  %819 = getelementptr %dimension_descriptor, %dimension_descriptor* %818, i32 0, i32 1
  %820 = load i32, i32* %819, align 4
  %821 = sub i32 %798, %820
  %822 = mul i32 %817, %821
  %823 = add i32 %814, %822
  %824 = getelementptr %dimension_descriptor, %dimension_descriptor* %818, i32 0, i32 3
  %825 = load i32, i32* %824, align 4
  %826 = mul i32 %817, %825
  %827 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %828 = load i1*, i1** %827, align 8
  %829 = getelementptr inbounds i1, i1* %828, i32 %823
  %830 = load i1, i1* %829, align 1
  %831 = load i32, i32* %"1_v", align 4
  %832 = load i32, i32* %"2_v", align 4
  %833 = load i32, i32* %"3_v", align 4
  %834 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %835 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %834, i32 0, i32 0
  %836 = getelementptr %dimension_descriptor, %dimension_descriptor* %835, i32 0, i32 1
  %837 = load i32, i32* %836, align 4
  %838 = sub i32 %831, %837
  %839 = mul i32 1, %838
  %840 = add i32 0, %839
  %841 = getelementptr %dimension_descriptor, %dimension_descriptor* %835, i32 0, i32 3
  %842 = load i32, i32* %841, align 4
  %843 = mul i32 1, %842
  %844 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %834, i32 0, i32 1
  %845 = getelementptr %dimension_descriptor, %dimension_descriptor* %844, i32 0, i32 1
  %846 = load i32, i32* %845, align 4
  %847 = sub i32 %832, %846
  %848 = mul i32 %843, %847
  %849 = add i32 %840, %848
  %850 = getelementptr %dimension_descriptor, %dimension_descriptor* %844, i32 0, i32 3
  %851 = load i32, i32* %850, align 4
  %852 = mul i32 %843, %851
  %853 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %834, i32 0, i32 2
  %854 = getelementptr %dimension_descriptor, %dimension_descriptor* %853, i32 0, i32 1
  %855 = load i32, i32* %854, align 4
  %856 = sub i32 %833, %855
  %857 = mul i32 %852, %856
  %858 = add i32 %849, %857
  %859 = getelementptr %dimension_descriptor, %dimension_descriptor* %853, i32 0, i32 3
  %860 = load i32, i32* %859, align 4
  %861 = mul i32 %852, %860
  %862 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %863 = load i1*, i1** %862, align 8
  %864 = getelementptr inbounds i1, i1* %863, i32 %858
  %865 = load i1, i1* %864, align 1
  %866 = xor i1 %830, %865
  store i1 %866, i1* %795, align 1
  %867 = load i32, i32* %"3_v", align 4
  %868 = add i32 %867, 1
  store i32 %868, i32* %"3_v", align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %869 = load i32, i32* %"2_v", align 4
  %870 = add i32 %869, 1
  store i32 %870, i32* %"2_v", align 4
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %871 = load i32, i32* %"1_v", align 4
  %872 = add i32 %871, 1
  store i32 %872, i32* %"1_v", align 4
  br label %loop.head38

loop.end46:                                       ; preds = %loop.head38
  %873 = alloca %array.0, align 8
  store i32 3, i32* %call_arg_value47, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value47)
  %874 = load %array.0, %array.0* %a, align 8
  %875 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %876 = load i1, i1* %875, align 1
  br i1 %876, label %then, label %else

then:                                             ; preds = %loop.end46
  %877 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %878 = load i1*, i1** %877, align 8
  %879 = alloca i8*, align 8
  %880 = bitcast i1* %878 to i8*
  store i8* %880, i8** %879, align 8
  %881 = load i8*, i8** %879, align 8
  call void (i8*, ...) @_lfortran_free(i8* %881)
  %882 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %882, align 1
  br label %ifcont

else:                                             ; preds = %loop.end46
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %883 = load %array.0, %array.0* %b, align 8
  %884 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %885 = load i1, i1* %884, align 1
  br i1 %885, label %then48, label %else49

then48:                                           ; preds = %ifcont
  %886 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %887 = load i1*, i1** %886, align 8
  %888 = alloca i8*, align 8
  %889 = bitcast i1* %887 to i8*
  store i8* %889, i8** %888, align 8
  %890 = load i8*, i8** %888, align 8
  call void (i8*, ...) @_lfortran_free(i8* %890)
  %891 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %891, align 1
  br label %ifcont50

else49:                                           ; preds = %ifcont
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %892 = load %array.0, %array.0* %c, align 8
  %893 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %894 = load i1, i1* %893, align 1
  br i1 %894, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %895 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %896 = load i1*, i1** %895, align 8
  %897 = alloca i8*, align 8
  %898 = bitcast i1* %896 to i8*
  store i8* %898, i8** %897, align 8
  %899 = load i8*, i8** %897, align 8
  call void (i8*, ...) @_lfortran_free(i8* %899)
  %900 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %900, align 1
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)
