; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i1 @modulo2(i32* %x) {
.entry:
  %r = alloca i1, align 1
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %x, align 4
  %2 = udiv i32 %1, 2
  %3 = mul i32 2, %2
  %4 = sub i32 %0, %3
  %5 = icmp eq i32 %4, 1
  store i1 %5, i1* %r, align 1
  br label %return

return:                                           ; preds = %.entry
  %6 = load i1, i1* %r, align 1
  ret i1 %6
}

define void @verify(%array.0* %c, i32* %op_code) {
.entry:
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i1, align 1
  %y = alloca i1, align 1
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end27, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = load %dimension_descriptor*, %dimension_descriptor** %9, align 8
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end28

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end27

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont26, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %j, align 4
  %50 = add i32 %48, %49
  %51 = load i32, i32* %k, align 4
  %52 = add i32 %50, %51
  store i32 %52, i32* %call_arg_value, align 4
  %53 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %53, i1* %x, align 1
  %54 = load i32, i32* %i, align 4
  %55 = load i32, i32* %j, align 4
  %56 = mul i32 %54, %55
  %57 = load i32, i32* %j, align 4
  %58 = load i32, i32* %k, align 4
  %59 = mul i32 %57, %58
  %60 = add i32 %56, %59
  %61 = load i32, i32* %k, align 4
  %62 = load i32, i32* %j, align 4
  %63 = mul i32 %61, %62
  %64 = add i32 %60, %63
  store i32 %64, i32* %call_arg_value5, align 4
  %65 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %65, i1* %y, align 1
  %66 = load i32, i32* %op_code, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %then, label %else7

then:                                             ; preds = %loop.body4
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* %j, align 4
  %70 = load i32, i32* %k, align 4
  %71 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 0
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 %68, %75
  %77 = mul i32 1, %76
  %78 = add i32 0, %77
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = mul i32 1, %80
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 %69, %84
  %86 = mul i32 %81, %85
  %87 = add i32 %78, %86
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = mul i32 %81, %89
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 2
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 %70, %93
  %95 = mul i32 %90, %94
  %96 = add i32 %87, %95
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 %90, %98
  %100 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %101 = load i1*, i1** %100, align 8
  %102 = getelementptr inbounds i1, i1* %101, i32 %96
  %103 = load i1, i1* %102, align 1
  %104 = load i1, i1* %x, align 1
  %105 = load i1, i1* %y, align 1
  %106 = and i1 %104, %105
  %107 = xor i1 %103, %106
  br i1 %107, label %then6, label %else

then6:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then6
  br label %ifcont26

else7:                                            ; preds = %loop.body4
  %108 = load i32, i32* %op_code, align 4
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %then8, label %else12

then8:                                            ; preds = %else7
  %110 = load i32, i32* %i, align 4
  %111 = load i32, i32* %j, align 4
  %112 = load i32, i32* %k, align 4
  %113 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %114 = load %dimension_descriptor*, %dimension_descriptor** %113, align 8
  %115 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 0
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = sub i32 %110, %117
  %119 = mul i32 1, %118
  %120 = add i32 0, %119
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %115, i32 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = mul i32 1, %122
  %124 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 1
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sub i32 %111, %126
  %128 = mul i32 %123, %127
  %129 = add i32 %120, %128
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 %123, %131
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %114, i32 2
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %112, %135
  %137 = mul i32 %132, %136
  %138 = add i32 %129, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 %132, %140
  %142 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %143 = load i1*, i1** %142, align 8
  %144 = getelementptr inbounds i1, i1* %143, i32 %138
  %145 = load i1, i1* %144, align 1
  %146 = load i1, i1* %x, align 1
  %147 = load i1, i1* %y, align 1
  %148 = or i1 %146, %147
  %149 = xor i1 %145, %148
  br i1 %149, label %then9, label %else10

then9:                                            ; preds = %then8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %then8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br label %ifcont25

else12:                                           ; preds = %else7
  %150 = load i32, i32* %op_code, align 4
  %151 = icmp eq i32 %150, 2
  br i1 %151, label %then13, label %else17

then13:                                           ; preds = %else12
  %152 = load i32, i32* %i, align 4
  %153 = load i32, i32* %j, align 4
  %154 = load i32, i32* %k, align 4
  %155 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %152, %159
  %161 = mul i32 1, %160
  %162 = add i32 0, %161
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 1, %164
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 1
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %153, %168
  %170 = mul i32 %165, %169
  %171 = add i32 %162, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %165, %173
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 2
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub i32 %154, %177
  %179 = mul i32 %174, %178
  %180 = add i32 %171, %179
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = mul i32 %174, %182
  %184 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %185 = load i1*, i1** %184, align 8
  %186 = getelementptr inbounds i1, i1* %185, i32 %180
  %187 = load i1, i1* %186, align 1
  %188 = load i1, i1* %x, align 1
  %189 = load i1, i1* %y, align 1
  %190 = xor i1 %188, %189
  %191 = xor i1 %190, true
  %192 = xor i1 %187, %191
  br i1 %192, label %then14, label %else15

then14:                                           ; preds = %then13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %then13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  br label %ifcont24

else17:                                           ; preds = %else12
  %193 = load i32, i32* %op_code, align 4
  %194 = icmp eq i32 %193, 3
  br i1 %194, label %then18, label %else22

then18:                                           ; preds = %else17
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %j, align 4
  %197 = load i32, i32* %k, align 4
  %198 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %199 = load %dimension_descriptor*, %dimension_descriptor** %198, align 8
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %195, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 1
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %196, %211
  %213 = mul i32 %208, %212
  %214 = add i32 %205, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %208, %216
  %218 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 2
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %197, %220
  %222 = mul i32 %217, %221
  %223 = add i32 %214, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 %217, %225
  %227 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %228 = load i1*, i1** %227, align 8
  %229 = getelementptr inbounds i1, i1* %228, i32 %223
  %230 = load i1, i1* %229, align 1
  %231 = load i1, i1* %x, align 1
  %232 = load i1, i1* %y, align 1
  %233 = xor i1 %231, %232
  %234 = xor i1 %230, %233
  br i1 %234, label %then19, label %else20

then19:                                           ; preds = %then18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %then18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  br label %ifcont23

else22:                                           ; preds = %else17
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %ifcont23, %ifcont16
  br label %ifcont25

ifcont25:                                         ; preds = %ifcont24, %ifcont11
  br label %ifcont26

ifcont26:                                         ; preds = %ifcont25, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end27:                                       ; preds = %loop.head1
  br label %loop.head

loop.end28:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end28
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %call_arg_value47 = alloca i32, align 4
  %call_arg_value37 = alloca i32, align 4
  %call_arg_value27 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value5 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %b = alloca %array.0, align 8
  %1 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %1, align 1
  %c = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %2, align 1
  %dim1 = alloca i32, align 4
  store i32 10, i32* %dim1, align 4
  %dim2 = alloca i32, align 4
  store i32 100, i32* %dim2, align 4
  %dim3 = alloca i32, align 4
  store i32 1, i32* %dim3, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %3 = load i32, i32* %dim1, align 4
  %4 = load i32, i32* %dim2, align 4
  %5 = load i32, i32* %dim3, align 4
  %6 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %7, align 1
  %8 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  store i32 3, i32* %12, align 4
  %13 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 3
  store i32 1, i32* %15, align 4
  store i32 1, i32* %16, align 4
  store i32 %3, i32* %17, align 4
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %16, align 4
  %21 = sub i32 %19, %20
  %22 = add i32 %21, 1
  %23 = mul i32 1, %22
  store i32 %22, i32* %18, align 4
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 %4, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  %33 = mul i32 %23, %32
  store i32 %32, i32* %28, align 4
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 2
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 0
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 3
  store i32 1, i32* %35, align 4
  store i32 1, i32* %36, align 4
  store i32 %5, i32* %37, align 4
  %39 = load i32, i32* %37, align 4
  %40 = load i32, i32* %36, align 4
  %41 = sub i32 %39, %40
  %42 = add i32 %41, 1
  %43 = mul i32 %33, %42
  store i32 %42, i32* %38, align 4
  %44 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %45 = alloca i32, align 4
  %46 = mul i32 %43, 1
  store i32 %46, i32* %45, align 4
  %47 = load i32, i32* %45, align 4
  %48 = call i8* (i32, ...) @_lfortran_malloc(i32 %47)
  %49 = bitcast i8* %48 to i1*
  store i1* %49, i1** %44, align 8
  %50 = load i32, i32* %dim1, align 4
  %51 = load i32, i32* %dim2, align 4
  %52 = load i32, i32* %dim3, align 4
  %53 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %53, align 4
  %54 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %54, align 1
  %55 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %56 = alloca i32, align 4
  store i32 3, i32* %56, align 4
  %57 = load i32, i32* %56, align 4
  %58 = alloca %dimension_descriptor, i32 %57, align 8
  store %dimension_descriptor* %58, %dimension_descriptor** %55, align 8
  %59 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  store i32 3, i32* %59, align 4
  %60 = load %dimension_descriptor*, %dimension_descriptor** %55, align 8
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 0
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 2
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  store i32 1, i32* %62, align 4
  store i32 1, i32* %63, align 4
  store i32 %50, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = load i32, i32* %63, align 4
  %68 = sub i32 %66, %67
  %69 = add i32 %68, 1
  %70 = mul i32 1, %69
  store i32 %69, i32* %65, align 4
  %71 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 1
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 0
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 2
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 3
  store i32 1, i32* %72, align 4
  store i32 1, i32* %73, align 4
  store i32 %51, i32* %74, align 4
  %76 = load i32, i32* %74, align 4
  %77 = load i32, i32* %73, align 4
  %78 = sub i32 %76, %77
  %79 = add i32 %78, 1
  %80 = mul i32 %70, %79
  store i32 %79, i32* %75, align 4
  %81 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 0
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 1
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 2
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 3
  store i32 1, i32* %82, align 4
  store i32 1, i32* %83, align 4
  store i32 %52, i32* %84, align 4
  %86 = load i32, i32* %84, align 4
  %87 = load i32, i32* %83, align 4
  %88 = sub i32 %86, %87
  %89 = add i32 %88, 1
  %90 = mul i32 %80, %89
  store i32 %89, i32* %85, align 4
  %91 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %92 = alloca i32, align 4
  %93 = mul i32 %90, 1
  store i32 %93, i32* %92, align 4
  %94 = load i32, i32* %92, align 4
  %95 = call i8* (i32, ...) @_lfortran_malloc(i32 %94)
  %96 = bitcast i8* %95 to i1*
  store i1* %96, i1** %91, align 8
  %97 = load i32, i32* %dim1, align 4
  %98 = load i32, i32* %dim2, align 4
  %99 = load i32, i32* %dim3, align 4
  %100 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %100, align 4
  %101 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %101, align 1
  %102 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %103 = alloca i32, align 4
  store i32 3, i32* %103, align 4
  %104 = load i32, i32* %103, align 4
  %105 = alloca %dimension_descriptor, i32 %104, align 8
  store %dimension_descriptor* %105, %dimension_descriptor** %102, align 8
  %106 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 3, i32* %106, align 4
  %107 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  %108 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %107, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 0
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 2
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 3
  store i32 1, i32* %109, align 4
  store i32 1, i32* %110, align 4
  store i32 %97, i32* %111, align 4
  %113 = load i32, i32* %111, align 4
  %114 = load i32, i32* %110, align 4
  %115 = sub i32 %113, %114
  %116 = add i32 %115, 1
  %117 = mul i32 1, %116
  store i32 %116, i32* %112, align 4
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %107, i32 1
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 2
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  store i32 1, i32* %119, align 4
  store i32 1, i32* %120, align 4
  store i32 %98, i32* %121, align 4
  %123 = load i32, i32* %121, align 4
  %124 = load i32, i32* %120, align 4
  %125 = sub i32 %123, %124
  %126 = add i32 %125, 1
  %127 = mul i32 %117, %126
  store i32 %126, i32* %122, align 4
  %128 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %107, i32 2
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 0
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 1
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 2
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 3
  store i32 1, i32* %129, align 4
  store i32 1, i32* %130, align 4
  store i32 %99, i32* %131, align 4
  %133 = load i32, i32* %131, align 4
  %134 = load i32, i32* %130, align 4
  %135 = sub i32 %133, %134
  %136 = add i32 %135, 1
  %137 = mul i32 %127, %136
  store i32 %136, i32* %132, align 4
  %138 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %139 = alloca i32, align 4
  %140 = mul i32 %137, 1
  store i32 %140, i32* %139, align 4
  %141 = load i32, i32* %139, align 4
  %142 = call i8* (i32, ...) @_lfortran_malloc(i32 %141)
  %143 = bitcast i8* %142 to i1*
  store i1* %143, i1** %138, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end6, %.entry
  %144 = load i32, i32* %i, align 4
  %145 = add i32 %144, 1
  %146 = load i32, i32* %dim1, align 4
  %147 = icmp sle i32 %145, %146
  br i1 %147, label %loop.body, label %loop.end7

loop.body:                                        ; preds = %loop.head
  %148 = load i32, i32* %i, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %150 = load i32, i32* %j, align 4
  %151 = add i32 %150, 1
  %152 = load i32, i32* %dim2, align 4
  %153 = icmp sle i32 %151, %152
  br i1 %153, label %loop.body2, label %loop.end6

loop.body2:                                       ; preds = %loop.head1
  %154 = load i32, i32* %j, align 4
  %155 = add i32 %154, 1
  store i32 %155, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %156 = load i32, i32* %k, align 4
  %157 = add i32 %156, 1
  %158 = load i32, i32* %dim3, align 4
  %159 = icmp sle i32 %157, %158
  br i1 %159, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %160 = load i32, i32* %k, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %k, align 4
  %162 = load i32, i32* %i, align 4
  %163 = load i32, i32* %j, align 4
  %164 = load i32, i32* %k, align 4
  %165 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %166 = load %dimension_descriptor*, %dimension_descriptor** %165, align 8
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 %162, %169
  %171 = mul i32 1, %170
  %172 = add i32 0, %171
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = mul i32 1, %174
  %176 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 1
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = sub i32 %163, %178
  %180 = mul i32 %175, %179
  %181 = add i32 %172, %180
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 %175, %183
  %185 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 2
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = sub i32 %164, %187
  %189 = mul i32 %184, %188
  %190 = add i32 %181, %189
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 3
  %192 = load i32, i32* %191, align 4
  %193 = mul i32 %184, %192
  %194 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %195 = load i1*, i1** %194, align 8
  %196 = getelementptr inbounds i1, i1* %195, i32 %190
  %197 = load i32, i32* %i, align 4
  %198 = load i32, i32* %j, align 4
  %199 = add i32 %197, %198
  %200 = load i32, i32* %k, align 4
  %201 = add i32 %199, %200
  store i32 %201, i32* %call_arg_value, align 4
  %202 = call i1 @modulo2(i32* %call_arg_value)
  store i1 %202, i1* %196, align 1
  %203 = load i32, i32* %i, align 4
  %204 = load i32, i32* %j, align 4
  %205 = load i32, i32* %k, align 4
  %206 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %207 = load %dimension_descriptor*, %dimension_descriptor** %206, align 8
  %208 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %207, i32 0
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %208, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = sub i32 %203, %210
  %212 = mul i32 1, %211
  %213 = add i32 0, %212
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %208, i32 0, i32 3
  %215 = load i32, i32* %214, align 4
  %216 = mul i32 1, %215
  %217 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %207, i32 1
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %204, %219
  %221 = mul i32 %216, %220
  %222 = add i32 %213, %221
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 3
  %224 = load i32, i32* %223, align 4
  %225 = mul i32 %216, %224
  %226 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %207, i32 2
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = sub i32 %205, %228
  %230 = mul i32 %225, %229
  %231 = add i32 %222, %230
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 3
  %233 = load i32, i32* %232, align 4
  %234 = mul i32 %225, %233
  %235 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %236 = load i1*, i1** %235, align 8
  %237 = getelementptr inbounds i1, i1* %236, i32 %231
  %238 = load i32, i32* %i, align 4
  %239 = load i32, i32* %j, align 4
  %240 = mul i32 %238, %239
  %241 = load i32, i32* %j, align 4
  %242 = load i32, i32* %k, align 4
  %243 = mul i32 %241, %242
  %244 = add i32 %240, %243
  %245 = load i32, i32* %k, align 4
  %246 = load i32, i32* %j, align 4
  %247 = mul i32 %245, %246
  %248 = add i32 %244, %247
  store i32 %248, i32* %call_arg_value5, align 4
  %249 = call i1 @modulo2(i32* %call_arg_value5)
  store i1 %249, i1* %237, align 1
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end6:                                        ; preds = %loop.head1
  br label %loop.head

loop.end7:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %250 = alloca %dimension_descriptor*, align 8
  %251 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %252 = load %dimension_descriptor*, %dimension_descriptor** %251, align 8
  store %dimension_descriptor* %252, %dimension_descriptor** %250, align 8
  %253 = alloca i32, align 4
  store i32 1, i32* %253, align 4
  %254 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %250, i32* %253)
  %255 = sub i32 %254, 1
  store i32 %255, i32* %"1_t", align 4
  br label %loop.head8

loop.head8:                                       ; preds = %loop.end15, %loop.end7
  %256 = load i32, i32* %"1_t", align 4
  %257 = add i32 %256, 1
  %258 = alloca %dimension_descriptor*, align 8
  %259 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %260 = load %dimension_descriptor*, %dimension_descriptor** %259, align 8
  store %dimension_descriptor* %260, %dimension_descriptor** %258, align 8
  %261 = alloca i32, align 4
  store i32 1, i32* %261, align 4
  %262 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %258, i32* %261)
  %263 = icmp sle i32 %257, %262
  br i1 %263, label %loop.body9, label %loop.end16

loop.body9:                                       ; preds = %loop.head8
  %264 = load i32, i32* %"1_t", align 4
  %265 = add i32 %264, 1
  store i32 %265, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %266 = alloca %dimension_descriptor*, align 8
  %267 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %268 = load %dimension_descriptor*, %dimension_descriptor** %267, align 8
  store %dimension_descriptor* %268, %dimension_descriptor** %266, align 8
  %269 = alloca i32, align 4
  store i32 2, i32* %269, align 4
  %270 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %266, i32* %269)
  %271 = sub i32 %270, 1
  store i32 %271, i32* %"2_t", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.body9
  %272 = load i32, i32* %"2_t", align 4
  %273 = add i32 %272, 1
  %274 = alloca %dimension_descriptor*, align 8
  %275 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %276 = load %dimension_descriptor*, %dimension_descriptor** %275, align 8
  store %dimension_descriptor* %276, %dimension_descriptor** %274, align 8
  %277 = alloca i32, align 4
  store i32 2, i32* %277, align 4
  %278 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %274, i32* %277)
  %279 = icmp sle i32 %273, %278
  br i1 %279, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %280 = load i32, i32* %"2_t", align 4
  %281 = add i32 %280, 1
  store i32 %281, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %282 = alloca %dimension_descriptor*, align 8
  %283 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %284 = load %dimension_descriptor*, %dimension_descriptor** %283, align 8
  store %dimension_descriptor* %284, %dimension_descriptor** %282, align 8
  %285 = alloca i32, align 4
  store i32 3, i32* %285, align 4
  %286 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %282, i32* %285)
  %287 = sub i32 %286, 1
  store i32 %287, i32* %"3_t", align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %288 = load i32, i32* %"3_t", align 4
  %289 = add i32 %288, 1
  %290 = alloca %dimension_descriptor*, align 8
  %291 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %292 = load %dimension_descriptor*, %dimension_descriptor** %291, align 8
  store %dimension_descriptor* %292, %dimension_descriptor** %290, align 8
  %293 = alloca i32, align 4
  store i32 3, i32* %293, align 4
  %294 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %290, i32* %293)
  %295 = icmp sle i32 %289, %294
  br i1 %295, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %296 = load i32, i32* %"3_t", align 4
  %297 = add i32 %296, 1
  store i32 %297, i32* %"3_t", align 4
  %298 = load i32, i32* %"1_t", align 4
  %299 = load i32, i32* %"2_t", align 4
  %300 = load i32, i32* %"3_t", align 4
  %301 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %302 = load %dimension_descriptor*, %dimension_descriptor** %301, align 8
  %303 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %302, i32 0
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 %298, %305
  %307 = mul i32 1, %306
  %308 = add i32 0, %307
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = mul i32 1, %310
  %312 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %302, i32 1
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %312, i32 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = sub i32 %299, %314
  %316 = mul i32 %311, %315
  %317 = add i32 %308, %316
  %318 = getelementptr %dimension_descriptor, %dimension_descriptor* %312, i32 0, i32 3
  %319 = load i32, i32* %318, align 4
  %320 = mul i32 %311, %319
  %321 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %302, i32 2
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %321, i32 0, i32 1
  %323 = load i32, i32* %322, align 4
  %324 = sub i32 %300, %323
  %325 = mul i32 %320, %324
  %326 = add i32 %317, %325
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %321, i32 0, i32 3
  %328 = load i32, i32* %327, align 4
  %329 = mul i32 %320, %328
  %330 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %331 = load i1*, i1** %330, align 8
  %332 = getelementptr inbounds i1, i1* %331, i32 %326
  %333 = load i32, i32* %"1_v", align 4
  %334 = load i32, i32* %"2_v", align 4
  %335 = load i32, i32* %"3_v", align 4
  %336 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %337 = load %dimension_descriptor*, %dimension_descriptor** %336, align 8
  %338 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %337, i32 0
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = sub i32 %333, %340
  %342 = mul i32 1, %341
  %343 = add i32 0, %342
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 3
  %345 = load i32, i32* %344, align 4
  %346 = mul i32 1, %345
  %347 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %337, i32 1
  %348 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = sub i32 %334, %349
  %351 = mul i32 %346, %350
  %352 = add i32 %343, %351
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 3
  %354 = load i32, i32* %353, align 4
  %355 = mul i32 %346, %354
  %356 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %337, i32 2
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 %335, %358
  %360 = mul i32 %355, %359
  %361 = add i32 %352, %360
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 3
  %363 = load i32, i32* %362, align 4
  %364 = mul i32 %355, %363
  %365 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %366 = load i1*, i1** %365, align 8
  %367 = getelementptr inbounds i1, i1* %366, i32 %361
  %368 = load i1, i1* %367, align 1
  %369 = load i32, i32* %"1_v", align 4
  %370 = load i32, i32* %"2_v", align 4
  %371 = load i32, i32* %"3_v", align 4
  %372 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %373 = load %dimension_descriptor*, %dimension_descriptor** %372, align 8
  %374 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %373, i32 0
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = sub i32 %369, %376
  %378 = mul i32 1, %377
  %379 = add i32 0, %378
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 3
  %381 = load i32, i32* %380, align 4
  %382 = mul i32 1, %381
  %383 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %373, i32 1
  %384 = getelementptr %dimension_descriptor, %dimension_descriptor* %383, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = sub i32 %370, %385
  %387 = mul i32 %382, %386
  %388 = add i32 %379, %387
  %389 = getelementptr %dimension_descriptor, %dimension_descriptor* %383, i32 0, i32 3
  %390 = load i32, i32* %389, align 4
  %391 = mul i32 %382, %390
  %392 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %373, i32 2
  %393 = getelementptr %dimension_descriptor, %dimension_descriptor* %392, i32 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = sub i32 %371, %394
  %396 = mul i32 %391, %395
  %397 = add i32 %388, %396
  %398 = getelementptr %dimension_descriptor, %dimension_descriptor* %392, i32 0, i32 3
  %399 = load i32, i32* %398, align 4
  %400 = mul i32 %391, %399
  %401 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %402 = load i1*, i1** %401, align 8
  %403 = getelementptr inbounds i1, i1* %402, i32 %397
  %404 = load i1, i1* %403, align 1
  %405 = and i1 %368, %404
  store i1 %405, i1* %332, align 1
  %406 = load i32, i32* %"3_v", align 4
  %407 = add i32 %406, 1
  store i32 %407, i32* %"3_v", align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  %408 = load i32, i32* %"2_v", align 4
  %409 = add i32 %408, 1
  store i32 %409, i32* %"2_v", align 4
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %410 = load i32, i32* %"1_v", align 4
  %411 = add i32 %410, 1
  store i32 %411, i32* %"1_v", align 4
  br label %loop.head8

loop.end16:                                       ; preds = %loop.head8
  %412 = alloca %array.0, align 8
  store i32 0, i32* %call_arg_value17, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value17)
  store i32 1, i32* %"1_v", align 4
  %413 = alloca %dimension_descriptor*, align 8
  %414 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %415 = load %dimension_descriptor*, %dimension_descriptor** %414, align 8
  store %dimension_descriptor* %415, %dimension_descriptor** %413, align 8
  %416 = alloca i32, align 4
  store i32 1, i32* %416, align 4
  %417 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %413, i32* %416)
  %418 = sub i32 %417, 1
  store i32 %418, i32* %"1_t", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end25, %loop.end16
  %419 = load i32, i32* %"1_t", align 4
  %420 = add i32 %419, 1
  %421 = alloca %dimension_descriptor*, align 8
  %422 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %423 = load %dimension_descriptor*, %dimension_descriptor** %422, align 8
  store %dimension_descriptor* %423, %dimension_descriptor** %421, align 8
  %424 = alloca i32, align 4
  store i32 1, i32* %424, align 4
  %425 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %421, i32* %424)
  %426 = icmp sle i32 %420, %425
  br i1 %426, label %loop.body19, label %loop.end26

loop.body19:                                      ; preds = %loop.head18
  %427 = load i32, i32* %"1_t", align 4
  %428 = add i32 %427, 1
  store i32 %428, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %429 = alloca %dimension_descriptor*, align 8
  %430 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %431 = load %dimension_descriptor*, %dimension_descriptor** %430, align 8
  store %dimension_descriptor* %431, %dimension_descriptor** %429, align 8
  %432 = alloca i32, align 4
  store i32 2, i32* %432, align 4
  %433 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %429, i32* %432)
  %434 = sub i32 %433, 1
  store i32 %434, i32* %"2_t", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.end24, %loop.body19
  %435 = load i32, i32* %"2_t", align 4
  %436 = add i32 %435, 1
  %437 = alloca %dimension_descriptor*, align 8
  %438 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %439 = load %dimension_descriptor*, %dimension_descriptor** %438, align 8
  store %dimension_descriptor* %439, %dimension_descriptor** %437, align 8
  %440 = alloca i32, align 4
  store i32 2, i32* %440, align 4
  %441 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %437, i32* %440)
  %442 = icmp sle i32 %436, %441
  br i1 %442, label %loop.body21, label %loop.end25

loop.body21:                                      ; preds = %loop.head20
  %443 = load i32, i32* %"2_t", align 4
  %444 = add i32 %443, 1
  store i32 %444, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %445 = alloca %dimension_descriptor*, align 8
  %446 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %447 = load %dimension_descriptor*, %dimension_descriptor** %446, align 8
  store %dimension_descriptor* %447, %dimension_descriptor** %445, align 8
  %448 = alloca i32, align 4
  store i32 3, i32* %448, align 4
  %449 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %445, i32* %448)
  %450 = sub i32 %449, 1
  store i32 %450, i32* %"3_t", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.body21
  %451 = load i32, i32* %"3_t", align 4
  %452 = add i32 %451, 1
  %453 = alloca %dimension_descriptor*, align 8
  %454 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %455 = load %dimension_descriptor*, %dimension_descriptor** %454, align 8
  store %dimension_descriptor* %455, %dimension_descriptor** %453, align 8
  %456 = alloca i32, align 4
  store i32 3, i32* %456, align 4
  %457 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %453, i32* %456)
  %458 = icmp sle i32 %452, %457
  br i1 %458, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %459 = load i32, i32* %"3_t", align 4
  %460 = add i32 %459, 1
  store i32 %460, i32* %"3_t", align 4
  %461 = load i32, i32* %"1_t", align 4
  %462 = load i32, i32* %"2_t", align 4
  %463 = load i32, i32* %"3_t", align 4
  %464 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %465 = load %dimension_descriptor*, %dimension_descriptor** %464, align 8
  %466 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %465, i32 0
  %467 = getelementptr %dimension_descriptor, %dimension_descriptor* %466, i32 0, i32 1
  %468 = load i32, i32* %467, align 4
  %469 = sub i32 %461, %468
  %470 = mul i32 1, %469
  %471 = add i32 0, %470
  %472 = getelementptr %dimension_descriptor, %dimension_descriptor* %466, i32 0, i32 3
  %473 = load i32, i32* %472, align 4
  %474 = mul i32 1, %473
  %475 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %465, i32 1
  %476 = getelementptr %dimension_descriptor, %dimension_descriptor* %475, i32 0, i32 1
  %477 = load i32, i32* %476, align 4
  %478 = sub i32 %462, %477
  %479 = mul i32 %474, %478
  %480 = add i32 %471, %479
  %481 = getelementptr %dimension_descriptor, %dimension_descriptor* %475, i32 0, i32 3
  %482 = load i32, i32* %481, align 4
  %483 = mul i32 %474, %482
  %484 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %465, i32 2
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = sub i32 %463, %486
  %488 = mul i32 %483, %487
  %489 = add i32 %480, %488
  %490 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 3
  %491 = load i32, i32* %490, align 4
  %492 = mul i32 %483, %491
  %493 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %494 = load i1*, i1** %493, align 8
  %495 = getelementptr inbounds i1, i1* %494, i32 %489
  %496 = load i32, i32* %"1_v", align 4
  %497 = load i32, i32* %"2_v", align 4
  %498 = load i32, i32* %"3_v", align 4
  %499 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %500 = load %dimension_descriptor*, %dimension_descriptor** %499, align 8
  %501 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %500, i32 0
  %502 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 1
  %503 = load i32, i32* %502, align 4
  %504 = sub i32 %496, %503
  %505 = mul i32 1, %504
  %506 = add i32 0, %505
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 3
  %508 = load i32, i32* %507, align 4
  %509 = mul i32 1, %508
  %510 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %500, i32 1
  %511 = getelementptr %dimension_descriptor, %dimension_descriptor* %510, i32 0, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = sub i32 %497, %512
  %514 = mul i32 %509, %513
  %515 = add i32 %506, %514
  %516 = getelementptr %dimension_descriptor, %dimension_descriptor* %510, i32 0, i32 3
  %517 = load i32, i32* %516, align 4
  %518 = mul i32 %509, %517
  %519 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %500, i32 2
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %519, i32 0, i32 1
  %521 = load i32, i32* %520, align 4
  %522 = sub i32 %498, %521
  %523 = mul i32 %518, %522
  %524 = add i32 %515, %523
  %525 = getelementptr %dimension_descriptor, %dimension_descriptor* %519, i32 0, i32 3
  %526 = load i32, i32* %525, align 4
  %527 = mul i32 %518, %526
  %528 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %529 = load i1*, i1** %528, align 8
  %530 = getelementptr inbounds i1, i1* %529, i32 %524
  %531 = load i1, i1* %530, align 1
  %532 = load i32, i32* %"1_v", align 4
  %533 = load i32, i32* %"2_v", align 4
  %534 = load i32, i32* %"3_v", align 4
  %535 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %536 = load %dimension_descriptor*, %dimension_descriptor** %535, align 8
  %537 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %536, i32 0
  %538 = getelementptr %dimension_descriptor, %dimension_descriptor* %537, i32 0, i32 1
  %539 = load i32, i32* %538, align 4
  %540 = sub i32 %532, %539
  %541 = mul i32 1, %540
  %542 = add i32 0, %541
  %543 = getelementptr %dimension_descriptor, %dimension_descriptor* %537, i32 0, i32 3
  %544 = load i32, i32* %543, align 4
  %545 = mul i32 1, %544
  %546 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %536, i32 1
  %547 = getelementptr %dimension_descriptor, %dimension_descriptor* %546, i32 0, i32 1
  %548 = load i32, i32* %547, align 4
  %549 = sub i32 %533, %548
  %550 = mul i32 %545, %549
  %551 = add i32 %542, %550
  %552 = getelementptr %dimension_descriptor, %dimension_descriptor* %546, i32 0, i32 3
  %553 = load i32, i32* %552, align 4
  %554 = mul i32 %545, %553
  %555 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %536, i32 2
  %556 = getelementptr %dimension_descriptor, %dimension_descriptor* %555, i32 0, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = sub i32 %534, %557
  %559 = mul i32 %554, %558
  %560 = add i32 %551, %559
  %561 = getelementptr %dimension_descriptor, %dimension_descriptor* %555, i32 0, i32 3
  %562 = load i32, i32* %561, align 4
  %563 = mul i32 %554, %562
  %564 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %565 = load i1*, i1** %564, align 8
  %566 = getelementptr inbounds i1, i1* %565, i32 %560
  %567 = load i1, i1* %566, align 1
  %568 = or i1 %531, %567
  store i1 %568, i1* %495, align 1
  %569 = load i32, i32* %"3_v", align 4
  %570 = add i32 %569, 1
  store i32 %570, i32* %"3_v", align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %571 = load i32, i32* %"2_v", align 4
  %572 = add i32 %571, 1
  store i32 %572, i32* %"2_v", align 4
  br label %loop.head20

loop.end25:                                       ; preds = %loop.head20
  %573 = load i32, i32* %"1_v", align 4
  %574 = add i32 %573, 1
  store i32 %574, i32* %"1_v", align 4
  br label %loop.head18

loop.end26:                                       ; preds = %loop.head18
  %575 = alloca %array.0, align 8
  store i32 1, i32* %call_arg_value27, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value27)
  store i32 1, i32* %"1_v", align 4
  %576 = alloca %dimension_descriptor*, align 8
  %577 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %578 = load %dimension_descriptor*, %dimension_descriptor** %577, align 8
  store %dimension_descriptor* %578, %dimension_descriptor** %576, align 8
  %579 = alloca i32, align 4
  store i32 1, i32* %579, align 4
  %580 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %576, i32* %579)
  %581 = sub i32 %580, 1
  store i32 %581, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end35, %loop.end26
  %582 = load i32, i32* %"1_t", align 4
  %583 = add i32 %582, 1
  %584 = alloca %dimension_descriptor*, align 8
  %585 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %586 = load %dimension_descriptor*, %dimension_descriptor** %585, align 8
  store %dimension_descriptor* %586, %dimension_descriptor** %584, align 8
  %587 = alloca i32, align 4
  store i32 1, i32* %587, align 4
  %588 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %584, i32* %587)
  %589 = icmp sle i32 %583, %588
  br i1 %589, label %loop.body29, label %loop.end36

loop.body29:                                      ; preds = %loop.head28
  %590 = load i32, i32* %"1_t", align 4
  %591 = add i32 %590, 1
  store i32 %591, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %592 = alloca %dimension_descriptor*, align 8
  %593 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %594 = load %dimension_descriptor*, %dimension_descriptor** %593, align 8
  store %dimension_descriptor* %594, %dimension_descriptor** %592, align 8
  %595 = alloca i32, align 4
  store i32 2, i32* %595, align 4
  %596 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %592, i32* %595)
  %597 = sub i32 %596, 1
  store i32 %597, i32* %"2_t", align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end34, %loop.body29
  %598 = load i32, i32* %"2_t", align 4
  %599 = add i32 %598, 1
  %600 = alloca %dimension_descriptor*, align 8
  %601 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %602 = load %dimension_descriptor*, %dimension_descriptor** %601, align 8
  store %dimension_descriptor* %602, %dimension_descriptor** %600, align 8
  %603 = alloca i32, align 4
  store i32 2, i32* %603, align 4
  %604 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %600, i32* %603)
  %605 = icmp sle i32 %599, %604
  br i1 %605, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %606 = load i32, i32* %"2_t", align 4
  %607 = add i32 %606, 1
  store i32 %607, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %608 = alloca %dimension_descriptor*, align 8
  %609 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %610 = load %dimension_descriptor*, %dimension_descriptor** %609, align 8
  store %dimension_descriptor* %610, %dimension_descriptor** %608, align 8
  %611 = alloca i32, align 4
  store i32 3, i32* %611, align 4
  %612 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %608, i32* %611)
  %613 = sub i32 %612, 1
  store i32 %613, i32* %"3_t", align 4
  br label %loop.head32

loop.head32:                                      ; preds = %loop.body33, %loop.body31
  %614 = load i32, i32* %"3_t", align 4
  %615 = add i32 %614, 1
  %616 = alloca %dimension_descriptor*, align 8
  %617 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %618 = load %dimension_descriptor*, %dimension_descriptor** %617, align 8
  store %dimension_descriptor* %618, %dimension_descriptor** %616, align 8
  %619 = alloca i32, align 4
  store i32 3, i32* %619, align 4
  %620 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %616, i32* %619)
  %621 = icmp sle i32 %615, %620
  br i1 %621, label %loop.body33, label %loop.end34

loop.body33:                                      ; preds = %loop.head32
  %622 = load i32, i32* %"3_t", align 4
  %623 = add i32 %622, 1
  store i32 %623, i32* %"3_t", align 4
  %624 = load i32, i32* %"1_t", align 4
  %625 = load i32, i32* %"2_t", align 4
  %626 = load i32, i32* %"3_t", align 4
  %627 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %628 = load %dimension_descriptor*, %dimension_descriptor** %627, align 8
  %629 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %628, i32 0
  %630 = getelementptr %dimension_descriptor, %dimension_descriptor* %629, i32 0, i32 1
  %631 = load i32, i32* %630, align 4
  %632 = sub i32 %624, %631
  %633 = mul i32 1, %632
  %634 = add i32 0, %633
  %635 = getelementptr %dimension_descriptor, %dimension_descriptor* %629, i32 0, i32 3
  %636 = load i32, i32* %635, align 4
  %637 = mul i32 1, %636
  %638 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %628, i32 1
  %639 = getelementptr %dimension_descriptor, %dimension_descriptor* %638, i32 0, i32 1
  %640 = load i32, i32* %639, align 4
  %641 = sub i32 %625, %640
  %642 = mul i32 %637, %641
  %643 = add i32 %634, %642
  %644 = getelementptr %dimension_descriptor, %dimension_descriptor* %638, i32 0, i32 3
  %645 = load i32, i32* %644, align 4
  %646 = mul i32 %637, %645
  %647 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %628, i32 2
  %648 = getelementptr %dimension_descriptor, %dimension_descriptor* %647, i32 0, i32 1
  %649 = load i32, i32* %648, align 4
  %650 = sub i32 %626, %649
  %651 = mul i32 %646, %650
  %652 = add i32 %643, %651
  %653 = getelementptr %dimension_descriptor, %dimension_descriptor* %647, i32 0, i32 3
  %654 = load i32, i32* %653, align 4
  %655 = mul i32 %646, %654
  %656 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %657 = load i1*, i1** %656, align 8
  %658 = getelementptr inbounds i1, i1* %657, i32 %652
  %659 = load i32, i32* %"1_v", align 4
  %660 = load i32, i32* %"2_v", align 4
  %661 = load i32, i32* %"3_v", align 4
  %662 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %663 = load %dimension_descriptor*, %dimension_descriptor** %662, align 8
  %664 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %663, i32 0
  %665 = getelementptr %dimension_descriptor, %dimension_descriptor* %664, i32 0, i32 1
  %666 = load i32, i32* %665, align 4
  %667 = sub i32 %659, %666
  %668 = mul i32 1, %667
  %669 = add i32 0, %668
  %670 = getelementptr %dimension_descriptor, %dimension_descriptor* %664, i32 0, i32 3
  %671 = load i32, i32* %670, align 4
  %672 = mul i32 1, %671
  %673 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %663, i32 1
  %674 = getelementptr %dimension_descriptor, %dimension_descriptor* %673, i32 0, i32 1
  %675 = load i32, i32* %674, align 4
  %676 = sub i32 %660, %675
  %677 = mul i32 %672, %676
  %678 = add i32 %669, %677
  %679 = getelementptr %dimension_descriptor, %dimension_descriptor* %673, i32 0, i32 3
  %680 = load i32, i32* %679, align 4
  %681 = mul i32 %672, %680
  %682 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %663, i32 2
  %683 = getelementptr %dimension_descriptor, %dimension_descriptor* %682, i32 0, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = sub i32 %661, %684
  %686 = mul i32 %681, %685
  %687 = add i32 %678, %686
  %688 = getelementptr %dimension_descriptor, %dimension_descriptor* %682, i32 0, i32 3
  %689 = load i32, i32* %688, align 4
  %690 = mul i32 %681, %689
  %691 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %692 = load i1*, i1** %691, align 8
  %693 = getelementptr inbounds i1, i1* %692, i32 %687
  %694 = load i1, i1* %693, align 1
  %695 = load i32, i32* %"1_v", align 4
  %696 = load i32, i32* %"2_v", align 4
  %697 = load i32, i32* %"3_v", align 4
  %698 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %699 = load %dimension_descriptor*, %dimension_descriptor** %698, align 8
  %700 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %699, i32 0
  %701 = getelementptr %dimension_descriptor, %dimension_descriptor* %700, i32 0, i32 1
  %702 = load i32, i32* %701, align 4
  %703 = sub i32 %695, %702
  %704 = mul i32 1, %703
  %705 = add i32 0, %704
  %706 = getelementptr %dimension_descriptor, %dimension_descriptor* %700, i32 0, i32 3
  %707 = load i32, i32* %706, align 4
  %708 = mul i32 1, %707
  %709 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %699, i32 1
  %710 = getelementptr %dimension_descriptor, %dimension_descriptor* %709, i32 0, i32 1
  %711 = load i32, i32* %710, align 4
  %712 = sub i32 %696, %711
  %713 = mul i32 %708, %712
  %714 = add i32 %705, %713
  %715 = getelementptr %dimension_descriptor, %dimension_descriptor* %709, i32 0, i32 3
  %716 = load i32, i32* %715, align 4
  %717 = mul i32 %708, %716
  %718 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %699, i32 2
  %719 = getelementptr %dimension_descriptor, %dimension_descriptor* %718, i32 0, i32 1
  %720 = load i32, i32* %719, align 4
  %721 = sub i32 %697, %720
  %722 = mul i32 %717, %721
  %723 = add i32 %714, %722
  %724 = getelementptr %dimension_descriptor, %dimension_descriptor* %718, i32 0, i32 3
  %725 = load i32, i32* %724, align 4
  %726 = mul i32 %717, %725
  %727 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %728 = load i1*, i1** %727, align 8
  %729 = getelementptr inbounds i1, i1* %728, i32 %723
  %730 = load i1, i1* %729, align 1
  %731 = xor i1 %694, %730
  %732 = xor i1 %731, true
  store i1 %732, i1* %658, align 1
  %733 = load i32, i32* %"3_v", align 4
  %734 = add i32 %733, 1
  store i32 %734, i32* %"3_v", align 4
  br label %loop.head32

loop.end34:                                       ; preds = %loop.head32
  %735 = load i32, i32* %"2_v", align 4
  %736 = add i32 %735, 1
  store i32 %736, i32* %"2_v", align 4
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  %737 = load i32, i32* %"1_v", align 4
  %738 = add i32 %737, 1
  store i32 %738, i32* %"1_v", align 4
  br label %loop.head28

loop.end36:                                       ; preds = %loop.head28
  %739 = alloca %array.0, align 8
  store i32 2, i32* %call_arg_value37, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value37)
  store i32 1, i32* %"1_v", align 4
  %740 = alloca %dimension_descriptor*, align 8
  %741 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %742 = load %dimension_descriptor*, %dimension_descriptor** %741, align 8
  store %dimension_descriptor* %742, %dimension_descriptor** %740, align 8
  %743 = alloca i32, align 4
  store i32 1, i32* %743, align 4
  %744 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %740, i32* %743)
  %745 = sub i32 %744, 1
  store i32 %745, i32* %"1_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.end45, %loop.end36
  %746 = load i32, i32* %"1_t", align 4
  %747 = add i32 %746, 1
  %748 = alloca %dimension_descriptor*, align 8
  %749 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %750 = load %dimension_descriptor*, %dimension_descriptor** %749, align 8
  store %dimension_descriptor* %750, %dimension_descriptor** %748, align 8
  %751 = alloca i32, align 4
  store i32 1, i32* %751, align 4
  %752 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %748, i32* %751)
  %753 = icmp sle i32 %747, %752
  br i1 %753, label %loop.body39, label %loop.end46

loop.body39:                                      ; preds = %loop.head38
  %754 = load i32, i32* %"1_t", align 4
  %755 = add i32 %754, 1
  store i32 %755, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %756 = alloca %dimension_descriptor*, align 8
  %757 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %758 = load %dimension_descriptor*, %dimension_descriptor** %757, align 8
  store %dimension_descriptor* %758, %dimension_descriptor** %756, align 8
  %759 = alloca i32, align 4
  store i32 2, i32* %759, align 4
  %760 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %756, i32* %759)
  %761 = sub i32 %760, 1
  store i32 %761, i32* %"2_t", align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %loop.body39
  %762 = load i32, i32* %"2_t", align 4
  %763 = add i32 %762, 1
  %764 = alloca %dimension_descriptor*, align 8
  %765 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %766 = load %dimension_descriptor*, %dimension_descriptor** %765, align 8
  store %dimension_descriptor* %766, %dimension_descriptor** %764, align 8
  %767 = alloca i32, align 4
  store i32 2, i32* %767, align 4
  %768 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %764, i32* %767)
  %769 = icmp sle i32 %763, %768
  br i1 %769, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %770 = load i32, i32* %"2_t", align 4
  %771 = add i32 %770, 1
  store i32 %771, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %772 = alloca %dimension_descriptor*, align 8
  %773 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %774 = load %dimension_descriptor*, %dimension_descriptor** %773, align 8
  store %dimension_descriptor* %774, %dimension_descriptor** %772, align 8
  %775 = alloca i32, align 4
  store i32 3, i32* %775, align 4
  %776 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %772, i32* %775)
  %777 = sub i32 %776, 1
  store i32 %777, i32* %"3_t", align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %778 = load i32, i32* %"3_t", align 4
  %779 = add i32 %778, 1
  %780 = alloca %dimension_descriptor*, align 8
  %781 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %782 = load %dimension_descriptor*, %dimension_descriptor** %781, align 8
  store %dimension_descriptor* %782, %dimension_descriptor** %780, align 8
  %783 = alloca i32, align 4
  store i32 3, i32* %783, align 4
  %784 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %780, i32* %783)
  %785 = icmp sle i32 %779, %784
  br i1 %785, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %786 = load i32, i32* %"3_t", align 4
  %787 = add i32 %786, 1
  store i32 %787, i32* %"3_t", align 4
  %788 = load i32, i32* %"1_t", align 4
  %789 = load i32, i32* %"2_t", align 4
  %790 = load i32, i32* %"3_t", align 4
  %791 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %792 = load %dimension_descriptor*, %dimension_descriptor** %791, align 8
  %793 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %792, i32 0
  %794 = getelementptr %dimension_descriptor, %dimension_descriptor* %793, i32 0, i32 1
  %795 = load i32, i32* %794, align 4
  %796 = sub i32 %788, %795
  %797 = mul i32 1, %796
  %798 = add i32 0, %797
  %799 = getelementptr %dimension_descriptor, %dimension_descriptor* %793, i32 0, i32 3
  %800 = load i32, i32* %799, align 4
  %801 = mul i32 1, %800
  %802 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %792, i32 1
  %803 = getelementptr %dimension_descriptor, %dimension_descriptor* %802, i32 0, i32 1
  %804 = load i32, i32* %803, align 4
  %805 = sub i32 %789, %804
  %806 = mul i32 %801, %805
  %807 = add i32 %798, %806
  %808 = getelementptr %dimension_descriptor, %dimension_descriptor* %802, i32 0, i32 3
  %809 = load i32, i32* %808, align 4
  %810 = mul i32 %801, %809
  %811 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %792, i32 2
  %812 = getelementptr %dimension_descriptor, %dimension_descriptor* %811, i32 0, i32 1
  %813 = load i32, i32* %812, align 4
  %814 = sub i32 %790, %813
  %815 = mul i32 %810, %814
  %816 = add i32 %807, %815
  %817 = getelementptr %dimension_descriptor, %dimension_descriptor* %811, i32 0, i32 3
  %818 = load i32, i32* %817, align 4
  %819 = mul i32 %810, %818
  %820 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %821 = load i1*, i1** %820, align 8
  %822 = getelementptr inbounds i1, i1* %821, i32 %816
  %823 = load i32, i32* %"1_v", align 4
  %824 = load i32, i32* %"2_v", align 4
  %825 = load i32, i32* %"3_v", align 4
  %826 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %827 = load %dimension_descriptor*, %dimension_descriptor** %826, align 8
  %828 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %827, i32 0
  %829 = getelementptr %dimension_descriptor, %dimension_descriptor* %828, i32 0, i32 1
  %830 = load i32, i32* %829, align 4
  %831 = sub i32 %823, %830
  %832 = mul i32 1, %831
  %833 = add i32 0, %832
  %834 = getelementptr %dimension_descriptor, %dimension_descriptor* %828, i32 0, i32 3
  %835 = load i32, i32* %834, align 4
  %836 = mul i32 1, %835
  %837 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %827, i32 1
  %838 = getelementptr %dimension_descriptor, %dimension_descriptor* %837, i32 0, i32 1
  %839 = load i32, i32* %838, align 4
  %840 = sub i32 %824, %839
  %841 = mul i32 %836, %840
  %842 = add i32 %833, %841
  %843 = getelementptr %dimension_descriptor, %dimension_descriptor* %837, i32 0, i32 3
  %844 = load i32, i32* %843, align 4
  %845 = mul i32 %836, %844
  %846 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %827, i32 2
  %847 = getelementptr %dimension_descriptor, %dimension_descriptor* %846, i32 0, i32 1
  %848 = load i32, i32* %847, align 4
  %849 = sub i32 %825, %848
  %850 = mul i32 %845, %849
  %851 = add i32 %842, %850
  %852 = getelementptr %dimension_descriptor, %dimension_descriptor* %846, i32 0, i32 3
  %853 = load i32, i32* %852, align 4
  %854 = mul i32 %845, %853
  %855 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %856 = load i1*, i1** %855, align 8
  %857 = getelementptr inbounds i1, i1* %856, i32 %851
  %858 = load i1, i1* %857, align 1
  %859 = load i32, i32* %"1_v", align 4
  %860 = load i32, i32* %"2_v", align 4
  %861 = load i32, i32* %"3_v", align 4
  %862 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %863 = load %dimension_descriptor*, %dimension_descriptor** %862, align 8
  %864 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %863, i32 0
  %865 = getelementptr %dimension_descriptor, %dimension_descriptor* %864, i32 0, i32 1
  %866 = load i32, i32* %865, align 4
  %867 = sub i32 %859, %866
  %868 = mul i32 1, %867
  %869 = add i32 0, %868
  %870 = getelementptr %dimension_descriptor, %dimension_descriptor* %864, i32 0, i32 3
  %871 = load i32, i32* %870, align 4
  %872 = mul i32 1, %871
  %873 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %863, i32 1
  %874 = getelementptr %dimension_descriptor, %dimension_descriptor* %873, i32 0, i32 1
  %875 = load i32, i32* %874, align 4
  %876 = sub i32 %860, %875
  %877 = mul i32 %872, %876
  %878 = add i32 %869, %877
  %879 = getelementptr %dimension_descriptor, %dimension_descriptor* %873, i32 0, i32 3
  %880 = load i32, i32* %879, align 4
  %881 = mul i32 %872, %880
  %882 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %863, i32 2
  %883 = getelementptr %dimension_descriptor, %dimension_descriptor* %882, i32 0, i32 1
  %884 = load i32, i32* %883, align 4
  %885 = sub i32 %861, %884
  %886 = mul i32 %881, %885
  %887 = add i32 %878, %886
  %888 = getelementptr %dimension_descriptor, %dimension_descriptor* %882, i32 0, i32 3
  %889 = load i32, i32* %888, align 4
  %890 = mul i32 %881, %889
  %891 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %892 = load i1*, i1** %891, align 8
  %893 = getelementptr inbounds i1, i1* %892, i32 %887
  %894 = load i1, i1* %893, align 1
  %895 = xor i1 %858, %894
  store i1 %895, i1* %822, align 1
  %896 = load i32, i32* %"3_v", align 4
  %897 = add i32 %896, 1
  store i32 %897, i32* %"3_v", align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %898 = load i32, i32* %"2_v", align 4
  %899 = add i32 %898, 1
  store i32 %899, i32* %"2_v", align 4
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %900 = load i32, i32* %"1_v", align 4
  %901 = add i32 %900, 1
  store i32 %901, i32* %"1_v", align 4
  br label %loop.head38

loop.end46:                                       ; preds = %loop.head38
  %902 = alloca %array.0, align 8
  store i32 3, i32* %call_arg_value47, align 4
  call void @verify(%array.0* %c, i32* %call_arg_value47)
  %903 = load %array.0, %array.0* %a, align 8
  %904 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %905 = load i1, i1* %904, align 1
  br i1 %905, label %then, label %else

then:                                             ; preds = %loop.end46
  %906 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %907 = load i1*, i1** %906, align 8
  %908 = alloca i8*, align 8
  %909 = bitcast i1* %907 to i8*
  store i8* %909, i8** %908, align 8
  %910 = load i8*, i8** %908, align 8
  call void (i8*, ...) @_lfortran_free(i8* %910)
  %911 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %911, align 1
  br label %ifcont

else:                                             ; preds = %loop.end46
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %912 = load %array.0, %array.0* %b, align 8
  %913 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %914 = load i1, i1* %913, align 1
  br i1 %914, label %then48, label %else49

then48:                                           ; preds = %ifcont
  %915 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %916 = load i1*, i1** %915, align 8
  %917 = alloca i8*, align 8
  %918 = bitcast i1* %916 to i8*
  store i8* %918, i8** %917, align 8
  %919 = load i8*, i8** %917, align 8
  call void (i8*, ...) @_lfortran_free(i8* %919)
  %920 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %920, align 1
  br label %ifcont50

else49:                                           ; preds = %ifcont
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %921 = load %array.0, %array.0* %c, align 8
  %922 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %923 = load i1, i1* %922, align 1
  br i1 %923, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %924 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %925 = load i1*, i1** %924, align 8
  %926 = alloca i8*, align 8
  %927 = bitcast i1* %925 to i8*
  store i8* %927, i8** %926, align 8
  %928 = load i8*, i8** %926, align 8
  call void (i8*, ...) @_lfortran_free(i8* %928)
  %929 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %929, align 1
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)
