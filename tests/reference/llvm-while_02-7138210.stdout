; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %0 = load i32, i32* %i, align 4
  %1 = icmp slt i32 %0, 10
  br i1 %1, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  store i32 %3, i32* %i, align 4
  %4 = load i32, i32* %j, align 4
  %5 = load i32, i32* %i, align 4
  %6 = add i32 %4, %5
  store i32 %6, i32* %j, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %7 = load i32, i32* %j, align 4
  %8 = icmp ne i32 %7, 55
  br i1 %8, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %9 = load i32, i32* %i, align 4
  %10 = icmp ne i32 %9, 10
  br i1 %10, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head5

loop.head5:                                       ; preds = %ifcont9, %ifcont3
  %11 = load i32, i32* %i, align 4
  %12 = icmp slt i32 %11, 10
  br i1 %12, label %loop.body6, label %loop.end11

loop.body6:                                       ; preds = %loop.head5
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %i, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %then7, label %else8

then7:                                            ; preds = %loop.body6
  br label %loop.end11

dead_block:                                       ; No predecessors!
  br label %ifcont9

else8:                                            ; preds = %loop.body6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %dead_block
  %iftmp10 = phi i32 [ 1, %dead_block ], [ 2, %else8 ]
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %17, %18
  store i32 %19, i32* %j, align 4
  br label %loop.head5

loop.end11:                                       ; preds = %then7, %loop.head5
  %20 = load i32, i32* %j, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %22 = load i32, i32* %i, align 4
  %23 = icmp ne i32 %22, 2
  br i1 %23, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head20

loop.head20:                                      ; preds = %ifcont25, %then22, %ifcont18
  %24 = load i32, i32* %i, align 4
  %25 = icmp slt i32 %24, 10
  br i1 %25, label %loop.body21, label %loop.end27

loop.body21:                                      ; preds = %loop.head20
  %26 = load i32, i32* %i, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %i, align 4
  %28 = load i32, i32* %i, align 4
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %then22, label %else24

then22:                                           ; preds = %loop.body21
  br label %loop.head20

dead_block23:                                     ; No predecessors!
  br label %ifcont25

else24:                                           ; preds = %loop.body21
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %dead_block23
  %iftmp26 = phi i32 [ 1, %dead_block23 ], [ 2, %else24 ]
  %30 = load i32, i32* %j, align 4
  %31 = load i32, i32* %i, align 4
  %32 = add i32 %30, %31
  store i32 %32, i32* %j, align 4
  br label %loop.head20

loop.end27:                                       ; preds = %loop.head20
  %33 = load i32, i32* %j, align 4
  %34 = icmp ne i32 %33, 53
  br i1 %34, label %then28, label %else29

then28:                                           ; preds = %loop.end27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %loop.end27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %iftmp31 = phi i32 [ 1, %then28 ], [ 2, %else29 ]
  %35 = load i32, i32* %i, align 4
  %36 = icmp ne i32 %35, 10
  br i1 %36, label %then32, label %else33

then32:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont34

else33:                                           ; preds = %ifcont30
  br label %ifcont34

ifcont34:                                         ; preds = %else33, %then32
  %iftmp35 = phi i32 [ 1, %then32 ], [ 2, %else33 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
