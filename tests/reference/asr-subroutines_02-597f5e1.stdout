(TranslationUnit (SymbolTable 1 {subroutines_02: (Program (SymbolTable 2 {f: (Subroutine (SymbolTable 3 {a: (Variable 3 a In () () Default (Integer 4 []) Source Public Required .false.), b: (Variable 3 b Out () () Default (Integer 4 []) Source Public Required .false.)}) f [(Var 3 a) (Var 3 b)] [(= (Var 3 b) (BinOp (Var 3 a) Add (ConstantInteger 1 (Integer 4 [])) (Integer 4 []) ()))] Source Public Implementation ()), g: (Subroutine (SymbolTable 4 {a: (Variable 4 a In () () Default (Integer 4 []) Source Public Required .false.), b: (Variable 4 b Out () () Default (Integer 4 []) Source Public Required .false.)}) g [(Var 4 a) (Var 4 b)] [(= (Var 4 b) (BinOp (Var 4 a) Sub (ConstantInteger 1 (Integer 4 [])) (Integer 4 []) ()))] Source Public Implementation ()), h: (Subroutine (SymbolTable 5 {a: (Variable 5 a In () () Default (Integer 4 []) Source Public Required .false.), b: (Variable 5 b Out () () Default (Integer 4 []) Source Public Required .false.)}) h [(Var 5 a) (Var 5 b)] [(SubroutineCall 2 g () [(Var 5 a) (Var 5 b)] ())] Source Public Implementation ()), i: (Variable 2 i Local () () Default (Integer 4 []) Source Public Required .false.), j: (Variable 2 j Local () () Default (Integer 4 []) Source Public Required .false.)}) subroutines_02 [] [(= (Var 2 i) (ConstantInteger 1 (Integer 4 []))) (= (Var 2 j) (ConstantInteger 1 (Integer 4 []))) (SubroutineCall 2 f () [(Var 2 i) (Var 2 j)] ()) (If (Compare (Var 2 i) NotEq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) ()) [(ErrorStop ())] []) (If (Compare (Var 2 j) NotEq (ConstantInteger 2 (Integer 4 [])) (Logical 4 []) ()) [(ErrorStop ())] []) (SubroutineCall 2 g () [(Var 2 i) (Var 2 j)] ()) (If (Compare (Var 2 i) NotEq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) ()) [(ErrorStop ())] []) (If (Compare (Var 2 j) NotEq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) ()) [(ErrorStop ())] []) (SubroutineCall 2 h () [(Var 2 i) (Var 2 j)] ()) (If (Compare (Var 2 i) NotEq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) ()) [(ErrorStop ())] []) (If (Compare (Var 2 j) NotEq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) ()) [(ErrorStop ())] [])])}) [])
