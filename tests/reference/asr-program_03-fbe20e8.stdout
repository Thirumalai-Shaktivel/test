(TranslationUnit (SymbolTable 1 {closuretest: (Program (SymbolTable 2 {add_z: (Function (SymbolTable 5 {x: (Variable 5 x Unspecified () Default (Integer 4 []) Source Public Required), y: (Variable 5 y ReturnVar () Default (Integer 4 []) Source Public Required)}) add_z [(Var 5 x)] [(= (Var 5 y) (BinOp (Var 5 x) Add (Var 2 z) (Integer 4 [])))] (Var 5 y) Source Public Implementation), apply: (Function (SymbolTable 3 {fun: (Function (SymbolTable 4 {fun: (Variable 4 fun ReturnVar () Default (Integer 4 []) Source Public Required), x: (Variable 4 x Unspecified () Default (Integer 4 []) Source Public Required)}) fun [(Var 4 x)] [] (Var 4 fun) Source Public Interface), x: (Variable 3 x Unspecified () Default (Integer 4 []) Source Public Required), y: (Variable 3 y ReturnVar () Default (Integer 4 []) Source Public Required)}) apply [(Var 3 fun) (Var 3 x)] [(= (Var 3 y) (FunctionCall 3 fun () [(Var 3 x)] [] (Integer 4 [])))] (Var 3 y) Source Public Implementation), z: (Variable 2 z Local () Default (Integer 4 []) Source Public Required)}) closuretest [] [(DoLoop ((Var 2 z) (ConstantInteger 1 (Integer 4 [])) (ConstantInteger 10 (Integer 4 [])) ()) [(Print () [(FunctionCall 2 apply () [(Var 2 add_z) (ConstantInteger 1 (Integer 4 []))] [] (Integer 4 []))])])])}) [])
