(TranslationUnit (SymbolTable 1 {bits_01: (Program (SymbolTable 2 {ibclr: (ExternalSymbol 2 ibclr 6 ibclr lfortran_intrinsic_bit [] ibclr Private), ibclr@ibclr32: (ExternalSymbol 2 ibclr@ibclr32 6 ibclr32 lfortran_intrinsic_bit [] ibclr32 Private), ibclr@ibclr64: (ExternalSymbol 2 ibclr@ibclr64 6 ibclr64 lfortran_intrinsic_bit [] ibclr64 Private), ibset: (ExternalSymbol 2 ibset 6 ibset lfortran_intrinsic_bit [] ibset Private), ibset@ibset32: (ExternalSymbol 2 ibset@ibset32 6 ibset32 lfortran_intrinsic_bit [] ibset32 Private), ibset@ibset64: (ExternalSymbol 2 ibset@ibset64 6 ibset64 lfortran_intrinsic_bit [] ibset64 Private), int32: (ExternalSymbol 2 int32 4 int32 lfortran_intrinsic_iso_fortran_env [] int32 Public), int64: (ExternalSymbol 2 int64 4 int64 lfortran_intrinsic_iso_fortran_env [] int64 Public)}) bits_01 [iso_fortran_env] [(If (Compare (FunctionCall 2 ibclr@ibclr32 2 ibclr [(ConstantInteger 3 (Integer 4 [])) (ConstantInteger 0 (Integer 4 []))] [] (Integer 4 []) (ConstantInteger 2 (Integer 4 [])) ()) NotEq (ConstantInteger 2 (Integer 4 [])) (Logical 4 []) (ConstantLogical .false. (Integer 4 [])) ()) [(ErrorStop ())] []) (If (Compare (FunctionCall 2 ibclr@ibclr64 2 ibclr [(ConstantInteger 4 (Integer 8 [])) (ConstantInteger 1 (Integer 4 []))] [] (Integer 8 []) (ConstantInteger 4 (Integer 8 [])) ()) NotEq (ConstantInteger 4 (Integer 8 [])) (Logical 4 []) (ConstantLogical .false. (Integer 8 [])) ()) [(ErrorStop ())] []) (If (Compare (FunctionCall 2 ibset@ibset32 2 ibset [(ConstantInteger 1 (Integer 4 [])) (ConstantInteger 2 (Integer 4 []))] [] (Integer 4 []) (ConstantInteger 5 (Integer 4 [])) ()) NotEq (ConstantInteger 5 (Integer 4 [])) (Logical 4 []) (ConstantLogical .false. (Integer 4 [])) ()) [(ErrorStop ())] []) (If (Compare (FunctionCall 2 ibset@ibset64 2 ibset [(ConstantInteger 2 (Integer 8 [])) (ConstantInteger 3 (Integer 4 []))] [] (Integer 8 []) (ConstantInteger 10 (Integer 8 [])) ()) NotEq (ConstantInteger 10 (Integer 8 [])) (Logical 4 []) (ConstantLogical .false. (Integer 8 [])) ()) [(ErrorStop ())] [])]), iso_fortran_env: (IntrinsicModule lfortran_intrinsic_iso_fortran_env), lfortran_intrinsic_bit: (IntrinsicModule lfortran_intrinsic_bit)}) [])
