; ModuleID = 'LFortran'
source_filename = "LFortran"

%c_ptr = type { i32 }

@0 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@1 = private unnamed_addr constant [9 x i8] c"%23.17f\0A\00", align 1

declare i8* @__module_lfortran_intrinsic_array_char(i32*)

declare void @__module_lfortran_intrinsic_iso_c_binding_c_f_pointer(%c_ptr*, i32*)

define double @__module_lfortran_intrinsic_math_dsin(double* %x) {
.entry:
  %r = alloca double, align 8
  %0 = load double, double* %x, align 8
  %1 = call double @_lfortran_dsin(double %0)
  store double %1, double* %r, align 8
  br label %return

return:                                           ; preds = %.entry
  %2 = load double, double* %r, align 8
  ret double %2
}

declare double @_lfortran_dsin(double)

define i32 @main() {
.entry:
  %x = alloca double, align 8
  store double 0x3FEFEB7A9B2C6D8B, double* %x, align 8
  %0 = load double, double* %x, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i32 0, i32 0), double %0)
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
