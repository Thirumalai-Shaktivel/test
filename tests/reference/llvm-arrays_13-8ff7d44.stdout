; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { float*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { i32*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @check_real(%array** %r) {
.entry:
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %0 = load %array*, %array** %r, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %5, 1
  store i32 %6, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %.entry
  %7 = load i32, i32* %u, align 4
  %8 = add i32 %7, 1
  %9 = load %array*, %array** %r, align 8
  %10 = getelementptr %array, %array* %9, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  %18 = sub i32 %17, 1
  %19 = icmp sle i32 %8, %18
  br i1 %19, label %loop.body, label %loop.end3

loop.body:                                        ; preds = %loop.head
  %20 = load i32, i32* %u, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %u, align 4
  %22 = load %array*, %array** %r, align 8
  %23 = getelementptr %array, %array* %22, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %27, 1
  store i32 %28, i32* %v, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %ifcont, %loop.body
  %29 = load i32, i32* %v, align 4
  %30 = add i32 %29, 1
  %31 = load %array*, %array** %r, align 8
  %32 = getelementptr %array, %array* %31, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = icmp sle i32 %30, %40
  br i1 %41, label %loop.body2, label %loop.end

loop.body2:                                       ; preds = %loop.head1
  %42 = load i32, i32* %v, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %v, align 4
  %44 = load i32, i32* %u, align 4
  %45 = load i32, i32* %v, align 4
  %46 = load %array*, %array** %r, align 8
  %47 = getelementptr %array, %array* %46, i32 0, i32 2
  %48 = load %dimension_descriptor*, %dimension_descriptor** %47, align 8
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %44, %51
  %53 = mul i32 1, %52
  %54 = add i32 0, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 1, %56
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 %45, %60
  %62 = mul i32 %57, %61
  %63 = add i32 %54, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %57, %65
  %67 = getelementptr %array, %array* %46, i32 0, i32 0
  %68 = load float*, float** %67, align 8
  %69 = getelementptr inbounds float, float* %68, i32 %63
  %70 = load float, float* %69, align 4
  %71 = load i32, i32* %u, align 4
  %72 = load i32, i32* %v, align 4
  %73 = mul i32 %71, %72
  %74 = sitofp i32 %73 to float
  %75 = fcmp une float %70, %74
  br i1 %75, label %then, label %else

then:                                             ; preds = %loop.body2
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body2
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  br label %loop.head

loop.end3:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end3
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %i = alloca %array.0*, align 8
  %iv = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %iv, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %iv, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array.0, %array.0* %iv, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = sub i32 2, %11
  %13 = add i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = alloca i32, align 4
  store i32 2, i32* %14, align 4
  %15 = getelementptr %array.0, %array.0* %iv, i32 0, i32 0
  %16 = load i32, i32* %14, align 4
  %17 = alloca i32, i32 %16, align 4
  store i32* %17, i32** %15, align 8
  %r = alloca %array*, align 8
  %rv = alloca %array, align 8
  %18 = getelementptr %array, %array* %rv, i32 0, i32 1
  store i32 0, i32* %18, align 4
  %19 = getelementptr %array, %array* %rv, i32 0, i32 2
  %20 = alloca i32, align 4
  store i32 2, i32* %20, align 4
  %21 = load i32, i32* %20, align 4
  %22 = alloca %dimension_descriptor, i32 %21, align 8
  %23 = getelementptr %array, %array* %rv, i32 0, i32 4
  store i32 2, i32* %23, align 4
  store %dimension_descriptor* %22, %dimension_descriptor** %19, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = sub i32 2, %29
  %31 = add i32 %30, 1
  store i32 %31, i32* %28, align 4
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  store i32 1, i32* %33, align 4
  store i32 1, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = sub i32 3, %36
  %38 = add i32 %37, 1
  store i32 %38, i32* %35, align 4
  %39 = alloca i32, align 4
  store i32 6, i32* %39, align 4
  %40 = getelementptr %array, %array* %rv, i32 0, i32 0
  %41 = load i32, i32* %39, align 4
  %42 = alloca float, i32 %41, align 4
  store float* %42, float** %40, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store %array.0* %iv, %array.0** %i, align 8
  store %array* %rv, %array** %r, align 8
  %43 = load %array.0*, %array.0** %i, align 8
  %44 = getelementptr %array.0, %array.0* %43, i32 0, i32 2
  %45 = load %dimension_descriptor*, %dimension_descriptor** %44, align 8
  %46 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 1, %48
  %50 = mul i32 1, %49
  %51 = add i32 0, %50
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 1, %53
  %55 = getelementptr %array.0, %array.0* %43, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds i32, i32* %56, i32 %51
  store i32 1, i32* %57, align 4
  %58 = load %array.0*, %array.0** %i, align 8
  %59 = getelementptr %array.0, %array.0* %58, i32 0, i32 2
  %60 = load %dimension_descriptor*, %dimension_descriptor** %59, align 8
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 1, %63
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 1, %68
  %70 = getelementptr %array.0, %array.0* %58, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i32 %66
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 1
  br i1 %74, label %then, label %else

then:                                             ; preds = %.entry
  %75 = load %array.0*, %array.0** %i, align 8
  %76 = getelementptr %array.0, %array.0* %75, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 2, %80
  %82 = mul i32 1, %81
  %83 = add i32 0, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 1, %85
  %87 = getelementptr %array.0, %array.0* %75, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds i32, i32* %88, i32 %83
  store i32 3, i32* %89, align 4
  br label %ifcont

else:                                             ; preds = %.entry
  %90 = load %array.0*, %array.0** %i, align 8
  %91 = getelementptr %array.0, %array.0* %90, i32 0, i32 2
  %92 = load %dimension_descriptor*, %dimension_descriptor** %91, align 8
  %93 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sub i32 2, %95
  %97 = mul i32 1, %96
  %98 = add i32 0, %97
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 1, %100
  %102 = getelementptr %array.0, %array.0* %90, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds i32, i32* %103, i32 %98
  store i32 7, i32* %104, align 4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %105 = getelementptr %array.0, %array.0* %iv, i32 0, i32 2
  %106 = load %dimension_descriptor*, %dimension_descriptor** %105, align 8
  %107 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %106, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 1, %109
  %111 = mul i32 1, %110
  %112 = add i32 0, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 1, %114
  %116 = getelementptr %array.0, %array.0* %iv, i32 0, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = getelementptr inbounds i32, i32* %117, i32 %112
  %119 = load i32, i32* %118, align 4
  %120 = icmp ne i32 %119, 1
  br i1 %120, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %121 = getelementptr %array.0, %array.0* %iv, i32 0, i32 2
  %122 = load %dimension_descriptor*, %dimension_descriptor** %121, align 8
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 2, %125
  %127 = mul i32 1, %126
  %128 = add i32 0, %127
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = mul i32 1, %130
  %132 = getelementptr %array.0, %array.0* %iv, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = getelementptr inbounds i32, i32* %133, i32 %128
  %135 = load i32, i32* %134, align 4
  %136 = icmp ne i32 %135, 7
  br i1 %136, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %137 = load %array*, %array** %r, align 8
  %138 = getelementptr %array, %array* %137, i32 0, i32 2
  %139 = load %dimension_descriptor*, %dimension_descriptor** %138, align 8
  %140 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %139, i32 0
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = sub i32 %142, 1
  store i32 %143, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %ifcont6
  %144 = load i32, i32* %u, align 4
  %145 = add i32 %144, 1
  %146 = load %array*, %array** %r, align 8
  %147 = getelementptr %array, %array* %146, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  %149 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %148, i32 0
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, %151
  %155 = sub i32 %154, 1
  %156 = icmp sle i32 %145, %155
  br i1 %156, label %loop.body, label %loop.end9

loop.body:                                        ; preds = %loop.head
  %157 = load i32, i32* %u, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %u, align 4
  %159 = load %array*, %array** %r, align 8
  %160 = getelementptr %array, %array* %159, i32 0, i32 2
  %161 = load %dimension_descriptor*, %dimension_descriptor** %160, align 8
  %162 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %161, i32 1
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 %164, 1
  store i32 %165, i32* %v, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.body
  %166 = load i32, i32* %v, align 4
  %167 = add i32 %166, 1
  %168 = load %array*, %array** %r, align 8
  %169 = getelementptr %array, %array* %168, i32 0, i32 2
  %170 = load %dimension_descriptor*, %dimension_descriptor** %169, align 8
  %171 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %170, i32 1
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = add i32 %175, %173
  %177 = sub i32 %176, 1
  %178 = icmp sle i32 %167, %177
  br i1 %178, label %loop.body8, label %loop.end

loop.body8:                                       ; preds = %loop.head7
  %179 = load i32, i32* %v, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %v, align 4
  %181 = load i32, i32* %u, align 4
  %182 = load i32, i32* %v, align 4
  %183 = getelementptr %array, %array* %rv, i32 0, i32 2
  %184 = load %dimension_descriptor*, %dimension_descriptor** %183, align 8
  %185 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %184, i32 0
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = sub i32 %181, %187
  %189 = mul i32 1, %188
  %190 = add i32 0, %189
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = mul i32 1, %192
  %194 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %184, i32 1
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 %182, %196
  %198 = mul i32 %193, %197
  %199 = add i32 %190, %198
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 %193, %201
  %203 = getelementptr %array, %array* %rv, i32 0, i32 0
  %204 = load float*, float** %203, align 8
  %205 = getelementptr inbounds float, float* %204, i32 %199
  %206 = load i32, i32* %u, align 4
  %207 = load i32, i32* %v, align 4
  %208 = mul i32 %206, %207
  %209 = sitofp i32 %208 to float
  store float %209, float* %205, align 4
  br label %loop.head7

loop.end:                                         ; preds = %loop.head7
  br label %loop.head

loop.end9:                                        ; preds = %loop.head
  call void @check_real(%array** %r)
  ret i32 0
}
