; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { double*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = sub i32 3, %11
  %13 = add i32 %12, 1
  store i32 %13, i32* %10, align 4
  %14 = alloca i32, align 4
  store i32 3, i32* %14, align 4
  %15 = getelementptr %array, %array* %a, i32 0, i32 0
  %16 = load i32, i32* %14, align 4
  %17 = alloca double, i32 %16, align 8
  store double* %17, double** %15, align 8
  %b = alloca %array, align 8
  %18 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %18, align 4
  %19 = getelementptr %array, %array* %b, i32 0, i32 2
  %20 = alloca i32, align 4
  store i32 1, i32* %20, align 4
  %21 = load i32, i32* %20, align 4
  %22 = alloca %dimension_descriptor, i32 %21, align 8
  %23 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %23, align 4
  store %dimension_descriptor* %22, %dimension_descriptor** %19, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = sub i32 4, %29
  %31 = add i32 %30, 1
  store i32 %31, i32* %28, align 4
  %32 = alloca i32, align 4
  store i32 4, i32* %32, align 4
  %33 = getelementptr %array, %array* %b, i32 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = alloca double, i32 %34, align 8
  store double* %35, double** %33, align 8
  %c = alloca %array.0, align 8
  %36 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %36, align 4
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = alloca i32, align 4
  store i32 2, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = alloca %dimension_descriptor, i32 %39, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 2, i32* %41, align 4
  store %dimension_descriptor* %40, %dimension_descriptor** %37, align 8
  %42 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  %47 = load i32, i32* %45, align 4
  %48 = sub i32 2, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %46, align 4
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 2
  store i32 1, i32* %51, align 4
  store i32 1, i32* %52, align 4
  %54 = load i32, i32* %52, align 4
  %55 = sub i32 2, %54
  %56 = add i32 %55, 1
  store i32 %56, i32* %53, align 4
  %57 = alloca i32, align 4
  store i32 4, i32* %57, align 4
  %58 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %59 = load i32, i32* %57, align 4
  %60 = alloca double, i32 %59, align 8
  store double* %60, double** %58, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %61 = load i32, i32* %i, align 4
  %62 = add i32 %61, 1
  %63 = icmp sle i32 %62, 3
  br i1 %63, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %64 = load i32, i32* %i, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %i, align 4
  %66 = load i32, i32* %i, align 4
  %67 = getelementptr %array, %array* %a, i32 0, i32 2
  %68 = load %dimension_descriptor*, %dimension_descriptor** %67, align 8
  %69 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 %66, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr %array, %array* %a, i32 0, i32 0
  %79 = load double*, double** %78, align 8
  %80 = getelementptr inbounds double, double* %79, i32 %74
  %81 = load i32, i32* %i, align 4
  %82 = add i32 %81, 10
  %83 = sitofp i32 %82 to double
  store double %83, double* %80, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %84 = getelementptr %array, %array* %a, i32 0, i32 2
  %85 = load %dimension_descriptor*, %dimension_descriptor** %84, align 8
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %85, i32 0
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sub i32 1, %88
  %90 = mul i32 1, %89
  %91 = add i32 0, %90
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = mul i32 1, %93
  %95 = getelementptr %array, %array* %a, i32 0, i32 0
  %96 = load double*, double** %95, align 8
  %97 = getelementptr inbounds double, double* %96, i32 %91
  %98 = load double, double* %97, align 8
  %99 = fcmp une double %98, 1.100000e+01
  br i1 %99, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %100 = getelementptr %array, %array* %a, i32 0, i32 2
  %101 = load %dimension_descriptor*, %dimension_descriptor** %100, align 8
  %102 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %101, i32 0
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = sub i32 2, %104
  %106 = mul i32 1, %105
  %107 = add i32 0, %106
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 1, %109
  %111 = getelementptr %array, %array* %a, i32 0, i32 0
  %112 = load double*, double** %111, align 8
  %113 = getelementptr inbounds double, double* %112, i32 %107
  %114 = load double, double* %113, align 8
  %115 = fcmp une double %114, 1.200000e+01
  br i1 %115, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %116 = getelementptr %array, %array* %a, i32 0, i32 2
  %117 = load %dimension_descriptor*, %dimension_descriptor** %116, align 8
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sub i32 3, %120
  %122 = mul i32 1, %121
  %123 = add i32 0, %122
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 1, %125
  %127 = getelementptr %array, %array* %a, i32 0, i32 0
  %128 = load double*, double** %127, align 8
  %129 = getelementptr inbounds double, double* %128, i32 %123
  %130 = load double, double* %129, align 8
  %131 = fcmp une double %130, 1.300000e+01
  br i1 %131, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %132 = load i32, i32* %i, align 4
  %133 = add i32 %132, 1
  %134 = icmp sle i32 %133, 14
  br i1 %134, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %135 = load i32, i32* %i, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %i, align 4
  %137 = load i32, i32* %i, align 4
  %138 = sub i32 %137, 10
  %139 = getelementptr %array, %array* %b, i32 0, i32 2
  %140 = load %dimension_descriptor*, %dimension_descriptor** %139, align 8
  %141 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %140, i32 0
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = sub i32 %138, %143
  %145 = mul i32 1, %144
  %146 = add i32 0, %145
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = mul i32 1, %148
  %150 = getelementptr %array, %array* %b, i32 0, i32 0
  %151 = load double*, double** %150, align 8
  %152 = getelementptr inbounds double, double* %151, i32 %146
  %153 = load i32, i32* %i, align 4
  %154 = sitofp i32 %153 to double
  store double %154, double* %152, align 8
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %155 = getelementptr %array, %array* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 1, %159
  %161 = mul i32 1, %160
  %162 = add i32 0, %161
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 1, %164
  %166 = getelementptr %array, %array* %b, i32 0, i32 0
  %167 = load double*, double** %166, align 8
  %168 = getelementptr inbounds double, double* %167, i32 %162
  %169 = load double, double* %168, align 8
  %170 = fcmp une double %169, 1.100000e+01
  br i1 %170, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %171 = getelementptr %array, %array* %b, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  %173 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %172, i32 0
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = sub i32 2, %175
  %177 = mul i32 1, %176
  %178 = add i32 0, %177
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 2
  %180 = load i32, i32* %179, align 4
  %181 = mul i32 1, %180
  %182 = getelementptr %array, %array* %b, i32 0, i32 0
  %183 = load double*, double** %182, align 8
  %184 = getelementptr inbounds double, double* %183, i32 %178
  %185 = load double, double* %184, align 8
  %186 = fcmp une double %185, 1.200000e+01
  br i1 %186, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %187 = getelementptr %array, %array* %b, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 3, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr %array, %array* %b, i32 0, i32 0
  %199 = load double*, double** %198, align 8
  %200 = getelementptr inbounds double, double* %199, i32 %194
  %201 = load double, double* %200, align 8
  %202 = fcmp une double %201, 1.300000e+01
  br i1 %202, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %203 = getelementptr %array, %array* %b, i32 0, i32 2
  %204 = load %dimension_descriptor*, %dimension_descriptor** %203, align 8
  %205 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %204, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 4, %207
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 1, %212
  %214 = getelementptr %array, %array* %b, i32 0, i32 0
  %215 = load double*, double** %214, align 8
  %216 = getelementptr inbounds double, double* %215, i32 %210
  %217 = load double, double* %216, align 8
  %218 = fcmp une double %217, 1.400000e+01
  br i1 %218, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %219 = load i32, i32* %i, align 4
  %220 = add i32 %219, 1
  %221 = icmp sle i32 %220, 3
  br i1 %221, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %222 = load i32, i32* %i, align 4
  %223 = add i32 %222, 1
  store i32 %223, i32* %i, align 4
  %224 = load i32, i32* %i, align 4
  %225 = getelementptr %array, %array* %b, i32 0, i32 2
  %226 = load %dimension_descriptor*, %dimension_descriptor** %225, align 8
  %227 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %226, i32 0
  %228 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = sub i32 %224, %229
  %231 = mul i32 1, %230
  %232 = add i32 0, %231
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 2
  %234 = load i32, i32* %233, align 4
  %235 = mul i32 1, %234
  %236 = getelementptr %array, %array* %b, i32 0, i32 0
  %237 = load double*, double** %236, align 8
  %238 = getelementptr inbounds double, double* %237, i32 %232
  %239 = load i32, i32* %i, align 4
  %240 = getelementptr %array, %array* %a, i32 0, i32 2
  %241 = load %dimension_descriptor*, %dimension_descriptor** %240, align 8
  %242 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %241, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 %239, %244
  %246 = mul i32 1, %245
  %247 = add i32 0, %246
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 1, %249
  %251 = getelementptr %array, %array* %a, i32 0, i32 0
  %252 = load double*, double** %251, align 8
  %253 = getelementptr inbounds double, double* %252, i32 %247
  %254 = load double, double* %253, align 8
  %255 = fsub double %254, 1.000000e+01
  store double %255, double* %238, align 8
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %256 = getelementptr %array, %array* %b, i32 0, i32 2
  %257 = load %dimension_descriptor*, %dimension_descriptor** %256, align 8
  %258 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %257, i32 0
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = sub i32 1, %260
  %262 = mul i32 1, %261
  %263 = add i32 0, %262
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 2
  %265 = load i32, i32* %264, align 4
  %266 = mul i32 1, %265
  %267 = getelementptr %array, %array* %b, i32 0, i32 0
  %268 = load double*, double** %267, align 8
  %269 = getelementptr inbounds double, double* %268, i32 %263
  %270 = load double, double* %269, align 8
  %271 = fcmp une double %270, 1.000000e+00
  br i1 %271, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %272 = getelementptr %array, %array* %b, i32 0, i32 2
  %273 = load %dimension_descriptor*, %dimension_descriptor** %272, align 8
  %274 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %273, i32 0
  %275 = getelementptr %dimension_descriptor, %dimension_descriptor* %274, i32 0, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = sub i32 2, %276
  %278 = mul i32 1, %277
  %279 = add i32 0, %278
  %280 = getelementptr %dimension_descriptor, %dimension_descriptor* %274, i32 0, i32 2
  %281 = load i32, i32* %280, align 4
  %282 = mul i32 1, %281
  %283 = getelementptr %array, %array* %b, i32 0, i32 0
  %284 = load double*, double** %283, align 8
  %285 = getelementptr inbounds double, double* %284, i32 %279
  %286 = load double, double* %285, align 8
  %287 = fcmp une double %286, 2.000000e+00
  br i1 %287, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %288 = getelementptr %array, %array* %b, i32 0, i32 2
  %289 = load %dimension_descriptor*, %dimension_descriptor** %288, align 8
  %290 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %289, i32 0
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %290, i32 0, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = sub i32 3, %292
  %294 = mul i32 1, %293
  %295 = add i32 0, %294
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %290, i32 0, i32 2
  %297 = load i32, i32* %296, align 4
  %298 = mul i32 1, %297
  %299 = getelementptr %array, %array* %b, i32 0, i32 0
  %300 = load double*, double** %299, align 8
  %301 = getelementptr inbounds double, double* %300, i32 %295
  %302 = load double, double* %301, align 8
  %303 = fcmp une double %302, 3.000000e+00
  br i1 %303, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %304 = getelementptr %array, %array* %b, i32 0, i32 2
  %305 = load %dimension_descriptor*, %dimension_descriptor** %304, align 8
  %306 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 0
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 4, %308
  %310 = mul i32 1, %309
  %311 = add i32 0, %310
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 2
  %313 = load i32, i32* %312, align 4
  %314 = mul i32 1, %313
  %315 = getelementptr %array, %array* %b, i32 0, i32 0
  %316 = load double*, double** %315, align 8
  %317 = getelementptr inbounds double, double* %316, i32 %311
  %318 = getelementptr %array, %array* %b, i32 0, i32 2
  %319 = load %dimension_descriptor*, %dimension_descriptor** %318, align 8
  %320 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %319, i32 0
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = sub i32 1, %322
  %324 = mul i32 1, %323
  %325 = add i32 0, %324
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 2
  %327 = load i32, i32* %326, align 4
  %328 = mul i32 1, %327
  %329 = getelementptr %array, %array* %b, i32 0, i32 0
  %330 = load double*, double** %329, align 8
  %331 = getelementptr inbounds double, double* %330, i32 %325
  %332 = load double, double* %331, align 8
  %333 = getelementptr %array, %array* %b, i32 0, i32 2
  %334 = load %dimension_descriptor*, %dimension_descriptor** %333, align 8
  %335 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %334, i32 0
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 2, %337
  %339 = mul i32 1, %338
  %340 = add i32 0, %339
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 2
  %342 = load i32, i32* %341, align 4
  %343 = mul i32 1, %342
  %344 = getelementptr %array, %array* %b, i32 0, i32 0
  %345 = load double*, double** %344, align 8
  %346 = getelementptr inbounds double, double* %345, i32 %340
  %347 = load double, double* %346, align 8
  %348 = fadd double %332, %347
  %349 = getelementptr %array, %array* %b, i32 0, i32 2
  %350 = load %dimension_descriptor*, %dimension_descriptor** %349, align 8
  %351 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %350, i32 0
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = sub i32 3, %353
  %355 = mul i32 1, %354
  %356 = add i32 0, %355
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 2
  %358 = load i32, i32* %357, align 4
  %359 = mul i32 1, %358
  %360 = getelementptr %array, %array* %b, i32 0, i32 0
  %361 = load double*, double** %360, align 8
  %362 = getelementptr inbounds double, double* %361, i32 %356
  %363 = load double, double* %362, align 8
  %364 = fadd double %348, %363
  %365 = getelementptr %array, %array* %a, i32 0, i32 2
  %366 = load %dimension_descriptor*, %dimension_descriptor** %365, align 8
  %367 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %366, i32 0
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %367, i32 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = sub i32 1, %369
  %371 = mul i32 1, %370
  %372 = add i32 0, %371
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %367, i32 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = mul i32 1, %374
  %376 = getelementptr %array, %array* %a, i32 0, i32 0
  %377 = load double*, double** %376, align 8
  %378 = getelementptr inbounds double, double* %377, i32 %372
  %379 = load double, double* %378, align 8
  %380 = fadd double %364, %379
  store double %380, double* %317, align 8
  %381 = getelementptr %array, %array* %b, i32 0, i32 2
  %382 = load %dimension_descriptor*, %dimension_descriptor** %381, align 8
  %383 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %382, i32 0
  %384 = getelementptr %dimension_descriptor, %dimension_descriptor* %383, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = sub i32 4, %385
  %387 = mul i32 1, %386
  %388 = add i32 0, %387
  %389 = getelementptr %dimension_descriptor, %dimension_descriptor* %383, i32 0, i32 2
  %390 = load i32, i32* %389, align 4
  %391 = mul i32 1, %390
  %392 = getelementptr %array, %array* %b, i32 0, i32 0
  %393 = load double*, double** %392, align 8
  %394 = getelementptr inbounds double, double* %393, i32 %388
  %395 = load double, double* %394, align 8
  %396 = fcmp une double %395, 1.700000e+01
  br i1 %396, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %397 = getelementptr %array, %array* %b, i32 0, i32 2
  %398 = load %dimension_descriptor*, %dimension_descriptor** %397, align 8
  %399 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %398, i32 0
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %399, i32 0, i32 1
  %401 = load i32, i32* %400, align 4
  %402 = sub i32 4, %401
  %403 = mul i32 1, %402
  %404 = add i32 0, %403
  %405 = getelementptr %dimension_descriptor, %dimension_descriptor* %399, i32 0, i32 2
  %406 = load i32, i32* %405, align 4
  %407 = mul i32 1, %406
  %408 = getelementptr %array, %array* %b, i32 0, i32 0
  %409 = load double*, double** %408, align 8
  %410 = getelementptr inbounds double, double* %409, i32 %404
  %411 = getelementptr %array, %array* %a, i32 0, i32 2
  %412 = load %dimension_descriptor*, %dimension_descriptor** %411, align 8
  %413 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %412, i32 0
  %414 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = sub i32 1, %415
  %417 = mul i32 1, %416
  %418 = add i32 0, %417
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 2
  %420 = load i32, i32* %419, align 4
  %421 = mul i32 1, %420
  %422 = getelementptr %array, %array* %a, i32 0, i32 0
  %423 = load double*, double** %422, align 8
  %424 = getelementptr inbounds double, double* %423, i32 %418
  %425 = load double, double* %424, align 8
  store double %425, double* %410, align 8
  %426 = getelementptr %array, %array* %b, i32 0, i32 2
  %427 = load %dimension_descriptor*, %dimension_descriptor** %426, align 8
  %428 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %427, i32 0
  %429 = getelementptr %dimension_descriptor, %dimension_descriptor* %428, i32 0, i32 1
  %430 = load i32, i32* %429, align 4
  %431 = sub i32 4, %430
  %432 = mul i32 1, %431
  %433 = add i32 0, %432
  %434 = getelementptr %dimension_descriptor, %dimension_descriptor* %428, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = mul i32 1, %435
  %437 = getelementptr %array, %array* %b, i32 0, i32 0
  %438 = load double*, double** %437, align 8
  %439 = getelementptr inbounds double, double* %438, i32 %433
  %440 = load double, double* %439, align 8
  %441 = fcmp une double %440, 1.100000e+01
  br i1 %441, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %442 = load i32, i32* %i, align 4
  %443 = add i32 %442, 1
  %444 = icmp sle i32 %443, 2
  br i1 %444, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %445 = load i32, i32* %i, align 4
  %446 = add i32 %445, 1
  store i32 %446, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %447 = load i32, i32* %j, align 4
  %448 = add i32 %447, 1
  %449 = icmp sle i32 %448, 2
  br i1 %449, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %450 = load i32, i32* %j, align 4
  %451 = add i32 %450, 1
  store i32 %451, i32* %j, align 4
  %452 = load i32, i32* %i, align 4
  %453 = load i32, i32* %j, align 4
  %454 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %455 = load %dimension_descriptor*, %dimension_descriptor** %454, align 8
  %456 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %455, i32 0
  %457 = getelementptr %dimension_descriptor, %dimension_descriptor* %456, i32 0, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = sub i32 %452, %458
  %460 = mul i32 1, %459
  %461 = add i32 0, %460
  %462 = getelementptr %dimension_descriptor, %dimension_descriptor* %456, i32 0, i32 2
  %463 = load i32, i32* %462, align 4
  %464 = mul i32 1, %463
  %465 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %455, i32 1
  %466 = getelementptr %dimension_descriptor, %dimension_descriptor* %465, i32 0, i32 1
  %467 = load i32, i32* %466, align 4
  %468 = sub i32 %453, %467
  %469 = mul i32 %464, %468
  %470 = add i32 %461, %469
  %471 = getelementptr %dimension_descriptor, %dimension_descriptor* %465, i32 0, i32 2
  %472 = load i32, i32* %471, align 4
  %473 = mul i32 %464, %472
  %474 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %475 = load double*, double** %474, align 8
  %476 = getelementptr inbounds double, double* %475, i32 %470
  %477 = load i32, i32* %i, align 4
  %478 = load i32, i32* %j, align 4
  %479 = add i32 %477, %478
  %480 = add i32 %479, 10
  %481 = sitofp i32 %480 to double
  store double %481, double* %476, align 8
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %482 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %483 = load %dimension_descriptor*, %dimension_descriptor** %482, align 8
  %484 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %483, i32 0
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = sub i32 1, %486
  %488 = mul i32 1, %487
  %489 = add i32 0, %488
  %490 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 2
  %491 = load i32, i32* %490, align 4
  %492 = mul i32 1, %491
  %493 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %483, i32 1
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = sub i32 1, %495
  %497 = mul i32 %492, %496
  %498 = add i32 %489, %497
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 2
  %500 = load i32, i32* %499, align 4
  %501 = mul i32 %492, %500
  %502 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %503 = load double*, double** %502, align 8
  %504 = getelementptr inbounds double, double* %503, i32 %498
  %505 = load double, double* %504, align 8
  %506 = fcmp une double %505, 1.200000e+01
  br i1 %506, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %507 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %508 = load %dimension_descriptor*, %dimension_descriptor** %507, align 8
  %509 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %508, i32 0
  %510 = getelementptr %dimension_descriptor, %dimension_descriptor* %509, i32 0, i32 1
  %511 = load i32, i32* %510, align 4
  %512 = sub i32 1, %511
  %513 = mul i32 1, %512
  %514 = add i32 0, %513
  %515 = getelementptr %dimension_descriptor, %dimension_descriptor* %509, i32 0, i32 2
  %516 = load i32, i32* %515, align 4
  %517 = mul i32 1, %516
  %518 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %508, i32 1
  %519 = getelementptr %dimension_descriptor, %dimension_descriptor* %518, i32 0, i32 1
  %520 = load i32, i32* %519, align 4
  %521 = sub i32 2, %520
  %522 = mul i32 %517, %521
  %523 = add i32 %514, %522
  %524 = getelementptr %dimension_descriptor, %dimension_descriptor* %518, i32 0, i32 2
  %525 = load i32, i32* %524, align 4
  %526 = mul i32 %517, %525
  %527 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %528 = load double*, double** %527, align 8
  %529 = getelementptr inbounds double, double* %528, i32 %523
  %530 = load double, double* %529, align 8
  %531 = fcmp une double %530, 1.300000e+01
  br i1 %531, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %532 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %533 = load %dimension_descriptor*, %dimension_descriptor** %532, align 8
  %534 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %533, i32 0
  %535 = getelementptr %dimension_descriptor, %dimension_descriptor* %534, i32 0, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = sub i32 2, %536
  %538 = mul i32 1, %537
  %539 = add i32 0, %538
  %540 = getelementptr %dimension_descriptor, %dimension_descriptor* %534, i32 0, i32 2
  %541 = load i32, i32* %540, align 4
  %542 = mul i32 1, %541
  %543 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %533, i32 1
  %544 = getelementptr %dimension_descriptor, %dimension_descriptor* %543, i32 0, i32 1
  %545 = load i32, i32* %544, align 4
  %546 = sub i32 1, %545
  %547 = mul i32 %542, %546
  %548 = add i32 %539, %547
  %549 = getelementptr %dimension_descriptor, %dimension_descriptor* %543, i32 0, i32 2
  %550 = load i32, i32* %549, align 4
  %551 = mul i32 %542, %550
  %552 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %553 = load double*, double** %552, align 8
  %554 = getelementptr inbounds double, double* %553, i32 %548
  %555 = load double, double* %554, align 8
  %556 = fcmp une double %555, 1.300000e+01
  br i1 %556, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %557 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %558 = load %dimension_descriptor*, %dimension_descriptor** %557, align 8
  %559 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %558, i32 0
  %560 = getelementptr %dimension_descriptor, %dimension_descriptor* %559, i32 0, i32 1
  %561 = load i32, i32* %560, align 4
  %562 = sub i32 2, %561
  %563 = mul i32 1, %562
  %564 = add i32 0, %563
  %565 = getelementptr %dimension_descriptor, %dimension_descriptor* %559, i32 0, i32 2
  %566 = load i32, i32* %565, align 4
  %567 = mul i32 1, %566
  %568 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %558, i32 1
  %569 = getelementptr %dimension_descriptor, %dimension_descriptor* %568, i32 0, i32 1
  %570 = load i32, i32* %569, align 4
  %571 = sub i32 2, %570
  %572 = mul i32 %567, %571
  %573 = add i32 %564, %572
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %568, i32 0, i32 2
  %575 = load i32, i32* %574, align 4
  %576 = mul i32 %567, %575
  %577 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %578 = load double*, double** %577, align 8
  %579 = getelementptr inbounds double, double* %578, i32 %573
  %580 = load double, double* %579, align 8
  %581 = fcmp une double %580, 1.400000e+01
  br i1 %581, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
