; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { double*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array, %array* %a, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca double, i32 %18, align 8
  store double* %19, double** %17, align 8
  %b = alloca %array, align 8
  %20 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %b, i32 0, i32 2
  %22 = alloca i32, align 4
  store i32 1, i32* %22, align 4
  %23 = load i32, i32* %22, align 4
  %24 = alloca %dimension_descriptor, i32 %23, align 8
  %25 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %25, align 4
  store %dimension_descriptor* %24, %dimension_descriptor** %21, align 8
  %26 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 3
  store i32 1, i32* %28, align 4
  store i32 1, i32* %29, align 4
  store i32 4, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %29, align 4
  %34 = sub i32 %32, %33
  %35 = add i32 %34, 1
  store i32 %35, i32* %31, align 4
  %36 = alloca i32, align 4
  store i32 4, i32* %36, align 4
  %37 = getelementptr %array, %array* %b, i32 0, i32 0
  %38 = load i32, i32* %36, align 4
  %39 = alloca double, i32 %38, align 8
  store double* %39, double** %37, align 8
  %c = alloca %array.0, align 8
  %40 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %40, align 4
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = alloca i32, align 4
  store i32 2, i32* %42, align 4
  %43 = load i32, i32* %42, align 4
  %44 = alloca %dimension_descriptor, i32 %43, align 8
  %45 = getelementptr %array.0, %array.0* %c, i32 0, i32 4
  store i32 2, i32* %45, align 4
  store %dimension_descriptor* %44, %dimension_descriptor** %41, align 8
  %46 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %47 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %46, i32 0
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 1
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 2
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 3
  store i32 1, i32* %48, align 4
  store i32 1, i32* %49, align 4
  store i32 2, i32* %50, align 4
  %52 = load i32, i32* %50, align 4
  %53 = load i32, i32* %49, align 4
  %54 = sub i32 %52, %53
  %55 = add i32 %54, 1
  store i32 %55, i32* %51, align 4
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %46, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 3
  store i32 1, i32* %57, align 4
  store i32 1, i32* %58, align 4
  store i32 2, i32* %59, align 4
  %61 = load i32, i32* %59, align 4
  %62 = load i32, i32* %58, align 4
  %63 = sub i32 %61, %62
  %64 = add i32 %63, 1
  store i32 %64, i32* %60, align 4
  %65 = alloca i32, align 4
  store i32 4, i32* %65, align 4
  %66 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %67 = load i32, i32* %65, align 4
  %68 = alloca double, i32 %67, align 8
  store double* %68, double** %66, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %69 = load i32, i32* %i, align 4
  %70 = add i32 %69, 1
  %71 = icmp sle i32 %70, 3
  br i1 %71, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %72 = load i32, i32* %i, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %i, align 4
  %74 = load i32, i32* %i, align 4
  %75 = getelementptr %array, %array* %a, i32 0, i32 2
  %76 = load %dimension_descriptor*, %dimension_descriptor** %75, align 8
  %77 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %76, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 %74, %79
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 1, %84
  %86 = getelementptr %array, %array* %a, i32 0, i32 0
  %87 = load double*, double** %86, align 8
  %88 = getelementptr inbounds double, double* %87, i32 %82
  %89 = load i32, i32* %i, align 4
  %90 = add i32 %89, 10
  %91 = sitofp i32 %90 to double
  store double %91, double* %88, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %92 = getelementptr %array, %array* %a, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  %94 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %93, i32 0
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = sub i32 1, %96
  %98 = mul i32 1, %97
  %99 = add i32 0, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 1, %101
  %103 = getelementptr %array, %array* %a, i32 0, i32 0
  %104 = load double*, double** %103, align 8
  %105 = getelementptr inbounds double, double* %104, i32 %99
  %106 = load double, double* %105, align 8
  %107 = fcmp une double %106, 1.100000e+01
  br i1 %107, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %108 = getelementptr %array, %array* %a, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  %110 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 2, %112
  %114 = mul i32 1, %113
  %115 = add i32 0, %114
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = mul i32 1, %117
  %119 = getelementptr %array, %array* %a, i32 0, i32 0
  %120 = load double*, double** %119, align 8
  %121 = getelementptr inbounds double, double* %120, i32 %115
  %122 = load double, double* %121, align 8
  %123 = fcmp une double %122, 1.200000e+01
  br i1 %123, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %124 = getelementptr %array, %array* %a, i32 0, i32 2
  %125 = load %dimension_descriptor*, %dimension_descriptor** %124, align 8
  %126 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %125, i32 0
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = sub i32 3, %128
  %130 = mul i32 1, %129
  %131 = add i32 0, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 1, %133
  %135 = getelementptr %array, %array* %a, i32 0, i32 0
  %136 = load double*, double** %135, align 8
  %137 = getelementptr inbounds double, double* %136, i32 %131
  %138 = load double, double* %137, align 8
  %139 = fcmp une double %138, 1.300000e+01
  br i1 %139, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %140 = load i32, i32* %i, align 4
  %141 = add i32 %140, 1
  %142 = icmp sle i32 %141, 14
  br i1 %142, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %143 = load i32, i32* %i, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %i, align 4
  %145 = load i32, i32* %i, align 4
  %146 = sub i32 %145, 10
  %147 = getelementptr %array, %array* %b, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  %149 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %148, i32 0
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 %146, %151
  %153 = mul i32 1, %152
  %154 = add i32 0, %153
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = mul i32 1, %156
  %158 = getelementptr %array, %array* %b, i32 0, i32 0
  %159 = load double*, double** %158, align 8
  %160 = getelementptr inbounds double, double* %159, i32 %154
  %161 = load i32, i32* %i, align 4
  %162 = sitofp i32 %161 to double
  store double %162, double* %160, align 8
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %163 = getelementptr %array, %array* %b, i32 0, i32 2
  %164 = load %dimension_descriptor*, %dimension_descriptor** %163, align 8
  %165 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %164, i32 0
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = sub i32 1, %167
  %169 = mul i32 1, %168
  %170 = add i32 0, %169
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %165, i32 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = mul i32 1, %172
  %174 = getelementptr %array, %array* %b, i32 0, i32 0
  %175 = load double*, double** %174, align 8
  %176 = getelementptr inbounds double, double* %175, i32 %170
  %177 = load double, double* %176, align 8
  %178 = fcmp une double %177, 1.100000e+01
  br i1 %178, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %179 = getelementptr %array, %array* %b, i32 0, i32 2
  %180 = load %dimension_descriptor*, %dimension_descriptor** %179, align 8
  %181 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %180, i32 0
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = sub i32 2, %183
  %185 = mul i32 1, %184
  %186 = add i32 0, %185
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 3
  %188 = load i32, i32* %187, align 4
  %189 = mul i32 1, %188
  %190 = getelementptr %array, %array* %b, i32 0, i32 0
  %191 = load double*, double** %190, align 8
  %192 = getelementptr inbounds double, double* %191, i32 %186
  %193 = load double, double* %192, align 8
  %194 = fcmp une double %193, 1.200000e+01
  br i1 %194, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %195 = getelementptr %array, %array* %b, i32 0, i32 2
  %196 = load %dimension_descriptor*, %dimension_descriptor** %195, align 8
  %197 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %196, i32 0
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = sub i32 3, %199
  %201 = mul i32 1, %200
  %202 = add i32 0, %201
  %203 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 3
  %204 = load i32, i32* %203, align 4
  %205 = mul i32 1, %204
  %206 = getelementptr %array, %array* %b, i32 0, i32 0
  %207 = load double*, double** %206, align 8
  %208 = getelementptr inbounds double, double* %207, i32 %202
  %209 = load double, double* %208, align 8
  %210 = fcmp une double %209, 1.300000e+01
  br i1 %210, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %211 = getelementptr %array, %array* %b, i32 0, i32 2
  %212 = load %dimension_descriptor*, %dimension_descriptor** %211, align 8
  %213 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %212, i32 0
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %213, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = sub i32 4, %215
  %217 = mul i32 1, %216
  %218 = add i32 0, %217
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %213, i32 0, i32 3
  %220 = load i32, i32* %219, align 4
  %221 = mul i32 1, %220
  %222 = getelementptr %array, %array* %b, i32 0, i32 0
  %223 = load double*, double** %222, align 8
  %224 = getelementptr inbounds double, double* %223, i32 %218
  %225 = load double, double* %224, align 8
  %226 = fcmp une double %225, 1.400000e+01
  br i1 %226, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %227 = load i32, i32* %i, align 4
  %228 = add i32 %227, 1
  %229 = icmp sle i32 %228, 3
  br i1 %229, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %230 = load i32, i32* %i, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %i, align 4
  %232 = load i32, i32* %i, align 4
  %233 = getelementptr %array, %array* %b, i32 0, i32 2
  %234 = load %dimension_descriptor*, %dimension_descriptor** %233, align 8
  %235 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %234, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = sub i32 %232, %237
  %239 = mul i32 1, %238
  %240 = add i32 0, %239
  %241 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = mul i32 1, %242
  %244 = getelementptr %array, %array* %b, i32 0, i32 0
  %245 = load double*, double** %244, align 8
  %246 = getelementptr inbounds double, double* %245, i32 %240
  %247 = load i32, i32* %i, align 4
  %248 = getelementptr %array, %array* %a, i32 0, i32 2
  %249 = load %dimension_descriptor*, %dimension_descriptor** %248, align 8
  %250 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %249, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = sub i32 %247, %252
  %254 = mul i32 1, %253
  %255 = add i32 0, %254
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = mul i32 1, %257
  %259 = getelementptr %array, %array* %a, i32 0, i32 0
  %260 = load double*, double** %259, align 8
  %261 = getelementptr inbounds double, double* %260, i32 %255
  %262 = load double, double* %261, align 8
  %263 = fsub double %262, 1.000000e+01
  store double %263, double* %246, align 8
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %264 = getelementptr %array, %array* %b, i32 0, i32 2
  %265 = load %dimension_descriptor*, %dimension_descriptor** %264, align 8
  %266 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %265, i32 0
  %267 = getelementptr %dimension_descriptor, %dimension_descriptor* %266, i32 0, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = sub i32 1, %268
  %270 = mul i32 1, %269
  %271 = add i32 0, %270
  %272 = getelementptr %dimension_descriptor, %dimension_descriptor* %266, i32 0, i32 3
  %273 = load i32, i32* %272, align 4
  %274 = mul i32 1, %273
  %275 = getelementptr %array, %array* %b, i32 0, i32 0
  %276 = load double*, double** %275, align 8
  %277 = getelementptr inbounds double, double* %276, i32 %271
  %278 = load double, double* %277, align 8
  %279 = fcmp une double %278, 1.000000e+00
  br i1 %279, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %280 = getelementptr %array, %array* %b, i32 0, i32 2
  %281 = load %dimension_descriptor*, %dimension_descriptor** %280, align 8
  %282 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %281, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sub i32 2, %284
  %286 = mul i32 1, %285
  %287 = add i32 0, %286
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 3
  %289 = load i32, i32* %288, align 4
  %290 = mul i32 1, %289
  %291 = getelementptr %array, %array* %b, i32 0, i32 0
  %292 = load double*, double** %291, align 8
  %293 = getelementptr inbounds double, double* %292, i32 %287
  %294 = load double, double* %293, align 8
  %295 = fcmp une double %294, 2.000000e+00
  br i1 %295, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %296 = getelementptr %array, %array* %b, i32 0, i32 2
  %297 = load %dimension_descriptor*, %dimension_descriptor** %296, align 8
  %298 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 0
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 3, %300
  %302 = mul i32 1, %301
  %303 = add i32 0, %302
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 3
  %305 = load i32, i32* %304, align 4
  %306 = mul i32 1, %305
  %307 = getelementptr %array, %array* %b, i32 0, i32 0
  %308 = load double*, double** %307, align 8
  %309 = getelementptr inbounds double, double* %308, i32 %303
  %310 = load double, double* %309, align 8
  %311 = fcmp une double %310, 3.000000e+00
  br i1 %311, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %312 = getelementptr %array, %array* %b, i32 0, i32 2
  %313 = load %dimension_descriptor*, %dimension_descriptor** %312, align 8
  %314 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %313, i32 0
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %314, i32 0, i32 1
  %316 = load i32, i32* %315, align 4
  %317 = sub i32 4, %316
  %318 = mul i32 1, %317
  %319 = add i32 0, %318
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %314, i32 0, i32 3
  %321 = load i32, i32* %320, align 4
  %322 = mul i32 1, %321
  %323 = getelementptr %array, %array* %b, i32 0, i32 0
  %324 = load double*, double** %323, align 8
  %325 = getelementptr inbounds double, double* %324, i32 %319
  %326 = getelementptr %array, %array* %b, i32 0, i32 2
  %327 = load %dimension_descriptor*, %dimension_descriptor** %326, align 8
  %328 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %327, i32 0
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = sub i32 1, %330
  %332 = mul i32 1, %331
  %333 = add i32 0, %332
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 3
  %335 = load i32, i32* %334, align 4
  %336 = mul i32 1, %335
  %337 = getelementptr %array, %array* %b, i32 0, i32 0
  %338 = load double*, double** %337, align 8
  %339 = getelementptr inbounds double, double* %338, i32 %333
  %340 = load double, double* %339, align 8
  %341 = getelementptr %array, %array* %b, i32 0, i32 2
  %342 = load %dimension_descriptor*, %dimension_descriptor** %341, align 8
  %343 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %342, i32 0
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = sub i32 2, %345
  %347 = mul i32 1, %346
  %348 = add i32 0, %347
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 3
  %350 = load i32, i32* %349, align 4
  %351 = mul i32 1, %350
  %352 = getelementptr %array, %array* %b, i32 0, i32 0
  %353 = load double*, double** %352, align 8
  %354 = getelementptr inbounds double, double* %353, i32 %348
  %355 = load double, double* %354, align 8
  %356 = fadd double %340, %355
  %357 = getelementptr %array, %array* %b, i32 0, i32 2
  %358 = load %dimension_descriptor*, %dimension_descriptor** %357, align 8
  %359 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %358, i32 0
  %360 = getelementptr %dimension_descriptor, %dimension_descriptor* %359, i32 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = sub i32 3, %361
  %363 = mul i32 1, %362
  %364 = add i32 0, %363
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %359, i32 0, i32 3
  %366 = load i32, i32* %365, align 4
  %367 = mul i32 1, %366
  %368 = getelementptr %array, %array* %b, i32 0, i32 0
  %369 = load double*, double** %368, align 8
  %370 = getelementptr inbounds double, double* %369, i32 %364
  %371 = load double, double* %370, align 8
  %372 = fadd double %356, %371
  %373 = getelementptr %array, %array* %a, i32 0, i32 2
  %374 = load %dimension_descriptor*, %dimension_descriptor** %373, align 8
  %375 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %374, i32 0
  %376 = getelementptr %dimension_descriptor, %dimension_descriptor* %375, i32 0, i32 1
  %377 = load i32, i32* %376, align 4
  %378 = sub i32 1, %377
  %379 = mul i32 1, %378
  %380 = add i32 0, %379
  %381 = getelementptr %dimension_descriptor, %dimension_descriptor* %375, i32 0, i32 3
  %382 = load i32, i32* %381, align 4
  %383 = mul i32 1, %382
  %384 = getelementptr %array, %array* %a, i32 0, i32 0
  %385 = load double*, double** %384, align 8
  %386 = getelementptr inbounds double, double* %385, i32 %380
  %387 = load double, double* %386, align 8
  %388 = fadd double %372, %387
  store double %388, double* %325, align 8
  %389 = getelementptr %array, %array* %b, i32 0, i32 2
  %390 = load %dimension_descriptor*, %dimension_descriptor** %389, align 8
  %391 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %390, i32 0
  %392 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = sub i32 4, %393
  %395 = mul i32 1, %394
  %396 = add i32 0, %395
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 3
  %398 = load i32, i32* %397, align 4
  %399 = mul i32 1, %398
  %400 = getelementptr %array, %array* %b, i32 0, i32 0
  %401 = load double*, double** %400, align 8
  %402 = getelementptr inbounds double, double* %401, i32 %396
  %403 = load double, double* %402, align 8
  %404 = fcmp une double %403, 1.700000e+01
  br i1 %404, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %405 = getelementptr %array, %array* %b, i32 0, i32 2
  %406 = load %dimension_descriptor*, %dimension_descriptor** %405, align 8
  %407 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %406, i32 0
  %408 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = sub i32 4, %409
  %411 = mul i32 1, %410
  %412 = add i32 0, %411
  %413 = getelementptr %dimension_descriptor, %dimension_descriptor* %407, i32 0, i32 3
  %414 = load i32, i32* %413, align 4
  %415 = mul i32 1, %414
  %416 = getelementptr %array, %array* %b, i32 0, i32 0
  %417 = load double*, double** %416, align 8
  %418 = getelementptr inbounds double, double* %417, i32 %412
  %419 = getelementptr %array, %array* %a, i32 0, i32 2
  %420 = load %dimension_descriptor*, %dimension_descriptor** %419, align 8
  %421 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %420, i32 0
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = sub i32 1, %423
  %425 = mul i32 1, %424
  %426 = add i32 0, %425
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 3
  %428 = load i32, i32* %427, align 4
  %429 = mul i32 1, %428
  %430 = getelementptr %array, %array* %a, i32 0, i32 0
  %431 = load double*, double** %430, align 8
  %432 = getelementptr inbounds double, double* %431, i32 %426
  %433 = load double, double* %432, align 8
  store double %433, double* %418, align 8
  %434 = getelementptr %array, %array* %b, i32 0, i32 2
  %435 = load %dimension_descriptor*, %dimension_descriptor** %434, align 8
  %436 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %435, i32 0
  %437 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = sub i32 4, %438
  %440 = mul i32 1, %439
  %441 = add i32 0, %440
  %442 = getelementptr %dimension_descriptor, %dimension_descriptor* %436, i32 0, i32 3
  %443 = load i32, i32* %442, align 4
  %444 = mul i32 1, %443
  %445 = getelementptr %array, %array* %b, i32 0, i32 0
  %446 = load double*, double** %445, align 8
  %447 = getelementptr inbounds double, double* %446, i32 %441
  %448 = load double, double* %447, align 8
  %449 = fcmp une double %448, 1.100000e+01
  br i1 %449, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %450 = load i32, i32* %i, align 4
  %451 = add i32 %450, 1
  %452 = icmp sle i32 %451, 2
  br i1 %452, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %453 = load i32, i32* %i, align 4
  %454 = add i32 %453, 1
  store i32 %454, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %455 = load i32, i32* %j, align 4
  %456 = add i32 %455, 1
  %457 = icmp sle i32 %456, 2
  br i1 %457, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %458 = load i32, i32* %j, align 4
  %459 = add i32 %458, 1
  store i32 %459, i32* %j, align 4
  %460 = load i32, i32* %i, align 4
  %461 = load i32, i32* %j, align 4
  %462 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %463 = load %dimension_descriptor*, %dimension_descriptor** %462, align 8
  %464 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %463, i32 0
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = sub i32 %460, %466
  %468 = mul i32 1, %467
  %469 = add i32 0, %468
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 3
  %471 = load i32, i32* %470, align 4
  %472 = mul i32 1, %471
  %473 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %463, i32 1
  %474 = getelementptr %dimension_descriptor, %dimension_descriptor* %473, i32 0, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = sub i32 %461, %475
  %477 = mul i32 %472, %476
  %478 = add i32 %469, %477
  %479 = getelementptr %dimension_descriptor, %dimension_descriptor* %473, i32 0, i32 3
  %480 = load i32, i32* %479, align 4
  %481 = mul i32 %472, %480
  %482 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %483 = load double*, double** %482, align 8
  %484 = getelementptr inbounds double, double* %483, i32 %478
  %485 = load i32, i32* %i, align 4
  %486 = load i32, i32* %j, align 4
  %487 = add i32 %485, %486
  %488 = add i32 %487, 10
  %489 = sitofp i32 %488 to double
  store double %489, double* %484, align 8
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %490 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %491 = load %dimension_descriptor*, %dimension_descriptor** %490, align 8
  %492 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %491, i32 0
  %493 = getelementptr %dimension_descriptor, %dimension_descriptor* %492, i32 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = sub i32 1, %494
  %496 = mul i32 1, %495
  %497 = add i32 0, %496
  %498 = getelementptr %dimension_descriptor, %dimension_descriptor* %492, i32 0, i32 3
  %499 = load i32, i32* %498, align 4
  %500 = mul i32 1, %499
  %501 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %491, i32 1
  %502 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 1
  %503 = load i32, i32* %502, align 4
  %504 = sub i32 1, %503
  %505 = mul i32 %500, %504
  %506 = add i32 %497, %505
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %501, i32 0, i32 3
  %508 = load i32, i32* %507, align 4
  %509 = mul i32 %500, %508
  %510 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %511 = load double*, double** %510, align 8
  %512 = getelementptr inbounds double, double* %511, i32 %506
  %513 = load double, double* %512, align 8
  %514 = fcmp une double %513, 1.200000e+01
  br i1 %514, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %515 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %516 = load %dimension_descriptor*, %dimension_descriptor** %515, align 8
  %517 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %516, i32 0
  %518 = getelementptr %dimension_descriptor, %dimension_descriptor* %517, i32 0, i32 1
  %519 = load i32, i32* %518, align 4
  %520 = sub i32 1, %519
  %521 = mul i32 1, %520
  %522 = add i32 0, %521
  %523 = getelementptr %dimension_descriptor, %dimension_descriptor* %517, i32 0, i32 3
  %524 = load i32, i32* %523, align 4
  %525 = mul i32 1, %524
  %526 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %516, i32 1
  %527 = getelementptr %dimension_descriptor, %dimension_descriptor* %526, i32 0, i32 1
  %528 = load i32, i32* %527, align 4
  %529 = sub i32 2, %528
  %530 = mul i32 %525, %529
  %531 = add i32 %522, %530
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %526, i32 0, i32 3
  %533 = load i32, i32* %532, align 4
  %534 = mul i32 %525, %533
  %535 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %536 = load double*, double** %535, align 8
  %537 = getelementptr inbounds double, double* %536, i32 %531
  %538 = load double, double* %537, align 8
  %539 = fcmp une double %538, 1.300000e+01
  br i1 %539, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %540 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %541 = load %dimension_descriptor*, %dimension_descriptor** %540, align 8
  %542 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %541, i32 0
  %543 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = sub i32 2, %544
  %546 = mul i32 1, %545
  %547 = add i32 0, %546
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 3
  %549 = load i32, i32* %548, align 4
  %550 = mul i32 1, %549
  %551 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %541, i32 1
  %552 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 1
  %553 = load i32, i32* %552, align 4
  %554 = sub i32 1, %553
  %555 = mul i32 %550, %554
  %556 = add i32 %547, %555
  %557 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 3
  %558 = load i32, i32* %557, align 4
  %559 = mul i32 %550, %558
  %560 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %561 = load double*, double** %560, align 8
  %562 = getelementptr inbounds double, double* %561, i32 %556
  %563 = load double, double* %562, align 8
  %564 = fcmp une double %563, 1.300000e+01
  br i1 %564, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %565 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %566 = load %dimension_descriptor*, %dimension_descriptor** %565, align 8
  %567 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %566, i32 0
  %568 = getelementptr %dimension_descriptor, %dimension_descriptor* %567, i32 0, i32 1
  %569 = load i32, i32* %568, align 4
  %570 = sub i32 2, %569
  %571 = mul i32 1, %570
  %572 = add i32 0, %571
  %573 = getelementptr %dimension_descriptor, %dimension_descriptor* %567, i32 0, i32 3
  %574 = load i32, i32* %573, align 4
  %575 = mul i32 1, %574
  %576 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %566, i32 1
  %577 = getelementptr %dimension_descriptor, %dimension_descriptor* %576, i32 0, i32 1
  %578 = load i32, i32* %577, align 4
  %579 = sub i32 2, %578
  %580 = mul i32 %575, %579
  %581 = add i32 %572, %580
  %582 = getelementptr %dimension_descriptor, %dimension_descriptor* %576, i32 0, i32 3
  %583 = load i32, i32* %582, align 4
  %584 = mul i32 %575, %583
  %585 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %586 = load double*, double** %585, align 8
  %587 = getelementptr inbounds double, double* %586, i32 %581
  %588 = load double, double* %587, align 8
  %589 = fcmp une double %588, 1.400000e+01
  br i1 %589, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
