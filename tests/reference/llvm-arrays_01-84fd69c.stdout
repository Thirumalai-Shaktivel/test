; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { [3 x i32], i32, [1 x %dimension_descriptor], i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [4 x i32], i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.0, align 8
  %11 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %22 = load i32, i32* %i, align 4
  %23 = add i32 %22, 1
  %24 = icmp sle i32 %23, 3
  br i1 %24, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %25 = load i32, i32* %i, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %i, align 4
  %27 = load i32, i32* %i, align 4
  %28 = getelementptr %array, %array* %a, i32 0, i32 2
  %29 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %28, i32 0, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 %27, %31
  %33 = mul i32 1, %32
  %34 = add i32 0, %33
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 1, %36
  %38 = getelementptr %array, %array* %a, i32 0, i32 0
  %39 = getelementptr [3 x i32], [3 x i32]* %38, i32 0, i32 %34
  %40 = load i32, i32* %i, align 4
  %41 = add i32 %40, 10
  store i32 %41, i32* %39, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %42 = getelementptr %array, %array* %a, i32 0, i32 2
  %43 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %42, i32 0, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %45
  %47 = mul i32 1, %46
  %48 = add i32 0, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 1, %50
  %52 = getelementptr %array, %array* %a, i32 0, i32 0
  %53 = getelementptr [3 x i32], [3 x i32]* %52, i32 0, i32 %48
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, 11
  br i1 %55, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %56 = getelementptr %array, %array* %a, i32 0, i32 2
  %57 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 2, %59
  %61 = mul i32 1, %60
  %62 = add i32 0, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 1, %64
  %66 = getelementptr %array, %array* %a, i32 0, i32 0
  %67 = getelementptr [3 x i32], [3 x i32]* %66, i32 0, i32 %62
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 12
  br i1 %69, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %70 = getelementptr %array, %array* %a, i32 0, i32 2
  %71 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %70, i32 0, i32 0
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 3, %73
  %75 = mul i32 1, %74
  %76 = add i32 0, %75
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = mul i32 1, %78
  %80 = getelementptr %array, %array* %a, i32 0, i32 0
  %81 = getelementptr [3 x i32], [3 x i32]* %80, i32 0, i32 %76
  %82 = load i32, i32* %81, align 4
  %83 = icmp ne i32 %82, 13
  br i1 %83, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  store i32 10, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont7
  %84 = load i32, i32* %i, align 4
  %85 = add i32 %84, 1
  %86 = icmp sle i32 %85, 14
  br i1 %86, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %87 = load i32, i32* %i, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %i, align 4
  %89 = load i32, i32* %i, align 4
  %90 = sub i32 %89, 10
  %91 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %92 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %91, i32 0, i32 0
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 %90, %94
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 1, %99
  %101 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %102 = getelementptr [4 x i32], [4 x i32]* %101, i32 0, i32 %97
  %103 = load i32, i32* %i, align 4
  store i32 %103, i32* %102, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %104 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %105 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %104, i32 0, i32 0
  %106 = getelementptr %dimension_descriptor, %dimension_descriptor* %105, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = sub i32 1, %107
  %109 = mul i32 1, %108
  %110 = add i32 0, %109
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %105, i32 0, i32 3
  %112 = load i32, i32* %111, align 4
  %113 = mul i32 1, %112
  %114 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %115 = getelementptr [4 x i32], [4 x i32]* %114, i32 0, i32 %110
  %116 = load i32, i32* %115, align 4
  %117 = icmp ne i32 %116, 11
  br i1 %117, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %iftmp15 = phi i32 [ 1, %then12 ], [ 2, %else13 ]
  %118 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %119 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %118, i32 0, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = sub i32 2, %121
  %123 = mul i32 1, %122
  %124 = add i32 0, %123
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = mul i32 1, %126
  %128 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %129 = getelementptr [4 x i32], [4 x i32]* %128, i32 0, i32 %124
  %130 = load i32, i32* %129, align 4
  %131 = icmp ne i32 %130, 12
  br i1 %131, label %then16, label %else17

then16:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont14
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %iftmp19 = phi i32 [ 1, %then16 ], [ 2, %else17 ]
  %132 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %133 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %132, i32 0, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 3, %135
  %137 = mul i32 1, %136
  %138 = add i32 0, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 1, %140
  %142 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %143 = getelementptr [4 x i32], [4 x i32]* %142, i32 0, i32 %138
  %144 = load i32, i32* %143, align 4
  %145 = icmp ne i32 %144, 13
  br i1 %145, label %then20, label %else21

then20:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %iftmp23 = phi i32 [ 1, %then20 ], [ 2, %else21 ]
  %146 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %147 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %146, i32 0, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 4, %149
  %151 = mul i32 1, %150
  %152 = add i32 0, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 1, %154
  %156 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %157 = getelementptr [4 x i32], [4 x i32]* %156, i32 0, i32 %152
  %158 = load i32, i32* %157, align 4
  %159 = icmp ne i32 %158, 14
  br i1 %159, label %then24, label %else25

then24:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont22
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %iftmp27 = phi i32 [ 1, %then24 ], [ 2, %else25 ]
  store i32 0, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %ifcont26
  %160 = load i32, i32* %i, align 4
  %161 = add i32 %160, 1
  %162 = icmp sle i32 %161, 3
  br i1 %162, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %163 = load i32, i32* %i, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %i, align 4
  %165 = load i32, i32* %i, align 4
  %166 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %167 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 %165, %169
  %171 = mul i32 1, %170
  %172 = add i32 0, %171
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = mul i32 1, %174
  %176 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %177 = getelementptr [4 x i32], [4 x i32]* %176, i32 0, i32 %172
  %178 = load i32, i32* %i, align 4
  %179 = getelementptr %array, %array* %a, i32 0, i32 2
  %180 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %179, i32 0, i32 0
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %180, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = sub i32 %178, %182
  %184 = mul i32 1, %183
  %185 = add i32 0, %184
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %180, i32 0, i32 3
  %187 = load i32, i32* %186, align 4
  %188 = mul i32 1, %187
  %189 = getelementptr %array, %array* %a, i32 0, i32 0
  %190 = getelementptr [3 x i32], [3 x i32]* %189, i32 0, i32 %185
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 %191, 10
  store i32 %192, i32* %177, align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %193 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %194 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %193, i32 0, i32 0
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 1, %196
  %198 = mul i32 1, %197
  %199 = add i32 0, %198
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 1, %201
  %203 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %204 = getelementptr [4 x i32], [4 x i32]* %203, i32 0, i32 %199
  %205 = load i32, i32* %204, align 4
  %206 = icmp ne i32 %205, 1
  br i1 %206, label %then31, label %else32

then31:                                           ; preds = %loop.end30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %loop.end30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %iftmp34 = phi i32 [ 1, %then31 ], [ 2, %else32 ]
  %207 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %208 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %207, i32 0, i32 0
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %208, i32 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = sub i32 2, %210
  %212 = mul i32 1, %211
  %213 = add i32 0, %212
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %208, i32 0, i32 3
  %215 = load i32, i32* %214, align 4
  %216 = mul i32 1, %215
  %217 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %218 = getelementptr [4 x i32], [4 x i32]* %217, i32 0, i32 %213
  %219 = load i32, i32* %218, align 4
  %220 = icmp ne i32 %219, 2
  br i1 %220, label %then35, label %else36

then35:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont33
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %iftmp38 = phi i32 [ 1, %then35 ], [ 2, %else36 ]
  %221 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %222 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %221, i32 0, i32 0
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = sub i32 3, %224
  %226 = mul i32 1, %225
  %227 = add i32 0, %226
  %228 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 3
  %229 = load i32, i32* %228, align 4
  %230 = mul i32 1, %229
  %231 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %232 = getelementptr [4 x i32], [4 x i32]* %231, i32 0, i32 %227
  %233 = load i32, i32* %232, align 4
  %234 = icmp ne i32 %233, 3
  br i1 %234, label %then39, label %else40

then39:                                           ; preds = %ifcont37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont37
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %iftmp42 = phi i32 [ 1, %then39 ], [ 2, %else40 ]
  %235 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %236 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %235, i32 0, i32 0
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = sub i32 4, %238
  %240 = mul i32 1, %239
  %241 = add i32 0, %240
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = mul i32 1, %243
  %245 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %246 = getelementptr [4 x i32], [4 x i32]* %245, i32 0, i32 %241
  %247 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %248 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %247, i32 0, i32 0
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = sub i32 1, %250
  %252 = mul i32 1, %251
  %253 = add i32 0, %252
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 3
  %255 = load i32, i32* %254, align 4
  %256 = mul i32 1, %255
  %257 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %258 = getelementptr [4 x i32], [4 x i32]* %257, i32 0, i32 %253
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %261 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %260, i32 0, i32 0
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %261, i32 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = sub i32 2, %263
  %265 = mul i32 1, %264
  %266 = add i32 0, %265
  %267 = getelementptr %dimension_descriptor, %dimension_descriptor* %261, i32 0, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = mul i32 1, %268
  %270 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %271 = getelementptr [4 x i32], [4 x i32]* %270, i32 0, i32 %266
  %272 = load i32, i32* %271, align 4
  %273 = add i32 %259, %272
  %274 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %275 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %274, i32 0, i32 0
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = sub i32 3, %277
  %279 = mul i32 1, %278
  %280 = add i32 0, %279
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 3
  %282 = load i32, i32* %281, align 4
  %283 = mul i32 1, %282
  %284 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %285 = getelementptr [4 x i32], [4 x i32]* %284, i32 0, i32 %280
  %286 = load i32, i32* %285, align 4
  %287 = add i32 %273, %286
  %288 = getelementptr %array, %array* %a, i32 0, i32 2
  %289 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %288, i32 0, i32 0
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = sub i32 1, %291
  %293 = mul i32 1, %292
  %294 = add i32 0, %293
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 3
  %296 = load i32, i32* %295, align 4
  %297 = mul i32 1, %296
  %298 = getelementptr %array, %array* %a, i32 0, i32 0
  %299 = getelementptr [3 x i32], [3 x i32]* %298, i32 0, i32 %294
  %300 = load i32, i32* %299, align 4
  %301 = add i32 %287, %300
  store i32 %301, i32* %246, align 4
  %302 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %303 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %302, i32 0, i32 0
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 4, %305
  %307 = mul i32 1, %306
  %308 = add i32 0, %307
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %303, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = mul i32 1, %310
  %312 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %313 = getelementptr [4 x i32], [4 x i32]* %312, i32 0, i32 %308
  %314 = load i32, i32* %313, align 4
  %315 = icmp ne i32 %314, 17
  br i1 %315, label %then43, label %else44

then43:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %iftmp46 = phi i32 [ 1, %then43 ], [ 2, %else44 ]
  %316 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %317 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %316, i32 0, i32 0
  %318 = getelementptr %dimension_descriptor, %dimension_descriptor* %317, i32 0, i32 1
  %319 = load i32, i32* %318, align 4
  %320 = sub i32 4, %319
  %321 = mul i32 1, %320
  %322 = add i32 0, %321
  %323 = getelementptr %dimension_descriptor, %dimension_descriptor* %317, i32 0, i32 3
  %324 = load i32, i32* %323, align 4
  %325 = mul i32 1, %324
  %326 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %327 = getelementptr [4 x i32], [4 x i32]* %326, i32 0, i32 %322
  %328 = getelementptr %array, %array* %a, i32 0, i32 2
  %329 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %328, i32 0, i32 0
  %330 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = sub i32 1, %331
  %333 = mul i32 1, %332
  %334 = add i32 0, %333
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %329, i32 0, i32 3
  %336 = load i32, i32* %335, align 4
  %337 = mul i32 1, %336
  %338 = getelementptr %array, %array* %a, i32 0, i32 0
  %339 = getelementptr [3 x i32], [3 x i32]* %338, i32 0, i32 %334
  %340 = load i32, i32* %339, align 4
  store i32 %340, i32* %327, align 4
  %341 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %342 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %341, i32 0, i32 0
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %342, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = sub i32 4, %344
  %346 = mul i32 1, %345
  %347 = add i32 0, %346
  %348 = getelementptr %dimension_descriptor, %dimension_descriptor* %342, i32 0, i32 3
  %349 = load i32, i32* %348, align 4
  %350 = mul i32 1, %349
  %351 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %352 = getelementptr [4 x i32], [4 x i32]* %351, i32 0, i32 %347
  %353 = load i32, i32* %352, align 4
  %354 = icmp ne i32 %353, 11
  br i1 %354, label %then47, label %else48

then47:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %ifcont45
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  %iftmp50 = phi i32 [ 1, %then47 ], [ 2, %else48 ]
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

