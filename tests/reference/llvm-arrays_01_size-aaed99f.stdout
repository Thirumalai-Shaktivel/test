; ModuleID = 'LFortran'
source_filename = "LFortran"

%size_arg = type { %dimension_descriptor*, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array, %array* %a, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca i32, i32 %18, align 4
  store i32* %19, i32** %17, align 8
  %b = alloca %array, align 8
  %20 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array, %array* %b, i32 0, i32 2
  %22 = alloca i32, align 4
  store i32 1, i32* %22, align 4
  %23 = load i32, i32* %22, align 4
  %24 = alloca %dimension_descriptor, i32 %23, align 8
  %25 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %25, align 4
  store %dimension_descriptor* %24, %dimension_descriptor** %21, align 8
  %26 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 3
  store i32 1, i32* %28, align 4
  store i32 1, i32* %29, align 4
  store i32 4, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %29, align 4
  %34 = sub i32 %32, %33
  %35 = add i32 %34, 1
  store i32 %35, i32* %31, align 4
  %36 = alloca i32, align 4
  store i32 4, i32* %36, align 4
  %37 = getelementptr %array, %array* %b, i32 0, i32 0
  %38 = load i32, i32* %36, align 4
  %39 = alloca i32, i32 %38, align 4
  store i32* %39, i32** %37, align 8
  %i = alloca i32, align 4
  %size_a = alloca i32, align 4
  %size_b = alloca i32, align 4
  %40 = alloca %size_arg, align 8
  %41 = getelementptr %array, %array* %a, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr %size_arg, %size_arg* %40, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %43, align 8
  %44 = getelementptr %size_arg, %size_arg* %40, i32 0, i32 1
  %45 = getelementptr %array, %array* %a, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %44, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %40, i32* %47, i32* %48)
  store i32 %49, i32* %size_a, align 4
  %50 = alloca %size_arg, align 8
  %51 = getelementptr %array, %array* %b, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr %size_arg, %size_arg* %50, i32 0, i32 0
  store %dimension_descriptor* %52, %dimension_descriptor** %53, align 8
  %54 = getelementptr %size_arg, %size_arg* %50, i32 0, i32 1
  %55 = getelementptr %array, %array* %b, i32 0, i32 4
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %54, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %50, i32* %57, i32* %58)
  store i32 %59, i32* %size_b, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %60 = load i32, i32* %i, align 4
  %61 = add i32 %60, 1
  %62 = load i32, i32* %size_a, align 4
  %63 = icmp sle i32 %61, %62
  br i1 %63, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %64 = load i32, i32* %i, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %i, align 4
  %66 = load i32, i32* %i, align 4
  %67 = getelementptr %array, %array* %a, i32 0, i32 2
  %68 = load %dimension_descriptor*, %dimension_descriptor** %67, align 8
  %69 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %68, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 %66, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr %array, %array* %a, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i32 %74
  %81 = load i32, i32* %i, align 4
  %82 = add i32 %81, 10
  store i32 %82, i32* %80, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %83 = getelementptr %array, %array* %a, i32 0, i32 2
  %84 = load %dimension_descriptor*, %dimension_descriptor** %83, align 8
  %85 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %84, i32 0
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 1, %87
  %89 = mul i32 1, %88
  %90 = add i32 0, %89
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = mul i32 1, %92
  %94 = getelementptr %array, %array* %a, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds i32, i32* %95, i32 %90
  %97 = load i32, i32* %96, align 4
  %98 = icmp ne i32 %97, 11
  br i1 %98, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %99 = getelementptr %array, %array* %a, i32 0, i32 2
  %100 = load %dimension_descriptor*, %dimension_descriptor** %99, align 8
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = sub i32 2, %103
  %105 = mul i32 1, %104
  %106 = add i32 0, %105
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = mul i32 1, %108
  %110 = getelementptr %array, %array* %a, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds i32, i32* %111, i32 %106
  %113 = load i32, i32* %112, align 4
  %114 = icmp ne i32 %113, 12
  br i1 %114, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %115 = getelementptr %array, %array* %a, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sub i32 3, %119
  %121 = mul i32 1, %120
  %122 = add i32 0, %121
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 3
  %124 = load i32, i32* %123, align 4
  %125 = mul i32 1, %124
  %126 = getelementptr %array, %array* %a, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr inbounds i32, i32* %127, i32 %122
  %129 = load i32, i32* %128, align 4
  %130 = icmp ne i32 %129, 13
  br i1 %130, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %131 = load i32, i32* %i, align 4
  %132 = add i32 %131, 1
  %133 = load i32, i32* %size_b, align 4
  %134 = add i32 10, %133
  %135 = icmp sle i32 %132, %134
  br i1 %135, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %136 = load i32, i32* %i, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %i, align 4
  %138 = load i32, i32* %i, align 4
  %139 = sub i32 %138, 10
  %140 = getelementptr %array, %array* %b, i32 0, i32 2
  %141 = load %dimension_descriptor*, %dimension_descriptor** %140, align 8
  %142 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %141, i32 0
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sub i32 %139, %144
  %146 = mul i32 1, %145
  %147 = add i32 0, %146
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = mul i32 1, %149
  %151 = getelementptr %array, %array* %b, i32 0, i32 0
  %152 = load i32*, i32** %151, align 8
  %153 = getelementptr inbounds i32, i32* %152, i32 %147
  %154 = load i32, i32* %i, align 4
  store i32 %154, i32* %153, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %155 = getelementptr %array, %array* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 1, %159
  %161 = mul i32 1, %160
  %162 = add i32 0, %161
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 1, %164
  %166 = getelementptr %array, %array* %b, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = getelementptr inbounds i32, i32* %167, i32 %162
  %169 = load i32, i32* %168, align 4
  %170 = icmp ne i32 %169, 11
  br i1 %170, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %171 = getelementptr %array, %array* %b, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  %173 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %172, i32 0
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = sub i32 2, %175
  %177 = mul i32 1, %176
  %178 = add i32 0, %177
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 3
  %180 = load i32, i32* %179, align 4
  %181 = mul i32 1, %180
  %182 = getelementptr %array, %array* %b, i32 0, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = getelementptr inbounds i32, i32* %183, i32 %178
  %185 = load i32, i32* %184, align 4
  %186 = icmp ne i32 %185, 12
  br i1 %186, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %187 = getelementptr %array, %array* %b, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 3, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr %array, %array* %b, i32 0, i32 0
  %199 = load i32*, i32** %198, align 8
  %200 = getelementptr inbounds i32, i32* %199, i32 %194
  %201 = load i32, i32* %200, align 4
  %202 = icmp ne i32 %201, 13
  br i1 %202, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %203 = getelementptr %array, %array* %b, i32 0, i32 2
  %204 = load %dimension_descriptor*, %dimension_descriptor** %203, align 8
  %205 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %204, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 4, %207
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 1, %212
  %214 = getelementptr %array, %array* %b, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = getelementptr inbounds i32, i32* %215, i32 %210
  %217 = load i32, i32* %216, align 4
  %218 = icmp ne i32 %217, 14
  br i1 %218, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %219 = load i32, i32* %i, align 4
  %220 = add i32 %219, 1
  %221 = load i32, i32* %size_a, align 4
  %222 = icmp sle i32 %220, %221
  br i1 %222, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %223 = load i32, i32* %i, align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %i, align 4
  %225 = load i32, i32* %i, align 4
  %226 = getelementptr %array, %array* %b, i32 0, i32 2
  %227 = load %dimension_descriptor*, %dimension_descriptor** %226, align 8
  %228 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %227, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 %225, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array, %array* %b, i32 0, i32 0
  %238 = load i32*, i32** %237, align 8
  %239 = getelementptr inbounds i32, i32* %238, i32 %233
  %240 = load i32, i32* %i, align 4
  %241 = getelementptr %array, %array* %a, i32 0, i32 2
  %242 = load %dimension_descriptor*, %dimension_descriptor** %241, align 8
  %243 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %242, i32 0
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = sub i32 %240, %245
  %247 = mul i32 1, %246
  %248 = add i32 0, %247
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = mul i32 1, %250
  %252 = getelementptr %array, %array* %a, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = getelementptr inbounds i32, i32* %253, i32 %248
  %255 = load i32, i32* %254, align 4
  %256 = sub i32 %255, 10
  store i32 %256, i32* %239, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %257 = getelementptr %array, %array* %b, i32 0, i32 2
  %258 = load %dimension_descriptor*, %dimension_descriptor** %257, align 8
  %259 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %258, i32 0
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = sub i32 1, %261
  %263 = mul i32 1, %262
  %264 = add i32 0, %263
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 3
  %266 = load i32, i32* %265, align 4
  %267 = mul i32 1, %266
  %268 = getelementptr %array, %array* %b, i32 0, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = getelementptr inbounds i32, i32* %269, i32 %264
  %271 = load i32, i32* %270, align 4
  %272 = icmp ne i32 %271, 1
  br i1 %272, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %273 = getelementptr %array, %array* %b, i32 0, i32 2
  %274 = load %dimension_descriptor*, %dimension_descriptor** %273, align 8
  %275 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %274, i32 0
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = sub i32 2, %277
  %279 = mul i32 1, %278
  %280 = add i32 0, %279
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 3
  %282 = load i32, i32* %281, align 4
  %283 = mul i32 1, %282
  %284 = getelementptr %array, %array* %b, i32 0, i32 0
  %285 = load i32*, i32** %284, align 8
  %286 = getelementptr inbounds i32, i32* %285, i32 %280
  %287 = load i32, i32* %286, align 4
  %288 = icmp ne i32 %287, 2
  br i1 %288, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %289 = getelementptr %array, %array* %b, i32 0, i32 2
  %290 = load %dimension_descriptor*, %dimension_descriptor** %289, align 8
  %291 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %290, i32 0
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 3, %293
  %295 = mul i32 1, %294
  %296 = add i32 0, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 1, %298
  %300 = getelementptr %array, %array* %b, i32 0, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = getelementptr inbounds i32, i32* %301, i32 %296
  %303 = load i32, i32* %302, align 4
  %304 = icmp ne i32 %303, 3
  br i1 %304, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %305 = getelementptr %array, %array* %b, i32 0, i32 2
  %306 = load %dimension_descriptor*, %dimension_descriptor** %305, align 8
  %307 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %306, i32 0
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 4, %309
  %311 = mul i32 1, %310
  %312 = add i32 0, %311
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 3
  %314 = load i32, i32* %313, align 4
  %315 = mul i32 1, %314
  %316 = getelementptr %array, %array* %b, i32 0, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = getelementptr inbounds i32, i32* %317, i32 %312
  %319 = getelementptr %array, %array* %b, i32 0, i32 2
  %320 = load %dimension_descriptor*, %dimension_descriptor** %319, align 8
  %321 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %320, i32 0
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %321, i32 0, i32 1
  %323 = load i32, i32* %322, align 4
  %324 = sub i32 1, %323
  %325 = mul i32 1, %324
  %326 = add i32 0, %325
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %321, i32 0, i32 3
  %328 = load i32, i32* %327, align 4
  %329 = mul i32 1, %328
  %330 = getelementptr %array, %array* %b, i32 0, i32 0
  %331 = load i32*, i32** %330, align 8
  %332 = getelementptr inbounds i32, i32* %331, i32 %326
  %333 = load i32, i32* %332, align 4
  %334 = getelementptr %array, %array* %b, i32 0, i32 2
  %335 = load %dimension_descriptor*, %dimension_descriptor** %334, align 8
  %336 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %335, i32 0
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = sub i32 2, %338
  %340 = mul i32 1, %339
  %341 = add i32 0, %340
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %336, i32 0, i32 3
  %343 = load i32, i32* %342, align 4
  %344 = mul i32 1, %343
  %345 = getelementptr %array, %array* %b, i32 0, i32 0
  %346 = load i32*, i32** %345, align 8
  %347 = getelementptr inbounds i32, i32* %346, i32 %341
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %333, %348
  %350 = getelementptr %array, %array* %b, i32 0, i32 2
  %351 = load %dimension_descriptor*, %dimension_descriptor** %350, align 8
  %352 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %351, i32 0
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %352, i32 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = sub i32 3, %354
  %356 = mul i32 1, %355
  %357 = add i32 0, %356
  %358 = getelementptr %dimension_descriptor, %dimension_descriptor* %352, i32 0, i32 3
  %359 = load i32, i32* %358, align 4
  %360 = mul i32 1, %359
  %361 = getelementptr %array, %array* %b, i32 0, i32 0
  %362 = load i32*, i32** %361, align 8
  %363 = getelementptr inbounds i32, i32* %362, i32 %357
  %364 = load i32, i32* %363, align 4
  %365 = add i32 %349, %364
  %366 = getelementptr %array, %array* %a, i32 0, i32 2
  %367 = load %dimension_descriptor*, %dimension_descriptor** %366, align 8
  %368 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %367, i32 0
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = sub i32 1, %370
  %372 = mul i32 1, %371
  %373 = add i32 0, %372
  %374 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 3
  %375 = load i32, i32* %374, align 4
  %376 = mul i32 1, %375
  %377 = getelementptr %array, %array* %a, i32 0, i32 0
  %378 = load i32*, i32** %377, align 8
  %379 = getelementptr inbounds i32, i32* %378, i32 %373
  %380 = load i32, i32* %379, align 4
  %381 = add i32 %365, %380
  store i32 %381, i32* %318, align 4
  %382 = getelementptr %array, %array* %b, i32 0, i32 2
  %383 = load %dimension_descriptor*, %dimension_descriptor** %382, align 8
  %384 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %383, i32 0
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %384, i32 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = sub i32 4, %386
  %388 = mul i32 1, %387
  %389 = add i32 0, %388
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %384, i32 0, i32 3
  %391 = load i32, i32* %390, align 4
  %392 = mul i32 1, %391
  %393 = getelementptr %array, %array* %b, i32 0, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = getelementptr inbounds i32, i32* %394, i32 %389
  %396 = load i32, i32* %395, align 4
  %397 = icmp ne i32 %396, 17
  br i1 %397, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %398 = getelementptr %array, %array* %b, i32 0, i32 2
  %399 = load %dimension_descriptor*, %dimension_descriptor** %398, align 8
  %400 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %399, i32 0
  %401 = getelementptr %dimension_descriptor, %dimension_descriptor* %400, i32 0, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = sub i32 4, %402
  %404 = mul i32 1, %403
  %405 = add i32 0, %404
  %406 = getelementptr %dimension_descriptor, %dimension_descriptor* %400, i32 0, i32 3
  %407 = load i32, i32* %406, align 4
  %408 = mul i32 1, %407
  %409 = getelementptr %array, %array* %b, i32 0, i32 0
  %410 = load i32*, i32** %409, align 8
  %411 = getelementptr inbounds i32, i32* %410, i32 %405
  %412 = getelementptr %array, %array* %a, i32 0, i32 2
  %413 = load %dimension_descriptor*, %dimension_descriptor** %412, align 8
  %414 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %413, i32 0
  %415 = getelementptr %dimension_descriptor, %dimension_descriptor* %414, i32 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = sub i32 1, %416
  %418 = mul i32 1, %417
  %419 = add i32 0, %418
  %420 = getelementptr %dimension_descriptor, %dimension_descriptor* %414, i32 0, i32 3
  %421 = load i32, i32* %420, align 4
  %422 = mul i32 1, %421
  %423 = getelementptr %array, %array* %a, i32 0, i32 0
  %424 = load i32*, i32** %423, align 8
  %425 = getelementptr inbounds i32, i32* %424, i32 %419
  %426 = load i32, i32* %425, align 4
  store i32 %426, i32* %411, align 4
  %427 = getelementptr %array, %array* %b, i32 0, i32 2
  %428 = load %dimension_descriptor*, %dimension_descriptor** %427, align 8
  %429 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %428, i32 0
  %430 = getelementptr %dimension_descriptor, %dimension_descriptor* %429, i32 0, i32 1
  %431 = load i32, i32* %430, align 4
  %432 = sub i32 4, %431
  %433 = mul i32 1, %432
  %434 = add i32 0, %433
  %435 = getelementptr %dimension_descriptor, %dimension_descriptor* %429, i32 0, i32 3
  %436 = load i32, i32* %435, align 4
  %437 = mul i32 1, %436
  %438 = getelementptr %array, %array* %b, i32 0, i32 0
  %439 = load i32*, i32** %438, align 8
  %440 = getelementptr inbounds i32, i32* %439, i32 %434
  %441 = load i32, i32* %440, align 4
  %442 = icmp ne i32 %441, 11
  br i1 %442, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
