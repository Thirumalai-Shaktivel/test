; ModuleID = 'LFortran'
source_filename = "LFortran"

%size_arg = type { %dimension_descriptor*, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [3 x i32], i32, [1 x %dimension_descriptor], i1 }
%array.1 = type { [4 x i32], i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.1, align 8
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %i = alloca i32, align 4
  %size_a = alloca i32, align 4
  %size_b = alloca i32, align 4
  %22 = alloca %size_arg, align 8
  %23 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %24 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %size_arg, %size_arg* %22, i32 0, i32 0
  store %dimension_descriptor* %24, %dimension_descriptor** %25, align 8
  %26 = getelementptr %size_arg, %size_arg* %22, i32 0, i32 1
  store i32 1, i32* %26, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %22, i32* %27, i32* %28)
  store i32 %29, i32* %size_a, align 4
  %30 = alloca %size_arg, align 8
  %31 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %32 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %31, i32 0, i32 0
  %33 = getelementptr %size_arg, %size_arg* %30, i32 0, i32 0
  store %dimension_descriptor* %32, %dimension_descriptor** %33, align 8
  %34 = getelementptr %size_arg, %size_arg* %30, i32 0, i32 1
  store i32 1, i32* %34, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %30, i32* %35, i32* %36)
  store i32 %37, i32* %size_b, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %38 = load i32, i32* %i, align 4
  %39 = add i32 %38, 1
  %40 = load i32, i32* %size_a, align 4
  %41 = icmp sle i32 %39, %40
  br i1 %41, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %42 = load i32, i32* %i, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %i, align 4
  %44 = load i32, i32* %i, align 4
  %45 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %46 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %45, i32 0, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 %44, %48
  %50 = mul i32 1, %49
  %51 = add i32 0, %50
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 1, %53
  %55 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %56 = getelementptr [3 x i32], [3 x i32]* %55, i32 0, i32 %51
  %57 = load i32, i32* %i, align 4
  %58 = add i32 %57, 10
  store i32 %58, i32* %56, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %59 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %60 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %59, i32 0, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 1, %62
  %64 = mul i32 1, %63
  %65 = add i32 0, %64
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 1, %67
  %69 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %70 = getelementptr [3 x i32], [3 x i32]* %69, i32 0, i32 %65
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 11
  br i1 %72, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %73 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %74 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 2, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %84 = getelementptr [3 x i32], [3 x i32]* %83, i32 0, i32 %79
  %85 = load i32, i32* %84, align 4
  %86 = icmp ne i32 %85, 12
  br i1 %86, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %87 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %88 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %87, i32 0, i32 0
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub i32 3, %90
  %92 = mul i32 1, %91
  %93 = add i32 0, %92
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 1, %95
  %97 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %98 = getelementptr [3 x i32], [3 x i32]* %97, i32 0, i32 %93
  %99 = load i32, i32* %98, align 4
  %100 = icmp ne i32 %99, 13
  br i1 %100, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %101 = load i32, i32* %i, align 4
  %102 = add i32 %101, 1
  %103 = load i32, i32* %size_b, align 4
  %104 = add i32 10, %103
  %105 = icmp sle i32 %102, %104
  br i1 %105, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %106 = load i32, i32* %i, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %i, align 4
  %108 = load i32, i32* %i, align 4
  %109 = sub i32 %108, 10
  %110 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %111 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %110, i32 0, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 %109, %113
  %115 = mul i32 1, %114
  %116 = add i32 0, %115
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = mul i32 1, %118
  %120 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %121 = getelementptr [4 x i32], [4 x i32]* %120, i32 0, i32 %116
  %122 = load i32, i32* %i, align 4
  store i32 %122, i32* %121, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %123 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %124 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sub i32 1, %126
  %128 = mul i32 1, %127
  %129 = add i32 0, %128
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 3
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 1, %131
  %133 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %134 = getelementptr [4 x i32], [4 x i32]* %133, i32 0, i32 %129
  %135 = load i32, i32* %134, align 4
  %136 = icmp ne i32 %135, 11
  br i1 %136, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %137 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %138 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %137, i32 0, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 2, %140
  %142 = mul i32 1, %141
  %143 = add i32 0, %142
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = mul i32 1, %145
  %147 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %148 = getelementptr [4 x i32], [4 x i32]* %147, i32 0, i32 %143
  %149 = load i32, i32* %148, align 4
  %150 = icmp ne i32 %149, 12
  br i1 %150, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %151 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %152 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %151, i32 0, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 3, %154
  %156 = mul i32 1, %155
  %157 = add i32 0, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 1, %159
  %161 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %162 = getelementptr [4 x i32], [4 x i32]* %161, i32 0, i32 %157
  %163 = load i32, i32* %162, align 4
  %164 = icmp ne i32 %163, 13
  br i1 %164, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %165 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %166 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %165, i32 0, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 4, %168
  %170 = mul i32 1, %169
  %171 = add i32 0, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 1, %173
  %175 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %176 = getelementptr [4 x i32], [4 x i32]* %175, i32 0, i32 %171
  %177 = load i32, i32* %176, align 4
  %178 = icmp ne i32 %177, 14
  br i1 %178, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %179 = load i32, i32* %i, align 4
  %180 = add i32 %179, 1
  %181 = load i32, i32* %size_a, align 4
  %182 = icmp sle i32 %180, %181
  br i1 %182, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %183 = load i32, i32* %i, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %i, align 4
  %185 = load i32, i32* %i, align 4
  %186 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %187 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %186, i32 0, i32 0
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 %185, %189
  %191 = mul i32 1, %190
  %192 = add i32 0, %191
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 1, %194
  %196 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %197 = getelementptr [4 x i32], [4 x i32]* %196, i32 0, i32 %192
  %198 = load i32, i32* %i, align 4
  %199 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %200 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %199, i32 0, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %198, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %210 = getelementptr [3 x i32], [3 x i32]* %209, i32 0, i32 %205
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %211, 10
  store i32 %212, i32* %197, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %213 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %214 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %213, i32 0, i32 0
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 1
  %216 = load i32, i32* %215, align 4
  %217 = sub i32 1, %216
  %218 = mul i32 1, %217
  %219 = add i32 0, %218
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %214, i32 0, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = mul i32 1, %221
  %223 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %224 = getelementptr [4 x i32], [4 x i32]* %223, i32 0, i32 %219
  %225 = load i32, i32* %224, align 4
  %226 = icmp ne i32 %225, 1
  br i1 %226, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %227 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %228 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %227, i32 0, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 2, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %238 = getelementptr [4 x i32], [4 x i32]* %237, i32 0, i32 %233
  %239 = load i32, i32* %238, align 4
  %240 = icmp ne i32 %239, 2
  br i1 %240, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %241 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %242 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %241, i32 0, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 3, %244
  %246 = mul i32 1, %245
  %247 = add i32 0, %246
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 1, %249
  %251 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %252 = getelementptr [4 x i32], [4 x i32]* %251, i32 0, i32 %247
  %253 = load i32, i32* %252, align 4
  %254 = icmp ne i32 %253, 3
  br i1 %254, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %255 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %256 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %255, i32 0, i32 0
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 4, %258
  %260 = mul i32 1, %259
  %261 = add i32 0, %260
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 3
  %263 = load i32, i32* %262, align 4
  %264 = mul i32 1, %263
  %265 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %266 = getelementptr [4 x i32], [4 x i32]* %265, i32 0, i32 %261
  %267 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %268 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %267, i32 0, i32 0
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = sub i32 1, %270
  %272 = mul i32 1, %271
  %273 = add i32 0, %272
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = mul i32 1, %275
  %277 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %278 = getelementptr [4 x i32], [4 x i32]* %277, i32 0, i32 %273
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %281 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %280, i32 0, i32 0
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = sub i32 2, %283
  %285 = mul i32 1, %284
  %286 = add i32 0, %285
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 3
  %288 = load i32, i32* %287, align 4
  %289 = mul i32 1, %288
  %290 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %291 = getelementptr [4 x i32], [4 x i32]* %290, i32 0, i32 %286
  %292 = load i32, i32* %291, align 4
  %293 = add i32 %279, %292
  %294 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %295 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %294, i32 0, i32 0
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = sub i32 3, %297
  %299 = mul i32 1, %298
  %300 = add i32 0, %299
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 3
  %302 = load i32, i32* %301, align 4
  %303 = mul i32 1, %302
  %304 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %305 = getelementptr [4 x i32], [4 x i32]* %304, i32 0, i32 %300
  %306 = load i32, i32* %305, align 4
  %307 = add i32 %293, %306
  %308 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %309 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %308, i32 0, i32 0
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = sub i32 1, %311
  %313 = mul i32 1, %312
  %314 = add i32 0, %313
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 3
  %316 = load i32, i32* %315, align 4
  %317 = mul i32 1, %316
  %318 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %319 = getelementptr [3 x i32], [3 x i32]* %318, i32 0, i32 %314
  %320 = load i32, i32* %319, align 4
  %321 = add i32 %307, %320
  store i32 %321, i32* %266, align 4
  %322 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %323 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %322, i32 0, i32 0
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = sub i32 4, %325
  %327 = mul i32 1, %326
  %328 = add i32 0, %327
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 3
  %330 = load i32, i32* %329, align 4
  %331 = mul i32 1, %330
  %332 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %333 = getelementptr [4 x i32], [4 x i32]* %332, i32 0, i32 %328
  %334 = load i32, i32* %333, align 4
  %335 = icmp ne i32 %334, 17
  br i1 %335, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %336 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %337 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %336, i32 0, i32 0
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = sub i32 4, %339
  %341 = mul i32 1, %340
  %342 = add i32 0, %341
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %337, i32 0, i32 3
  %344 = load i32, i32* %343, align 4
  %345 = mul i32 1, %344
  %346 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %347 = getelementptr [4 x i32], [4 x i32]* %346, i32 0, i32 %342
  %348 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %349 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %348, i32 0, i32 0
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 1, %351
  %353 = mul i32 1, %352
  %354 = add i32 0, %353
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 3
  %356 = load i32, i32* %355, align 4
  %357 = mul i32 1, %356
  %358 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %359 = getelementptr [3 x i32], [3 x i32]* %358, i32 0, i32 %354
  %360 = load i32, i32* %359, align 4
  store i32 %360, i32* %347, align 4
  %361 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %362 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %361, i32 0, i32 0
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sub i32 4, %364
  %366 = mul i32 1, %365
  %367 = add i32 0, %366
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 3
  %369 = load i32, i32* %368, align 4
  %370 = mul i32 1, %369
  %371 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %372 = getelementptr [4 x i32], [4 x i32]* %371, i32 0, i32 %367
  %373 = load i32, i32* %372, align 4
  %374 = icmp ne i32 %373, 11
  br i1 %374, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
