; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@2 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@3 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@4 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@6 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@7 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@9 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@10 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@11 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@12 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@13 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@14 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@15 = private unnamed_addr constant [7 x i8] c"%s %d\0A\00", align 1

define i32 @main() {
.entry:
  %marks = alloca i32, align 4
  store i32 81, i32* %marks, align 4
  %0 = load i32, i32* %marks, align 4
  %1 = icmp sle i32 91, %0
  %2 = load i32, i32* %marks, align 4
  %3 = icmp sle i32 %2, 100
  %4 = mul i1 %1, %3
  br i1 %4, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0))
  br label %ifcont19

else:                                             ; preds = %.entry
  %5 = load i32, i32* %marks, align 4
  %6 = icmp sle i32 81, %5
  %7 = load i32, i32* %marks, align 4
  %8 = icmp sle i32 %7, 90
  %9 = mul i1 %6, %8
  br i1 %9, label %then1, label %else2

then1:                                            ; preds = %else
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i32 0, i32 0))
  br label %ifcont17

else2:                                            ; preds = %else
  %10 = load i32, i32* %marks, align 4
  %11 = icmp sle i32 71, %10
  %12 = load i32, i32* %marks, align 4
  %13 = icmp sle i32 %12, 80
  %14 = mul i1 %11, %13
  br i1 %14, label %then3, label %else4

then3:                                            ; preds = %else2
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @4, i32 0, i32 0))
  br label %ifcont15

else4:                                            ; preds = %else2
  %15 = load i32, i32* %marks, align 4
  %16 = icmp sle i32 61, %15
  %17 = load i32, i32* %marks, align 4
  %18 = icmp sle i32 %17, 70
  %19 = mul i1 %16, %18
  br i1 %19, label %then5, label %else6

then5:                                            ; preds = %else4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0))
  br label %ifcont13

else6:                                            ; preds = %else4
  %20 = load i32, i32* %marks, align 4
  %21 = icmp sle i32 41, %20
  %22 = load i32, i32* %marks, align 4
  %23 = icmp sle i32 %22, 60
  %24 = mul i1 %21, %23
  br i1 %24, label %then7, label %else8

then7:                                            ; preds = %else6
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  br label %ifcont11

else8:                                            ; preds = %else6
  %25 = load i32, i32* %marks, align 4
  %26 = icmp sle i32 %25, 40
  br i1 %26, label %then9, label %else10

then9:                                            ; preds = %else8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @10, i32 0, i32 0))
  br label %ifcont

else10:                                           ; preds = %else8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @12, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else10, %then9
  %iftmp = phi i32 [ 1, %then9 ], [ 2, %else10 ]
  br label %ifcont11

ifcont11:                                         ; preds = %ifcont, %then7
  %iftmp12 = phi i32 [ 1, %then7 ], [ 2, %ifcont ]
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont11, %then5
  %iftmp14 = phi i32 [ 1, %then5 ], [ 2, %ifcont11 ]
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont13, %then3
  %iftmp16 = phi i32 [ 1, %then3 ], [ 2, %ifcont13 ]
  br label %ifcont17

ifcont17:                                         ; preds = %ifcont15, %then1
  %iftmp18 = phi i32 [ 1, %then1 ], [ 2, %ifcont15 ]
  br label %ifcont19

ifcont19:                                         ; preds = %ifcont17, %then
  %iftmp20 = phi i32 [ 1, %then ], [ 2, %ifcont17 ]
  %27 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @14, i32 0, i32 0), i32 %27)
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

