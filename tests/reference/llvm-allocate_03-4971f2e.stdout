; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [3 x %dimension_descriptor], i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

define void @f(%array* %c) {
.entry:
  %0 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %1, align 1
  %2 = getelementptr %array, %array* %c, i32 0, i32 2
  %3 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 3
  store i32 1, i32* %4, align 4
  store i32 1, i32* %5, align 4
  store i32 3, i32* %6, align 4
  %8 = load i32, i32* %6, align 4
  %9 = load i32, i32* %5, align 4
  %10 = sub i32 %8, %9
  %11 = add i32 %10, 1
  %12 = mul i32 1, %11
  store i32 %11, i32* %7, align 4
  %13 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %2, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 3, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  %22 = mul i32 %12, %21
  store i32 %21, i32* %17, align 4
  %23 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %2, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 3
  store i32 1, i32* %24, align 4
  store i32 1, i32* %25, align 4
  store i32 3, i32* %26, align 4
  %28 = load i32, i32* %26, align 4
  %29 = load i32, i32* %25, align 4
  %30 = sub i32 %28, %29
  %31 = add i32 %30, 1
  %32 = mul i32 %22, %31
  store i32 %31, i32* %27, align 4
  %33 = getelementptr %array, %array* %c, i32 0, i32 0
  %34 = alloca i32, align 4
  %35 = mul i32 %32, 4
  store i32 %35, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = call i8* (i32, ...) @_lfortran_malloc(i32 %36)
  %38 = bitcast i8* %37 to i32*
  store i32* %38, i32** %33, align 8
  %39 = getelementptr %array, %array* %c, i32 0, i32 2
  %40 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 1, %42
  %44 = mul i32 1, %43
  %45 = add i32 0, %44
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = mul i32 1, %47
  %49 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %39, i32 0, i32 1
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 1, %51
  %53 = mul i32 %48, %52
  %54 = add i32 %45, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 %48, %56
  %58 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %39, i32 0, i32 2
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 1, %60
  %62 = mul i32 %57, %61
  %63 = add i32 %54, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %57, %65
  %67 = getelementptr %array, %array* %c, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds i32, i32* %68, i32 %63
  store i32 99, i32* %69, align 4
  ret void
}

define i32 @g(%array* %x) {
.entry:
  %r = alloca i32, align 4
  %0 = getelementptr %array, %array* %x, i32 0, i32 2
  %1 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %0, i32 0, i32 0
  %2 = getelementptr %dimension_descriptor, %dimension_descriptor* %1, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = sub i32 1, %3
  %5 = mul i32 1, %4
  %6 = add i32 0, %5
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %1, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = mul i32 1, %8
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %0, i32 0, i32 1
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sub i32 1, %12
  %14 = mul i32 %9, %13
  %15 = add i32 %6, %14
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = mul i32 %9, %17
  %19 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %0, i32 0, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 1, %21
  %23 = mul i32 %18, %22
  %24 = add i32 %15, %23
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = mul i32 %18, %26
  %28 = getelementptr %array, %array* %x, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i32 %24
  %31 = load i32, i32* %30, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %31)
  %32 = load %array, %array* %x, align 8
  %33 = getelementptr %array, %array* %x, i32 0, i32 3
  %34 = load i1, i1* %33, align 1
  br i1 %34, label %then, label %else

then:                                             ; preds = %.entry
  %35 = getelementptr %array, %array* %x, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = alloca i8*, align 8
  %38 = bitcast i32* %36 to i8*
  store i8* %38, i8** %37, align 8
  %39 = load i8*, i8** %37, align 8
  call void (i8*, ...) @_lfortran_free(i8* %39)
  %40 = getelementptr %array, %array* %x, i32 0, i32 3
  store i1 false, i1* %40, align 1
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %41 = alloca %array, align 8
  call void @f(%array* %x)
  %42 = getelementptr %array, %array* %x, i32 0, i32 2
  %43 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %42, i32 0, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %45
  %47 = mul i32 1, %46
  %48 = add i32 0, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 1, %50
  %52 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %42, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 1, %54
  %56 = mul i32 %51, %55
  %57 = add i32 %48, %56
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 %51, %59
  %61 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %42, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 1, %63
  %65 = mul i32 %60, %64
  %66 = add i32 %57, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 %60, %68
  %70 = getelementptr %array, %array* %x, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i32 %66
  %73 = load i32, i32* %72, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), i32 %73)
  %74 = getelementptr %array, %array* %x, i32 0, i32 2
  %75 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %74, i32 0, i32 0
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 1, %77
  %79 = mul i32 1, %78
  %80 = add i32 0, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 1, %82
  %84 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %74, i32 0, i32 1
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 1, %86
  %88 = mul i32 %83, %87
  %89 = add i32 %80, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %83, %91
  %93 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %74, i32 0, i32 2
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sub i32 1, %95
  %97 = mul i32 %92, %96
  %98 = add i32 %89, %97
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 %92, %100
  %102 = getelementptr %array, %array* %x, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds i32, i32* %103, i32 %98
  store i32 8, i32* %104, align 4
  store i32 0, i32* %r, align 4
  %105 = load i32, i32* %r, align 4
  ret i32 %105
}

define void @h(%array* %c) {
.entry:
  %0 = getelementptr %array, %array* %c, i32 0, i32 2
  %1 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %0, i32 0, i32 0
  %2 = getelementptr %dimension_descriptor, %dimension_descriptor* %1, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = sub i32 1, %3
  %5 = mul i32 1, %4
  %6 = add i32 0, %5
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %1, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = mul i32 1, %8
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %0, i32 0, i32 1
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sub i32 1, %12
  %14 = mul i32 %9, %13
  %15 = add i32 %6, %14
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = mul i32 %9, %17
  %19 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %0, i32 0, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 1, %21
  %23 = mul i32 %18, %22
  %24 = add i32 %15, %23
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = mul i32 %18, %26
  %28 = getelementptr %array, %array* %c, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i32 %24
  %31 = load i32, i32* %30, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i32 %31)
  %32 = load %array, %array* %c, align 8
  %33 = getelementptr %array, %array* %c, i32 0, i32 3
  %34 = load i1, i1* %33, align 1
  br i1 %34, label %then, label %else

then:                                             ; preds = %.entry
  %35 = getelementptr %array, %array* %c, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = alloca i8*, align 8
  %38 = bitcast i32* %36 to i8*
  store i8* %38, i8** %37, align 8
  %39 = load i8*, i8** %37, align 8
  call void (i8*, ...) @_lfortran_free(i8* %39)
  %40 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %40, align 1
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %41 = alloca %array, align 8
  call void @f(%array* %c)
  %42 = getelementptr %array, %array* %c, i32 0, i32 2
  %43 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %42, i32 0, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %45
  %47 = mul i32 1, %46
  %48 = add i32 0, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 1, %50
  %52 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %42, i32 0, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 1, %54
  %56 = mul i32 %51, %55
  %57 = add i32 %48, %56
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 %51, %59
  %61 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %42, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 1, %63
  %65 = mul i32 %60, %64
  %66 = add i32 %57, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 %60, %68
  %70 = getelementptr %array, %array* %c, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i32 %66
  %73 = load i32, i32* %72, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @3, i32 0, i32 0), i32 %73)
  %74 = getelementptr %array, %array* %c, i32 0, i32 2
  %75 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %74, i32 0, i32 0
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 1, %77
  %79 = mul i32 1, %78
  %80 = add i32 0, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 1, %82
  %84 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %74, i32 0, i32 1
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 1, %86
  %88 = mul i32 %83, %87
  %89 = add i32 %80, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %83, %91
  %93 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %74, i32 0, i32 2
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sub i32 1, %95
  %97 = mul i32 %92, %96
  %98 = add i32 %89, %97
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 %92, %100
  %102 = getelementptr %array, %array* %c, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds i32, i32* %103, i32 %98
  store i32 8, i32* %104, align 4
  ret void
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %c = alloca %array, align 8
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  store i32 1, i32* %stat, align 4
  %0 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %1, align 1
  %2 = getelementptr %array, %array* %c, i32 0, i32 2
  %3 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 3
  store i32 1, i32* %4, align 4
  store i32 1, i32* %5, align 4
  store i32 3, i32* %6, align 4
  %8 = load i32, i32* %6, align 4
  %9 = load i32, i32* %5, align 4
  %10 = sub i32 %8, %9
  %11 = add i32 %10, 1
  %12 = mul i32 1, %11
  store i32 %11, i32* %7, align 4
  %13 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %2, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 3, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  %22 = mul i32 %12, %21
  store i32 %21, i32* %17, align 4
  %23 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %2, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 3
  store i32 1, i32* %24, align 4
  store i32 1, i32* %25, align 4
  store i32 3, i32* %26, align 4
  %28 = load i32, i32* %26, align 4
  %29 = load i32, i32* %25, align 4
  %30 = sub i32 %28, %29
  %31 = add i32 %30, 1
  %32 = mul i32 %22, %31
  store i32 %31, i32* %27, align 4
  %33 = getelementptr %array, %array* %c, i32 0, i32 0
  %34 = alloca i32, align 4
  %35 = mul i32 %32, 4
  store i32 %35, i32* %34, align 4
  %36 = load i32, i32* %34, align 4
  %37 = call i8* (i32, ...) @_lfortran_malloc(i32 %36)
  %38 = bitcast i8* %37 to i32*
  store i32* %38, i32** %33, align 8
  store i32 0, i32* %stat, align 4
  %39 = load i32, i32* %stat, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %iftmp = phi i32 [ 1, %then ], [ 2, %else ]
  %41 = getelementptr %array, %array* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 1, %44
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 1, %49
  %51 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sub i32 1, %53
  %55 = mul i32 %50, %54
  %56 = add i32 %47, %55
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = mul i32 %50, %58
  %60 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 2
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 1, %62
  %64 = mul i32 %59, %63
  %65 = add i32 %56, %64
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %60, i32 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %59, %67
  %69 = getelementptr %array, %array* %c, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds i32, i32* %70, i32 %65
  store i32 3, i32* %71, align 4
  %72 = load %array, %array* %c, align 8
  %73 = getelementptr %array, %array* %c, i32 0, i32 3
  %74 = load i1, i1* %73, align 1
  br i1 %74, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %75 = getelementptr %array, %array* %c, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = alloca i8*, align 8
  %78 = bitcast i32* %76 to i8*
  store i8* %78, i8** %77, align 8
  %79 = load i8*, i8** %77, align 8
  call void (i8*, ...) @_lfortran_free(i8* %79)
  %80 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %80, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %iftmp4 = phi i32 [ 1, %then1 ], [ 2, %else2 ]
  %81 = alloca %array, align 8
  call void @h(%array* %c)
  %82 = alloca %array, align 8
  %83 = call i32 @g(%array* %c)
  store i32 %83, i32* %r, align 4
  %84 = getelementptr %array, %array* %c, i32 0, i32 2
  %85 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %84, i32 0, i32 0
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 1, %87
  %89 = mul i32 1, %88
  %90 = add i32 0, %89
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = mul i32 1, %92
  %94 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %84, i32 0, i32 1
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = sub i32 1, %96
  %98 = mul i32 %93, %97
  %99 = add i32 %90, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 %93, %101
  %103 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %84, i32 0, i32 2
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = sub i32 1, %105
  %107 = mul i32 %102, %106
  %108 = add i32 %99, %107
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 3
  %110 = load i32, i32* %109, align 4
  %111 = mul i32 %102, %110
  %112 = getelementptr %array, %array* %c, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds i32, i32* %113, i32 %108
  %115 = load i32, i32* %114, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i32 %115)
  %116 = load %array, %array* %c, align 8
  %117 = getelementptr %array, %array* %c, i32 0, i32 3
  %118 = load i1, i1* %117, align 1
  br i1 %118, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  %119 = getelementptr %array, %array* %c, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = alloca i8*, align 8
  %122 = bitcast i32* %120 to i8*
  store i8* %122, i8** %121, align 8
  %123 = load i8*, i8** %121, align 8
  call void (i8*, ...) @_lfortran_free(i8* %123)
  %124 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %124, align 1
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %iftmp8 = phi i32 [ 1, %then5 ], [ 2, %else6 ]
  ret i32 0
}

declare void @exit(i32)

