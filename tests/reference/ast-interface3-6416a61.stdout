(TranslationUnit [(Module interface3 (TriviaNode [] []) [] [(ImplicitNone [] (TriviaNode [] [(Comment "!checks the syntax")]))] [(Declaration () [(SimpleAttribute AttrPublic)] [(x [] [] () None ()) (y [] [] () None ()) (z [] [] () None ()) (() [] [] () None (AttrAssignment)) (() [] [] () None (AttrIntrinsicOperator PLUS)) (() [] [] () None (AttrIntrinsicOperator AND)) (() [] [] () None (AttrDefinedOperator "in"))] (TriviaNode [] [])) (Declaration () [(SimpleAttribute AttrPublic)] [(() [] [] () None (AttrIntrinsicOperator STAR))] (TriviaNode [] [])) (Declaration () [(SimpleAttribute AttrPublic)] [(() [] [] () None (AttrIntrinsicOperator DIV))] (TriviaNode [] [])) (Declaration () [(SimpleAttribute AttrPublic)] [(() [] [] () None (AttrIntrinsicOperator DIV))] (TriviaNode [] [])) (Declaration () [(SimpleAttribute AttrPublic)] [(() [] [] () None (AttrIntrinsicOperator CONCAT))] (TriviaNode [] [(EmptyLines)])) (Interface (InterfaceHeader) (TriviaNode [] [(EmptyLines)]) [(InterfaceModuleProcedure [sample] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderName A) (TriviaNode [] [(EmptyLines)]) [(InterfaceModuleProcedure [sample] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderAssignment) (TriviaNode [] [(EmptyLines)]) [(InterfaceProc (Subroutine LOGICAL_TO_NUMERIC [(N) (B)] [] () (TriviaNode [] []) [] [] [] [(Declaration (AttrType TypeInteger [] () None) [(AttrIntent Out)] [(N [] [] () None ())] (TriviaNode [] [])) (Declaration (AttrType TypeLogical [] () None) [(AttrIntent In)] [(B [] [] () None ())] (TriviaNode [] []))] [] []))]) (Interface (InterfaceHeaderOperator PLUS) (TriviaNode [] []) [(InterfaceModuleProcedure [union] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderOperator MINUS) (TriviaNode [] []) [(InterfaceModuleProcedure [difference] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderOperator STAR) (TriviaNode [] []) [(InterfaceModuleProcedure [intersection] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderOperator DIV) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator DIV) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator POW) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator EQ) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator NOTEQ) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator GT) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator GTE) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator LT) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator LTE) (TriviaNode [] []) [(InterfaceModuleProcedure [subset] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderOperator NOT) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator AND) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator OR) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator EQV) (TriviaNode [] []) []) (Interface (InterfaceHeaderOperator NEQV) (TriviaNode [] [(EmptyLines)]) []) (Interface (AbstractInterfaceHeader) (TriviaNode [] [(EmptyLines)]) []) (Declaration () [(SimpleAttribute AttrPublic)] [(() [] [] () None (AttrIntrinsicOperator CONCAT))] (TriviaNode [] [(EmptyLines)])) (Interface (InterfaceHeaderOperator CONCAT) (TriviaNode [] [(EmptyLines)]) []) (Interface (InterfaceHeaderWrite formatted) (TriviaNode [] [(EmptyLines)]) [(InterfaceModuleProcedure [write_formatted] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderWrite unformatted) (TriviaNode [] [(EmptyLines)]) [(InterfaceModuleProcedure [write_unformatted] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderRead formatted) (TriviaNode [] [(EmptyLines)]) [(InterfaceModuleProcedure [read_formatted] [(SimpleAttribute AttrModule)] (TriviaNode [] []))]) (Interface (InterfaceHeaderRead unformatted) (TriviaNode [] [(EmptyLines)]) [(InterfaceModuleProcedure [read_unformatted] [(SimpleAttribute AttrModule)] (TriviaNode [] []))])] [(Function f [(operator)] [] () () (TriviaNode [(Comment "! Currently parsed as an operator, but AST -> ASR phase can fix that:")] [(EmptyLines) (EmptyLines)]) [] [] [] [(Declaration (AttrType TypeReal [] () None) [(AttrIntent In)] [(() [] [] () None (AttrIntrinsicOperator STAR))] (TriviaNode [] []))] [] [])])])
