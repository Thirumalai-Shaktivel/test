; ModuleID = 'LFortran'
source_filename = "LFortran"

%size_arg = type { %dimension_descriptor*, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { [3 x i32], i32, [1 x %dimension_descriptor], i1 }
%array.1 = type { [4 x i32], i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %b = alloca %array.1, align 8
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %13 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 3
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 4, i32* %16, align 4
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %15, align 4
  %20 = sub i32 %18, %19
  %21 = add i32 %20, 1
  store i32 %21, i32* %17, align 4
  %i = alloca i32, align 4
  %size_a = alloca i32, align 4
  %size_b = alloca i32, align 4
  %22 = alloca %size_arg, align 8
  %23 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %24 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %23, i32 0, i32 0
  %25 = getelementptr %size_arg, %size_arg* %22, i32 0, i32 0
  store %dimension_descriptor* %24, %dimension_descriptor** %25, align 8
  %26 = getelementptr %size_arg, %size_arg* %22, i32 0, i32 1
  store i32 1, i32* %26, align 4
  %27 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %22)
  store i32 %27, i32* %size_a, align 4
  %28 = alloca %size_arg, align 8
  %29 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %30 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %29, i32 0, i32 0
  %31 = getelementptr %size_arg, %size_arg* %28, i32 0, i32 0
  store %dimension_descriptor* %30, %dimension_descriptor** %31, align 8
  %32 = getelementptr %size_arg, %size_arg* %28, i32 0, i32 1
  store i32 1, i32* %32, align 4
  %33 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %28)
  store i32 %33, i32* %size_b, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %34 = load i32, i32* %i, align 4
  %35 = add i32 %34, 1
  %36 = load i32, i32* %size_a, align 4
  %37 = icmp sle i32 %35, %36
  br i1 %37, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %38 = load i32, i32* %i, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %i, align 4
  %40 = load i32, i32* %i, align 4
  %41 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %42 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %40, %44
  %46 = mul i32 1, %45
  %47 = add i32 0, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 1, %49
  %51 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %52 = getelementptr [3 x i32], [3 x i32]* %51, i32 0, i32 %47
  %53 = load i32, i32* %i, align 4
  %54 = add i32 %53, 10
  store i32 %54, i32* %52, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %55 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %56 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %55, i32 0, i32 0
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sub i32 1, %58
  %60 = mul i32 1, %59
  %61 = add i32 0, %60
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = mul i32 1, %63
  %65 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %66 = getelementptr [3 x i32], [3 x i32]* %65, i32 0, i32 %61
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 11
  br i1 %68, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %69 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %70 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %69, i32 0, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 2, %72
  %74 = mul i32 1, %73
  %75 = add i32 0, %74
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = mul i32 1, %77
  %79 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %80 = getelementptr [3 x i32], [3 x i32]* %79, i32 0, i32 %75
  %81 = load i32, i32* %80, align 4
  %82 = icmp ne i32 %81, 12
  br i1 %82, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %83 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %84 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %83, i32 0, i32 0
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 3, %86
  %88 = mul i32 1, %87
  %89 = add i32 0, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 1, %91
  %93 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %94 = getelementptr [3 x i32], [3 x i32]* %93, i32 0, i32 %89
  %95 = load i32, i32* %94, align 4
  %96 = icmp ne i32 %95, 13
  br i1 %96, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %97 = load i32, i32* %i, align 4
  %98 = add i32 %97, 1
  %99 = load i32, i32* %size_b, align 4
  %100 = add i32 10, %99
  %101 = icmp sle i32 %98, %100
  br i1 %101, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %102 = load i32, i32* %i, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %i, align 4
  %104 = load i32, i32* %i, align 4
  %105 = sub i32 %104, 10
  %106 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %107 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %106, i32 0, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %105, %109
  %111 = mul i32 1, %110
  %112 = add i32 0, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 1, %114
  %116 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %117 = getelementptr [4 x i32], [4 x i32]* %116, i32 0, i32 %112
  %118 = load i32, i32* %i, align 4
  store i32 %118, i32* %117, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %119 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %120 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %119, i32 0, i32 0
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = sub i32 1, %122
  %124 = mul i32 1, %123
  %125 = add i32 0, %124
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 1, %127
  %129 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %130 = getelementptr [4 x i32], [4 x i32]* %129, i32 0, i32 %125
  %131 = load i32, i32* %130, align 4
  %132 = icmp ne i32 %131, 11
  br i1 %132, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %133 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %134 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %133, i32 0, i32 0
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = sub i32 2, %136
  %138 = mul i32 1, %137
  %139 = add i32 0, %138
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = mul i32 1, %141
  %143 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %144 = getelementptr [4 x i32], [4 x i32]* %143, i32 0, i32 %139
  %145 = load i32, i32* %144, align 4
  %146 = icmp ne i32 %145, 12
  br i1 %146, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %147 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %148 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 3, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %158 = getelementptr [4 x i32], [4 x i32]* %157, i32 0, i32 %153
  %159 = load i32, i32* %158, align 4
  %160 = icmp ne i32 %159, 13
  br i1 %160, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %161 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %162 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %161, i32 0, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 4, %164
  %166 = mul i32 1, %165
  %167 = add i32 0, %166
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 3
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 1, %169
  %171 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %172 = getelementptr [4 x i32], [4 x i32]* %171, i32 0, i32 %167
  %173 = load i32, i32* %172, align 4
  %174 = icmp ne i32 %173, 14
  br i1 %174, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %175 = load i32, i32* %i, align 4
  %176 = add i32 %175, 1
  %177 = load i32, i32* %size_a, align 4
  %178 = icmp sle i32 %176, %177
  br i1 %178, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %179 = load i32, i32* %i, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %i, align 4
  %181 = load i32, i32* %i, align 4
  %182 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %183 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %182, i32 0, i32 0
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %183, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = sub i32 %181, %185
  %187 = mul i32 1, %186
  %188 = add i32 0, %187
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %183, i32 0, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = mul i32 1, %190
  %192 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %193 = getelementptr [4 x i32], [4 x i32]* %192, i32 0, i32 %188
  %194 = load i32, i32* %i, align 4
  %195 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %196 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %195, i32 0, i32 0
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 %194, %198
  %200 = mul i32 1, %199
  %201 = add i32 0, %200
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %196, i32 0, i32 3
  %203 = load i32, i32* %202, align 4
  %204 = mul i32 1, %203
  %205 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %206 = getelementptr [3 x i32], [3 x i32]* %205, i32 0, i32 %201
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %207, 10
  store i32 %208, i32* %193, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %209 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %210 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %209, i32 0, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = sub i32 1, %212
  %214 = mul i32 1, %213
  %215 = add i32 0, %214
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = mul i32 1, %217
  %219 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %220 = getelementptr [4 x i32], [4 x i32]* %219, i32 0, i32 %215
  %221 = load i32, i32* %220, align 4
  %222 = icmp ne i32 %221, 1
  br i1 %222, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %223 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %224 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %223, i32 0, i32 0
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 2, %226
  %228 = mul i32 1, %227
  %229 = add i32 0, %228
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 1, %231
  %233 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %234 = getelementptr [4 x i32], [4 x i32]* %233, i32 0, i32 %229
  %235 = load i32, i32* %234, align 4
  %236 = icmp ne i32 %235, 2
  br i1 %236, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %237 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %238 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %237, i32 0, i32 0
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = sub i32 3, %240
  %242 = mul i32 1, %241
  %243 = add i32 0, %242
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = mul i32 1, %245
  %247 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %248 = getelementptr [4 x i32], [4 x i32]* %247, i32 0, i32 %243
  %249 = load i32, i32* %248, align 4
  %250 = icmp ne i32 %249, 3
  br i1 %250, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %251 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %252 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %251, i32 0, i32 0
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = sub i32 4, %254
  %256 = mul i32 1, %255
  %257 = add i32 0, %256
  %258 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 3
  %259 = load i32, i32* %258, align 4
  %260 = mul i32 1, %259
  %261 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %262 = getelementptr [4 x i32], [4 x i32]* %261, i32 0, i32 %257
  %263 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %264 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %263, i32 0, i32 0
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %264, i32 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = sub i32 1, %266
  %268 = mul i32 1, %267
  %269 = add i32 0, %268
  %270 = getelementptr %dimension_descriptor, %dimension_descriptor* %264, i32 0, i32 3
  %271 = load i32, i32* %270, align 4
  %272 = mul i32 1, %271
  %273 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %274 = getelementptr [4 x i32], [4 x i32]* %273, i32 0, i32 %269
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %277 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %276, i32 0, i32 0
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 2, %279
  %281 = mul i32 1, %280
  %282 = add i32 0, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 1, %284
  %286 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %287 = getelementptr [4 x i32], [4 x i32]* %286, i32 0, i32 %282
  %288 = load i32, i32* %287, align 4
  %289 = add i32 %275, %288
  %290 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %291 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %290, i32 0, i32 0
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 3, %293
  %295 = mul i32 1, %294
  %296 = add i32 0, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 1, %298
  %300 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %301 = getelementptr [4 x i32], [4 x i32]* %300, i32 0, i32 %296
  %302 = load i32, i32* %301, align 4
  %303 = add i32 %289, %302
  %304 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %305 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %304, i32 0, i32 0
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = sub i32 1, %307
  %309 = mul i32 1, %308
  %310 = add i32 0, %309
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 3
  %312 = load i32, i32* %311, align 4
  %313 = mul i32 1, %312
  %314 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %315 = getelementptr [3 x i32], [3 x i32]* %314, i32 0, i32 %310
  %316 = load i32, i32* %315, align 4
  %317 = add i32 %303, %316
  store i32 %317, i32* %262, align 4
  %318 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %319 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %318, i32 0, i32 0
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 1
  %321 = load i32, i32* %320, align 4
  %322 = sub i32 4, %321
  %323 = mul i32 1, %322
  %324 = add i32 0, %323
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %319, i32 0, i32 3
  %326 = load i32, i32* %325, align 4
  %327 = mul i32 1, %326
  %328 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %329 = getelementptr [4 x i32], [4 x i32]* %328, i32 0, i32 %324
  %330 = load i32, i32* %329, align 4
  %331 = icmp ne i32 %330, 17
  br i1 %331, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %332 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %333 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %332, i32 0, i32 0
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = sub i32 4, %335
  %337 = mul i32 1, %336
  %338 = add i32 0, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %333, i32 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 1, %340
  %342 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %343 = getelementptr [4 x i32], [4 x i32]* %342, i32 0, i32 %338
  %344 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %345 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %344, i32 0, i32 0
  %346 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = sub i32 1, %347
  %349 = mul i32 1, %348
  %350 = add i32 0, %349
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = mul i32 1, %352
  %354 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %355 = getelementptr [3 x i32], [3 x i32]* %354, i32 0, i32 %350
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %343, align 4
  %357 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %358 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %357, i32 0, i32 0
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = sub i32 4, %360
  %362 = mul i32 1, %361
  %363 = add i32 0, %362
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 3
  %365 = load i32, i32* %364, align 4
  %366 = mul i32 1, %365
  %367 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %368 = getelementptr [4 x i32], [4 x i32]* %367, i32 0, i32 %363
  %369 = load i32, i32* %368, align 4
  %370 = icmp ne i32 %369, 11
  br i1 %370, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
