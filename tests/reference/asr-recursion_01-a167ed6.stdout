(TranslationUnit (SymbolTable 1 {main: (Program (SymbolTable 5 {n: (ExternalSymbol 5 n 2 n recursion_01 n Public), sub1: (ExternalSymbol 5 sub1 2 sub1 recursion_01 sub1 Public), x: (ExternalSymbol 5 x 2 x recursion_01 x Public)}) main [recursion_01] [(= (Var 5 n) (ConstantInteger 10 (Integer 4 []))) (SubroutineCall 5 sub1 () [(Var 5 x)])]), recursion_01: (Module (SymbolTable 2 {n: (Variable 2 n Local () Default (Integer 4 []) Source Public), sub1: (Subroutine (SymbolTable 3 {sub2: (Subroutine (SymbolTable 4 {}) sub2 [] [(= (Var 3 x) (BinOp (Var 3 x) Add (ConstantInteger 1 (Integer 4 [])) (Integer 4 []))) (Print () [(Var 3 x)]) (SubroutineCall 2 sub1 () [(Var 3 x)])] Source Public Implementation), x: (Variable 3 x InOut () Default (Integer 4 []) Source Public)}) sub1 [(Var 3 x)] [(If (Compare (Var 3 x) Lt (Var 2 n) (Logical 4 [])) [(= (Var 3 x) (BinOp (Var 3 x) Add (ConstantInteger 1 (Integer 4 [])) (Integer 4 []))) (Print () [(Str "x = " (Character 8 [])) (Var 3 x)]) (SubroutineCall 3 sub2 () []) (SubroutineCall 2 sub1 () [(Var 3 x)])] [])] Source Public Implementation), x: (Variable 2 x Local (ConstantInteger 0 (Integer 4 [])) Default (Integer 4 []) Source Public)}) recursion_01 [] .false.)}) [])
