Intrinsic Procedure|Arguments|Class|Description|Tested in, llvm status|Basic Tests|Basic Impl
abs|(a)|E|Absolute value|"abs_01 :white_check_mark:
abs_02 :white_check_mark:
abs_03 :white_check_mark:
arrays_02 :x:
arrays_04_func :white_check_mark:
complex_03 :white_check_mark:
complex_04 :white_check_mark:
div_to_mul :white_check_mark:
flip_sign :white_check_mark:
fma :white_check_mark:
intrinsics_01 :x:
intrinsics_04 :white_check_mark:
intrinsics_04s :white_check_mark:
intrinsics_19 :white_check_mark:
intrinsics_19c :white_check_mark:
modules_15 :white_check_mark:
sign_from_value :white_check_mark:
sin_01 :white_check_mark:
sin_02 :white_check_mark:
sin_04 :white_check_mark:
sqrt_01 :white_check_mark:"|:white_check_mark:|:white_check_mark:
achar|(i [, kind])|E|Character from ascii code value|||
acos|(x)|E|Arccosine (inverse cosine) function|"intrinsics_06 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:
intrinsics_20 :white_check_mark:"|:white_check_mark:|:white_check_mark:
acosh|(x)|E|Inverse hyperbolic cosine function|"intrinsics_06 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
adjustl|(string)|E|Left-justified string value|intrinsics_36 :white_check_mark:|:white_check_mark:|:white_check_mark:
adjustr|(string)|E|Right-justified string value|||
aimag|(z)|E|Imaginary part of a complex number|"complex_04 :white_check_mark:
complex_06 :white_check_mark:
intrinsics_04 :white_check_mark:
intrinsics_04s :white_check_mark:
intrinsics_16 :x:
intrinsics_19c :white_check_mark:
modules_15 :white_check_mark:"|:white_check_mark:|:white_check_mark:
aint|(a [, kind])|E|Truncation toward 0 to a whole number|||
all|(mask) or (mask, dim)|T|Array reduced by .and. operator|||
allocated|(array) or (scalar)|I|Allocation status of allocatable variable|||
anint|(a [, kind])|E|Nearest whole number|||
any|(mask) or (mask, dim)|T|Array reduced by .or. operator|intrinsics_35 :x:|:white_check_mark:|
asin|(x)|E|Arcsine (inverse sine) function|"intrinsics_06 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
asinh|(x)|E|Inverse hyperbolic sine function|"intrinsics_06 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
associated|(pointer [, target])|I|Pointer association status inquiry|||
atan|(x) or (y, x)|E|Arctangent (inverse tangent) function|"intrinsics_06 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
atan2|(y, x)|E|Arctangent (inverse tangent) function|"intrinsics_17 :white_check_mark:
intrinsics_19 :white_check_mark:"|:white_check_mark:|:white_check_mark:
atanh|(x)|E|Inverse hyperbolic tangent function|"intrinsics_06 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
atomic_add|(atom, value [, stat])|A|Atomic addition|||
atomic_and|(atom, value [, stat])|A|Atomic bitwise and|||
atomic_cas|(atom, old, compare, value [, stat])|A|Atomic compare and swap|||
atomic_define|(atom, value [, stat])|A|Define a variable atomically|||
atomic_fetch_add|(atom, value, old [, stat])|A|Atomic fetch and add|||
atomic_fetch_and|(atom, value, old [, stat])|A|Atomic fetch and bitwise and|||
atomic_fetch_or|(atom, value, old [, stat])|A|Atomic fetch and bitwise or|||
atomic_fetch_xor|(atom, value, old [, stat])|A|Atomic fetch and bitwise exclusive or|||
atomic_or|(atom, value [, stat])|A|Atomic bitwise or|||
atomic_ref|(value, atom [, stat])|A|Reference a variable atomically|||
atomic_xor|(atom, value [, stat])|A|Atomic bitwise exclusive or|||
bessel_j0|(x)|E|Bessel function of the 1 st kind, order 0|||
bessel_j1|(x)|E|Bessel function of the 1 st kind, order 1|||
bessel_jn|(n, x)|E|Bessel function of the 1 st kind, order n|||
bessel_jn|(n1, n2, x)|T|Bessel functions of the 1 st kind|||
bessel_y0|(x)|E|Bessel function of the 2 nd kind, order 0|||
bessel_y1|(x)|E|Bessel function of the 2 nd kind, order 1|||
bessel_yn|(n, x)|E|Bessel function of the 2 nd kind, order n|||
bessel_yn|(n1, n2, x)|T|Bessel functions of the 2 nd kind|||
bge|(i, j)|E|Bitwise greater than or equal to|bits_04 :white_check_mark:|:white_check_mark:|:white_check_mark:
bgt|(i, j)|E|Bitwise greater than|bits_04 :white_check_mark:|:white_check_mark:|:white_check_mark:
bit_size|(i)|I|Number of bits in integer model 16.3|bits_02 :white_check_mark:|:white_check_mark:|:white_check_mark:
ble|(i, j)|E|Bitwise less than or equal to|bits_04 :white_check_mark:|:white_check_mark:|:white_check_mark:
blt|(i, j)|E|Bitwise less than|bits_04 :white_check_mark:|:white_check_mark:|:white_check_mark:
btest|(i, pos)|E|Test single bit in an integer|intrinsics_26 :white_check_mark:|:white_check_mark:|:white_check_mark:
ceiling|(a [, kind])|E|Least integer greater than or equal to a|intrinsics_31 :white_check_mark:|:white_check_mark:|:white_check_mark:
char|(i [, kind])|E|Character from code value|types_09 :x:|:white_check_mark:|
cmplx|(x [, kind]) or (x [, y, kind])|E|Conversion to complex type|||
co_broadcast|(a, source_image [, stat, errmsg])|C|Broadcast value to images|||
co_max|(a [, result_image, stat, errmsg])|C|Compute maximum value across images|||
co_min|(a [, result_image, stat, errmsg])|C|Compute minimum value across images|||
co_reduce|(a, operation [, result_image, stat, errmsg])|C|Generalized reduction across images|||
co_sum|(a [, result_image, stat, errmsg])|C|Compute sum across images|||
command_argument_count|( )|T|Number of command arguments|||
conjg|(z)|E|Conjugate of a complex number|||
cos|(x)|E|Cosine function|"associate_04 :white_check_mark:
intrinsics_03 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:
intrinsics_20 :white_check_mark:
intrinsics_open_close_read_write :x:"|:white_check_mark:|:white_check_mark:
cosh|(x)|E|Hyperbolic cosine function|"intrinsics_05 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
coshape|(coarray [, kind])|I|Sizes of codimensions of a coarray|||
count|(mask [, dim, kind])|T|Logical array reduced by counting true values|||
cpu_time|(time)|S|Processor time used|cpu_time_01 :white_check_mark:|:white_check_mark:|:white_check_mark:
cshift|(array, shift [, dim])|T|Circular shift of an array|||
date_and_time|([date, time, zone, values])|S|Date and time|intrinsics_39 :x:|:white_check_mark:|
dble|(a)|E|Conversion to double precision real|||
digits|(x)|I|Significant digits in numeric model|string_12 :x:|:white_check_mark:|
dim|(x, y)|E|Maximum of x âˆ’ y and zero|||
dot_product|(vector_a, vector_b)|T|Dot product of two vectors|||
dprod|(x, y)|E|Double precision real product|||
dshiftl|(i, j, shift)|E|Combined left shift|||
dshiftr|(i, j, shift)|E|Combined right shift|||
eoshift|(array, shift [, boundary, dim])|T|End-off shift of the elements of an array|||
epsilon|(x)|I|Model number that is small compared to 1|intrinsics_34 :white_check_mark:|:white_check_mark:|:white_check_mark:
erf|(x)|E|Error function|"intrinsics_17 :white_check_mark:
intrinsics_19 :white_check_mark:"|:white_check_mark:|:white_check_mark:
erfc|(x)|E|Complementary error function|intrinsics_19 :white_check_mark:|:white_check_mark:|:white_check_mark:
erfc_scaled|(x)|E|Scaled complementary error function|||
event_query|(event, count [, stat])|S|Query event count|||
execute_command_line|(command [, wait, exitstat, cmdstat, cmdmsg])|S|Execute a command line|||
exp|(x)|E|Exponential function|"intrinsics_17 :white_check_mark:
intrinsics_19 :white_check_mark:
intrinsics_19c :white_check_mark:"|:white_check_mark:|:white_check_mark:
exponent|(x)|E|Exponent of floating-point number|||
extends_type_of|(a, mold)|I|Dynamic type extension inquiry|||
failed_images|([team, kind])|T|Indices of failed images|||
findloc|(array, value, dim [, mask, kind, back]) or (array, value [, mask, kind, back])|T|Location(s) of a specified value|||
floor|(a [, kind])|E|Greatest integer less than or equal to a|"floor_01 :white_check_mark:
floor_02 :white_check_mark:
floor_03 :x:
intrinsics_19 :white_check_mark:
sin_02 :white_check_mark:"|:white_check_mark:|:white_check_mark:
fraction|(x)|E|Fractional part of number|||
gamma|(x)|E|Gamma function|intrinsics_19 :white_check_mark:|:white_check_mark:|:white_check_mark:
get_command|([command, length, status, errmsg])|S|Get program invocation command|||
get_command_argument|(number [, value, length, status, errmsg])|S|Get program invocation argument|||
get_environment_variable|(name [, value, length, status, trim_name, errmsg])|S|Get environment variable|||
get_team|([level])|T|Team|||
huge|(x)|I|Largest model number|intrinsics_23 :white_check_mark:|:white_check_mark:|:white_check_mark:
hypot|(x, y)|E|Euclidean distance function|||
iachar|(c [, kind])|E|Ascii code value for character|string_13 :white_check_mark:|:white_check_mark:|:white_check_mark:
iall|(array, dim [, mask]) or (array [, mask])|T|Array reduced by iand function|||
iand|(i, j)|E|Bitwise and|||
iany|(array, dim [, mask]) or (array [, mask])|T|Array reduced by ior function|||
ibclr|(i, pos)|E|I with bit pos replaced by zero|bits_01 :white_check_mark:|:white_check_mark:|:white_check_mark:
ibits|(i, pos, len)|E|Specified sequence of bits|bits_05 :white_check_mark:|:white_check_mark:|:white_check_mark:
ibset|(i, pos)|E|I with bit pos replaced by one|bits_01 :white_check_mark:|:white_check_mark:|:white_check_mark:
ichar|(c [, kind])|E|Code value for character|||
ieor|(i, j)|E|Bitwise exclusive or|bits_01 :white_check_mark:|:white_check_mark:|:white_check_mark:
image_index|(coarray, sub) or (coarray, sub, team) or (coarray, sub, team_number)|T|Image index from cosubscripts|||
image_status|(image [, team])|E|Image execution state|||
index|(string, substring [, back, kind])|E|Character string search|string_11 :white_check_mark:|:white_check_mark:|:white_check_mark:
int|(a [, kind])|E|Conversion to integer type|"boz_01 :white_check_mark:
int_01 :white_check_mark:
int_02 :x:
submodule_01 :x:
types_09 :x:"|:white_check_mark:|:white_check_mark:
ior|(i, j)|E|Bitwise inclusive or|||
iparity|(array, dim [, mask]) or (array [, mask])|T|Array reduced by ieor function|||
ishft|(i, shift)|E|Logical shift|intrinsics_25 :white_check_mark:|:white_check_mark:|:white_check_mark:
ishftc|(i, shift [, size])|E|Circular shift of the rightmost bits|||
is_contiguous|(array)|I|Array contiguity test (8.5.7)|||
is_iostat_end|(i)|E|Iostat value test for end of file|||
is_iostat_eor|(i)|E|Iostat value test for end of record|||
kind|(x)|I|Value of the kind type parameter of x|"arrays_02 :x:
derived_types_02 :x:
intrinsics_01 :x:
intrinsics_07 :x:
intrinsics_12 :white_check_mark:
intrinsics_13 :x:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:
intrinsics_19 :white_check_mark:
intrinsics_19c :white_check_mark:
intrinsics_20 :white_check_mark:
intrinsics_21 :white_check_mark:
intrinsics_22 :white_check_mark:
modules_03 :x:
modules_08_b :grey_question:
parameter_03 :white_check_mark:
parameter_04 :white_check_mark:
program_01 :x:
test_iso_c_binding :white_check_mark:
test_iso_fortran_env :white_check_mark:"|:white_check_mark:|:white_check_mark:
lbound|(array [, dim, kind])|I|Lower bound(s)|"allocate_01 :white_check_mark:
array_bound_1 :white_check_mark:
arrays_op_3 :white_check_mark:
arrays_op_4 :white_check_mark:
arrays_op_5 :white_check_mark:
arrays_op_6 :white_check_mark:"|:white_check_mark:|:white_check_mark:
lcobound|(coarray [, dim, kind])|I|Lower cobound(s) of a coarray|||
leadz|(i)|E|Number of leading zero bits|||
len|(string [, kind])|I|Length of a character entity|"functions_06 :x:
modules_19 :white_check_mark:
modules_19b :grey_question:
string_05 :white_check_mark:
string_06 :white_check_mark:
string_07 :white_check_mark:
string_08 :white_check_mark:
string_09 :white_check_mark:"|:white_check_mark:|:white_check_mark:
len_trim|(string [, kind])|E|Length without trailing blanks|"modules_19 :white_check_mark:
modules_19b :grey_question:
string_06 :white_check_mark:
string_08 :white_check_mark:
string_09 :white_check_mark:"|:white_check_mark:|:white_check_mark:
lge|(string_a, string_b)|E|Ascii greater than or equal|||
lgt|(string_a, string_b)|E|Ascii greater than|||
lle|(string_a, string_b)|E|Ascii less than or equal|||
llt|(string_a, string_b)|E|Ascii less than|||
log|(x)|E|Natural logarithm|"intrinsics_01 :x:
intrinsics_17 :white_check_mark:
intrinsics_19 :white_check_mark:
intrinsics_19c :white_check_mark:
program_01 :x:"|:white_check_mark:|:white_check_mark:
log_gamma|(x)|E|Logarithm of the absolute value of the gamma function|intrinsics_19 :white_check_mark:|:white_check_mark:|:white_check_mark:
log10|(x)|E|Common logarithm|intrinsics_19 :white_check_mark:|:white_check_mark:|:white_check_mark:
logical|(l [, kind])|E|Conversion between kinds of logical|parameter_04 :white_check_mark:|:white_check_mark:|:white_check_mark:
maskl|(i [, kind])|E|Left justified mask|||
maskr|(i [, kind])|E|Right justified mask|||
matmul|(matrix_a, matrix_b)|T|Matrix multiplication|||
max|(a1, a2 [, a3, ...])|E|Maximum value|"intrinsics_22 :white_check_mark:
intrinsics_28 :white_check_mark:
sin_02 :white_check_mark:"|:white_check_mark:|:white_check_mark:
maxexponent|(x)|I|Maximum exponent of a real model|||
maxloc|(array, dim [, mask, kind, back]) or (array [, mask, kind, back])|T|Location(s) of maximum value|||
maxval|(array, dim [, mask]) or (array [, mask])|T|Maximum value(s) of array|arrays_intrin_01 :x:|:white_check_mark:|
merge|(tsource, fsource, mask)|E|Expression value selection|intrinsics_32 :x:|:white_check_mark:|
merge_bits|(i, j, mask)|E|Merge of bits under mask|||
min|(a1, a2 [, a3, ...])|E|Minimum value|"intrinsics_22 :white_check_mark:
intrinsics_28 :white_check_mark:
sin_02 :white_check_mark:"|:white_check_mark:|:white_check_mark:
minexponent|(x)|I|Minimum exponent of a real model|||
minloc|(array, dim [, mask, kind, back]) or (array [, mask, kind, back])|T|Location(s) of minimum value|||
minval|(array, dim [, mask]) or (array [, mask])|T|Minimum value(s) of array|arrays_intrin_01 :x:|:white_check_mark:|
mod|(a, p)|E|Remainder function|intrinsics_21 :white_check_mark:|:white_check_mark:|:white_check_mark:
modulo|(a, p)|E|Modulo function|"flip_sign :white_check_mark:
intrinsics_21 :white_check_mark:
modulo_01 :white_check_mark:
sin_02 :white_check_mark:"|:white_check_mark:|:white_check_mark:
move_alloc|(from, to [, stat, errmsg])|PS|Move an allocation|||
mvbits|(from, frompos, len, to, topos)|ES|Copy a sequence of bits|bits_03 :white_check_mark:|:white_check_mark:|:white_check_mark:
nearest|(x, s)|E|Adjacent machine number|||
new_line|(a)|I|Newline character|intrinsics_33 :white_check_mark:|:white_check_mark:|:white_check_mark:
nint|(a [, kind])|E|Nearest integer|intrinsics_19 :white_check_mark:|:white_check_mark:|:white_check_mark:
norm2|(x) or (x, dim)|T|L2 norm of an array|||
not|(i)|E|Bitwise complement|bits_02 :white_check_mark:|:white_check_mark:|:white_check_mark:
null|([mold])|T|Disassociated pointer or unallocated allocatable entity|derived_types_02 :x:|:white_check_mark:|
num_images|( ) or (team) or (team_- number)|T|Number of images|||
out_of_range|(x, mold [, round])|E|Whether a value cannot be converted safely|||
pack|(array, mask [, vector])|T|Array packed into a vector|||
parity|(mask) or (mask, dim)|T|Array reduced by .neqv. operator|||
popcnt|(i)|E|Number of one bits|||
poppar|(i)|E|Parity expressed as 0 or 1|||
precision|(x)|I|Decimal precision of a real model|||
present|(a)|I|Presence of optional argument|||
product|(array, dim [, mask]) or (array [, mask])|T|Array reduced by multiplication|||
radix|(x)|I|Base of a numeric model|||
random_init|(repeatable, image_- distinct)|S|Pseudorandom number generator initialization|||
random_number|(harvest)|S|Generate pseudorandom number(s)|"intrinsics_01 :x:
intrinsics_29 :white_check_mark:
program_01 :x:"|:white_check_mark:|:white_check_mark:
random_seed|([size, put, get])|S|Pseudorandom number generator control|||
range|(x)|I|Decimal exponent range of a numeric model (16.4)|intrinsics_30 :white_check_mark:|:white_check_mark:|:white_check_mark:
rank|(a)|I|Rank of a data object|||
real|(a [, kind])|E|Conversion to real type|"abs_02 :white_check_mark:
arrays_01_real :white_check_mark:
arrays_02 :x:
associate_02 :white_check_mark:
bin_op_real_dp :white_check_mark:
complex_04 :white_check_mark:
complex_06 :white_check_mark:
const_kind_01 :white_check_mark:
const_real_dp :white_check_mark:
cpu_time_01 :white_check_mark:
derived_types_02 :x:
fma :white_check_mark:
functions_05 :white_check_mark:
intrinsics_01 :x:
intrinsics_04 :white_check_mark:
intrinsics_04s :white_check_mark:
intrinsics_07 :x:
intrinsics_10 :white_check_mark:
intrinsics_11 :white_check_mark:
intrinsics_15 :white_check_mark:
intrinsics_16 :x:
intrinsics_17 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_19 :white_check_mark:
intrinsics_19c :white_check_mark:
intrinsics_20 :white_check_mark:
intrinsics_21 :white_check_mark:
intrinsics_22 :white_check_mark:
intrinsics_23 :white_check_mark:
intrinsics_24 :white_check_mark:
intrinsics_29 :white_check_mark:
intrinsics_30 :white_check_mark:
intrinsics_34 :white_check_mark:
modules_03 :x:
modules_15 :white_check_mark:
modules_15b :grey_question:
modules_16b :grey_question:
modules_18 :white_check_mark:
modules_18b :grey_question:
parameter_04 :white_check_mark:
parameter_05 :white_check_mark:
program_01 :x:
real_dp :white_check_mark:
real_dp_param :white_check_mark:
sign_from_value :white_check_mark:
sin_01 :white_check_mark:
sin_02 :white_check_mark:
sin_03 :white_check_mark:
sin_04 :white_check_mark:
submodule_02 :x:
test_iso_c_binding :white_check_mark:
test_iso_fortran_env :white_check_mark:
types_12 :white_check_mark:
types_13 :x:"|:white_check_mark:|:white_check_mark:
reduce|(array, operation, dim [, mask, identity, ordered]) or (array, operation [, mask, identity, ordered])|T|General reduction of array repeat (string, ncopies) t repetitive string concatenation|doconcurrentloop_02 :grey_question:||
reshape|(source, shape [, pad, order])|T|Arbitrary shape array construction|||
rrspacing|(x)|E|Reciprocal of relative spacing of model numbers|||
same_type_as|(a, b)|I|Dynamic type equality test|||
scale|(x, i)|E|Real number scaled by radix power|||
scan|(string, set [, back, kind])|E|Character set membership search|||
selected_char_kind|(name)|T|Character kind selection|"intrinsics_14 :white_check_mark:
types_09 :x:"|:white_check_mark:|:white_check_mark:
selected_int_kind|(r)|T|Integer kind selection|"intrinsics_14 :white_check_mark:
parameter_04 :white_check_mark:"|:white_check_mark:|:white_check_mark:
selected_real_kind|([p, r, radix])|T|Real kind selection|"intrinsics_14 :white_check_mark:
parameter_04 :white_check_mark:"|:white_check_mark:|:white_check_mark:
set_exponent|(x, i)|E|Real value with specified exponent|||
shape|(source [, kind])|I|Shape of an array or a scalar|intrinsics_27 :x:|:white_check_mark:|
shifta|(i, shift)|E|Right shift with fill|||
shiftl|(i, shift)|E|Left shift|||
shiftr|(i, shift)|E|Right shift|||
sign|(a, b)|E|Magnitude of a with the sign of b|"fma :white_check_mark:
sign_from_value :white_check_mark:"|:white_check_mark:|:white_check_mark:
sin|(x)|E|Sine function|"intrinsics_02 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:
intrinsics_20 :white_check_mark:
intrinsics_open_close_read_write :x:
sin_01 :white_check_mark:
sin_03 :white_check_mark:
sin_04 :white_check_mark:"|:white_check_mark:|:white_check_mark:
sinh|(x)|E|Hyperbolic sine function|"intrinsics_05 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
size|(array [, dim, kind])|I|Size of an array or one extent|"allocate_01 :white_check_mark:
allocate_02 :white_check_mark:
arrays_01_size :white_check_mark:
arrays_03_func :white_check_mark:
arrays_04_func :white_check_mark:
arrays_08_func :white_check_mark:
arrays_11 :white_check_mark:
doconcurrentloop_01 :x:
doconcurrentloop_02 :grey_question:
forallloop_01 :x:
intrinsics_27 :x:
subroutines_05 :grey_question:"|:white_check_mark:|:white_check_mark:
spacing|(x)|E|Spacing of model numbers|||
spread|(source, dim, ncopies)|T|Value replicated in a new dimension|||
sqrt|(x)|E|Square root|"intrinsics_01 :x:
intrinsics_19 :white_check_mark:
intrinsics_19c :white_check_mark:
program_01 :x:
sqrt_01 :white_check_mark:
sqrt_02 :white_check_mark:
submodule_02 :x:"|:white_check_mark:|:white_check_mark:
stopped_images|([team, kind])|T|Indices of stopped images|||
storage_size|(a [, kind])|I|Storage size in bits|||
sum|(array, dim [, mask]) or (array [, mask])|T|Array reduced by addition|"allocate_01 :white_check_mark:
arrays_02 :x:
arrays_04_func :white_check_mark:
program_01 :x:"|:white_check_mark:|:white_check_mark:
system_clock|([count, count_rate, count_max])|S|Query system clock|intrinsics_24 :white_check_mark:|:white_check_mark:|:white_check_mark:
tan|(x)|E|Tangent function|"intrinsics_04 :white_check_mark:
intrinsics_04s :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
tanh|(x)|E|Hyperbolic tangent function|"intrinsics_05 :white_check_mark:
intrinsics_18 :white_check_mark:
intrinsics_18c :white_check_mark:"|:white_check_mark:|:white_check_mark:
team_number|([team])|T|Team number|||
this_image|([team])|T|Index of the invoking image|||
this_image|(coarray [, team]) or (coarray, dim [, team])|T|Cosubscript(s) for this image|||
tiny|(x)|I|Smallest positive model number|"intrinsics_08 :x:
intrinsics_09 :x:"|:white_check_mark:|
trailz|(i)|E|Number of trailing zero bits|||
transfer|(source, mold [, size])|T|Transfer physical representation|||
transpose|(matrix)|T|Transpose of an array of rank two|||
trim|(string)|T|String without trailing blanks|"functions_06 :x:
modules_19 :white_check_mark:
modules_19b :grey_question:
modules_20b :grey_question:
string_08 :white_check_mark:
string_09 :white_check_mark:"|:white_check_mark:|:white_check_mark:
ubound|(array [, dim, kind])|I|Upper bound(s)|"allocate_01 :white_check_mark:
array_bound_1 :white_check_mark:
arrays_op_3 :white_check_mark:
arrays_op_4 :white_check_mark:
arrays_op_5 :white_check_mark:
arrays_op_6 :white_check_mark:"|:white_check_mark:|:white_check_mark:
ucobound|(coarray [, dim, kind])|I|Upper cobound(s) of a coarray|||
unpack|(vector, mask, field)|T|Vector unpacked into an array|||
verify|(string, set [, back, kind])|E|Character set non-membership search.|"arrays_08_func :white_check_mark:
arrays_11 :white_check_mark:
arrays_op_4 :white_check_mark:"|:white_check_mark:|:white_check_mark:
