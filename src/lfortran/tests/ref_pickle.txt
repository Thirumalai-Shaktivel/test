(+ 1 (* 2 3))
(+ 1 (* 2 3))
(+ (* 1 2) 3)
(* (+ 1 2) 3)
(+ 1 (* 2 (** 3 4)))
(+ 1 (* 2 (** 3 4)))
(+ 1 (** (* 2 3) 4))
(** (+ 1 (* 2 3)) 4)
(+ 1 (* (** 2 3) 4))
(+ 1 (** 2 (* 3 4)))
(- 1 2)
(- (- 1 2) 3)
(- 1 (* 2 3))
(- 1 (** 2 3))
(+ (u- 2) 1)
(+ (* (u- 2) 3) 1)
(+ (u- (** 2 3)) 1)
(+ 1 (u- 2))
(+ 1 (* (u- 2) 3))
(+ 1 (- (u- 2) 3))
(* 3 (u- 2))
(* (u- 2) 3)
(* (u- 2) 3)
(+ (u+ 2) 1)
(+ (* (u+ 2) 3) 1)
(+ (u+ (** 2 3)) 1)
(+ 1 (u+ 2))
(+ 1 (* (u+ 2) 3))
(+ 1 (- (u+ 2) 3))
(* 3 (u+ 2))
(* (u+ 2) 3)
(* (u+ 2) 3)
(Logical .true.)
(Logical .false.)
(FuncCallOrArray f [] [(() a ())] [])
(FuncCallOrArray f [] [(() (+ 1 1) ())] [])
(FuncCallOrArray f [] [(() a ()) (() b ()) (() 1 ())] [])
(FuncCallOrArray log [] [(() r2 ())] [])
(* u (FuncCallOrArray sqrt [] [(() (/ (* (u- 2) (FuncCallOrArray log [] [(() r2 ())] [])) r2) ())] []))
(FuncCallOrArray f [] [(() a ()) (() () 1) (() () 1) (() a ())] [])
(FuncCallOrArray f [] [(a () 1) (1 () 1) (() 2 1) (1 a 1) (() () 1)] [])
(FuncCallOrArray f [] [] [])
(FuncCallOrArray f [] [(() a ())] [(arg1 (+ b 1)) (arg2 (Logical .true.))])
(ArrayInitializer [1])
(ArrayInitializer [1 b])
(ArrayInitializer [1 b c])
(ArrayInitializer [(FuncCallOrArray f [] [(() a ())] []) (+ b c) (+ (** c 2) 1)])
1
(Real "1.")
(Real "1._dp")
(Real "1.03_dp")
(Real "1.e5_dp")
(+ 2 3)
(* (+ 1 3) 4)
(+ 1 (* 3 4))
x
yx
(+ x y)
(+ 2 x)
(** (+ x y) 2)
(* (+ x y) 3)
(+ x (* y 3))
(* (+ (+ 1 2) a) 3)
(+ (FuncCallOrArray f [] [(() 3 ())] []) 6)
(FuncCallOrArray f [] [(() (+ 3 6) ())] [])
(FuncCallOrArray real [] [(() b ()) (() dp ())] [])
(- (* 2 u) 1)
(FuncCallOrArray sum [] [(() (** u 2) ())] [])
(FuncCallOrArray u [] [(() 2 ())] [])
(* u (FuncCallOrArray sqrt [] [(() (/ (* (u- 2) (FuncCallOrArray log [] [(() r2 ())] [])) r2) ())] []))
(not first)
(- a (/ (Real "1._dp") 3))
(/ 1 (FuncCallOrArray sqrt [] [(() (* 9 d) ())] []))
(** (+ 1 (* c x)) 3)
(+ i 1)
(Str "s")
(Str "some test")
(FuncCallOrArray a [] [(3 5 1) (i j 1)] [])
(FuncCallOrArray b [] [(() () 1)] [])
(+ (FuncCallOrArray a [] [(() 5 1) (i j 1)] []) (FuncCallOrArray b [] [(1 () 1)] []))
(ArrayInitializer [1 2 3 i])
(FuncCallOrArray f [] [] [])
a
(FuncCallOrArray a [(x [])] [] [])
(FuncCallOrArray b [(x [])] [(() i ()) (() j ())] [])
(FuncCallOrArray c [(y [])] [(() 5 ()) (() () 1)] [])
a
(FuncCallOrArray b [(x []) (g [])] [(() i ()) (() j ())] [])
(FuncCallOrArray c [(y []) (h [])] [(() 5 ()) (() () 1)] [])
(Str "a'b'c")
(Str "a"b"c")
(Str "a""bc""x")
(Str "a""c")
(Str "a""b""c")
(Str """zippo""")
(Str "a''c")
(Str "a''b''c")
(Str "''zippo''")
(StrOp (StrOp (Str "aaa") Concat (FuncCallOrArray str [] [(() x ())] [])) Concat (Str "bb"))
(StrOp (Str "a") Concat (Str "b"))
(BoolOp 1 And 2)
(BoolOp a And b)
(BoolOp (== a 1) And (== b 2))
(BoolOp (== a 1) Or (== b 2))
(BoolOp (BoolOp a And b) And c)
(BoolOp (BoolOp a Or b) Or c)
(not (== a 1))
(BoolOp (== a 1) And (not (== b 2)))
(BoolOp a Eqv b)
(BoolOp a NEqv b)
(Declaration [(x "integer" () [] [] [] () [])])
(Declaration [(x "integer" () [] [] [] () [])])
(Declaration [(x "integer" () [] [] [(Attribute parameter [] [])] () [])])
(Declaration [(x "integer" () [] [] [(Attribute parameter [] []) (Attribute pointer [] [])] () [])])
(Declaration [(x "character" () [] [] [] () [])])
(Declaration [(x "character" () [(len () Star)] [] [] () [])])
(Declaration [(c "character" () [(len () Star)] [] [] () [])])
(Declaration [(x "real" () [] [] [] () [])])
(Declaration [(a "real" () [] [] [] () [])])
(Declaration [(x "real" () [(() dp Value)] [] [] () [])])
(Declaration [(x "real" () [(() dp Value)] [] [] () [])])
(Declaration [(x "real" () [(kind dp Value)] [] [] () [])])
(Declaration [(x "real" () [(() dp Value)] [] [(Attribute intent [(in)] [])] () [])])
(Declaration [(x "real" () [(() dp Value)] [] [(Attribute intent [(out)] [])] () [])])
(Declaration [(x "real" () [(() dp Value)] [] [(Attribute intent [(inout)] [])] () [])])
(Declaration [(a "real" () [(() dp Value)] [] [] () []) (b "real" () [(() dp Value)] [] [] () [])])
(Declaration [(a "real" () [(() dp Value)] [(1 9) (1 10)] [] () []) (b "real" () [(() dp Value)] [(1 10)] [] () [])])
(Declaration [(a "real" () [(() dp Value)] [(1 m) (1 n)] [] () [])])
(Declaration [(a "real" () [(() dp Value)] [(() ()) (() ())] [(Attribute allocatable [] [])] () [])])
(Declaration [(y "real" () [(() dp Value)] [] [] 5 [])])
(Declaration [(f "real" () [(() c_double Value)] [] [] () [])])
(Declaration [(x "complex" () [] [] [] () [])])
(Declaration [(x "logical" () [] [] [] () [])])
(Declaration [(x "type" "y" [] [] [] () [])])
(Declaration [(x "type" "xx" [] [] [(Attribute intent [(inout)] [])] () []) (y "type" "xx" [] [] [(Attribute intent [(inout)] [])] () [])])
(Declaration [(x "integer" () [] [] [] 3 [])])
(Declaration [(x "integer" () [] [(1 5)] [] () [])])
(Declaration [(x "integer" () [] [(5 ())] [] () [])])
(Declaration [(x "integer" () [] [(5 ())] [] () [])])
(Declaration [(a "integer" () [] [(1 9) (1 10)] [] () []) (b "integer" () [] [(1 10)] [] () [])])
(Declaration [(x "integer" () [] [(() 5)] [] () [])])
(Declaration [(x "integer" () [] [(() ())] [] () [])])
(Declaration [(x "integer" () [] [(3 5)] [] () [])])
(Declaration [(x "integer" () [] [(1 5) (() ()) (() 3) (3 ())] [] () [])])
(Declaration [(x "integer" () [] [] [(Attribute dimension [] [(1 5) (() ()) (() 3) (3 ())])] () [])])
(Declaration [(c "integer" () [] [] [(Attribute dimension [] [(1 9) (1 10)])] () [])])
(Declaration [(e "integer" () [] [] [(Attribute dimension [] [(() ()) (() ())]) (Attribute intent [(in)] [])] () [])])
(Declaration [(x "integer" () [] [(1 5) (() ()) (() 3) (3 ())] [] 3 [])])
(Declaration [(x "integer" () [] [(1 5) (() ()) (() 3) (3 ())] [] (+ 3 2) [])])
(Declaration [(x "integer" () [] [(1 5) (() ()) (() 3) (3 ())] [] 3 []) (y "integer" () [] [(() 3)] [] 4 [])])
(Declaration [(x "integer" () [] [(1 5) (() ()) (() 3) (3 ())] [] x [])])
(Declaration [(i "integer" () [(() c_int Value)] [] [] () [])])
(Function g [] () () () [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1)] [])
(Subroutine g [] [] [(Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [] [])
(Subroutine g [] [] [(Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () []) (z "integer" () [] [] [] () [])])] [] [])
(Function g [] () () () [] [(Declaration [(x "integer" () [] [] [] () [])]) (Declaration [(y "real" () [] [] [] () []) (z "real" () [] [] [] () [])])] [(= x 1)] [])
(Subroutine g [] [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1)] [])
(Subroutine g [] [] [(Declaration [(x "integer" () [] [] [] () [])]) (Declaration [(x "character" () [] [] [] () [])])] [(= x 1)] [])
(Program g [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1)] [])
(Program g [] [(Declaration [(x "integer" () [] [] [] () [])]) (Declaration [(x "complex" () [] [] [] () [])])] [(= x 1)] [])
(SubroutineCall random_number [(() u ())] [])
(SubroutineCall random_number [(() u ())] [])
(SubroutineCall random_number [(() u ())] [])
(= u (- (* 2 u) 1))
(= r2 (FuncCallOrArray sum [] [(() (** u 2) ())] []))
(= u (* u (FuncCallOrArray sqrt [] [(() (/ (* (u- 2) (FuncCallOrArray log [] [(() r2 ())] [])) r2) ())] [])))
(= x (FuncCallOrArray u [] [(() 1 ())] []))
(= x (FuncCallOrArray u [] [(() 2 ())] []))
(= first (not first))
(= d (- a (/ (Real "1._dp") 3)))
(= c (/ 1 (FuncCallOrArray sqrt [] [(() (* 9 d) ())] [])))
(= v (** (+ 1 (* c x)) 3))
(= fn_val (* d v))
exit
cycle
(SubroutineCall randn [(() (FuncCallOrArray x [] [(() i ())] []) ())] [])
(SubroutineCall randn [(() x ())] [])
(SubroutineCall random_number [(() U ())] [])
(SubroutineCall rand_gamma0 [(() a ()) (() (Logical .true.) ()) (() x ())] [])
(SubroutineCall rand_gamma0 [(() a ()) (() (Logical .true.) ()) (() (FuncCallOrArray x [] [(() 1 ())] []) ())] [])
(SubroutineCall rand_gamma0 [(() a ()) (() (Logical .false.) ()) (() (FuncCallOrArray x [] [(() i ())] []) ())] [])
(SubroutineCall rand_gamma_vector_n [(() a ()) (() (FuncCallOrArray size [] [(() x ())] []) ()) (() x ())] [])
(SubroutineCall f [] [(a 4) (b 6) (c i)])
(FuncCallOrArray open [] [(() b ()) (() c ())] [(newunit a)])
(FuncCallOrArray allocate [] [(() (FuncCallOrArray c [] [(() 4 ())] []) ()) (() (FuncCallOrArray d [] [(() 4 ())] []) ())] [])
(FuncCallOrArray close [] [(() u ())] [])
(= x 1)
(= y 5)
(= a 5)
(= x 1)
(= y 5)
(= a 5)
a
a
a
a
a
a
a
(TranslationUnit [])
(TranslationUnit [])
(TranslationUnit [])
(TranslationUnit [])
(TranslationUnit [])
(Stop (Str "OK"))
(Stop 1)
stop
(Print "i4" [45 x])
(Print "i4" [45])
(Print "i4" [])
(Print "i4" [])
(Print () [45 (Str "sss") (+ a 1)])
(Print () [a])
(Print () [])
(Print () [])
(Write [(()) ((Str "(i4)"))] [] [45 x])
(Write [(()) ((Str "(i4)"))] [] [45])
(Write [(()) ((Str "(i4)"))] [] [])
(Write [(()) (())] [] [45 (Str "sss") (+ a 1)])
(Write [(()) (())] [] [a])
(Write [(()) (())] [] [])
(Write [(u) ((Str "(i4)"))] [] [45 x])
(Write [(1) ((Str "(i4)"))] [] [45])
(FuncCallOrArray write [] [(() 13 ()) (() (Str "(i4)") ())] [])
(Write [(u) (())] [] [45 (Str "sss") (+ a 1)])
(Write [(u) (())] [] [a])
(Write [(u) (())] [] [])
(Write [(u)] [] [a b])
(Write [(u)] [] [a])
(FuncCallOrArray write [] [(() u ())] [])
(=> x y)
(=> x (FuncCallOrArray y [] [(1 4 1) (() 5 ())] []))
(SubroutineCall g [(() (FuncCallOrArray a [] [(3 5 1) (i j 1)] []) ()) (() (FuncCallOrArray b [] [(() () 1)] []) ())] [])
(SubroutineCall g [(() (FuncCallOrArray a [] [(() 5 1) (i j 1)] []) ()) (() (FuncCallOrArray b [] [(1 () 1)] []) ())] [])
(= c (ArrayInitializer [1 2 3 i]))
(= a a)
(= b (FuncCallOrArray b [(x [])] [(() i ()) (() j ())] []))
(= c (FuncCallOrArray c [(y [])] [(() 5 ()) (() () 1)] []))
(= a a)
(= b (FuncCallOrArray b [(x []) (g [])] [(() i ()) (() j ())] []))
(= c (FuncCallOrArray c [(y []) (h [])] [(() 5 ()) (() () 1)] []))
(= a a)
(= (FuncCallOrArray b [(x []) (g [])] [(() i ()) (() j ())] []) b)
(= (FuncCallOrArray c [(y []) (h [])] [(() 5 ()) (() () 1)] []) c)
(SubroutineCall e [] [])
(WhileLoop x [(= a 5)])
(WhileLoop x [])
(WhileLoop x [(= a 5)])
(WhileLoop x [(= do 5)])
(WhileLoop x [(= end 5)])
(WhileLoop x [(= enddo 5)])
(WhileLoop (> x 5) [(= a 5)])
(WhileLoop (> x 5) [(= a 5)])
(WhileLoop (== x y) [(= i (+ i 1)) (Cycle) (Exit)])
(Select k [(CaseStmt [1] [(SubroutineCall a [] [])]) (CaseStmt [i] [(SubroutineCall b [] []) (SubroutineCall c [] [])])] [])
(Select k [(CaseStmt [1] [(SubroutineCall a [] [])]) (CaseStmt [i] [(SubroutineCall b [] []) (= a 5)])] [(SubroutineCall c [] [])])
(Where (< a 5) [(= B 1)] [])
(Where (< a 5) [(= B 1)] [])
(Where (< a 5) [(= B 1)] [(= B 0)])
(Where (< a 5) [(= B 1)] [(= B 0)])
(Where (< a 5) [(= B 1)] [(Where (< a 7) [(= B 0)] [(= B 3)])])
(Where (< a 5) [(= B 1)] [(Where (< a 7) [(= B 0)] [])])
(DoLoop i 1 5 () [(= a (+ a i))])
(DoLoop i 1 5 () [])
(DoLoop i 1 5 2 [(= a (+ a i))])
(DoLoop () () () () [(= a (+ a i)) (= b 3)])
(Subroutine g [] [] [] [(DoLoop () () () () [(= a (+ a i)) (= b 3)])] [])
(DoLoop () () () () [(= a (+ a i)) (= b 3)])
(DoLoop () () () () [(= do (+ a i)) (= enddo 3)])
(DoLoop () () () () [(= a (+ a i)) (= b 3)])
do
(Subroutine a [] [] [] [(DoLoop () () () () [(= x 1)])] [])
(Subroutine a [] [] [] [(DoLoop i 1 5 () [(= x (+ x i))])] [])
(Subroutine a [] [] [] [(DoLoop i 1 5 (u- 1) [(= x i)])] [])
(Subroutine g [] [] [] [(= x y) (Return) (= x (* 2 y))] [])
(DoLoop i 1 5 () [(Return)])
(WhileLoop x [(Return)])
(DoLoop i 1 5 () [(= return 5)])
return
(+ return 1)
(= return 1)
(= a return)
(DoLoop i 1 5 () [(Cycle)])
(WhileLoop x [(Cycle)])
(DoLoop i 1 5 () [(= cycle 5)])
cycle
(+ cycle 1)
(= cycle 1)
(= a cycle)
(DoLoop i 1 5 () [(Exit)])
(DoLoop () () () () [(Exit)])
(WhileLoop x [(Exit)])
(DoLoop i 1 5 () [(= exit 5)])
exit
(+ exit 1)
(= exit 1)
(= a exit)
(Subroutine g [] [] [] [(If x [(= a 5) (= b 4)] [])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [])] [])
(Subroutine g [] [] [] [(If x [(= endif 5)] [])] [])
(Subroutine g [] [] [] [(If else [(= a 5) (= b 4)] [])] [])
(Subroutine g [] [] [] [(If else [(= then 5) (= else 4)] [])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [(= b 4)])] [])
(Subroutine g [] [] [] [(If x [] [(= b 4)])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [])] [])
(Subroutine g [] [] [] [(If x [] [])] [])
(Subroutine g [] [] [] [(If x [] [])] [])
(Subroutine g [] [] [] [(If x [(= a 5) (= c 7)] [(= b 4) (= e 5)])] [])
(Subroutine g [] [] [] [(If else [(= else 5)] [(= else 4)])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [(If y [(= b 4)] [])])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [(If y [(= b 4)] [(If z [(= c 3)] [])])])] [])
(Subroutine g [] [] [] [(If else [(= else 5)] [(If else [] [(If else [] [(If else [(= else 3)] [])])])])] [])
(Subroutine g [] [] [] [(If x [(= a 5)] [(If y [(= b 4)] [(= c 3)])])] [])
(Subroutine g [] [] [] [(If x [(= a 5) (If y [(= b 4)] [(= c 3)])] [])] [])
(Subroutine g [] [] [] [(If x [(= a 5) (If y [(= b 4)] [])] [(= c 3)])] [])
(If x [(= a 5) (If y [(= b 4)] [])] [(= c 3)])
(Subroutine a [] [] [] [(If a [(= x 1)] [(= x 2)])] [])
(Subroutine a [] [] [] [(If a [(= x 1)] [(If b [(= x 2)] [])])] [])
(Subroutine a [] [] [] [(If a [(= x 1)] [(If b [(= x 2)] [(If c [(= x 2)] [])])])] [])
(Subroutine a [] [] [] [(If a [(= x 1)] [])] [])
(Subroutine a [] [] [] [(If a [(= x 1) (= y 2)] [])] [])
(Subroutine a [] [] [] [(If a [(= x 1)] [])] [])
(If a [(= x 1)] [])
(Program g [] [] [(= x y) (= x (* 2 y))] [])
(Program g [] [] [] [])
(Program g [] [] [(= x y) (= x (* 2 y))] [])
(Program g [] [] [(= x y) (= x (* 2 y))] [])
(Program f [] [] [(= subroutine y) (= x (* 2 subroutine))] [])
(Program g [] [] [(= x y)] [])
(Program TESTFortran90 [] [(Declaration [(stop "integer" () [] [] [] () [])])] [(= stop 1) (WhileLoop (== stop 0) [])] [])
(Function g [] () () () [] [] [(= x y) (= x (* 2 y))] [])
(Function g [] () () () [] [] [] [])
(Function g [] () () () [] [] [(= x y) (= x (* 2 y))] [])
(Function g [] () () () [] [] [(= x y) (= x (* 2 y))] [])
(Function f [] () () () [] [] [(= subroutine y) (= x (* 2 subroutine))] [])
(Function f [] () () () [] [(Declaration [(f "integer" () [] [] [] () [])])] [(= f 5)] [])
(Function f [] "real" () () [] [] [(= f 1)] [])
(Function f [(e)] "real" () () [] [] [(= f 1)] [])
(Function f [(e) (b)] "real" () () [] [] [(= f 1)] [])
(Function f [(e) (b)] "real" () () [] [] [(= f 1)] [])
(Function f [(e)] "real" r () [] [] [(= r 1)] [])
(Function f [(e)] "real" r () [] [] [(= r 1)] [])
(Function f [(e)] () () () [] [] [(= f 1)] [])
(Function f [(e)] () () () [] [] [(= f 1)] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine g [] [] [] [] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine g [] [] [] [(= x y) (= x (* 2 y))] [])
(Subroutine f [] [] [] [(= subroutine y) (= x (* 2 subroutine))] [])
(Subroutine f [] [] [(Declaration [(x "integer" () [] [] [] () [])])] [] [])
(Subroutine f [] [] [(Declaration [(x "integer" () [] [] [] () [])])] [] [])
(Subroutine f [(a) (b) (c) (d)] [] [(Declaration [(a "integer" () [] [] [(Attribute intent [(in)] [])] () []) (b "integer" () [] [] [(Attribute intent [(in)] [])] () [])]) (Declaration [(c "integer" () [] [] [(Attribute intent [(in)] [])] () []) (d "integer" () [] [] [(Attribute intent [(in)] [])] () [])]) (Declaration [(z "integer" () [] [] [] () [])]) (Declaration [(y "integer" () [] [] [] () [])])] [] [])
(Subroutine f [(a) (b) (c) (d)] [] [(Declaration [(a "integer" () [] [] [(Attribute intent [(out)] [])] () []) (b "integer" () [] [] [(Attribute intent [(out)] [])] () [])]) (Declaration [(c "integer" () [] [] [(Attribute intent [(inout)] [])] () []) (d "integer" () [] [] [(Attribute intent [(inout)] [])] () [])]) (Declaration [(z "integer" () [] [] [] () [])]) (Declaration [(y "integer" () [] [] [] () [])])] [] [])
(Subroutine saxpy [(n) (a) (x) (y)] [] [(Declaration [(x "real" () [(() dp Value)] [(() ())] [(Attribute intent [(in)] [])] () []) (a "real" () [(() dp Value)] [] [(Attribute intent [(in)] [])] () [])]) (Declaration [(y "real" () [(() dp Value)] [(() ())] [(Attribute intent [(inout)] [])] () [])]) (Declaration [(n "integer" () [] [] [(Attribute intent [(in)] [])] () [])]) (Declaration [(i "integer" () [] [] [] () [])])] [(DoLoop i 1 n () [(= (FuncCallOrArray y [] [(() i ())] []) (+ (* a (FuncCallOrArray x [] [(() i ())] [])) (FuncCallOrArray y [] [(() i ())] [])))])] [])
(Use b [])
(Use a [(UseSymbol b ()) (UseSymbol c ())])
(Use a [(UseSymbol b x) (UseSymbol c ()) (UseSymbol a d)])
(Program test [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1) (SubroutineCall a [(() x ())] [])] [])
(Program test [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1) (SubroutineCall a [(() x ())] [])] [])
(Program test [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1) (SubroutineCall a [(() x ())] [])] [(Subroutine a [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] [])])
(Program test [] [(Declaration [(x "integer" () [] [] [] () [])])] [(= x 1) (SubroutineCall a [(() x ())] [])] [(Subroutine a [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] []) (Subroutine f [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] []) (Function a [] "integer" r () [] [] [(= r 5)] [])])
(Module test [] [(Declaration [(x "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(x "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(() () () [] [] [(Attribute private [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(x () () [] [] [(Attribute private [] [])] () []) (y () () [] [] [(Attribute private [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(x () () [] [] [(Attribute private [] [])] () []) (y () () [] [] [(Attribute private [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(() () () [] [] [(Attribute public [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(x () () [] [] [(Attribute public [] [])] () []) (y () () [] [] [(Attribute public [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(x () () [] [] [(Attribute public [] [])] () []) (y () () [] [] [(Attribute public [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(() () () [] [] [(Attribute private [] [])] () [])]) (Declaration [(x () () [] [] [(Attribute public [] [])] () []) (y () () [] [] [(Attribute public [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [])
(Module test [] [(Declaration [(x () () [] [] [(Attribute private [] [])] () [])]) (Declaration [(y () () [] [] [(Attribute public [] [])] () [])]) (Declaration [(x "integer" () [] [] [] () []) (y "integer" () [] [] [] () [])])] [])
(Module test [] [] [(Subroutine a [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] [])])
(Module test [] [] [(Subroutine a [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] []) (Subroutine f [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] [])])
(Module test [] [(Declaration [(x "integer" () [] [] [] () [])])] [(Subroutine a [(b)] [] [(Declaration [(b "integer" () [] [] [(Attribute intent [(in)] [])] () [])])] [] [])])
(Module test [] [] [(Function f [] () y () [] [] [(= y 0)] [])])
(Module test [] [(Interface (InterfaceHeader2 name) [(InterfaceModuleProcedure [a]) (InterfaceModuleProcedure [b]) (InterfaceModuleProcedure [c])])] [])
(Declaration [(x "Integer" () [] [] [] () [])])
(Declaration [(x "INTEGER" () [] [] [] () [])])
(Declaration [(x "iNteger" () [] [] [] () [])])
(Declaration [(c "integeR" () [] [] [(Attribute dImenSion [] [(1 9) (1 10)])] () [])])
(Declaration [(e "integer" () [] [] [(Attribute DIMENSION [] [(() ()) (() ())]) (Attribute intenT [(In)] [])] () [])])
(Declaration [(i "integer" () [(() c_Int Value)] [] [] () [])])
(Declaration [(a "Real" () [] [] [] () [])])
(Declaration [(a "REAL" () [] [] [] () [])])
(Declaration [(a "real" () [(() dp Value)] [(() ()) (() ())] [(Attribute aLLocatable [] [])] () [])])
(Declaration [(c "cHAracter" () [(len () Star)] [] [] () [])])
(Declaration [(x "tYPe" "xx" [] [] [(Attribute inTEnt [(inout)] [])] () []) (y "tYPe" "xx" [] [] [(Attribute inTEnt [(inout)] [])] () [])])
(= a 5)
(= a 5)
(= a 5)
(= a 5)
(Use a [(UseSymbol i ())])
(Use a [(UseSymbol i ())])
(= x (ArrayInitializer [1 2 3]))
